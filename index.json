{
  "api/Terminaux.Base.ConsoleChecker.html": {
    "href": "api/Terminaux.Base.ConsoleChecker.html",
    "title": "Class ConsoleChecker | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleChecker Console sanity checking module Inheritance object ConsoleChecker Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleChecker Properties | Edit this page View Source IsDumb Is the console a dumb console? Declaration public static bool IsDumb { get; } Property Value Type Description bool Methods | Edit this page View Source CheckConsole() Checks the running console for sanity, like the incompatible consoles, insane console types, etc. The severity of the checks can be described in two categories: Error: We'll throw Exception when we detect that the console is not conforming to the standards. Warning: We'll just issue a warning in yellow text using the plain 16-color writer when we detect that the console is not supporting optional features, like 256-colors. Declaration public static void CheckConsole() | Edit this page View Source IsConsole256Colors() Does the console support 256 colors? Always true on Windows Declaration public static bool IsConsole256Colors() Returns Type Description bool"
  },
  "api/Terminaux.Base.ConsoleExtensions.html": {
    "href": "api/Terminaux.Base.ConsoleExtensions.html",
    "title": "Class ConsoleExtensions | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleExtensions Additional routines for the console Inheritance object ConsoleExtensions Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleExtensions Methods | Edit this page View Source ClearKeepPosition() Clears the console buffer, but keeps the current cursor position Declaration public static void ClearKeepPosition() | Edit this page View Source ClearLineToRight() Clears the line to the right Declaration public static void ClearLineToRight() | Edit this page View Source FilterVTSequences(string) Filters the VT sequences that matches the regex Declaration public static string FilterVTSequences(string Text) Parameters Type Name Description string Text The text that contains the VT sequences Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source FormatString(string, params object[]) Formats the string Declaration public static string FormatString(string Format, params object[] Vars) Parameters Type Name Description string Format The string to format object[] Vars The variables used Returns Type Description string A formatted string if successful, or the unformatted one if failed. | Edit this page View Source GetClearLineToRightSequence() Clears the line to the right Declaration public static string GetClearLineToRightSequence() Returns Type Description string | Edit this page View Source GetFilteredPositions(string, bool, params object[]) Get the filtered cursor positions (by filtered means filtered from the VT escape sequences that matches the regex in the routine) Declaration public static (int, int) GetFilteredPositions(string Text, bool line, params object[] Vars) Parameters Type Name Description string Text The text that contains the VT sequences bool line Whether to simulate the new line at the end of text or not object[] Vars Variables to be formatted in the text Returns Type Description (int, int) | Edit this page View Source PercentRepeat(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeat(int CurrentNumber, int MaximumNumber, int WidthOffset) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int WidthOffset The console window width offset. It's usually a multiple of 2. Returns Type Description int How many times to repeat the character | Edit this page View Source PercentRepeatTargeted(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeatTargeted(int CurrentNumber, int MaximumNumber, int TargetWidth) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int TargetWidth The target width Returns Type Description int How many times to repeat the character | Edit this page View Source ResetAll() Resets the entire console Declaration public static void ResetAll() | Edit this page View Source ResetColors() Resets the console colors without clearing screen Declaration public static void ResetColors() | Edit this page View Source SetTitle(string) Sets the console title Declaration public static void SetTitle(string Text) Parameters Type Name Description string Text The text to be set"
  },
  "api/Terminaux.Base.ConsolePlatform.html": {
    "href": "api/Terminaux.Base.ConsolePlatform.html",
    "title": "Class ConsolePlatform | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsolePlatform Console platform class Inheritance object ConsolePlatform Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsolePlatform Properties | Edit this page View Source NewLine New line constant Declaration public static string NewLine { get; } Property Value Type Description string Methods | Edit this page View Source GetTerminalEmulator() Polls $TERM_PROGRAM to get terminal emulator Declaration public static string GetTerminalEmulator() Returns Type Description string | Edit this page View Source GetTerminalType() Polls $TERM to get terminal type (vt100, dumb, ...) Declaration public static string GetTerminalType() Returns Type Description string | Edit this page View Source IsOnMacOS() Is this system a macOS system? Declaration public static bool IsOnMacOS() Returns Type Description bool | Edit this page View Source IsOnUnix() Is this system a Unix system? True for macOS, too! Declaration public static bool IsOnUnix() Returns Type Description bool | Edit this page View Source IsOnWindows() Is this system a Windows system? Declaration public static bool IsOnWindows() Returns Type Description bool | Edit this page View Source IsRunningFromMono() Is Terminaux running from Mono? Declaration public static bool IsRunningFromMono() Returns Type Description bool | Edit this page View Source IsRunningFromTmux() Is Terminaux running from TMUX? Declaration public static bool IsRunningFromTmux() Returns Type Description bool"
  },
  "api/Terminaux.Base.ConsoleResizeListener.html": {
    "href": "api/Terminaux.Base.ConsoleResizeListener.html",
    "title": "Class ConsoleResizeListener | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleResizeListener The console resize listener module Inheritance object ConsoleResizeListener Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleResizeListener Methods | Edit this page View Source GetCurrentConsoleSize() Gets the console size from the cached window height and width position Declaration public static (int Width, int Height) GetCurrentConsoleSize() Returns Type Description (int, int) | Edit this page View Source WasResized(bool) This property checks to see if the console has been resized since the last time it has been called or the listener has started. Declaration public static bool WasResized(bool reset = true) Parameters Type Name Description bool reset Reset the resized value once this is called Returns Type Description bool"
  },
  "api/Terminaux.Base.ConsoleWrappers.html": {
    "href": "api/Terminaux.Base.ConsoleWrappers.html",
    "title": "Class ConsoleWrappers | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleWrappers Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. Inheritance object ConsoleWrappers Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleWrappers Properties | Edit this page View Source ActionBeep Beeps the console Declaration public static Action ActionBeep { get; set; } Property Value Type Description Action | Edit this page View Source ActionBufferHeight The console buffer height (rows) Declaration public static Func<int> ActionBufferHeight { get; set; } Property Value Type Description Func<int> | Edit this page View Source ActionClear Clears the console Declaration public static Action ActionClear { get; set; } Property Value Type Description Action | Edit this page View Source ActionCursorLeft The cursor left position Declaration public static Func<int> ActionCursorLeft { get; set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorTop The cursor top position Declaration public static Func<int> ActionCursorTop { get; set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorVisible The cursor visibility mode Declaration public static Action<bool> ActionCursorVisible { get; set; } Property Value Type Description Action<bool> | Edit this page View Source ActionGetCursorVisible The cursor visibility mode Declaration public static Func<bool> ActionGetCursorVisible { get; set; } Property Value Type Description Func<bool> | Edit this page View Source ActionIsDumb Is the console a dumb console? Declaration public static Func<bool> ActionIsDumb { get; set; } Property Value Type Description Func<bool> | Edit this page View Source ActionKeyAvailable Whether a key is pressed Declaration public static Func<bool> ActionKeyAvailable { get; set; } Property Value Type Description Func<bool> | Edit this page View Source ActionReadKey Reads a key Boolean value indicates whether to intercept Declaration public static Func<bool, ConsoleKeyInfo> ActionReadKey { get; set; } Property Value Type Description Func<bool, ConsoleKeyInfo> | Edit this page View Source ActionSetCursorLeft Sets the cursor left position First integer is the X position from 0 Declaration public static Action<int> ActionSetCursorLeft { get; set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetCursorPosition Sets the cursor position First integer is the X position from 0 Second integer is the Y position from 0 Declaration public static Action<int, int> ActionSetCursorPosition { get; set; } Property Value Type Description Action<int, int> | Edit this page View Source ActionSetCursorTop Sets the cursor top position First integer is the Y position from 0 Declaration public static Action<int> ActionSetCursorTop { get; set; } Property Value Type Description Action<int> | Edit this page View Source ActionTreatCtrlCAsInput The cursor visibility mode Declaration public static Action<bool> ActionTreatCtrlCAsInput { get; set; } Property Value Type Description Action<bool> | Edit this page View Source ActionWindowHeight The console window height (rows) Declaration public static Func<int> ActionWindowHeight { get; set; } Property Value Type Description Func<int> | Edit this page View Source ActionWindowWidth The console window width (columns) Declaration public static Func<int> ActionWindowWidth { get; set; } Property Value Type Description Func<int> | Edit this page View Source ActionWriteChar Writes a character to console A character Declaration public static Action<char, TermReaderSettings> ActionWriteChar { get; set; } Property Value Type Description Action<char, TermReaderSettings> | Edit this page View Source ActionWriteLine Writes new line to console Declaration public static Action ActionWriteLine { get; set; } Property Value Type Description Action | Edit this page View Source ActionWriteLineParameterized Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteLineParameterized { get; set; } Property Value Type Description Action<string, TermReaderSettings, object[]> | Edit this page View Source ActionWriteLineString Writes text to console with line terminator The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteLineString { get; set; } Property Value Type Description Action<string, TermReaderSettings> | Edit this page View Source ActionWriteParameterized Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteParameterized { get; set; } Property Value Type Description Action<string, TermReaderSettings, object[]> | Edit this page View Source ActionWriteString Writes text to console The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteString { get; set; } Property Value Type Description Action<string, TermReaderSettings>"
  },
  "api/Terminaux.Base.TerminauxContinuableException.html": {
    "href": "api/Terminaux.Base.TerminauxContinuableException.html",
    "title": "Class TerminauxContinuableException | Terminaux API - Aptivi Internals",
    "keywords": "Class TerminauxContinuableException Terminaux continuable exception class Inheritance object Exception TerminauxContinuableException Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public class TerminauxContinuableException : Exception Constructors | Edit this page View Source TerminauxContinuableException() Declaration public TerminauxContinuableException() | Edit this page View Source TerminauxContinuableException(string) Declaration public TerminauxContinuableException(string message) Parameters Type Name Description string message | Edit this page View Source TerminauxContinuableException(string, Exception) Declaration public TerminauxContinuableException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/Terminaux.Base.TerminauxException.html": {
    "href": "api/Terminaux.Base.TerminauxException.html",
    "title": "Class TerminauxException | Terminaux API - Aptivi Internals",
    "keywords": "Class TerminauxException Terminaux exception class Inheritance object Exception TerminauxException Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public class TerminauxException : Exception Constructors | Edit this page View Source TerminauxException() Declaration public TerminauxException() | Edit this page View Source TerminauxException(string) Declaration public TerminauxException(string message) Parameters Type Name Description string message | Edit this page View Source TerminauxException(string, Exception) Declaration public TerminauxException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/Terminaux.Base.html": {
    "href": "api/Terminaux.Base.html",
    "title": "Namespace Terminaux.Base | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Base Classes ConsoleChecker Console sanity checking module ConsoleExtensions Additional routines for the console ConsolePlatform Console platform class ConsoleResizeListener The console resize listener module ConsoleWrappers Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. TerminauxContinuableException Terminaux continuable exception class TerminauxException Terminaux exception class"
  },
  "api/Terminaux.Colors.Accessibility.Deficiency.html": {
    "href": "api/Terminaux.Colors.Accessibility.Deficiency.html",
    "title": "Enum Deficiency | Terminaux API - Aptivi Internals",
    "keywords": "Enum Deficiency Color deficiency Namespace: Terminaux.Colors.Accessibility Assembly: Terminaux.dll Syntax public enum Deficiency Fields Name Description Deutan Red/green color blindness. It makes green look more red Monochromacy Full color blindness, can only see grayscale. Protan Red/green color blindness. It makes red look more green Tritan Blue/yellow color blindness."
  },
  "api/Terminaux.Colors.Accessibility.html": {
    "href": "api/Terminaux.Colors.Accessibility.html",
    "title": "Namespace Terminaux.Colors.Accessibility | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors.Accessibility Enums Deficiency Color deficiency"
  },
  "api/Terminaux.Colors.Color.html": {
    "href": "api/Terminaux.Colors.Color.html",
    "title": "Class Color | Terminaux API - Aptivi Internals",
    "keywords": "Class Color Color information class Inheritance object Color Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class Color Constructors | Edit this page View Source Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Exceptions Type Condition ColorSeqException | Edit this page View Source Color(int) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum) Parameters Type Name Description int ColorNum The color number Exceptions Type Condition ColorSeqException | Edit this page View Source Color(int, int, int) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Exceptions Type Condition ColorSeqException | Edit this page View Source Color(string) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Exceptions Type Condition ColorSeqException | Edit this page View Source Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Exceptions Type Condition ColorSeqException Properties | Edit this page View Source B The blue color value Declaration public int B { get; } Property Value Type Description int | Edit this page View Source CMYK An instance of CMYK Declaration public CyanMagentaYellowKey CMYK { get; } Property Value Type Description CyanMagentaYellowKey | Edit this page View Source ColorEnum16 The color value converted to ConsoleColor. Not applicable [-1] to true color and 256 colors Declaration public ConsoleColor ColorEnum16 { get; } Property Value Type Description ConsoleColor | Edit this page View Source ColorEnum255 The color value converted to ConsoleColors. Not applicable [-1] to true color Declaration public ConsoleColors ColorEnum255 { get; } Property Value Type Description ConsoleColors | Edit this page View Source Empty Empty color singleton Declaration public static Color Empty { get; } Property Value Type Description Color | Edit this page View Source G The green color value Declaration public int G { get; } Property Value Type Description int | Edit this page View Source HSL An instance of HSL Declaration public HueSaturationLightness HSL { get; } Property Value Type Description HueSaturationLightness | Edit this page View Source Hex Hexadecimal representation of the color Declaration public string Hex { get; } Property Value Type Description string | Edit this page View Source IsBright Is the color bright? Declaration public bool IsBright { get; } Property Value Type Description bool | Edit this page View Source IsDark Is the color dark? Declaration public bool IsDark { get; } Property Value Type Description bool | Edit this page View Source PlainSequence Either 0-255, or <R>;<G>;<B> Declaration public string PlainSequence { get; } Property Value Type Description string | Edit this page View Source PlainSequenceEnclosed Either 0-255, or <R>;<G>;<B> enclosed in quotes if necessary Declaration public string PlainSequenceEnclosed { get; } Property Value Type Description string | Edit this page View Source PlainSequenceEnclosedTrueColor <R>;<G>;<B> enclosed in quotes if necessary Declaration public string PlainSequenceEnclosedTrueColor { get; } Property Value Type Description string | Edit this page View Source PlainSequenceTrueColor <R>;<G>;<B> Declaration public string PlainSequenceTrueColor { get; } Property Value Type Description string | Edit this page View Source R The red color value Declaration public int R { get; } Property Value Type Description int | Edit this page View Source RGB An instance of RGB Declaration public RedGreenBlue RGB { get; } Property Value Type Description RedGreenBlue | Edit this page View Source Type Color type Declaration public ColorType Type { get; } Property Value Type Description ColorType | Edit this page View Source VTSequenceBackground Parsable VT sequence (Background) Declaration public string VTSequenceBackground { get; } Property Value Type Description string | Edit this page View Source VTSequenceBackgroundTrueColor Parsable VT sequence (Background, true color) Declaration public string VTSequenceBackgroundTrueColor { get; } Property Value Type Description string | Edit this page View Source VTSequenceForeground Parsable VT sequence (Foreground) Declaration public string VTSequenceForeground { get; } Property Value Type Description string | Edit this page View Source VTSequenceForegroundTrueColor Parsable VT sequence (Foreground, true color) Declaration public string VTSequenceForegroundTrueColor { get; } Property Value Type Description string Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(Color) Checks to see if this instance of the color is equal to another instance of the color Declaration public bool Equals(Color other) Parameters Type Name Description Color other Another instance of the color to compare with this color Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source Equals(Color, Color) Checks to see if the first instance of the color is equal to another instance of the color Declaration public bool Equals(Color other, Color other2) Parameters Type Name Description Color other Another instance of the color to compare with another Color other2 Another instance of the color to compare with another Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(Color, Color) Declaration public static bool operator ==(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool | Edit this page View Source implicit operator Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Returns Type Description Color Exceptions Type Condition ColorSeqException | Edit this page View Source implicit operator Color(int) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(int ColorNum) Parameters Type Name Description int ColorNum The color number Returns Type Description Color Exceptions Type Condition ColorSeqException | Edit this page View Source implicit operator Color(string) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Returns Type Description Color Exceptions Type Condition ColorSeqException | Edit this page View Source implicit operator Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Returns Type Description Color Exceptions Type Condition ColorSeqException | Edit this page View Source operator !=(Color, Color) Declaration public static bool operator !=(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool"
  },
  "api/Terminaux.Colors.ColorTools.html": {
    "href": "api/Terminaux.Colors.ColorTools.html",
    "title": "Class ColorTools | Terminaux API - Aptivi Internals",
    "keywords": "Class ColorTools Color tools and management Inheritance object ColorTools Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public static class ColorTools Properties | Edit this page View Source ColorDeficiency The color deficiency or color blindness type Declaration public static Deficiency ColorDeficiency { get; set; } Property Value Type Description Deficiency | Edit this page View Source ColorDeficiencySeverity The color deficiency severity Declaration public static double ColorDeficiencySeverity { get; set; } Property Value Type Description double | Edit this page View Source EnableColorTransformation Enables the color transformation to adjust to color blindness upon making a new instance of color Declaration public static bool EnableColorTransformation { get; set; } Property Value Type Description bool | Edit this page View Source EnableSimpleColorTransformation Enables the simple color transformation. This changes formula from Brettel 1997 (value is false) to Vienot 1999 (value is true) Declaration public static bool EnableSimpleColorTransformation { get; set; } Property Value Type Description bool Methods | Edit this page View Source ConvertFromHexToRGB(string) Converts from the hexadecimal representation of a color to the RGB sequence Declaration public static string ConvertFromHexToRGB(string Hex) Parameters Type Name Description string Hex A hexadecimal representation of a color (#AABBCC for example) Returns Type Description string <R>;<G>;<B> | Edit this page View Source ConvertFromRGBToHex(int, int, int) Converts from the RGB sequence of a color to the hexadecimal representation Declaration public static string ConvertFromRGBToHex(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Returns Type Description string A hexadecimal representation of a color (#AABBCC for example) | Edit this page View Source ConvertFromRGBToHex(string) Converts from the RGB sequence of a color to the hexadecimal representation Declaration public static string ConvertFromRGBToHex(string RGBSequence) Parameters Type Name Description string RGBSequence <R>;<G>;<B> Returns Type Description string A hexadecimal representation of a color (#AABBCC for example) | Edit this page View Source CorrectStandardColor(ConsoleColor) Corrects the color map for ConsoleColor according to the X11 specification Declaration public static ConsoleColor CorrectStandardColor(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to correct this color Returns Type Description ConsoleColor Corrected ConsoleColor | Edit this page View Source GetGray() Gets the gray color according to the brightness of the background color Declaration public static Color GetGray() Returns Type Description Color | Edit this page View Source GetRandomColor(ColorType, bool) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, bool selectBlack = true) Parameters Type Name Description ColorType type Color type to generate bool selectBlack Whether to select the black color or not Returns Type Description Color A color instance | Edit this page View Source GetRandomColor(ColorType, int, int, int, int, int, int, int, int) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, int minColor, int maxColor, int minColorR, int maxColorR, int minColorG, int maxColorG, int minColorB, int maxColorB) Parameters Type Name Description ColorType type Color type to generate int minColor The minimum color level int maxColor The maximum color level int minColorR The minimum red color level int maxColorR The maximum red color level int minColorG The minimum green color level int maxColorG The maximum green color level int minColorB The minimum blue color level int maxColorB The maximum blue color level Returns Type Description Color A color instance | Edit this page View Source LinearRGBTosRGB(double) Converts from Linear RGB to sRGB using a linear RGB number Declaration public static int LinearRGBTosRGB(double linear) Parameters Type Name Description double linear Linear RGB number from 0 to 1 Returns Type Description int sRGB value from 0 to 255 | Edit this page View Source LoadBack() Loads the background Declaration public static void LoadBack() | Edit this page View Source LoadBack(Color, bool) Loads the background Declaration public static void LoadBack(Color ColorSequence, bool Force = false) Parameters Type Name Description Color ColorSequence Color sequence used to load background bool Force Force set background even if background setting is disabled | Edit this page View Source RenderColorBlindnessAware(Color, Deficiency, double, bool) Provides you an easy way to generate new Color instances with color blindness applied Declaration public static Color RenderColorBlindnessAware(Color color, Deficiency deficiency, double severity, bool useSimple = false) Parameters Type Name Description Color color Color to use Deficiency deficiency Selected deficiency for color blindness double severity Severity of the color blindness bool useSimple Uses the simple method to calculate color values based on color blindness deficiency and severity Returns Type Description Color An instance of Color with adjusted color values for color-blindness | Edit this page View Source SRGBToLinearRGB(int) Converts from sRGB to Linear RGB using a color number Declaration public static double SRGBToLinearRGB(int colorNum) Parameters Type Name Description int colorNum Color number from 0 to 255 Returns Type Description double Linear RGB number ranging from 0 to 1 | Edit this page View Source SetConsoleColor(Color, bool, bool, bool) Sets the console color Declaration public static void SetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled bool canSetBackground Can the console set the background? | Edit this page View Source TranslateToStandardColorMap(ConsoleColors) Translates the color from X11's ConsoleColors to .NET's representation, ConsoleColor Declaration public static ConsoleColor TranslateToStandardColorMap(ConsoleColors color) Parameters Type Name Description ConsoleColors color X11's ConsoleColors to translate this color to Returns Type Description ConsoleColor .NET's representation of this color, ConsoleColor | Edit this page View Source TranslateToX11ColorMap(ConsoleColor) Translates the color from .NET's ConsoleColor to X11's representation, ConsoleColors Declaration public static ConsoleColors TranslateToX11ColorMap(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to translate this color to Returns Type Description ConsoleColors X11's representation of this color, ConsoleColors | Edit this page View Source TryParseColor(int) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int ColorNum) Parameters Type Name Description int ColorNum The color number Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(int, int, int) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(string) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, or a VT sequence if using true color as follows: <R>;<G>;<B> Returns Type Description bool True if successful; False if failed | Edit this page View Source TrySetConsoleColor(Color, bool) Sets the console color Declaration public static bool TrySetConsoleColor(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not Returns Type Description bool True if successful; False if unsuccessful"
  },
  "api/Terminaux.Colors.ColorType.html": {
    "href": "api/Terminaux.Colors.ColorType.html",
    "title": "Enum ColorType | Terminaux API - Aptivi Internals",
    "keywords": "Enum ColorType Color type enumeration Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public enum ColorType Fields Name Description TrueColor Color is a true color _16Color Color is a 4-bit color _255Color Color is a 8-bit color"
  },
  "api/Terminaux.Colors.ConsoleColors.html": {
    "href": "api/Terminaux.Colors.ConsoleColors.html",
    "title": "Enum ConsoleColors | Terminaux API - Aptivi Internals",
    "keywords": "Enum ConsoleColors All 255 console colors Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public enum ConsoleColors Fields Name Description Aquamarine1 Aquamarine1_87ffd7 Aquamarine3 Black Blue Blue1 Blue3 Blue3_d7 BlueViolet CadetBlue_5faf87 CadetBlue_5fafaf Chartreuse1 Chartreuse2 Chartreuse2_87d700 Chartreuse3 Chartreuse3_5fd700 Chartreuse4 CornflowerBlue Cornsilk1 Cyan Cyan1 Cyan2 Cyan3 DarkBlue DarkBlue_000087 DarkCyan DarkCyan_00af87 DarkGoldenrod DarkGray DarkGreen DarkGreen_005f00 DarkKhaki DarkMagenta DarkMagenta_870087 DarkMagenta_8700af DarkOliveGreen1 DarkOliveGreen1_d7ff87 DarkOliveGreen2 DarkOliveGreen3 DarkOliveGreen3_87d75f DarkOliveGreen3_afd75f DarkOrange DarkOrange3 DarkOrange3_d75f00 DarkRed DarkRed_5f0000 DarkRed_870000 DarkSeaGreen DarkSeaGreen1 DarkSeaGreen1_d7ffaf DarkSeaGreen2 DarkSeaGreen2_afffaf DarkSeaGreen3 DarkSeaGreen3_afd787 DarkSeaGreen4 DarkSeaGreen4_5faf5f DarkSlateGray1 DarkSlateGray2 DarkSlateGray3 DarkTurquoise DarkViolet DarkViolet_af00d7 DarkYellow DeepPink1_ff0087 DeepPink1_ff00af DeepPink2 DeepPink3 DeepPink3_d70087 DeepPink4 DeepPink4_87005f DeepPink4_af005f DeepSkyBlue1 DeepSkyBlue2 DeepSkyBlue3_0087af DeepSkyBlue3_0087d7 DeepSkyBlue4_005f5f DeepSkyBlue4_005f87 DeepSkyBlue4_005faf DodgerBlue1 DodgerBlue2 DodgerBlue3 Gold1 Gold3 Gold3_d7af00 Gray Green Green1 Green3_00d700 Green3_af00 Green4 GreenYellow Grey0 Grey100 Grey11 Grey15 Grey19 Grey23 Grey27 Grey3 Grey30 Grey35 Grey37 Grey39 Grey42 Grey46 Grey50 Grey53 Grey54 Grey58 Grey62 Grey63 Grey66 Grey69 Grey7 Grey70 Grey74 Grey78 Grey82 Grey84 Grey85 Grey89 Grey93 Honeydew2 HotPink2 HotPink3 HotPink3_d75f87 HotPink_ff5faf HotPink_ff5fd7 IndianRed IndianRed1_ff5f5f IndianRed1_ff5f87 IndianRed_d75f5f Khaki1 Khaki3 LightCoral LightCyan1 LightCyan3 LightGoldenrod1 LightGoldenrod2 LightGoldenrod2_ffd75f LightGoldenrod2_ffd787 LightGoldenrod3 LightGreen LightGreen_87ff87 LightPink1 LightPink3 LightPink4 LightSalmon1 LightSalmon3 LightSalmon3_d7875f LightSeaGreen LightSkyBlue1 LightSkyBlue3 LightSkyBlue3_87afd7 LightSlateBlue LightSlateGrey LightSteelBlue LightSteelBlue1 LightSteelBlue3 LightYellow3 Magenta Magenta1 Magenta2 Magenta2_ff00d7 Magenta3 Magenta3_d700af Magenta3_d700d7 MediumOrchid MediumOrchid1 MediumOrchid1_ff5fff MediumOrchid3 MediumPurple MediumPurple1 MediumPurple2 MediumPurple2_af87d7 MediumPurple3_875faf MediumPurple3_875fd7 MediumPurple4 MediumSpringGreen MediumTurquoise MediumVioletRed MistyRose1 MistyRose3 NavajoWhite1 NavajoWhite3 NavyBlue Orange1 Orange3 Orange4 Orange4_875f00 OrangeRed1 Orchid Orchid1 Orchid2 PaleGreen1 PaleGreen1_afff87 PaleGreen3 PaleGreen3_87d787 PaleTurquoise1 PaleTurquoise4 PaleVioletRed1 Pink1 Pink3 Plum1 Plum2 Plum3 Plum4 Purple Purple3 Purple4_5f0087 Purple4_5f00af Purple_af00ff Red Red1 Red3 Red3_d70000 RosyBrown RoyalBlue1 Salmon1 SandyBrown SeaGreen1 SeaGreen1_5fffaf SeaGreen2 SeaGreen3 SkyBlue1 SkyBlue2 SkyBlue3 SlateBlue1 SlateBlue3_5f5faf SlateBlue3_5f5fd7 SpringGreen1 SpringGreen2 SpringGreen2_00d787 SpringGreen3_00af5f SpringGreen3_00d75f SpringGreen4 SteelBlue SteelBlue1_5fafff SteelBlue1_5fd7ff SteelBlue3 Tan Thistle1 Thistle3 Turquoise2 Turquoise4 Violet Wheat1 Wheat4 White Yellow Yellow1 Yellow2 Yellow3 Yellow3_d7d700 Yellow4 Yellow4_87af00"
  },
  "api/Terminaux.Colors.ConsoleColorsInfo.html": {
    "href": "api/Terminaux.Colors.ConsoleColorsInfo.html",
    "title": "Class ConsoleColorsInfo | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleColorsInfo Information for the console colors that fit within the 256 colors Inheritance object ConsoleColorsInfo Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class ConsoleColorsInfo Constructors | Edit this page View Source ConsoleColorsInfo(ConsoleColors) Makes a new instance of 255-color console color information Declaration public ConsoleColorsInfo(ConsoleColors ColorValue) Parameters Type Name Description ConsoleColors ColorValue A 255-color console color Properties | Edit this page View Source B The blue color value Declaration public int B { get; } Property Value Type Description int | Edit this page View Source ColorID The color ID Declaration public int ColorID { get; } Property Value Type Description int | Edit this page View Source G The green color value Declaration public int G { get; } Property Value Type Description int | Edit this page View Source IsBright Is the color bright? Declaration public bool IsBright { get; } Property Value Type Description bool | Edit this page View Source IsDark Is the color dark? Declaration public bool IsDark { get; } Property Value Type Description bool | Edit this page View Source R The red color value Declaration public int R { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with this instance Returns Type Description bool True if both ConsoleColorsInfo instances match; otherwise, false. | Edit this page View Source Equals(ConsoleColorsInfo, ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other, ConsoleColorsInfo other2) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with another instance ConsoleColorsInfo other2 Another instance of ConsoleColorsInfo to compare with another instance Returns Type Description bool True if both ConsoleColorsInfo instances match; otherwise, false. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator ==(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description bool | Edit this page View Source operator !=(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator !=(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description bool"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.Hsl.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.Hsl.html",
    "title": "Class ConsoleColorData.Hsl | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleColorData.Hsl The hue, saturation, and luminance values Inheritance object ConsoleColorData.Hsl Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData.Hsl Properties | Edit this page View Source H The hue level Declaration [JsonIgnore] public float H { get; } Property Value Type Description float | Edit this page View Source L The lightness level Declaration [JsonIgnore] public int L { get; } Property Value Type Description int | Edit this page View Source S The saturation level Declaration [JsonIgnore] public int S { get; } Property Value Type Description int"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.Rgb.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.Rgb.html",
    "title": "Class ConsoleColorData.Rgb | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleColorData.Rgb Decoy class for RGB Inheritance object ConsoleColorData.Rgb Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData.Rgb Properties | Edit this page View Source B Blue color level Declaration [JsonIgnore] public int B { get; } Property Value Type Description int | Edit this page View Source G Green color level Declaration [JsonIgnore] public int G { get; } Property Value Type Description int | Edit this page View Source R Red color level Declaration [JsonIgnore] public int R { get; } Property Value Type Description int"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.html",
    "title": "Class ConsoleColorData | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleColorData Console color data Inheritance object ConsoleColorData Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData Properties | Edit this page View Source ColorId The color ID Declaration [JsonIgnore] public int ColorId { get; } Property Value Type Description int | Edit this page View Source HSL The HSL values Declaration [JsonIgnore] public ConsoleColorData.Hsl HSL { get; } Property Value Type Description ConsoleColorData.Hsl | Edit this page View Source HexString Hexadecimal representation of the color Declaration [JsonIgnore] public string HexString { get; } Property Value Type Description string | Edit this page View Source Name The color name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string | Edit this page View Source RGB The RGB values Declaration [JsonIgnore] public ConsoleColorData.Rgb RGB { get; } Property Value Type Description ConsoleColorData.Rgb Methods | Edit this page View Source GetColorData() Gets the console colors data Declaration public static ConsoleColorData[] GetColorData() Returns Type Description ConsoleColorData[]"
  },
  "api/Terminaux.Colors.Data.html": {
    "href": "api/Terminaux.Colors.Data.html",
    "title": "Namespace Terminaux.Colors.Data | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors.Data Classes ConsoleColorData Console color data ConsoleColorData.Hsl The hue, saturation, and luminance values ConsoleColorData.Rgb Decoy class for RGB"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellow.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellow.html",
    "title": "Class CyanMagentaYellow | Terminaux API - Aptivi Internals",
    "keywords": "Class CyanMagentaYellow The CMY class instance Inheritance object CyanMagentaYellow Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellow Constructors | Edit this page View Source CyanMagentaYellow(CyanMagentaYellowKey) Converts the CMYK color model to CMY Declaration public CyanMagentaYellow(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Exceptions Type Condition TerminauxException | Edit this page View Source CyanMagentaYellow(HueSaturationLightness) Converts the HSL color model to CMY Declaration public CyanMagentaYellow(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Exceptions Type Condition TerminauxException | Edit this page View Source CyanMagentaYellow(HueSaturationValue) Converts the HSV color model to CMY Declaration public CyanMagentaYellow(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Exceptions Type Condition TerminauxException | Edit this page View Source CyanMagentaYellow(RedGreenBlue) Converts the RGB color model to CMY Declaration public CyanMagentaYellow(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Exceptions Type Condition TerminauxException Properties | Edit this page View Source C The cyan color value [0.0 -> 1.0] Declaration public double C { get; } Property Value Type Description double | Edit this page View Source CWhole The cyan color value [0 -> 100] Declaration public int CWhole { get; } Property Value Type Description int | Edit this page View Source M The magenta color value [0.0 -> 1.0] Declaration public double M { get; } Property Value Type Description double | Edit this page View Source MWhole The magenta color value [0 -> 100] Declaration public int MWhole { get; } Property Value Type Description int | Edit this page View Source Y The yellow color value [0.0 -> 1.0] Declaration public double Y { get; } Property Value Type Description double | Edit this page View Source YWhole The yellow color value [0 -> 100] Declaration public int YWhole { get; } Property Value Type Description int Methods | Edit this page View Source ConvertToCmyk() Converts this instance of CMY color to CMYK model Declaration public CyanMagentaYellowKey ConvertToCmyk() Returns Type Description CyanMagentaYellowKey An instance of RedGreenBlue | Edit this page View Source ConvertToHsl() Converts this instance of CMY color to HSL model Declaration public HueSaturationLightness ConvertToHsl() Returns Type Description HueSaturationLightness An instance of HueSaturationLightness | Edit this page View Source ConvertToHsv() Converts this instance of CMY color to HSV model Declaration public HueSaturationValue ConvertToHsv() Returns Type Description HueSaturationValue An instance of HueSaturationValue | Edit this page View Source ConvertToRgb() Converts this instance of CMY color to RGB model Declaration public RedGreenBlue ConvertToRgb() Returns Type Description RedGreenBlue An instance of RedGreenBlue | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellow) Declaration public bool Equals(CyanMagentaYellow other) Parameters Type Name Description CyanMagentaYellow other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator ==(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator !=(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html",
    "title": "Class CyanMagentaYellowKey | Terminaux API - Aptivi Internals",
    "keywords": "Class CyanMagentaYellowKey The CMYK class instance Inheritance object CyanMagentaYellowKey Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellowKey Constructors | Edit this page View Source CyanMagentaYellowKey(CyanMagentaYellow) Converts the CMY color model to CMYK Declaration public CyanMagentaYellowKey(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Exceptions Type Condition TerminauxException | Edit this page View Source CyanMagentaYellowKey(HueSaturationLightness) Converts the HSL color model to CMYK Declaration public CyanMagentaYellowKey(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Exceptions Type Condition TerminauxException | Edit this page View Source CyanMagentaYellowKey(HueSaturationValue) Converts the HSV color model to CMYK Declaration public CyanMagentaYellowKey(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Exceptions Type Condition TerminauxException | Edit this page View Source CyanMagentaYellowKey(RedGreenBlue) Converts the RGB color model to CMYK Declaration public CyanMagentaYellowKey(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Exceptions Type Condition TerminauxException Properties | Edit this page View Source CMY The Cyan, Magenta, and Yellow color values Declaration public CyanMagentaYellow CMY { get; } Property Value Type Description CyanMagentaYellow | Edit this page View Source K The black key color value [0.0 -> 1.0] Declaration public double K { get; } Property Value Type Description double | Edit this page View Source KWhole The black key color value [0 -> 100] Declaration public int KWhole { get; } Property Value Type Description int Methods | Edit this page View Source ConvertToHsl() Converts this instance of CMYK color to HSL model Declaration public HueSaturationLightness ConvertToHsl() Returns Type Description HueSaturationLightness An instance of HueSaturationLightness | Edit this page View Source ConvertToHsv() Converts this instance of CMYK color to HSV model Declaration public HueSaturationValue ConvertToHsv() Returns Type Description HueSaturationValue An instance of HueSaturationValue | Edit this page View Source ConvertToRgb() Converts this instance of CMYK color to RGB model Declaration public RedGreenBlue ConvertToRgb() Returns Type Description RedGreenBlue An instance of RedGreenBlue | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellowKey) Declaration public bool Equals(CyanMagentaYellowKey other) Parameters Type Name Description CyanMagentaYellowKey other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator ==(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator !=(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationLightness.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationLightness.html",
    "title": "Class HueSaturationLightness | Terminaux API - Aptivi Internals",
    "keywords": "Class HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model Inheritance object HueSaturationLightness Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationLightness Constructors | Edit this page View Source HueSaturationLightness(CyanMagentaYellow) Converts the CMY color model to HSL Declaration public HueSaturationLightness(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Exceptions Type Condition TerminauxException | Edit this page View Source HueSaturationLightness(CyanMagentaYellowKey) Converts the CMYK color model to HSL Declaration public HueSaturationLightness(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Exceptions Type Condition TerminauxException | Edit this page View Source HueSaturationLightness(HueSaturationValue) Converts the HSV color model to HSL Declaration public HueSaturationLightness(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Exceptions Type Condition TerminauxException | Edit this page View Source HueSaturationLightness(RedGreenBlue) Converts the RGB color model to HSL Declaration public HueSaturationLightness(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Exceptions Type Condition TerminauxException Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source Lightness The lightness of the color, indicating how light the color is [0.0 -> 1.0] Declaration public double Lightness { get; } Property Value Type Description double | Edit this page View Source LightnessWhole The lightness of the color, indicating how light the color is [0 -> 100] Declaration public int LightnessWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int Methods | Edit this page View Source ConvertToCmy() Converts this instance of HSL color to CMY model Declaration public CyanMagentaYellow ConvertToCmy() Returns Type Description CyanMagentaYellow An instance of CyanMagentaYellow | Edit this page View Source ConvertToCmyk() Converts this instance of HSL color to CMYK model Declaration public CyanMagentaYellowKey ConvertToCmyk() Returns Type Description CyanMagentaYellowKey An instance of CyanMagentaYellowKey | Edit this page View Source ConvertToHsv() Converts this instance of HSL color to HSV model Declaration public HueSaturationValue ConvertToHsv() Returns Type Description HueSaturationValue An instance of HueSaturationValue | Edit this page View Source ConvertToRgb() Converts this instance of HSL color to RGB model Declaration public RedGreenBlue ConvertToRgb() Returns Type Description RedGreenBlue An instance of RedGreenBlue | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationLightness) Declaration public bool Equals(HueSaturationLightness other) Parameters Type Name Description HueSaturationLightness other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator ==(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator !=(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationValue.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationValue.html",
    "title": "Class HueSaturationValue | Terminaux API - Aptivi Internals",
    "keywords": "Class HueSaturationValue The Hue, Saturation, and Value (HSV) model Inheritance object HueSaturationValue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationValue Constructors | Edit this page View Source HueSaturationValue(CyanMagentaYellow) Converts the CMY color model to HSV Declaration public HueSaturationValue(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Exceptions Type Condition TerminauxException | Edit this page View Source HueSaturationValue(CyanMagentaYellowKey) Converts the CMYK color model to HSV Declaration public HueSaturationValue(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Exceptions Type Condition TerminauxException | Edit this page View Source HueSaturationValue(HueSaturationLightness) Converts the HSL color model to HSV Declaration public HueSaturationValue(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Exceptions Type Condition TerminauxException | Edit this page View Source HueSaturationValue(RedGreenBlue) Converts the RGB color model to HSV Declaration public HueSaturationValue(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Exceptions Type Condition TerminauxException Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int | Edit this page View Source Value The value of the color [0.0 -> 1.0] Declaration public double Value { get; } Property Value Type Description double | Edit this page View Source ValueWhole The value of the color [0 -> 100] Declaration public int ValueWhole { get; } Property Value Type Description int Methods | Edit this page View Source ConvertToCmy() Converts this instance of HSV color to CMY model Declaration public CyanMagentaYellow ConvertToCmy() Returns Type Description CyanMagentaYellow An instance of CyanMagentaYellow | Edit this page View Source ConvertToCmyk() Converts this instance of HSV color to CMYK model Declaration public CyanMagentaYellowKey ConvertToCmyk() Returns Type Description CyanMagentaYellowKey An instance of CyanMagentaYellowKey | Edit this page View Source ConvertToHsl() Converts this instance of HSV color to HSL model Declaration public HueSaturationLightness ConvertToHsl() Returns Type Description HueSaturationLightness An instance of HueSaturationLightness | Edit this page View Source ConvertToRgb() Converts this instance of HSV color to RGB model Declaration public RedGreenBlue ConvertToRgb() Returns Type Description RedGreenBlue An instance of RedGreenBlue | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationValue) Declaration public bool Equals(HueSaturationValue other) Parameters Type Name Description HueSaturationValue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(HueSaturationValue, HueSaturationValue) Declaration public static bool operator ==(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationValue, HueSaturationValue) Declaration public static bool operator !=(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.RedGreenBlue.html": {
    "href": "api/Terminaux.Colors.Models.RedGreenBlue.html",
    "title": "Class RedGreenBlue | Terminaux API - Aptivi Internals",
    "keywords": "Class RedGreenBlue The RGB class instance Inheritance object RedGreenBlue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class RedGreenBlue Constructors | Edit this page View Source RedGreenBlue(CyanMagentaYellow) Converts the CMY color model to RGB Declaration public RedGreenBlue(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Exceptions Type Condition TerminauxException | Edit this page View Source RedGreenBlue(CyanMagentaYellowKey) Converts the CMYK color model to RGB Declaration public RedGreenBlue(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Exceptions Type Condition TerminauxException | Edit this page View Source RedGreenBlue(HueSaturationLightness) Converts the HSL color model to RGB Declaration public RedGreenBlue(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Exceptions Type Condition TerminauxException | Edit this page View Source RedGreenBlue(HueSaturationValue) Converts the HSV color model to RGB Declaration public RedGreenBlue(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Exceptions Type Condition TerminauxException Properties | Edit this page View Source B The blue color value Declaration public int B { get; } Property Value Type Description int | Edit this page View Source G The green color value Declaration public int G { get; } Property Value Type Description int | Edit this page View Source R The red color value Declaration public int R { get; } Property Value Type Description int Methods | Edit this page View Source ConvertToCmy() Converts this instance of RGB color to CMY model Declaration public CyanMagentaYellow ConvertToCmy() Returns Type Description CyanMagentaYellow An instance of CyanMagentaYellow | Edit this page View Source ConvertToCmyk() Converts this instance of RGB color to CMYK model Declaration public CyanMagentaYellowKey ConvertToCmyk() Returns Type Description CyanMagentaYellowKey An instance of CyanMagentaYellowKey | Edit this page View Source ConvertToHsl() Converts this instance of RGB color to HSL model Declaration public HueSaturationLightness ConvertToHsl() Returns Type Description HueSaturationLightness An instance of HueSaturationLightness | Edit this page View Source ConvertToHsv() Converts this instance of RGB color to HSV model Declaration public HueSaturationValue ConvertToHsv() Returns Type Description HueSaturationValue An instance of HueSaturationValue | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(RedGreenBlue) Declaration public bool Equals(RedGreenBlue other) Parameters Type Name Description RedGreenBlue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(RedGreenBlue, RedGreenBlue) Declaration public static bool operator ==(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool | Edit this page View Source operator !=(RedGreenBlue, RedGreenBlue) Declaration public static bool operator !=(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.html": {
    "href": "api/Terminaux.Colors.Models.html",
    "title": "Namespace Terminaux.Colors.Models | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors.Models Classes CyanMagentaYellow The CMY class instance CyanMagentaYellowKey The CMYK class instance HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model HueSaturationValue The Hue, Saturation, and Value (HSV) model RedGreenBlue The RGB class instance"
  },
  "api/Terminaux.Colors.Selector.ColorSelector.html": {
    "href": "api/Terminaux.Colors.Selector.ColorSelector.html",
    "title": "Class ColorSelector | Terminaux API - Aptivi Internals",
    "keywords": "Class ColorSelector Color selection application Inheritance object ColorSelector Namespace: Terminaux.Colors.Selector Assembly: Terminaux.dll Syntax public static class ColorSelector Methods | Edit this page View Source OpenColorSelector() Opens the color selector Declaration public static Color OpenColorSelector() Returns Type Description Color An instance of Color to get the resulting color | Edit this page View Source OpenColorSelector(Color) Opens the color selector Declaration public static Color OpenColorSelector(Color initialColor) Parameters Type Name Description Color initialColor Initial color to use Returns Type Description Color An instance of Color to get the resulting color | Edit this page View Source OpenColorSelector(ConsoleColors) Opens the color selector Declaration public static Color OpenColorSelector(ConsoleColors initialColor) Parameters Type Name Description ConsoleColors initialColor Initial color to use Returns Type Description Color An instance of Color to get the resulting color"
  },
  "api/Terminaux.Colors.Selector.html": {
    "href": "api/Terminaux.Colors.Selector.html",
    "title": "Namespace Terminaux.Colors.Selector | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors.Selector Classes ColorSelector Color selection application"
  },
  "api/Terminaux.Colors.Wheel.ColorWheel.html": {
    "href": "api/Terminaux.Colors.Wheel.ColorWheel.html",
    "title": "Class ColorWheel | Terminaux API - Aptivi Internals",
    "keywords": "Class ColorWheel Color wheel class Inheritance object ColorWheel Namespace: Terminaux.Colors.Wheel Assembly: Terminaux.dll Syntax public static class ColorWheel Methods | Edit this page View Source InputForColor() Inputs the user for color selection Declaration public static Color InputForColor() Returns Type Description Color The color from the user input | Edit this page View Source InputForColor(Color) Inputs the user for color selection Declaration public static Color InputForColor(Color initialColor) Parameters Type Name Description Color initialColor Initial color Returns Type Description Color The color from the user input"
  },
  "api/Terminaux.Colors.Wheel.html": {
    "href": "api/Terminaux.Colors.Wheel.html",
    "title": "Namespace Terminaux.Colors.Wheel | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors.Wheel Classes ColorWheel Color wheel class"
  },
  "api/Terminaux.Colors.html": {
    "href": "api/Terminaux.Colors.html",
    "title": "Namespace Terminaux.Colors | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors Classes Color Color information class ColorTools Color tools and management ConsoleColorsInfo Information for the console colors that fit within the 256 colors Enums ColorType Color type enumeration ConsoleColors All 255 console colors"
  },
  "api/Terminaux.Figlet.FigletSelector.html": {
    "href": "api/Terminaux.Figlet.FigletSelector.html",
    "title": "Class FigletSelector | Terminaux API - Aptivi Internals",
    "keywords": "Class FigletSelector Figlet selector Inheritance object FigletSelector Namespace: Terminaux.Figlet Assembly: Terminaux.dll Syntax public static class FigletSelector Methods | Edit this page View Source PromptForFiglet() Prompts the user for a figlet font Declaration public static string PromptForFiglet() Returns Type Description string Selected figlet font | Edit this page View Source PromptForFiglet(string) Prompts the user for a figlet font Declaration public static string PromptForFiglet(string font) Parameters Type Name Description string font Initial font to select Returns Type Description string Selected figlet font"
  },
  "api/Terminaux.Figlet.html": {
    "href": "api/Terminaux.Figlet.html",
    "title": "Namespace Terminaux.Figlet | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Figlet Classes FigletSelector Figlet selector"
  },
  "api/Terminaux.Reader.Bindings.BaseBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.BaseBinding.html",
    "title": "Class BaseBinding | Terminaux API - Aptivi Internals",
    "keywords": "Class BaseBinding Base key binding Inheritance object BaseBinding Implements IBinding Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public abstract class BaseBinding : IBinding Properties | Edit this page View Source BoundKeys Key to bind to Declaration public virtual ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] | Edit this page View Source IsExit Does this binding cause the input to exit? Declaration public virtual bool IsExit { get; } Property Value Type Description bool Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the binding matched Declaration public virtual bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Input key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration public virtual void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader Implements IBinding"
  },
  "api/Terminaux.Reader.Bindings.CustomBindings.html": {
    "href": "api/Terminaux.Reader.Bindings.CustomBindings.html",
    "title": "Class CustomBindings | Terminaux API - Aptivi Internals",
    "keywords": "Class CustomBindings Custom binding handler Inheritance object CustomBindings Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public static class CustomBindings Methods | Edit this page View Source Bind(BaseBinding) Binds the key to the custom bindings list to be executed on press Declaration public static void Bind(BaseBinding binding) Parameters Type Name Description BaseBinding binding Base containing information about key binding | Edit this page View Source Unbind(ConsoleKeyInfo) Unbinds the key from the custom bindings list Declaration public static void Unbind(ConsoleKeyInfo cki) Parameters Type Name Description ConsoleKeyInfo cki Key information to remove the binding"
  },
  "api/Terminaux.Reader.Bindings.IBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.IBinding.html",
    "title": "Interface IBinding | Terminaux API - Aptivi Internals",
    "keywords": "Interface IBinding Key binding interface Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public interface IBinding Properties | Edit this page View Source BoundKeys Keys to bind to Declaration ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the bind matched Declaration bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader"
  },
  "api/Terminaux.Reader.Bindings.html": {
    "href": "api/Terminaux.Reader.Bindings.html",
    "title": "Namespace Terminaux.Reader.Bindings | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader.Bindings Classes BaseBinding Base key binding CustomBindings Custom binding handler Interfaces IBinding Key binding interface"
  },
  "api/Terminaux.Reader.Inputs.Input.html": {
    "href": "api/Terminaux.Reader.Inputs.Input.html",
    "title": "Class Input | Terminaux API - Aptivi Internals",
    "keywords": "Class Input Console input module Inheritance object Input Namespace: Terminaux.Reader.Inputs Assembly: Terminaux.dll Syntax public static class Input Properties | Edit this page View Source CurrentMask Current mask character Declaration public static string CurrentMask { get; } Property Value Type Description string Methods | Edit this page View Source DetectKeypress() Detects the keypress Declaration public static ConsoleKeyInfo DetectKeypress() Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadKeyTimeout(bool, TimeSpan) Reads the next key from the console input stream with the timeout Declaration public static ConsoleKeyInfo ReadKeyTimeout(bool Intercept, TimeSpan Timeout) Parameters Type Name Description bool Intercept Whether to intercept an input TimeSpan Timeout Timeout Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadLine() Reads the line from the console Declaration public static string ReadLine() Returns Type Description string | Edit this page View Source ReadLine(string) Reads the line from the console Declaration public static string ReadLine(string InputText) Parameters Type Name Description string InputText Input text to write Returns Type Description string | Edit this page View Source ReadLine(string, string) Reads the line from the console Declaration public static string ReadLine(string InputText, string DefaultValue) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value Returns Type Description string | Edit this page View Source ReadLine(string, string, TermReaderSettings) Reads the line from the console Declaration public static string ReadLine(string InputText, string DefaultValue, TermReaderSettings settings) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadLine(string, string, TermReaderSettings, bool) Reads the line from the console. Declaration public static string ReadLine(string InputText, string DefaultValue, TermReaderSettings settings, bool OneLineWrap = false) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value TermReaderSettings settings Settigns containing reader-related settings bool OneLineWrap Whether to wrap the input to one line Returns Type Description string | Edit this page View Source ReadLine(string, TermReaderSettings) Reads the line from the console Declaration public static string ReadLine(string InputText, TermReaderSettings settings) Parameters Type Name Description string InputText Input text to write TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadLine(TermReaderSettings) Reads the line from the console Declaration public static string ReadLine(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadLineNoInput() Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput() Returns Type Description string | Edit this page View Source ReadLineNoInput(char) Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput(char MaskChar) Parameters Type Name Description char MaskChar Specifies the password mask character Returns Type Description string | Edit this page View Source ReadLineWrapped() Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped() Returns Type Description string | Edit this page View Source ReadLineWrapped(string) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText) Parameters Type Name Description string InputText Input text to write Returns Type Description string | Edit this page View Source ReadLineWrapped(string, string) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, string DefaultValue) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value Returns Type Description string | Edit this page View Source ReadLineWrapped(string, string, TermReaderSettings) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, string DefaultValue, TermReaderSettings settings) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadLineWrapped(string, TermReaderSettings) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, TermReaderSettings settings) Parameters Type Name Description string InputText Input text to write TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadLineWrapped(TermReaderSettings) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string"
  },
  "api/Terminaux.Reader.Inputs.InputChoiceInfo.html": {
    "href": "api/Terminaux.Reader.Inputs.InputChoiceInfo.html",
    "title": "Class InputChoiceInfo | Terminaux API - Aptivi Internals",
    "keywords": "Class InputChoiceInfo Choice information for input Inheritance object InputChoiceInfo Namespace: Terminaux.Reader.Inputs Assembly: Terminaux.dll Syntax public class InputChoiceInfo Constructors | Edit this page View Source InputChoiceInfo(string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title | Edit this page View Source InputChoiceInfo(string, string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description Properties | Edit this page View Source ChoiceDescription Choice description Declaration public string ChoiceDescription { get; } Property Value Type Description string | Edit this page View Source ChoiceName Choice name Declaration public string ChoiceName { get; } Property Value Type Description string | Edit this page View Source ChoiceTitle Choice title Declaration public string ChoiceTitle { get; } Property Value Type Description string"
  },
  "api/Terminaux.Reader.Inputs.InputChoiceTools.html": {
    "href": "api/Terminaux.Reader.Inputs.InputChoiceTools.html",
    "title": "Class InputChoiceTools | Terminaux API - Aptivi Internals",
    "keywords": "Class InputChoiceTools Input choice tools Inheritance object InputChoiceTools Namespace: Terminaux.Reader.Inputs Assembly: Terminaux.dll Syntax public static class InputChoiceTools Methods | Edit this page View Source GetInputChoices(string, string[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string AnswersStr, string[] AnswersTitles) Parameters Type Name Description string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List<InputChoiceInfo> | Edit this page View Source GetInputChoices(string[], string[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string[] Answers, string[] AnswersTitles) Parameters Type Name Description string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List<InputChoiceInfo>"
  },
  "api/Terminaux.Reader.Inputs.Interactive.BaseInteractiveTui.html": {
    "href": "api/Terminaux.Reader.Inputs.Interactive.BaseInteractiveTui.html",
    "title": "Class BaseInteractiveTui | Terminaux API - Aptivi Internals",
    "keywords": "Class BaseInteractiveTui A base class for your interactive user interface for terminal apps Inheritance object BaseInteractiveTui Implements IInteractiveTui Namespace: Terminaux.Reader.Inputs.Interactive Assembly: Terminaux.dll Syntax public class BaseInteractiveTui : IInteractiveTui Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration public virtual bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration public virtual List<InteractiveTuiBinding> Bindings { get; set; } Property Value Type Description List<InteractiveTuiBinding> | Edit this page View Source FastRefresh Whether delta-based refresh method is used or not Declaration public virtual bool FastRefresh { get; } Property Value Type Description bool | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration public virtual IEnumerable PrimaryDataSource { get; } Property Value Type Description IEnumerable | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration public virtual int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration public virtual bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration public virtual IEnumerable SecondaryDataSource { get; } Property Value Type Description IEnumerable Methods | Edit this page View Source GetEntryFromItem(object) Gets an entry string from a specified item for listing Declaration public virtual string GetEntryFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(object) Gets the info from the item Declaration public virtual string GetInfoFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration public virtual void HandleExit() | Edit this page View Source LastOnOverflow() Goes up to the last element upon overflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration public virtual void LastOnOverflow() | Edit this page View Source RenderStatus(object) Renders the status Declaration public virtual void RenderStatus(object item) Parameters Type Name Description object item Target item Implements IInteractiveTui"
  },
  "api/Terminaux.Reader.Inputs.Interactive.IInteractiveTui.html": {
    "href": "api/Terminaux.Reader.Inputs.Interactive.IInteractiveTui.html",
    "title": "Interface IInteractiveTui | Terminaux API - Aptivi Internals",
    "keywords": "Interface IInteractiveTui An interface for your interactive user interface for terminal apps Namespace: Terminaux.Reader.Inputs.Interactive Assembly: Terminaux.dll Syntax public interface IInteractiveTui Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration List<InteractiveTuiBinding> Bindings { get; set; } Property Value Type Description List<InteractiveTuiBinding> | Edit this page View Source FastRefresh Whether delta-based refresh method is used or not Declaration bool FastRefresh { get; } Property Value Type Description bool | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration IEnumerable PrimaryDataSource { get; } Property Value Type Description IEnumerable | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration IEnumerable SecondaryDataSource { get; } Property Value Type Description IEnumerable Methods | Edit this page View Source GetEntryFromItem(object) Gets an entry string from a specified item for listing Declaration string GetEntryFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(object) Gets the info from the item Declaration string GetInfoFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration void HandleExit() | Edit this page View Source LastOnOverflow() Goes up to the last element upon overflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration void LastOnOverflow() | Edit this page View Source RenderStatus(object) Renders the status Declaration void RenderStatus(object item) Parameters Type Name Description object item Target item"
  },
  "api/Terminaux.Reader.Inputs.Interactive.InteractiveTuiBinding.html": {
    "href": "api/Terminaux.Reader.Inputs.Interactive.InteractiveTuiBinding.html",
    "title": "Class InteractiveTuiBinding | Terminaux API - Aptivi Internals",
    "keywords": "Class InteractiveTuiBinding Interactive TUI binding information class Inheritance object InteractiveTuiBinding Namespace: Terminaux.Reader.Inputs.Interactive Assembly: Terminaux.dll Syntax public class InteractiveTuiBinding Constructors | Edit this page View Source InteractiveTuiBinding(string, ConsoleKey, Action<object, int>) Makes a new instance of an interactive TUI key binding Declaration public InteractiveTuiBinding(string bindingName, ConsoleKey bindingKeyName, Action<object, int> bindingAction) Parameters Type Name Description string bindingName Key binding name ConsoleKey bindingKeyName Which key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data Properties | Edit this page View Source BindingAction The action to execute. The integer argument denotes the currently selected data Declaration public Action<object, int> BindingAction { get; } Property Value Type Description Action<object, int> | Edit this page View Source BindingKeyName Which key is bound to the action? Declaration public ConsoleKey BindingKeyName { get; } Property Value Type Description ConsoleKey | Edit this page View Source BindingName Key binding name Declaration public string BindingName { get; } Property Value Type Description string"
  },
  "api/Terminaux.Reader.Inputs.Interactive.InteractiveTuiTools.html": {
    "href": "api/Terminaux.Reader.Inputs.Interactive.InteractiveTuiTools.html",
    "title": "Class InteractiveTuiTools | Terminaux API - Aptivi Internals",
    "keywords": "Class InteractiveTuiTools Tools for the interactive TUI implementation Inheritance object InteractiveTuiTools Namespace: Terminaux.Reader.Inputs.Interactive Assembly: Terminaux.dll Syntax public static class InteractiveTuiTools Methods | Edit this page View Source ForceRefreshSelection() Forces the refresh Declaration public static void ForceRefreshSelection() | Edit this page View Source OpenInteractiveTui(BaseInteractiveTui) Opens the interactive TUI Declaration public static void OpenInteractiveTui(BaseInteractiveTui interactiveTui) Parameters Type Name Description BaseInteractiveTui interactiveTui The inherited class instance of the interactive TUI Exceptions Type Condition TerminauxException | Edit this page View Source SelectionMovement(BaseInteractiveTui, int) Initiates the selection movement Declaration public static void SelectionMovement(BaseInteractiveTui interactiveTui, int pos) Parameters Type Name Description BaseInteractiveTui interactiveTui Interactive TUI to deal with int pos Position to move the pane selection to"
  },
  "api/Terminaux.Reader.Inputs.Interactive.html": {
    "href": "api/Terminaux.Reader.Inputs.Interactive.html",
    "title": "Namespace Terminaux.Reader.Inputs.Interactive | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader.Inputs.Interactive Classes BaseInteractiveTui A base class for your interactive user interface for terminal apps InteractiveTuiBinding Interactive TUI binding information class InteractiveTuiTools Tools for the interactive TUI implementation Interfaces IInteractiveTui An interface for your interactive user interface for terminal apps"
  },
  "api/Terminaux.Reader.Inputs.Styles.ChoiceOutputType.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.ChoiceOutputType.html",
    "title": "Enum ChoiceOutputType | Terminaux API - Aptivi Internals",
    "keywords": "Enum ChoiceOutputType The enumeration for the choice command output type Namespace: Terminaux.Reader.Inputs.Styles Assembly: Terminaux.dll Syntax public enum ChoiceOutputType Fields Name Description Modern The modern way of listing choices OneLine A question and a set of answers in one line Table The table of choices TwoLines A question in a line and a set of answers in another line"
  },
  "api/Terminaux.Reader.Inputs.Styles.ChoiceStyle.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.ChoiceStyle.html",
    "title": "Class ChoiceStyle | Terminaux API - Aptivi Internals",
    "keywords": "Class ChoiceStyle Choice style for input module Inheritance object ChoiceStyle Namespace: Terminaux.Reader.Inputs.Styles Assembly: Terminaux.dll Syntax public static class ChoiceStyle Methods | Edit this page View Source PromptChoice(string, List<InputChoiceInfo>, List<InputChoiceInfo>, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, List<InputChoiceInfo>, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], string, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string"
  },
  "api/Terminaux.Reader.Inputs.Styles.InputStyle.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.InputStyle.html",
    "title": "Class InputStyle | Terminaux API - Aptivi Internals",
    "keywords": "Class InputStyle Input style module Inheritance object InputStyle Namespace: Terminaux.Reader.Inputs.Styles Assembly: Terminaux.dll Syntax public static class InputStyle Methods | Edit this page View Source PromptInput(string) Prompts user for input (answer the question with your own answers) Declaration public static string PromptInput(string Question) Parameters Type Name Description string Question Returns Type Description string"
  },
  "api/Terminaux.Reader.Inputs.Styles.SelectionMultipleStyle.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.SelectionMultipleStyle.html",
    "title": "Class SelectionMultipleStyle | Terminaux API - Aptivi Internals",
    "keywords": "Class SelectionMultipleStyle Multiple selection style for input module Inheritance object SelectionMultipleStyle Namespace: Terminaux.Reader.Inputs.Styles Assembly: Terminaux.dll Syntax public static class SelectionMultipleStyle Methods | Edit this page View Source PromptMultipleSelection(string, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, List<InputChoiceInfo> Answers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, List<InputChoiceInfo>, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], string, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], string, string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[]"
  },
  "api/Terminaux.Reader.Inputs.Styles.SelectionStyle.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.SelectionStyle.html",
    "title": "Class SelectionStyle | Terminaux API - Aptivi Internals",
    "keywords": "Class SelectionStyle Selection style for input module Inheritance object SelectionStyle Namespace: Terminaux.Reader.Inputs.Styles Assembly: Terminaux.dll Syntax public static class SelectionStyle Methods | Edit this page View Source PromptSelection(string, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, List<InputChoiceInfo>, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, bool) Prompts user for selection Declaration public static int PromptSelection(string Question, string AnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], string, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], string, string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], bool) Prompts user for selection Declaration public static int PromptSelection(string Question, string[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int"
  },
  "api/Terminaux.Reader.Inputs.Styles.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.html",
    "title": "Namespace Terminaux.Reader.Inputs.Styles | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader.Inputs.Styles Classes ChoiceStyle Choice style for input module InputStyle Input style module SelectionMultipleStyle Multiple selection style for input module SelectionStyle Selection style for input module Enums ChoiceOutputType The enumeration for the choice command output type"
  },
  "api/Terminaux.Reader.Inputs.html": {
    "href": "api/Terminaux.Reader.Inputs.html",
    "title": "Namespace Terminaux.Reader.Inputs | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader.Inputs Classes Input Console input module InputChoiceInfo Choice information for input InputChoiceTools Input choice tools"
  },
  "api/Terminaux.Reader.TermReader.html": {
    "href": "api/Terminaux.Reader.TermReader.html",
    "title": "Class TermReader | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReader Terminal input reader module Inheritance object TermReader Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReader Methods | Edit this page View Source Read() Reads the input Declaration public static string Read() Returns Type Description string | Edit this page View Source Read(string) Reads the input Declaration public static string Read(string inputPrompt) Parameters Type Name Description string inputPrompt The input to be read Returns Type Description string | Edit this page View Source Read(string, string, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, bool password = false, bool oneLineWrap = false, bool interruptible = false) Parameters Type Name Description string inputPrompt The input to be read string defaultValue Default value to use if no input is provided bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, string, TermReaderSettings, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, TermReaderSettings settings, bool password = false, bool oneLineWrap = false, bool interruptible = false) Parameters Type Name Description string inputPrompt The input to be read string defaultValue Default value to use if no input is provided TermReaderSettings settings Settigns containing reader-related settings bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, TermReaderSettings) Reads the input Declaration public static string Read(string inputPrompt, TermReaderSettings settings) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source Read(TermReaderSettings) Reads the input Declaration public static string Read(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadPassword() Reads the input with password character masking Declaration public static string ReadPassword() Returns Type Description string | Edit this page View Source ReadPassword(string) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt) Parameters Type Name Description string inputPrompt The input to be read Returns Type Description string | Edit this page View Source ReadPassword(string, TermReaderSettings) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, TermReaderSettings settings) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadPassword(TermReaderSettings) Reads the input with password character masking Declaration public static string ReadPassword(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string"
  },
  "api/Terminaux.Reader.TermReaderSettings.html": {
    "href": "api/Terminaux.Reader.TermReaderSettings.html",
    "title": "Class TermReaderSettings | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReaderSettings Settings for the reader Inheritance object TermReaderSettings Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderSettings Constructors | Edit this page View Source TermReaderSettings() Initializes empty settings instance Declaration public TermReaderSettings() Properties | Edit this page View Source HistoryEnabled Input history enabled Declaration public bool HistoryEnabled { get; set; } Property Value Type Description bool | Edit this page View Source LeftMargin Left margin Declaration public int LeftMargin { get; set; } Property Value Type Description int | Edit this page View Source PasswordMaskChar Password mask character Declaration public char PasswordMaskChar { get; set; } Property Value Type Description char | Edit this page View Source RightMargin Right margin Declaration public int RightMargin { get; set; } Property Value Type Description int | Edit this page View Source Suggestions Suggestion entries Declaration public Func<string, int, char[], string[]> Suggestions { set; } Property Value Type Description Func<string, int, char[], string[]> | Edit this page View Source SuggestionsDelimiters Suggestion delimiters Declaration public char[] SuggestionsDelimiters { set; } Property Value Type Description char[] | Edit this page View Source TreatCtrlCAsInput Treat Ctrl + C as input Declaration public bool TreatCtrlCAsInput { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Reader.TermReaderState.html": {
    "href": "api/Terminaux.Reader.TermReaderState.html",
    "title": "Class TermReaderState | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReaderState State of the reader Inheritance object TermReaderState Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderState Properties | Edit this page View Source CurrentCursorPosLeft Current cursor left position Declaration public int CurrentCursorPosLeft { get; } Property Value Type Description int | Edit this page View Source CurrentCursorPosTop Current cursor top position Declaration public int CurrentCursorPosTop { get; } Property Value Type Description int | Edit this page View Source CurrentHistoryPos Current history number Declaration public int CurrentHistoryPos { get; } Property Value Type Description int | Edit this page View Source CurrentSuggestionsPos Current suggestion number Declaration public int CurrentSuggestionsPos { get; } Property Value Type Description int | Edit this page View Source CurrentText Current text Declaration public StringBuilder CurrentText { get; } Property Value Type Description StringBuilder | Edit this page View Source CurrentTextPos Current text character number Declaration public int CurrentTextPos { get; } Property Value Type Description int | Edit this page View Source History History entries Declaration public List<string> History { get; } Property Value Type Description List<string> | Edit this page View Source InputPromptLeft Left position of the input prompt Declaration public int InputPromptLeft { get; } Property Value Type Description int | Edit this page View Source InputPromptText Input prompt text Declaration public string InputPromptText { get; } Property Value Type Description string | Edit this page View Source InputPromptTop Top position of the input prompt Declaration public int InputPromptTop { get; } Property Value Type Description int | Edit this page View Source KillBuffer Text to be pasted Declaration public StringBuilder KillBuffer { get; } Property Value Type Description StringBuilder | Edit this page View Source OneLineWrap Whether one line wrapping is enabled Declaration public bool OneLineWrap { get; } Property Value Type Description bool | Edit this page View Source PasswordMode Password Mode Declaration public bool PasswordMode { get; } Property Value Type Description bool | Edit this page View Source PressedKey Currently pressed key Declaration public ConsoleKeyInfo PressedKey { get; } Property Value Type Description ConsoleKeyInfo | Edit this page View Source Settings Reader settings (general or overridden) Declaration public TermReaderSettings Settings { get; } Property Value Type Description TermReaderSettings"
  },
  "api/Terminaux.Reader.TermReaderTools.html": {
    "href": "api/Terminaux.Reader.TermReaderTools.html",
    "title": "Class TermReaderTools | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReaderTools Terminal reader tools Inheritance object TermReaderTools Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReaderTools Methods | Edit this page View Source ClearHistory() Clears the history Declaration public static void ClearHistory() | Edit this page View Source Interrupt() Interrupts the reading process Declaration public static void Interrupt() | Edit this page View Source SetHistory(List<string>) Sets the history Declaration public static void SetHistory(List<string> History) Parameters Type Name Description List<string> History List of history entries"
  },
  "api/Terminaux.Reader.html": {
    "href": "api/Terminaux.Reader.html",
    "title": "Namespace Terminaux.Reader | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader Classes TermReader Terminal input reader module TermReaderSettings Settings for the reader TermReaderState State of the reader TermReaderTools Terminal reader tools"
  },
  "api/Terminaux.Sequences.Builder.Types.ApcSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.ApcSequences.html",
    "title": "Class ApcSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class ApcSequences List of APC sequences and their regular expressions Inheritance object ApcSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class ApcSequences Properties | Edit this page View Source ApcApplicationProgramCommandSequenceRegex [APC Pt ST] Regular expression for application program command Declaration public static Regex ApcApplicationProgramCommandSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateApcApplicationProgramCommand(string) [APC Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateApcApplicationProgramCommand(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.C1Sequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.C1Sequences.html",
    "title": "Class C1Sequences | Terminaux API - Aptivi Internals",
    "keywords": "Class C1Sequences List of C1 sequences and their regular expressions Inheritance object C1Sequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class C1Sequences Properties | Edit this page View Source C1ApplicationProgramCommandSequenceRegex [ESC _] Regular expression for application program command Declaration public static Regex C1ApplicationProgramCommandSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1ControlSequenceIndicatorSequenceRegex [ESC [] Regular expression for control sequence introducer Declaration public static Regex C1ControlSequenceIndicatorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1DeviceControlStringSequenceRegex [ESC P] Regular expression for device control string Declaration public static Regex C1DeviceControlStringSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1EndOfGuardedAreaSequenceRegex [ESC W] Regular expression for end of guarded area Declaration public static Regex C1EndOfGuardedAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1IndexSequenceRegex [ESC D] Regular expression for index Declaration public static Regex C1IndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1NextLineSequenceRegex [ESC E] Regular expression for next line Declaration public static Regex C1NextLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1OperatingSystemCommandSequenceRegex [ESC ]] Regular expression for operating system command Declaration public static Regex C1OperatingSystemCommandSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1PrivacyMessageSequenceRegex [ESC ^] Regular expression for privacy message Declaration public static Regex C1PrivacyMessageSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1ReturnTerminalIdSequenceRegex [ESC Z] Regular expression for returning terminal ID Declaration public static Regex C1ReturnTerminalIdSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1ReverseIndexSequenceRegex [ESC M] Regular expression for reverse index Declaration public static Regex C1ReverseIndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1SingleShiftSelectG2CharacterSetSequenceRegex [ESC N] Regular expression for single shift select of G2 character set Declaration public static Regex C1SingleShiftSelectG2CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1SingleShiftSelectG3CharacterSetSequenceRegex [ESC O] Regular expression for single shift select of G3 character set Declaration public static Regex C1SingleShiftSelectG3CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1StartOfGuardedAreaSequenceRegex [ESC V] Regular expression for start of guarded area Declaration public static Regex C1StartOfGuardedAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1StartOfStringSequenceRegex [ESC X] Regular expression for start of string Declaration public static Regex C1StartOfStringSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1StringTerminatorSequenceRegex [ESC ] Regular expression for string terminator Declaration public static Regex C1StringTerminatorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1TabSetSequenceRegex [ESC H] Regular expression for tab set Declaration public static Regex C1TabSetSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateC1ApplicationProgramCommand() [ESC _] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ApplicationProgramCommand() Returns Type Description string | Edit this page View Source GenerateC1ControlSequenceIndicator() [ESC [] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ControlSequenceIndicator() Returns Type Description string | Edit this page View Source GenerateC1DeviceControlString() [ESC P] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1DeviceControlString() Returns Type Description string | Edit this page View Source GenerateC1EndOfGuardedArea() [ESC W] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1EndOfGuardedArea() Returns Type Description string | Edit this page View Source GenerateC1Index() [ESC D] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1Index() Returns Type Description string | Edit this page View Source GenerateC1NextLine() [ESC E] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1NextLine() Returns Type Description string | Edit this page View Source GenerateC1OperatingSystemCommand() [ESC ]] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1OperatingSystemCommand() Returns Type Description string | Edit this page View Source GenerateC1PrivacyMessage() [ESC ^] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1PrivacyMessage() Returns Type Description string | Edit this page View Source GenerateC1ReturnTerminalId() [ESC Z] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ReturnTerminalId() Returns Type Description string | Edit this page View Source GenerateC1ReverseIndex() [ESC M] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ReverseIndex() Returns Type Description string | Edit this page View Source GenerateC1SingleShiftSelectG2CharacterSet() [ESC N] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1SingleShiftSelectG2CharacterSet() Returns Type Description string | Edit this page View Source GenerateC1SingleShiftSelectG3CharacterSet() [ESC O] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1SingleShiftSelectG3CharacterSet() Returns Type Description string | Edit this page View Source GenerateC1StartOfGuardedArea() [ESC V] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StartOfGuardedArea() Returns Type Description string | Edit this page View Source GenerateC1StartOfString() [ESC X] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StartOfString() Returns Type Description string | Edit this page View Source GenerateC1StringTerminator() [ESC ] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StringTerminator() Returns Type Description string | Edit this page View Source GenerateC1TabSet() [ESC H] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1TabSet() Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.CsiSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.CsiSequences.html",
    "title": "Class CsiSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class CsiSequences List of CSI sequences and their regular expressions Inheritance object CsiSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class CsiSequences Properties | Edit this page View Source CsiChangeAttributesInRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pm $ r] Regular expression for changing attributes in rectangular area Declaration public static Regex CsiChangeAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCharacterAttributesSequenceRegex [CSI Pm m] Regular expression for character attributes Declaration public static Regex CsiCharacterAttributesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCopyRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v] Regular expression for copying rectangular area Declaration public static Regex CsiCopyRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorBackwardTabulationSequenceRegex [CSI Ps Z] Regular expression for cursor backward tabulation Ps tab stops Declaration public static Regex CsiCursorBackwardTabulationSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorCharacterAbsoluteLineSequenceRegex [CSI Ps G] Regular expression for cursor character absolute Declaration public static Regex CsiCursorCharacterAbsoluteLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorForwardTabulationSequenceRegex [CSI Ps I] Regular expression for cursor forward tabulation Ps tab stops Declaration public static Regex CsiCursorForwardTabulationSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorPositionAbsoluteSequenceRegex [CSI Ps `] Regular expression for cursor position (absolute) Declaration public static Regex CsiCursorPositionAbsoluteSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorPositionRelativeSequenceRegex [CSI Ps a] Regular expression for cursor position (relative) Declaration public static Regex CsiCursorPositionRelativeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorPositionSequenceRegex [CSI Ps ; Ps H] Regular expression for cursor position (Ps column ; Ps row) Declaration public static Regex CsiCursorPositionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDecPrivateModeValuesSequenceRegex [CSI ? Pm s] Regular expression for saving DEC private mode values Declaration public static Regex CsiDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeleteCharsSequenceRegex [CSI Ps P] Regular expression for deleting Ps characters Declaration public static Regex CsiDeleteCharsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeleteColumnsSequenceRegex [CSI Ps ' ~] Regular expression for deleting Ps columns Declaration public static Regex CsiDeleteColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeleteLineSequenceRegex [CSI Ps M] Regular expression for deleting Ps lines Declaration public static Regex CsiDeleteLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeviceStatusReportDecSequenceRegex [CSI ? Ps n] Regular expression for device status report (DEC-specific) Declaration public static Regex CsiDeviceStatusReportDecSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeviceStatusReportSequenceRegex [CSI Ps n] Regular expression for device status report Declaration public static Regex CsiDeviceStatusReportSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDisableKeyModifierOptionsSequenceRegex [CSI > Ps n] Regular expression for disabling key modifier options Declaration public static Regex CsiDisableKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEnableFilterRectangleSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ' w] Regular expression for enabling filter rectangle Declaration public static Regex CsiEnableFilterRectangleSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseCharactersSequenceRegex [CSI Ps X] Regular expression for erasing Ps characters Declaration public static Regex CsiEraseCharactersSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInDisplayDecsedSequenceRegex [CSI ? Ps J] Regular expression for erasing in display (DECSED) Declaration public static Regex CsiEraseInDisplayDecsedSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInDisplaySequenceRegex [CSI Ps J] Regular expression for erasing in display (ED) Declaration public static Regex CsiEraseInDisplaySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInLineDecselSequenceRegex [CSI ? Ps K] Regular expression for erasing in line (DECSEL) Declaration public static Regex CsiEraseInLineDecselSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInLineSequenceRegex [CSI Ps K] Regular expression for erasing in line (EL) Declaration public static Regex CsiEraseInLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr $ z] Regular expression for erasing rectangular area Declaration public static Regex CsiEraseRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiFillRectangularAreaSequenceRegex [CSI Pc ; Pt ; Pl ; Pb ; Pr $ x] Regular expression for filling rectangular area Declaration public static Regex CsiFillRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInitiateHighlightMouseTrackingSequenceRegex [CSI Ps ; Ps ; Ps ; Ps ; Ps T] Regular expression for initiating highlight mouse tracking Declaration public static Regex CsiInitiateHighlightMouseTrackingSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInsertBlankCharactersSequenceRegex [CSI Ps @] Regular expression for inserting the blank characters Ps times Declaration public static Regex CsiInsertBlankCharactersSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInsertColumnsSequenceRegex [CSI Ps ' }] Regular expression for inserting Ps columns Declaration public static Regex CsiInsertColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInsertLineSequenceRegex [CSI Ps L] Regular expression for inserting Ps lines Declaration public static Regex CsiInsertLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLeftTopPositionSequenceRegex [CSI Ps ; Ps f] Regular expression for horizontal and vertical position Declaration public static Regex CsiLeftTopPositionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLinePositionAbsoluteSequenceRegex [CSI Ps d] Regular expression for line position (absolute) Declaration public static Regex CsiLinePositionAbsoluteSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLinePositionRelativeSequenceRegex [CSI Ps e] Regular expression for line position (relative) Declaration public static Regex CsiLinePositionRelativeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLoadLedsSequenceRegex [CSI Ps q] Regular expression for loading LEDs Declaration public static Regex CsiLoadLedsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLocatorReportingSequenceRegex [CSI Ps ; Pu ' z] Regular expression for enabling the locator reporting feature Declaration public static Regex CsiLocatorReportingSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMediaCopyPrivateSequenceRegex [CSI ? Ps i] Regular expression for media copy (Private) Declaration public static Regex CsiMediaCopyPrivateSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMediaCopySequenceRegex [CSI Ps i] Regular expression for media copy Declaration public static Regex CsiMediaCopySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorDownSequenceRegex [CSI Ps B] Regular expression for moving the cursor down Ps times Declaration public static Regex CsiMoveCursorDownSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorLeftSequenceRegex [CSI Ps D] Regular expression for moving the cursor to the left Ps times Declaration public static Regex CsiMoveCursorLeftSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorNextLineSequenceRegex [CSI Ps E] Regular expression for moving the cursor to the next line Ps times Declaration public static Regex CsiMoveCursorNextLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorPreviousLineSequenceRegex [CSI Ps F] Regular expression for moving the cursor to the previous line Ps times Declaration public static Regex CsiMoveCursorPreviousLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorRightSequenceRegex [CSI Ps C] Regular expression for moving the cursor to the right Ps times Declaration public static Regex CsiMoveCursorRightSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorUpSequenceRegex [CSI Ps A] Regular expression for moving the cursor up Ps times Declaration public static Regex CsiMoveCursorUpSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopColorFromStackSequenceRegex [CSI # Q] Regular expression for popping color from the stack Declaration public static Regex CsiPopColorFromStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopColorFromStackWithArgsSequenceRegex [CSI Pm # Q] Regular expression for popping color from the stack Declaration public static Regex CsiPopColorFromStackWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopVideoAttributesFromStackSequenceRegex [CSI # q] Regular expression for popping video attributes from the stack Declaration public static Regex CsiPopVideoAttributesFromStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopVideoAttributesFromStackXtermSequenceRegex [CSI # }] Regular expression for popping video attributes from the stack for xterm Declaration public static Regex CsiPopVideoAttributesFromStackXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushColorToStackSequenceRegex [CSI # P] Regular expression for pushing color into the stack Declaration public static Regex CsiPushColorToStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushColorToStackWithArgsSequenceRegex [CSI Pm # P] Regular expression for pushing color into the stack Declaration public static Regex CsiPushColorToStackWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackSequenceRegex [CSI # p] Regular expression for pushing video attributes into the stack Declaration public static Regex CsiPushVideoAttributesToStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackWithArgsSequenceRegex [CSI Pm # p] Regular expression for pushing video attributes into the stack Declaration public static Regex CsiPushVideoAttributesToStackWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackXtermSequenceRegex [CSI # {] Regular expression for pushing video attributes into the stack for xterm Declaration public static Regex CsiPushVideoAttributesToStackXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex [CSI Pm # {] Regular expression for pushing video attributes into the stack for xterm Declaration public static Regex CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiQueryKeyModifierOptionsSequenceRegex [CSI > Pp m] Regular expression for querying key modifier options Declaration public static Regex CsiQueryKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRectangularAreaChecksumSequenceRegex [CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y] Regular expression for reporting a checksum of a rectangular area Declaration public static Regex CsiRectangularAreaChecksumSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRepeatGraphicCharacterSequenceRegex [CSI Ps b] Regular expression for repeating a graphic character Declaration public static Regex CsiRepeatGraphicCharacterSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReportGraphicsRenditionRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr # |] Regular expression for reporting graphics rendition for a rectangular area Declaration public static Regex CsiReportGraphicsRenditionRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReportPaletteStackSequenceRegex [CSI # R] Regular expression for reporting the palette stack Declaration public static Regex CsiReportPaletteStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReportXtermVersionSequenceRegex [CSI > Ps q] Regular expression for reporting the xterm version Declaration public static Regex CsiReportXtermVersionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestAnsiModeSequenceRegex [CSI Ps $ p] Regular expression for requesting ANSI mode Declaration public static Regex CsiRequestAnsiModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestDecPrivateModeSequenceRegex [CSI ? Ps $ p] Regular expression for requesting DEC private mode Declaration public static Regex CsiRequestDecPrivateModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestLocatorPositionSequenceRegex [CSI Ps ' |] Regular expression for requesting locator position Declaration public static Regex CsiRequestLocatorPositionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestPresentationStateReportSequenceRegex [CSI Ps $ w] Regular expression for requesting presentation state report Declaration public static Regex CsiRequestPresentationStateReportSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestTerminalParametersSequenceRegex [CSI Ps x] Regular expression for requesting terminal parameters Declaration public static Regex CsiRequestTerminalParametersSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetKeyModifierOptionsSequenceRegex [CSI > Pp m] Regular expression for resetting key modifier options Declaration public static Regex CsiResetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetModeSequenceRegex [CSI Pm l] Regular expression for reset mode Declaration public static Regex CsiResetModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetPrivateModeSequenceRegex [CSI ? Pm l] Regular expression for reset mode (Private mode reset) Declaration public static Regex CsiResetPrivateModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetTitleModeFeaturesSequenceRegex [CSI > Pm T] Regular expression for resetting title mode features Declaration public static Regex CsiResetTitleModeFeaturesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRestoreCursorSequenceRegex [CSI u] Regular expression for restoring the cursor Declaration public static Regex CsiRestoreCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRestoreDecPrivateModeValuesSequenceRegex [CSI ? Pm r] Regular expression for restoring DEC private mode values Declaration public static Regex CsiRestoreDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReverseAttributesInRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pm $ t] Regular expression for reversing attributes in rectangular area Declaration public static Regex CsiReverseAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSaveCursorSequenceRegex [CSI s] Regular expression for saving the cursor Declaration public static Regex CsiSaveCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiScrollDownOriginalSequenceRegex [CSI Ps ^] Regular expression for scrolling down Ps lines Declaration public static Regex CsiScrollDownOriginalSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiScrollDownSequenceRegex [CSI Ps T] Regular expression for scrolling down Ps lines Declaration public static Regex CsiScrollDownSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiScrollUpSequenceRegex [CSI Ps S] Regular expression for scrolling up Ps lines Declaration public static Regex CsiScrollUpSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectActiveStatusDisplaySequenceRegex [CSI Ps $ }] Regular expression for selecting active status display Declaration public static Regex CsiSelectActiveStatusDisplaySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectAttributeChangeExtentSequenceRegex [CSI Ps * x] Regular expression for selecting attribute change extent Declaration public static Regex CsiSelectAttributeChangeExtentSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectCharacterProtectionAttributeSequenceRegex [CSI Ps \" q] Regular expression for selecting character protection attribute Declaration public static Regex CsiSelectCharacterProtectionAttributeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectChecksumExtensionSequenceRegex [CSI Ps # y] Regular expression for selecting checksum extension Declaration public static Regex CsiSelectChecksumExtensionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectColumnsPerPageSequenceRegex [CSI Ps $ |] Regular expression for selecting columns per page Declaration public static Regex CsiSelectColumnsPerPageSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectLocatorEventsSequenceRegex [CSI Pm ' {] Regular expression for selecting locator events Declaration public static Regex CsiSelectLocatorEventsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectNumberOfLinesPerScreenSequenceRegex [CSI Ps * |] Regular expression for selecting number of lines per screen Declaration public static Regex CsiSelectNumberOfLinesPerScreenSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectStatusLineTypeSequenceRegex [CSI Ps $ ~] Regular expression for selecting status line type Declaration public static Regex CsiSelectStatusLineTypeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectiveEraseRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr $ {] Regular expression for selectively erasing rectangular area Declaration public static Regex CsiSelectiveEraseRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSendDeviceAttributesPrimarySequenceRegex [CSI Ps c] Regular expression for sending device attributes (Primary DA) Declaration public static Regex CsiSendDeviceAttributesPrimarySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSendDeviceAttributesSecondarySequenceRegex [CSI = Ps c] Regular expression for sending device attributes (Secondary DA) Declaration public static Regex CsiSendDeviceAttributesSecondarySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSendDeviceAttributesTertiarySequenceRegex [CSI > Ps c] Regular expression for sending device attributes (Tertiary DA) Declaration public static Regex CsiSendDeviceAttributesTertiarySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetConformanceLevelSequenceRegex [CSI Pl ; Pc \" p] Regular expression for setting conformance level Declaration public static Regex CsiSetConformanceLevelSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetCursorStyleSequenceRegex [CSI Ps SP q] Regular expression for setting cursor style Declaration public static Regex CsiSetCursorStyleSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetGraphicsAttributeSequenceRegex [CSI ? Pi ; Pa ; Pv S] Regular expression for setting graphics attribute Declaration public static Regex CsiSetGraphicsAttributeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetKeyModifierOptionsSequenceRegex [CSI > Pp ; Pv m] Regular expression for setting key modifier options Declaration public static Regex CsiSetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetLeftRightMarginsSequenceRegex [CSI Pl ; Pr s] Regular expression for setting left and right margins Declaration public static Regex CsiSetLeftRightMarginsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetMarginBellVolumeSequenceRegex [CSI Ps SP u] Regular expression for setting margin bell volume Declaration public static Regex CsiSetMarginBellVolumeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetModeSequenceRegex [CSI Pm h] Regular expression for setting mode Declaration public static Regex CsiSetModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetPointerModeXtermSequenceRegex [CSI > Ps p] Regular expression for setting pointerMode for xterm Declaration public static Regex CsiSetPointerModeXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetPrivateModeSequenceRegex [CSI ? Pm h] Regular expression for setting mode (Private mode set) Declaration public static Regex CsiSetPrivateModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetScrollingRegionSequenceRegex [CSI Ps ; Ps r] Regular expression for setting scroll region Declaration public static Regex CsiSetScrollingRegionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetShiftEscapeOptionsSequenceRegex [CSI > Ps s] Regular expression for setting shift-escape options Declaration public static Regex CsiSetShiftEscapeOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetTitleModeXtermSequenceRegex [CSI > Pm t] Regular expression for setting title mode for xterm Declaration public static Regex CsiSetTitleModeXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetWarningBellVolumeSequenceRegex [CSI Ps SP t] Regular expression for setting warning bell volume Declaration public static Regex CsiSetWarningBellVolumeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiShiftLeftColumnsSequenceRegex [CSI Ps SP @] Regular expression for shifting left Ps columns Declaration public static Regex CsiShiftLeftColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiShiftRightColumnsSequenceRegex [CSI Ps SP A] Regular expression for shifting right Ps columns Declaration public static Regex CsiShiftRightColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSoftTerminalResetSequenceRegex [CSI ! p] Regular expression for soft terminal reset Declaration public static Regex CsiSoftTerminalResetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiTabClearSequenceRegex [CSI Ps g] Regular expression for tab clear Declaration public static Regex CsiTabClearSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiWindowManipulationSequenceRegex [CSI Ps ; Ps ; Ps t] Regular expression for window manipulation Declaration public static Regex CsiWindowManipulationSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateCsiChangeAttributesInRectangularArea(string, int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ; Pm $ r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiChangeAttributesInRectangularArea(string attributes, int pt, int pl, int pb, int pr) Parameters Type Name Description string attributes int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiCharacterAttributes(string) [CSI Pm m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCharacterAttributes(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiCopyRectangularArea(int, int, int, int, int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCopyRectangularArea(int ptSrc, int plSrc, int pbSrc, int prSrc, int sourcePage, int ptTarget, int plTarget, int targetPage) Parameters Type Name Description int ptSrc int plSrc int pbSrc int prSrc int sourcePage int ptTarget int plTarget int targetPage Returns Type Description string | Edit this page View Source GenerateCsiCursorBackwardTabulation(int) [CSI Ps Z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorBackwardTabulation(int stops) Parameters Type Name Description int stops Returns Type Description string | Edit this page View Source GenerateCsiCursorCharacterAbsoluteLine(int) [CSI Ps G] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorCharacterAbsoluteLine(int column) Parameters Type Name Description int column Returns Type Description string | Edit this page View Source GenerateCsiCursorForwardTabulation(int) [CSI Ps I] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorForwardTabulation(int stops) Parameters Type Name Description int stops Returns Type Description string | Edit this page View Source GenerateCsiCursorPosition(int, int) [CSI Ps ; Ps H] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPosition(int column, int row) Parameters Type Name Description int column int row Returns Type Description string | Edit this page View Source GenerateCsiCursorPositionAbsolute(int) [CSI Ps `] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPositionAbsolute(int column) Parameters Type Name Description int column Returns Type Description string | Edit this page View Source GenerateCsiCursorPositionRelative(int) [CSI Ps a] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPositionRelative(int column) Parameters Type Name Description int column Returns Type Description string | Edit this page View Source GenerateCsiDecPrivateModeValues(string) [CSI ? Pm s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDecPrivateModeValues(string values) Parameters Type Name Description string values Returns Type Description string | Edit this page View Source GenerateCsiDeleteChars(int) [CSI Ps P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteChars(int chars) Parameters Type Name Description int chars Returns Type Description string | Edit this page View Source GenerateCsiDeleteColumns(int) [CSI Ps ' ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiDeleteLine(int) [CSI Ps M] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteLine(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiDeviceStatusReport(int) [CSI Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeviceStatusReport(int report) Parameters Type Name Description int report Returns Type Description string | Edit this page View Source GenerateCsiDeviceStatusReportDec(int) [CSI ? Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeviceStatusReportDec(int report) Parameters Type Name Description int report Returns Type Description string | Edit this page View Source GenerateCsiDisableKeyModifierOptions(int) [CSI > Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDisableKeyModifierOptions(int report) Parameters Type Name Description int report Returns Type Description string | Edit this page View Source GenerateCsiEnableFilterRectangle(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ' w] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEnableFilterRectangle(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiEraseCharacters(int) [CSI Ps X] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseCharacters(int chars) Parameters Type Name Description int chars Returns Type Description string | Edit this page View Source GenerateCsiEraseInDisplay(int) [CSI Ps J] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInDisplay(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseInDisplayDecsed(int) [CSI ? Ps J] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInDisplayDecsed(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseInLine(int) [CSI Ps K] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInLine(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseInLineDecsel(int) [CSI ? Ps K] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInLineDecsel(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseRectangularArea(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr $ z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiFillRectangularArea(char, int, int, int, int) [CSI Pc ; Pt ; Pl ; Pb ; Pr $ x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiFillRectangularArea(char character, int pt, int pl, int pb, int pr) Parameters Type Name Description char character int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiInitiateHighlightMouseTracking(int, int, int, int, int) [CSI Ps ; Ps ; Ps ; Ps ; Ps T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInitiateHighlightMouseTracking(int func, int startX, int startY, int firstRow, int lastRow) Parameters Type Name Description int func int startX int startY int firstRow int lastRow Returns Type Description string | Edit this page View Source GenerateCsiInsertBlankCharacters(int) [CSI Ps @] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertBlankCharacters(int blanks) Parameters Type Name Description int blanks Returns Type Description string | Edit this page View Source GenerateCsiInsertColumns(int) [CSI Ps ' }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiInsertLine(int) [CSI Ps L] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertLine(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiLeftTopPosition(int, int) [CSI Ps ; Ps f] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLeftTopPosition(int column, int row) Parameters Type Name Description int column int row Returns Type Description string | Edit this page View Source GenerateCsiLinePositionAbsolute(int) [CSI Ps d] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLinePositionAbsolute(int row) Parameters Type Name Description int row Returns Type Description string | Edit this page View Source GenerateCsiLinePositionRelative(int) [CSI Ps e] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLinePositionRelative(int row) Parameters Type Name Description int row Returns Type Description string | Edit this page View Source GenerateCsiLoadLeds(int) [CSI Ps q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLoadLeds(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiLocatorReporting(int, int) [CSI Ps ; Pu ' z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLocatorReporting(int locatorMode, int measurement) Parameters Type Name Description int locatorMode int measurement Returns Type Description string | Edit this page View Source GenerateCsiMediaCopy(int) [CSI Ps i] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMediaCopy(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiMediaCopyPrivate(int) [CSI ? Ps i] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMediaCopyPrivate(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorDown(int) [CSI Ps B] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorDown(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorLeft(int) [CSI Ps D] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorLeft(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorNextLine(int) [CSI Ps E] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorNextLine(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorPreviousLine(int) [CSI Ps F] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorPreviousLine(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorRight(int) [CSI Ps C] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorRight(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorUp(int) [CSI Ps A] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorUp(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiPopColorFromStack() [CSI # Q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopColorFromStack() Returns Type Description string | Edit this page View Source GenerateCsiPopColorFromStack(string) [CSI Pm # Q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopColorFromStack(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiPopVideoAttributesFromStack() [CSI # q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopVideoAttributesFromStack() Returns Type Description string | Edit this page View Source GenerateCsiPopVideoAttributesFromStackXterm() [CSI # }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopVideoAttributesFromStackXterm() Returns Type Description string | Edit this page View Source GenerateCsiPushColorToStack() [CSI # P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushColorToStack() Returns Type Description string | Edit this page View Source GenerateCsiPushColorToStack(string) [CSI Pm # P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushColorToStack(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStack() [CSI # p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStack() Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStack(string) [CSI Pm # p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStack(string args) Parameters Type Name Description string args Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStackXterm() [CSI # {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStackXterm() Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStackXterm(string) [CSI Pm # {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStackXterm(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiQueryKeyModifierOptions(int) [CSI ? Pp m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiQueryKeyModifierOptions(int resource) Parameters Type Name Description int resource Returns Type Description string | Edit this page View Source GenerateCsiRectangularAreaChecksum(int, int, int, int, int, int) [CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRectangularAreaChecksum(int requestId, int pageNumber, int pt, int pl, int pb, int pr) Parameters Type Name Description int requestId int pageNumber int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiRepeatGraphicCharacter(int) [CSI Ps b] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRepeatGraphicCharacter(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiReportGraphicsRenditionRectangularArea(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr # |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportGraphicsRenditionRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiReportPaletteStack() [CSI # R] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportPaletteStack() Returns Type Description string | Edit this page View Source GenerateCsiReportXtermVersion(int) [CSI > Ps q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportXtermVersion(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiRequestAnsiMode(int) [CSI Ps $ p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestAnsiMode(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiRequestDecPrivateMode(int) [CSI ? Ps $ p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestDecPrivateMode(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiRequestLocatorPosition(int) [CSI Ps ' |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestLocatorPosition(int transmit) Parameters Type Name Description int transmit Returns Type Description string | Edit this page View Source GenerateCsiRequestPresentationStateReport(int) [CSI Ps $ w] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestPresentationStateReport(int state) Parameters Type Name Description int state Returns Type Description string | Edit this page View Source GenerateCsiRequestTerminalParameters(int) [CSI Ps x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestTerminalParameters(int parameter) Parameters Type Name Description int parameter Returns Type Description string | Edit this page View Source GenerateCsiResetKeyModifierOptions(int) [CSI > Pp m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetKeyModifierOptions(int resource) Parameters Type Name Description int resource Returns Type Description string | Edit this page View Source GenerateCsiResetMode(string) [CSI Pm l] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiResetPrivateMode(string) [CSI ? Pm l] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetPrivateMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiResetTitleModeFeatures(int) [CSI > Pm T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetTitleModeFeatures(int resetOptions) Parameters Type Name Description int resetOptions Returns Type Description string | Edit this page View Source GenerateCsiRestoreCursor() [CSI u] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRestoreCursor() Returns Type Description string | Edit this page View Source GenerateCsiRestoreDecPrivateModeValues(string) [CSI ? Pm r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRestoreDecPrivateModeValues(string values) Parameters Type Name Description string values Returns Type Description string | Edit this page View Source GenerateCsiReverseAttributesInRectangularArea(string, int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ; Pm $ t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReverseAttributesInRectangularArea(string attributes, int pt, int pl, int pb, int pr) Parameters Type Name Description string attributes int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiSaveCursor() [CSI s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSaveCursor() Returns Type Description string | Edit this page View Source GenerateCsiScrollDown(int) [CSI Ps T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollDown(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiScrollDownOriginal(int) [CSI Ps ^] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollDownOriginal(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiScrollUp(int) [CSI Ps S] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollUp(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiSelectActiveStatusDisplay(int) [CSI Ps $ }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectActiveStatusDisplay(int displayMode) Parameters Type Name Description int displayMode Returns Type Description string | Edit this page View Source GenerateCsiSelectAttributeChangeExtent(int) [CSI Ps * x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectAttributeChangeExtent(int extent) Parameters Type Name Description int extent Returns Type Description string | Edit this page View Source GenerateCsiSelectCharacterProtectionAttribute(int) [CSI Ps \" q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectCharacterProtectionAttribute(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiSelectChecksumExtension(int) [CSI Ps # y] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectChecksumExtension(int modifier) Parameters Type Name Description int modifier Returns Type Description string | Edit this page View Source GenerateCsiSelectColumnsPerPage(int) [CSI Ps $ |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectColumnsPerPage(int columnMode) Parameters Type Name Description int columnMode Returns Type Description string | Edit this page View Source GenerateCsiSelectLocatorEvents(string) [CSI Pm ' {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectLocatorEvents(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiSelectNumberOfLinesPerScreen(int) [CSI Ps * |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectNumberOfLinesPerScreen(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiSelectStatusLineType(int) [CSI Ps $ ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectStatusLineType(int type) Parameters Type Name Description int type Returns Type Description string | Edit this page View Source GenerateCsiSelectiveEraseRectangularArea(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr $ {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectiveEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiSendDeviceAttributesPrimary(int) [CSI Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesPrimary(int attributes) Parameters Type Name Description int attributes Returns Type Description string | Edit this page View Source GenerateCsiSendDeviceAttributesSecondary(int) [CSI = Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesSecondary(int attributes) Parameters Type Name Description int attributes Returns Type Description string | Edit this page View Source GenerateCsiSendDeviceAttributesTertiary(int) [CSI > Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesTertiary(int attributes) Parameters Type Name Description int attributes Returns Type Description string | Edit this page View Source GenerateCsiSetConformanceLevel(int, int) [CSI Pl ; Pc \" p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetConformanceLevel(int level, int conformance) Parameters Type Name Description int level int conformance Returns Type Description string | Edit this page View Source GenerateCsiSetCursorStyle(int) [CSI Ps SP q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetCursorStyle(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiSetGraphicsAttribute(int, int, string) [CSI ? Pi ; Pa ; Pv S] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetGraphicsAttribute(int itemType, int attributeManager, string geometry) Parameters Type Name Description int itemType int attributeManager string geometry Returns Type Description string | Edit this page View Source GenerateCsiSetKeyModifierOptions(int, int) [CSI > Pp ; Pv m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetKeyModifierOptions(int resource, int modify) Parameters Type Name Description int resource int modify Returns Type Description string | Edit this page View Source GenerateCsiSetLeftRightMargins(int, int) [CSI Pl ; Pr s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetLeftRightMargins(int left, int right) Parameters Type Name Description int left int right Returns Type Description string | Edit this page View Source GenerateCsiSetMarginBellVolume(int) [CSI Ps SP u] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetMarginBellVolume(int level) Parameters Type Name Description int level Returns Type Description string | Edit this page View Source GenerateCsiSetMode(string) [CSI Pm h] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiSetPointerModeXterm(int) [CSI > Ps p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetPointerModeXterm(int hideMode) Parameters Type Name Description int hideMode Returns Type Description string | Edit this page View Source GenerateCsiSetPrivateMode(string) [CSI ? Pm h] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetPrivateMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiSetScrollingRegion(int, int) [CSI Ps ; Ps r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetScrollingRegion(int top, int bottom) Parameters Type Name Description int top int bottom Returns Type Description string | Edit this page View Source GenerateCsiSetShiftEscapeOptions(int) [CSI > Ps s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetShiftEscapeOptions(int option) Parameters Type Name Description int option Returns Type Description string | Edit this page View Source GenerateCsiSetTitleModeXterm(string) [CSI > Pm t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetTitleModeXterm(string modes) Parameters Type Name Description string modes Returns Type Description string | Edit this page View Source GenerateCsiSetWarningBellVolume(int) [CSI Ps SP t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetWarningBellVolume(int level) Parameters Type Name Description int level Returns Type Description string | Edit this page View Source GenerateCsiShiftLeftColumns(int) [CSI Ps SP @] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiShiftLeftColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiShiftRightColumns(int) [CSI Ps SP A] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiShiftRightColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiSoftTerminalReset() [CSI ! p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSoftTerminalReset() Returns Type Description string | Edit this page View Source GenerateCsiTabClear(int) [CSI Ps g] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiTabClear(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiWindowManipulation(int, int, int) [CSI Ps ; Ps ; Ps ; t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiWindowManipulation(int windowAction, int windowAction2, int windowAction3) Parameters Type Name Description int windowAction int windowAction2 int windowAction3 Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.DcsSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.DcsSequences.html",
    "title": "Class DcsSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class DcsSequences List of DCS sequences and their regular expressions Inheritance object DcsSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class DcsSequences Properties | Edit this page View Source DcsRequestResourceValuesSequenceRegex [DCS + Q Pt ST] Regular expression for requesting resource values for xterm Declaration public static Regex DcsRequestResourceValuesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsRequestStatusStringSequenceRegex [DCS $ q Pt ST] Regular expression for requesting status string Declaration public static Regex DcsRequestStatusStringSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsRequestTermInfoDataSequenceRegex [DCS + q Pt ST] Regular expression for requesting terminfo data for xterm Declaration public static Regex DcsRequestTermInfoDataSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsRestorePresentationStatusSequenceRegex [DCS Ps $ t Pt ST] Regular expression for restoring presentation status Declaration public static Regex DcsRestorePresentationStatusSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsSetTermInfoDataSequenceRegex [DCS + p Pt ST] Regular expression for setting terminfo data for xterm Declaration public static Regex DcsSetTermInfoDataSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsUserDefinedKeysSequenceRegex [DCS Ps ; Ps | Pt ST] Regular expression for user defined keys Declaration public static Regex DcsUserDefinedKeysSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateDcsRequestResourceValues(string) [DCS + Q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestResourceValues(string xtermResourceNames) Parameters Type Name Description string xtermResourceNames Returns Type Description string | Edit this page View Source GenerateDcsRequestStatusString(string) [DCS $ q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestStatusString(string status) Parameters Type Name Description string status Returns Type Description string | Edit this page View Source GenerateDcsRequestTermInfoData(string) [DCS + q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestTermInfoData(string termName) Parameters Type Name Description string termName Returns Type Description string | Edit this page View Source GenerateDcsRestorePresentationStatus(int, string) [DCS Ps $ t Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRestorePresentationStatus(int controlConvert, string status) Parameters Type Name Description int controlConvert string status Returns Type Description string | Edit this page View Source GenerateDcsSetTermInfoData(string) [DCS + p Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsSetTermInfoData(string termName) Parameters Type Name Description string termName Returns Type Description string | Edit this page View Source GenerateDcsUserDefinedKeys(int, int, string) [DCS Ps ; Ps | Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsUserDefinedKeys(int clearUdkDefinitions, int dontLockKeys, string keybindings) Parameters Type Name Description int clearUdkDefinitions int dontLockKeys string keybindings Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.EscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.EscSequences.html",
    "title": "Class EscSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class EscSequences List of ESC sequences and their regular expressions Inheritance object EscSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class EscSequences Properties | Edit this page View Source Esc7BitControlsSequenceRegex [ESC SP F] Regular expression for 7-bit controls Declaration public static Regex Esc7BitControlsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source Esc8BitControlsSequenceRegex [ESC SP G] Regular expression for 8-bit controls Declaration public static Regex Esc8BitControlsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscAnsiConformanceLevel1SequenceRegex [ESC SP L] Regular expression for setting ANSI conformance level 1 Declaration public static Regex EscAnsiConformanceLevel1SequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscAnsiConformanceLevel2SequenceRegex [ESC SP M] Regular expression for setting ANSI conformance level 2 Declaration public static Regex EscAnsiConformanceLevel2SequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscAnsiConformanceLevel3SequenceRegex [ESC SP N] Regular expression for setting ANSI conformance level 3 Declaration public static Regex EscAnsiConformanceLevel3SequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscApplicationKeypadSequenceRegex [ESC =] Regular expression for application keypad Declaration public static Regex EscApplicationKeypadSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscBackIndexSequenceRegex [ESC 6] Regular expression for back index Declaration public static Regex EscBackIndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscCursorToLowerLeftCornerSequenceRegex [ESC F] Regular expression for cursor to lower left corner Declaration public static Regex EscCursorToLowerLeftCornerSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecDoubleHeightLineBottomHalfSequenceRegex [ESC # 4] Regular expression for DEC double-height line bottom half Declaration public static Regex EscDecDoubleHeightLineBottomHalfSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecDoubleHeightLineTopHalfSequenceRegex [ESC # 3] Regular expression for DEC double-height line top half Declaration public static Regex EscDecDoubleHeightLineTopHalfSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecDoubleWidthLineSequenceRegex [ESC # 6] Regular expression for DEC double-width line Declaration public static Regex EscDecDoubleWidthLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecScreenAlignmentTestSequenceRegex [ESC # 8] Regular expression for DEC screen alignment test Declaration public static Regex EscDecScreenAlignmentTestSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecSingleWidthLineSequenceRegex [ESC # 5] Regular expression for DEC single-width line Declaration public static Regex EscDecSingleWidthLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG0CharacterSetSequenceRegex [ESC ( Pc] Regular expression for designating the G0 character set Declaration public static Regex EscDesignateG0CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG1CharacterSetAltSequenceRegex [ESC - Pc] Regular expression for designating the G1 character set Declaration public static Regex EscDesignateG1CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG1CharacterSetSequenceRegex [ESC ) Pc] Regular expression for designating the G1 character set Declaration public static Regex EscDesignateG1CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG2CharacterSetAltSequenceRegex [ESC , Pc] Regular expression for designating the G2 character set Declaration public static Regex EscDesignateG2CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG2CharacterSetSequenceRegex [ESC * Pc] Regular expression for designating the G2 character set Declaration public static Regex EscDesignateG2CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG3CharacterSetAltSequenceRegex [ESC / Pc] Regular expression for designating the G3 character set Declaration public static Regex EscDesignateG3CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG3CharacterSetSequenceRegex [ESC + Pc] Regular expression for designating the G3 character set Declaration public static Regex EscDesignateG3CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscForwardIndexSequenceRegex [ESC 9] Regular expression for forward index Declaration public static Regex EscForwardIndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscFullResetSequenceRegex [ESC c] Regular expression for full reset Declaration public static Regex EscFullResetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG1CharacterSetGrSequenceRegex [ESC ~] Regular expression for invoking the G1 character set as GR Declaration public static Regex EscInvokeG1CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG2CharacterSetGlSequenceRegex [ESC n] Regular expression for invoking the G2 character set as GL Declaration public static Regex EscInvokeG2CharacterSetGlSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG2CharacterSetGrSequenceRegex [ESC }] Regular expression for invoking the G2 character set as GR Declaration public static Regex EscInvokeG2CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG3CharacterSetGlSequenceRegex [ESC o] Regular expression for invoking the G3 character set as GL Declaration public static Regex EscInvokeG3CharacterSetGlSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG3CharacterSetGrSequenceRegex [ESC |] Regular expression for invoking the G3 character set as GR Declaration public static Regex EscInvokeG3CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscMemoryLockSequenceRegex [ESC l] Regular expression for memory lock Declaration public static Regex EscMemoryLockSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscMemoryUnlockSequenceRegex [ESC m] Regular expression for memory unlock Declaration public static Regex EscMemoryUnlockSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscNormalKeypadSequenceRegex [ESC >] Regular expression for normal keypad Declaration public static Regex EscNormalKeypadSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscRestoreCursorSequenceRegex [ESC 8] Regular expression for restoring cursor Declaration public static Regex EscRestoreCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscSaveCursorSequenceRegex [ESC 7] Regular expression for saving cursor Declaration public static Regex EscSaveCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscSelectDefaultCharacterSetSequenceRegex [ESC % @] Regular expression for selecting default character set Declaration public static Regex EscSelectDefaultCharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscSelectUtf8CharacterSetSequenceRegex [ESC % G] Regular expression for selecting UTF-8 character set Declaration public static Regex EscSelectUtf8CharacterSetSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateEsc7BitControls() [ESC SP F] Generates an escape sequence that can be used for the console Declaration public static string GenerateEsc7BitControls() Returns Type Description string | Edit this page View Source GenerateEsc8BitControls() [ESC SP G] Generates an escape sequence that can be used for the console Declaration public static string GenerateEsc8BitControls() Returns Type Description string | Edit this page View Source GenerateEscAnsiConformanceLevel1() [ESC SP L] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel1() Returns Type Description string | Edit this page View Source GenerateEscAnsiConformanceLevel2() [ESC SP M] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel2() Returns Type Description string | Edit this page View Source GenerateEscAnsiConformanceLevel3() [ESC SP N] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel3() Returns Type Description string | Edit this page View Source GenerateEscApplicationKeypad() [ESC =] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscApplicationKeypad() Returns Type Description string | Edit this page View Source GenerateEscBackIndex() [ESC 6] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscBackIndex() Returns Type Description string | Edit this page View Source GenerateEscCursorToLowerLeftCorner() [ESC F] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscCursorToLowerLeftCorner() Returns Type Description string | Edit this page View Source GenerateEscDecDoubleHeightLineBottomHalf() [ESC # 4] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleHeightLineBottomHalf() Returns Type Description string | Edit this page View Source GenerateEscDecDoubleHeightLineTopHalf() [ESC # 3] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleHeightLineTopHalf() Returns Type Description string | Edit this page View Source GenerateEscDecDoubleWidthLine() [ESC # 6] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleWidthLine() Returns Type Description string | Edit this page View Source GenerateEscDecScreenAlignmentTest() [ESC # 8] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecScreenAlignmentTest() Returns Type Description string | Edit this page View Source GenerateEscDecSingleWidthLine() [ESC # 5] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecSingleWidthLine() Returns Type Description string | Edit this page View Source GenerateEscDesignateG0CharacterSet(string) [ESC ( Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG0CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG1CharacterSet(string) [ESC ) Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG1CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG1CharacterSetAlt(string) [ESC - Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG1CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG2CharacterSet(string) [ESC * Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG2CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG2CharacterSetAlt(string) [ESC , Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG2CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG3CharacterSet(string) [ESC + Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG3CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG3CharacterSetAlt(string) [ESC / Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG3CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscForwardIndex() [ESC 9] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscForwardIndex() Returns Type Description string | Edit this page View Source GenerateEscFullReset() [ESC c] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscFullReset() Returns Type Description string | Edit this page View Source GenerateEscInvokeG1CharacterSetGr() [ESC ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG1CharacterSetGr() Returns Type Description string | Edit this page View Source GenerateEscInvokeG2CharacterSetGl() [ESC n] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG2CharacterSetGl() Returns Type Description string | Edit this page View Source GenerateEscInvokeG2CharacterSetGr() [ESC }] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG2CharacterSetGr() Returns Type Description string | Edit this page View Source GenerateEscInvokeG3CharacterSetGl() [ESC o] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG3CharacterSetGl() Returns Type Description string | Edit this page View Source GenerateEscInvokeG3CharacterSetGr() [ESC |] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG3CharacterSetGr() Returns Type Description string | Edit this page View Source GenerateEscMemoryLock() [ESC l] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscMemoryLock() Returns Type Description string | Edit this page View Source GenerateEscMemoryUnlock() [ESC m] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscMemoryUnlock() Returns Type Description string | Edit this page View Source GenerateEscNormalKeypad() [ESC >] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscNormalKeypad() Returns Type Description string | Edit this page View Source GenerateEscRestoreCursor() [ESC 8] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscRestoreCursor() Returns Type Description string | Edit this page View Source GenerateEscSaveCursor() [ESC 7] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSaveCursor() Returns Type Description string | Edit this page View Source GenerateEscSelectDefaultCharacterSet() [ESC % @] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSelectDefaultCharacterSet() Returns Type Description string | Edit this page View Source GenerateEscSelectUtf8CharacterSet() [ESC % G] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSelectUtf8CharacterSet() Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.OscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.OscSequences.html",
    "title": "Class OscSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class OscSequences List of OSC sequences and their regular expressions Inheritance object OscSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class OscSequences Properties | Edit this page View Source OscOperatingSystemCommandAltSequenceRegex [OSC Ps ; Pt ST] Regular expression for operating system command Declaration public static Regex OscOperatingSystemCommandAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source OscOperatingSystemCommandSequenceRegex [OSC Ps ; Pt BEL] Regular expression for operating system command Declaration public static Regex OscOperatingSystemCommandSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateOscOperatingSystemCommand(string) [OSC Ps ; Pt BEL] Generates an escape sequence that can be used for the console Declaration public static string GenerateOscOperatingSystemCommand(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string | Edit this page View Source GenerateOscOperatingSystemCommandAlt(string) [OSC Ps ; Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateOscOperatingSystemCommandAlt(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.PmSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.PmSequences.html",
    "title": "Class PmSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class PmSequences List of PM sequences and their regular expressions Inheritance object PmSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class PmSequences Properties | Edit this page View Source PmPrivacyMessageSequenceRegex [PM Pt ST] Regular expression for privacy message Declaration public static Regex PmPrivacyMessageSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GeneratePmPrivacyMessage(string) [PM Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GeneratePmPrivacyMessage(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.html",
    "title": "Namespace Terminaux.Sequences.Builder.Types | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Sequences.Builder.Types Classes ApcSequences List of APC sequences and their regular expressions C1Sequences List of C1 sequences and their regular expressions CsiSequences List of CSI sequences and their regular expressions DcsSequences List of DCS sequences and their regular expressions EscSequences List of ESC sequences and their regular expressions OscSequences List of OSC sequences and their regular expressions PmSequences List of PM sequences and their regular expressions"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html",
    "title": "Class VtSequenceBasicChars | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceBasicChars VT sequence basic characters for forming VT sequences Inheritance object VtSequenceBasicChars Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public static class VtSequenceBasicChars Fields | Edit this page View Source AlternateCharacterSetChar Gets the alternate character set character Declaration public const char AlternateCharacterSetChar = '\\u000e' Field Value Type Description char | Edit this page View Source BackspaceChar Gets the backspace character Declaration public const char BackspaceChar = '\\b' Field Value Type Description char | Edit this page View Source BellChar Gets the bell character Declaration public const char BellChar = '\\a' Field Value Type Description char | Edit this page View Source CarriageReturnChar Gets the carriage return character Declaration public const char CarriageReturnChar = '\\r' Field Value Type Description char | Edit this page View Source EscapeChar Gets the escape character Declaration public const char EscapeChar = '\\u001b' Field Value Type Description char | Edit this page View Source FormFeedChar Gets the form feed character Declaration public const char FormFeedChar = '\\f' Field Value Type Description char | Edit this page View Source HorizontalTabChar Gets the horizontal tab character Declaration public const char HorizontalTabChar = '\\t' Field Value Type Description char | Edit this page View Source LineFeedChar Gets the line feed character Declaration public const char LineFeedChar = '\\n' Field Value Type Description char | Edit this page View Source ReturnTerminalStatusChar Gets the return terminal status character Declaration public const char ReturnTerminalStatusChar = '\\u0005' Field Value Type Description char | Edit this page View Source SpaceChar Gets the space character Declaration public const char SpaceChar = ' ' Field Value Type Description char | Edit this page View Source StChar Gets the St character Declaration public const char StChar = '\\u009c' Field Value Type Description char | Edit this page View Source StandardCharacterSetChar Gets the standard character set character Declaration public const char StandardCharacterSetChar = '\\u000f' Field Value Type Description char | Edit this page View Source VerticalTabChar Gets the vertical tab character Declaration public const char VerticalTabChar = '\\v' Field Value Type Description char"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html",
    "title": "Class VtSequenceBuilderTools | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceBuilderTools VT sequence builder tools Inheritance object VtSequenceBuilderTools Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public static class VtSequenceBuilderTools Methods | Edit this page View Source BuildVtSequence(VtSequenceSpecificTypes, params object[]) Builds a VT sequence using specific types Declaration public static string BuildVtSequence(VtSequenceSpecificTypes specificType, params object[] arguments) Parameters Type Name Description VtSequenceSpecificTypes specificType object[] arguments Returns Type Description string Exceptions Type Condition Exception | Edit this page View Source DetermineTypeFromSequence(string) Determines the VT sequence type from the given sequence Declaration public static (VtSequenceType, VtSequenceSpecificTypes) DetermineTypeFromSequence(string sequence) Parameters Type Name Description string sequence The sequence to query Returns Type Description (VtSequenceType, VtSequenceSpecificTypes) A tuple of (VtSequenceType, VtSequenceSpecificTypes) containing information about a sequence type and a sequence command type Exceptions Type Condition Exception"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html",
    "title": "Enum VtSequenceSpecificTypes | Terminaux API - Aptivi Internals",
    "keywords": "Enum VtSequenceSpecificTypes Specific VT sequences sorted by type Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public enum VtSequenceSpecificTypes Fields Name Description ApcApplicationProgramCommand Application program command (Kermit) C1ApplicationProgramCommand Application program command C1ControlSequenceIndicator Control sequence indicator C1DeviceControlString Device control string C1EndOfGuardedArea End of guarded area C1Index Index C1NextLine Next line C1OperatingSystemCommand Operating system command C1PrivacyMessage Privacy Message C1ReturnTerminalId Return terminal ID C1ReverseIndex Reverse index C1SingleShiftSelectG2CharacterSet Single shift G2 character set C1SingleShiftSelectG3CharacterSet Single shift G3 character set C1StartOfGuardedArea Start of guarded area C1StartOfString Start of string C1StringTerminator String terminator C1TabSet Tab set CsiChangeAttributesInRectangularArea Change attributes in a rectangular area CsiCharacterAttributes Character attributes (color, bold, formatting, ...) CsiCopyRectangularArea Copy rectangular area CsiCursorBackwardTabulation Cursor backward tabulation CsiCursorCharacterAbsoluteLine Cursor character absolute (line) CsiCursorForwardTabulation Cursor forward tabulation CsiCursorPosition Cursor position CsiCursorPositionAbsolute Cursor position (absolute) CsiCursorPositionRelative Cursor position (relative) CsiDecPrivateModeValues DEC private mode values CsiDeleteChars Delete characters CsiDeleteColumns Delete columns CsiDeleteLine Delete line CsiDeviceStatusReport Device status report CsiDeviceStatusReportDec Device status report (DEC) CsiDisableKeyModifierOptions Disable key modifier options CsiEnableFilterRectangle Enable filter rectangle CsiEraseCharacters Erase characters CsiEraseInDisplay Erase in display CsiEraseInDisplayDecsed Erase in display (DECSED) CsiEraseInLine Erase in line CsiEraseInLineDecsel Erase in line (DECSEL) CsiEraseRectangularArea Erase a rectangular area CsiFillRectangularArea Fill a rectuangular area CsiInitiateHighlightMouseTracking Initiate highlihgt mouse tracking CsiInsertBlankCharacters Insert blank characters CsiInsertColumns Insert columns CsiInsertLine Insert line CsiLeftTopPosition Left top position CsiLinePositionAbsolute Line position (absolute) CsiLinePositionRelative Line position (relative) CsiLoadLeds Load LEDs CsiLocatorReporting Locator reporting CsiMediaCopy Media copy CsiMediaCopyPrivate Media copy (private) CsiMoveCursorDown Move cursor down CsiMoveCursorLeft Move cursor left CsiMoveCursorNextLine Move cursor to next line CsiMoveCursorPreviousLine Move cursor to previous line CsiMoveCursorRight Move cursor right CsiMoveCursorUp Move cursor up CsiPopColorFromStack Pop color from stack CsiPopColorFromStackWithArgs Pop color from stack with arguments CsiPopVideoAttributesFromStack Pop video attributes from stack CsiPopVideoAttributesFromStackXterm Pop video attributes from stack for xterm CsiPushColorToStack Push color to stack CsiPushColorToStackWithArgs Push color to stack with arguments CsiPushVideoAttributesToStack Push video attributes to stack CsiPushVideoAttributesToStackWithArgs Push video attributes to stack with arguments CsiPushVideoAttributesToStackXterm Push video attributes to stack for xterm CsiPushVideoAttributesToStackXtermWithArgs Push video attributes to stack for xterm with arguments CsiQueryKeyModifierOptions Query key modifier options CsiRectangularAreaChecksum Checksum of a rectangular area CsiRepeatGraphicCharacter Repeat graphic character CsiReportGraphicsRenditionRectangularArea Report graphics rendition for a rectangular area CsiReportPaletteStack Report palette stack CsiReportXtermVersion Report xterm version CsiRequestAnsiMode Request ANSI mode CsiRequestDecPrivateMode Request DEC private mode CsiRequestLocatorPosition Request locator position CsiRequestPresentationStateReport Request presentation state report CsiRequestTerminalParameters Request terminal parameters CsiResetKeyModifierOptions Reset key modifier options CsiResetMode Reset mode CsiResetPrivateMode Reset private mode CsiResetTitleModeFeatures Reset title mode features CsiRestoreCursor Restore cursor CsiRestoreDecPrivateModeValues Restore DEC private mode values CsiReverseAttributesInRectangularArea Reverse attributes in rectangular area CsiSaveCursor Save cursor CsiScrollDown Scroll down CsiScrollDownOriginal Scroll down CsiScrollUp Scroll up CsiSelectActiveStatusDisplay Select active status display CsiSelectAttributeChangeExtent Select attribute change extent CsiSelectCharacterProtectionAttribute Select character protection attribute CsiSelectChecksumExtension Select checksum extension CsiSelectColumnsPerPage Select columns per page CsiSelectLocatorEvents Select locator events CsiSelectNumberOfLinesPerScreen Select number of lines per screen CsiSelectStatusLineType Select status line type CsiSelectiveEraseRectangularArea Selectively erase a rectangular area CsiSendDeviceAttributesPrimary Send device attributes (primary) CsiSendDeviceAttributesSecondary Send device attributes (secondary) CsiSendDeviceAttributesTertiary Send device attributes (tertiary) CsiSetConformanceLevel Set confirmance level CsiSetCursorStyle Set cursor style CsiSetGraphicsAttribute Set graphics attribute CsiSetKeyModifierOptions Set key modifier options CsiSetLeftRightMargins Set left right margins CsiSetMarginBellVolume Set margin bell volume CsiSetMode Set mode CsiSetPointerModeXterm Set pointer mode for xterm CsiSetPrivateMode Set private mode CsiSetScrollingRegion Set scrolling region CsiSetShiftEscapeOptions Set shift-escape options CsiSetTitleModeXterm Set title mode for xterm CsiSetWarningBellVolume Set warning bell volume CsiShiftLeftColumns Shift left columns CsiShiftRightColumns Shift right columns CsiSoftTerminalReset Soft terminal reset CsiTabClear Tab clear CsiWindowManipulation Window manipulation DcsRequestResourceValues Request resource values DcsRequestStatusString Request status string DcsRequestTermInfoData Request termino data DcsRestorePresentationStatus Restore presentation status DcsSetTermInfoData Set terminfo data DcsUserDefinedKeys User defined keys Esc7BitControls 7-bit controls Esc8BitControls 8-bit controls EscAnsiConformanceLevel1 ANSI conformance level 1 EscAnsiConformanceLevel2 ANSI conformance level 2 EscAnsiConformanceLevel3 ANSI conformance level 3 EscApplicationKeypad Application keypad EscBackIndex back index EscCursorToLowerLeftCorner Cursor to lower left corner EscDecDoubleHeightLineBottomHalf Double height line bottom half (DEC) EscDecDoubleHeightLineTopHalf Double height line top half (DEC) EscDecDoubleWidthLine Double width line (DEC) EscDecScreenAlignmentTest Screen alignment test (DEC) EscDecSingleWidthLine Single width line (DEC) EscDesignateG0CharacterSet Designate the G0 character set EscDesignateG1CharacterSet Designate the G1 character set EscDesignateG1CharacterSetAlt Designate the G1 character set (alt) EscDesignateG2CharacterSet Designate the G2 character set EscDesignateG2CharacterSetAlt Designate the G2 character set (alt) EscDesignateG3CharacterSet Designate the G3 character set EscDesignateG3CharacterSetAlt Designate the G3 character set (alt) EscForwardIndex Forward index EscFullReset Full reset EscInvokeG1CharacterSetGr Invoke G1 character set in GR mode EscInvokeG2CharacterSetGl Invoke G2 character set in GL mode EscInvokeG2CharacterSetGr Invoke G2 character set in GR mode EscInvokeG3CharacterSetGl Invoke G3 character set in GL mode EscInvokeG3CharacterSetGr Invoke G3 character set in GR mode EscMemoryLock Memory lock EscMemoryUnlock Memory unlock EscNormalKeypad Normal keypad EscRestoreCursor Restore cursor EscSaveCursor Save cursor EscSelectDefaultCharacterSet Select default character set EscSelectUtf8CharacterSet Select UTF8 character set OscOperatingSystemCommand Operating system command sequence OscOperatingSystemCommandAlt Operating system command sequence (alternative) PmPrivacyMessage Privacy message command sequence (Kermit)"
  },
  "api/Terminaux.Sequences.Builder.html": {
    "href": "api/Terminaux.Sequences.Builder.html",
    "title": "Namespace Terminaux.Sequences.Builder | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Sequences.Builder Classes VtSequenceBasicChars VT sequence basic characters for forming VT sequences VtSequenceBuilderTools VT sequence builder tools Enums VtSequenceSpecificTypes Specific VT sequences sorted by type"
  },
  "api/Terminaux.Sequences.Tools.VtSequenceRegexes.html": {
    "href": "api/Terminaux.Sequences.Tools.VtSequenceRegexes.html",
    "title": "Class VtSequenceRegexes | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceRegexes VT sequence regular expressions Inheritance object VtSequenceRegexes Namespace: Terminaux.Sequences.Tools Assembly: Terminaux.dll Syntax public static class VtSequenceRegexes Properties | Edit this page View Source APCSequences APC sequences Declaration public static Regex APCSequences { get; } Property Value Type Description Regex | Edit this page View Source AllVTSequences All VT sequences Declaration public static Regex AllVTSequences { get; } Property Value Type Description Regex | Edit this page View Source C1Sequences C1 sequences Declaration public static Regex C1Sequences { get; } Property Value Type Description Regex | Edit this page View Source CSISequences CSI sequences Declaration public static Regex CSISequences { get; } Property Value Type Description Regex | Edit this page View Source DCSSequences DCS sequences Declaration public static Regex DCSSequences { get; } Property Value Type Description Regex | Edit this page View Source ESCSequences ESC sequences Declaration public static Regex ESCSequences { get; } Property Value Type Description Regex | Edit this page View Source OSCSequences OSC sequences Declaration public static Regex OSCSequences { get; } Property Value Type Description Regex | Edit this page View Source PMSequences PM sequences Declaration public static Regex PMSequences { get; } Property Value Type Description Regex"
  },
  "api/Terminaux.Sequences.Tools.VtSequenceTools.html": {
    "href": "api/Terminaux.Sequences.Tools.VtSequenceTools.html",
    "title": "Class VtSequenceTools | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceTools Provides all the tools for manipulating with the VT sequences Inheritance object VtSequenceTools Namespace: Terminaux.Sequences.Tools Assembly: Terminaux.dll Syntax public static class VtSequenceTools Methods | Edit this page View Source DetermineTypeFromText(string) Determines the VT sequence type from the given text Declaration public static VtSequenceType DetermineTypeFromText(string Text) Parameters Type Name Description string Text Text that contains escape sequences Returns Type Description VtSequenceType The type that contains all the VT escape sequence types found in the Text | Edit this page View Source FilterVTSequences(string, string, VtSequenceType) Filters all of the VT sequences Declaration public static string FilterVTSequences(string Text, string replace = \"\", VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences string replace Replace the sequences with this text VtSequenceType type VT sequence type Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source GetSequenceFilterRegexFromType(VtSequenceType) Gets the sequence filter regular expression from the provided VT sequence type (VtSequenceType) Declaration public static Regex GetSequenceFilterRegexFromType(VtSequenceType type = VtSequenceType.All) Parameters Type Name Description VtSequenceType type VT sequence type Returns Type Description Regex regular expression from the provided VT sequence type | Edit this page View Source IsMatchVTSequences(string, VtSequenceType) Does the string contain all of the VT sequences or a VT sequence of any type? Declaration public static bool IsMatchVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description bool True if any of the provided VT types are found; otherwise, false. | Edit this page View Source IsMatchVTSequencesSpecific(string, VtSequenceType) Does the string contain all of the VT sequences or a VT sequence of any specific type? Declaration public static Dictionary<VtSequenceType, bool> IsMatchVTSequencesSpecific(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description Dictionary<VtSequenceType, bool> A dictionary of each VT sequence type with either true/false for any type test. | Edit this page View Source MatchVTSequences(string, VtSequenceType) Matches all of the VT sequences Declaration public static MatchCollection[] MatchVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description MatchCollection[] The array of MatchCollections that contain the capture and group information for the found VT sequences | Edit this page View Source SplitVTSequences(string, VtSequenceType) Splits all of the VT sequences Declaration public static string[] SplitVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description string[] The group of texts that don't contain the VT sequences"
  },
  "api/Terminaux.Sequences.Tools.VtSequenceType.html": {
    "href": "api/Terminaux.Sequences.Tools.VtSequenceType.html",
    "title": "Enum VtSequenceType | Terminaux API - Aptivi Internals",
    "keywords": "Enum VtSequenceType Denotes the VT sequence type Namespace: Terminaux.Sequences.Tools Assembly: Terminaux.dll Syntax public enum VtSequenceType Fields Name Description All All VT sequences Apc VT sequence is one of the APC sequences C1 VT sequence is one of the C1 sequences Csi VT sequence is one of the CSI sequences Dcs VT sequence is one of the DCS sequences Esc VT sequence is one of the ESC sequences None No VT sequence Osc VT sequence is one of the OSC sequences Pm VT sequence is one of the PM sequences"
  },
  "api/Terminaux.Sequences.Tools.html": {
    "href": "api/Terminaux.Sequences.Tools.html",
    "title": "Namespace Terminaux.Sequences.Tools | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Sequences.Tools Classes VtSequenceRegexes VT sequence regular expressions VtSequenceTools Provides all the tools for manipulating with the VT sequences Enums VtSequenceType Denotes the VT sequence type"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html",
    "title": "Class ListWriterColor | Terminaux API - Aptivi Internals",
    "keywords": "Class ListWriterColor List writer with color support Inheritance object ListWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class ListWriterColor Methods | Edit this page View Source WriteList<T>(IEnumerable<T>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, ConsoleColors, ConsoleColors, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, ConsoleColors, ConsoleColors, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue"
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html",
    "title": "Class TextWriterColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterColor Console text writer with color support Inheritance object TextWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterColor Methods | Edit this page View Source Write() Outputs the new line into the terminal prompt, and sets colors as needed. Declaration public static void Write() | Edit this page View Source Write(string, bool, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, bool Highlight, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not bool Highlight Highlight the text written object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, bool Highlight, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not bool Highlight Highlight the text written Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, bool Highlight, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not bool Highlight Highlight the text written ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, bool Highlight, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not bool Highlight Highlight the text written Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, bool Highlight, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not bool Highlight Highlight the text written ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, bool, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterSlowColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterSlowColor.html",
    "title": "Class TextWriterSlowColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterSlowColor Console text writer with color support (slow write) Inheritance object TextWriterSlowColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterSlowColor Methods | Edit this page View Source WriteSlowlyColor(string, bool, double, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColor(string msg, bool Line, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColor(string, bool, double, ConsoleColors, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColor(string msg, bool Line, double MsEachLetter, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColorBack(string, bool, double, Color, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColorBack(string msg, bool Line, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColorBack(string, bool, double, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColorBack(string msg, bool Line, double MsEachLetter, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyPlain(string, bool, double, params object[]) Outputs the text into the terminal prompt slowly with no color support. Declaration public static void WriteSlowlyPlain(string msg, bool Line, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html",
    "title": "Class TextWriterWhereColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterWhereColor Console text writer with color support (positional write) Inheritance object TextWriterWhereColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereColor Methods | Edit this page View Source WriteWhere(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, int, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, int, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereSlowColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereSlowColor.html",
    "title": "Class TextWriterWhereSlowColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterWhereSlowColor Console text writer with color support (slow positional write) Inheritance object TextWriterWhereSlowColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereSlowColor Methods | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, int, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, int, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWrappedColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWrappedColor.html",
    "title": "Class TextWriterWrappedColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterWrappedColor Console text writer with color support (wrapped) Inheritance object TextWriterWrappedColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWrappedColor Methods | Edit this page View Source WriteWrappedColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColor(string, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColor(string Text, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColorBack(string Text, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedPlain(string, bool, params object[]) Outputs the text into the terminal prompt, wraps the long terminal output if needed. Declaration public static void WriteWrappedPlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.html",
    "title": "Namespace Terminaux.Writer.ConsoleWriters | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.ConsoleWriters Classes ListWriterColor List writer with color support TextWriterColor Console text writer with color support TextWriterSlowColor Console text writer with color support (slow write) TextWriterWhereColor Console text writer with color support (positional write) TextWriterWhereSlowColor Console text writer with color support (slow positional write) TextWriterWrappedColor Console text writer with color support (wrapped)"
  },
  "api/Terminaux.Writer.FancyWriters.BorderColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BorderColor.html",
    "title": "Class BorderColor | Terminaux API - Aptivi Internals",
    "keywords": "Class BorderColor Border writer with color support Inheritance object BorderColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BorderColor Methods | Edit this page View Source WriteBorder(int, int, int, int) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color ConsoleColors BackgroundColor Border background color | Edit this page View Source WriteBorder(int, int, int, int, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(int, int, int, int, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, ConsoleColors, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color from Terminaux's Color ConsoleColors BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorderPlain(int, int, int, int) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorderPlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border"
  },
  "api/Terminaux.Writer.FancyWriters.BoxColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxColor.html",
    "title": "Class BoxColor | Terminaux API - Aptivi Internals",
    "keywords": "Class BoxColor Box writer with color support Inheritance object BoxColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxColor Methods | Edit this page View Source WriteBox(int, int, int, int) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBox(int, int, int, int, Color) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color | Edit this page View Source WriteBox(int, int, int, int, ConsoleColors) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxColor Box color | Edit this page View Source WriteBoxPlain(int, int, int, int) Writes the box plainly Declaration public static void WriteBoxPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames"
  },
  "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html",
    "title": "Class BoxFrameColor | Terminaux API - Aptivi Internals",
    "keywords": "Class BoxFrameColor BoxFrame writer with color support Inheritance object BoxFrameColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxFrameColor Methods | Edit this page View Source WriteBoxFrame(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color ConsoleColors BackgroundColor BoxFrame background color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color | Edit this page View Source WriteBoxFrame(int, int, int, int, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, ConsoleColors, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color from Terminaux's Color ConsoleColors BackgroundColor BoxFrame background color from Terminaux's Color | Edit this page View Source WriteBoxFramePlain(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFramePlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame"
  },
  "api/Terminaux.Writer.FancyWriters.BoxFrameTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxFrameTextColor.html",
    "title": "Class BoxFrameTextColor | Terminaux API - Aptivi Internals",
    "keywords": "Class BoxFrameTextColor BoxFrame writer with color support Inheritance object BoxFrameTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxFrameTextColor Methods | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color ConsoleColors BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Nitrocid KS's Color Color BackgroundColor BoxFrame background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, ConsoleColors, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color from Nitrocid KS's Color ConsoleColors BackgroundColor BoxFrame background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html",
    "title": "Class CenteredFigletTextColor | Terminaux API - Aptivi Internals",
    "keywords": "Class CenteredFigletTextColor Centered Figlet writer Inheritance object CenteredFigletTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredFigletTextColor Methods | Edit this page View Source WriteCenteredFiglet(FigletizeFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFiglet(int, FigletizeFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(FigletizeFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(FigletizeFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(FigletizeFont, string, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(FigletizeFont FigletFont, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(int, FigletizeFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(int top, FigletizeFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(int, FigletizeFont, string, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(int top, FigletizeFont FigletFont, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(FigletizeFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(FigletizeFont, string, ConsoleColors, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(FigletizeFont FigletFont, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(int, FigletizeFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(int top, FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(int, FigletizeFont, string, ConsoleColors, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(int top, FigletizeFont FigletFont, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html",
    "title": "Class CenteredTextColor | Terminaux API - Aptivi Internals",
    "keywords": "Class CenteredTextColor Centered writer Inheritance object CenteredTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredTextColor Methods | Edit this page View Source WriteCentered(int, string, params object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCentered(string, params object[]) Draws a centered text Declaration public static void WriteCentered(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(int, string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(int, string, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(int top, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(string, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(int, string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(int, string, ConsoleColors, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(int top, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(string, ConsoleColors, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletColor.html",
    "title": "Class FigletColor | Terminaux API - Aptivi Internals",
    "keywords": "Class FigletColor Figlet writer Inheritance object FigletColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletColor Methods | Edit this page View Source WriteFigletColor(string, FigletizeFont, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, FigletizeFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColor(string, FigletizeFont, ConsoleColors, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, FigletizeFont FigletFont, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, FigletizeFont, Color, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, FigletizeFont, ConsoleColors, ConsoleColors, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, FigletizeFont FigletFont, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletPlain(string, FigletizeFont, params object[]) Writes the figlet text Declaration public static void WriteFigletPlain(string Text, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html",
    "title": "Class FigletWhereColor | Terminaux API - Aptivi Internals",
    "keywords": "Class FigletWhereColor Figlet writer (positional) Inheritance object FigletWhereColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletWhereColor Methods | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, FigletizeFont, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, FigletizeFont, ConsoleColors, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, FigletizeFont, Color, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, FigletizeFont, ConsoleColors, ConsoleColors, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWherePlain(string, int, int, bool, FigletizeFont, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWherePlain(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.InfoBoxColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.InfoBoxColor.html",
    "title": "Class InfoBoxColor | Terminaux API - Aptivi Internals",
    "keywords": "Class InfoBoxColor Info box writer with color support Inheritance object InfoBoxColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class InfoBoxColor Methods | Edit this page View Source WriteInfoBox(string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color from Terminaux's Color Color BackgroundColor InfoBox background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxColor InfoBox color from Terminaux's Color ConsoleColors BackgroundColor InfoBox background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Terminaux's Color Color BackgroundColor InfoBox background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color from Terminaux's Color ConsoleColors BackgroundColor InfoBox background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Terminaux's Color Color BackgroundColor InfoBox background color from Terminaux's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color from Terminaux's Color ConsoleColors BackgroundColor InfoBox background color from Terminaux's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlain(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, char, char, char, char, char, char, char, char, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlainInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string"
  },
  "api/Terminaux.Writer.FancyWriters.PowerLineColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.PowerLineColor.html",
    "title": "Class PowerLineColor | Terminaux API - Aptivi Internals",
    "keywords": "Class PowerLineColor PowerLine writer Inheritance object PowerLineColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class PowerLineColor Methods | Edit this page View Source WritePowerLine(List<PowerLineSegment>, Color, bool) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments List of PowerLine segments Color EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments | Edit this page View Source WritePowerLine(List<PowerLineSegment>, ConsoleColors, bool) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, ConsoleColors EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments List of PowerLine segments ConsoleColors EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments | Edit this page View Source WritePowerLinePlain(List<PowerLineSegment>, bool) Writes the PowerLine text Declaration public static void WritePowerLinePlain(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write bool Line Write new line after writing the segments"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html",
    "title": "Class ProgressBarColor | Terminaux API - Aptivi Internals",
    "keywords": "Class ProgressBarColor Progress bar writer with color support Inheritance object ProgressBarColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarColor Methods | Edit this page View Source WriteProgress(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage?"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html",
    "title": "Class ProgressBarVerticalColor | Terminaux API - Aptivi Internals",
    "keywords": "Class ProgressBarVerticalColor Vertical progress bar writer with color support Inheritance object ProgressBarVerticalColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarVerticalColor Methods | Edit this page View Source WriteVerticalProgress(double, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, bool) Writes the vertical progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html",
    "title": "Class SeparatorWriterColor | Terminaux API - Aptivi Internals",
    "keywords": "Class SeparatorWriterColor Separator writer Inheritance object SeparatorWriterColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SeparatorWriterColor Methods | Edit this page View Source WriteSeparator(string, bool, params object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparator(string, params object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, bool, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, bool PrintSuffix, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, bool, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, bool PrintSuffix, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, bool, Color, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, bool PrintSuffix, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, bool PrintSuffix, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, Color, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, ConsoleColors, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.TableColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.TableColor.html",
    "title": "Class TableColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TableColor Table writer with color support Inheritance object TableColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class TableColor Methods | Edit this page View Source WriteTable(string[], string[,], int, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Safe threshold from left bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTable(string[], string[,], int, Color, Color, Color, Color, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTable(string[], string[,], int, ConsoleColors, ConsoleColors, ConsoleColors, ConsoleColors, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, ConsoleColors SeparatorForegroundColor, ConsoleColors HeaderForegroundColor, ConsoleColors ValueForegroundColor, ConsoleColors BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset ConsoleColors SeparatorForegroundColor A separator foreground color that will be changed to. ConsoleColors HeaderForegroundColor A header foreground color that will be changed to. ConsoleColors ValueForegroundColor A value foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html",
    "title": "Class BorderTools | Terminaux API - Aptivi Internals",
    "keywords": "Class BorderTools All border tools here Inheritance object BorderTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class BorderTools Properties | Edit this page View Source BorderLeftFrameChar Left frame character Declaration public static char BorderLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerFrameChar Lower frame character Declaration public static char BorderLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerLeftCornerChar Lower left corner character Declaration public static char BorderLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerRightCornerChar Lower right corner character Declaration public static char BorderLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderRightFrameChar Right frame character Declaration public static char BorderRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperFrameChar Upper frame character Declaration public static char BorderUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperLeftCornerChar Upper left corner character Declaration public static char BorderUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperRightCornerChar Upper right corner character Declaration public static char BorderUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html",
    "title": "Class CellOptions | Terminaux API - Aptivi Internals",
    "keywords": "Class CellOptions Table cell options Inheritance object CellOptions Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class CellOptions Constructors | Edit this page View Source CellOptions(int, int) Makes a new instance of the cell options class Declaration public CellOptions(int ColumnNumber, int RowNumber) Parameters Type Name Description int ColumnNumber The column number int RowNumber The row number Properties | Edit this page View Source CellBackgroundColor The custom background cell color Declaration public Color CellBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source CellColor The custom cell color Declaration public Color CellColor { get; set; } Property Value Type Description Color | Edit this page View Source ColoredCell Whether to color the cell Declaration public bool ColoredCell { get; set; } Property Value Type Description bool | Edit this page View Source ColumnIndex The column, or row value, index Declaration public int ColumnIndex { get; } Property Value Type Description int | Edit this page View Source ColumnNumber The column, or row value, number Declaration public int ColumnNumber { get; } Property Value Type Description int | Edit this page View Source RowIndex The row index Declaration public int RowIndex { get; } Property Value Type Description int | Edit this page View Source RowNumber The row number Declaration public int RowNumber { get; } Property Value Type Description int"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html",
    "title": "Class PowerLineSegment | Terminaux API - Aptivi Internals",
    "keywords": "Class PowerLineSegment PowerLine segment Inheritance object PowerLineSegment Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class PowerLineSegment Constructors | Edit this page View Source PowerLineSegment(Color, Color, string, char, char) Installs the segment values to the instance Declaration public PowerLineSegment(Color segmentForeground, Color segmentBackground, string segmentText, char segmentIcon = '\\0', char segmentTransitionIcon = '\\0') Parameters Type Name Description Color segmentForeground Color segmentBackground string segmentText char segmentIcon char segmentTransitionIcon Properties | Edit this page View Source SegmentBackground Background color or next segment transition color of the segment Declaration public Color SegmentBackground { get; } Property Value Type Description Color | Edit this page View Source SegmentForeground Foreground color of the segment Declaration public Color SegmentForeground { get; } Property Value Type Description Color | Edit this page View Source SegmentIcon Segment icon. This should be an iconic character. Declaration public char SegmentIcon { get; } Property Value Type Description char | Edit this page View Source SegmentText Segment text. Usually a status. Declaration public string SegmentText { get; } Property Value Type Description string | Edit this page View Source SegmentTransitionIcon Segment transition icon. This should be an iconic character. Declaration public char SegmentTransitionIcon { get; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html",
    "title": "Class PowerLineTools | Terminaux API - Aptivi Internals",
    "keywords": "Class PowerLineTools PowerLine tools Inheritance object PowerLineTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class PowerLineTools Methods | Edit this page View Source RenderSegments(List<PowerLineSegment>) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Returns Type Description string | Edit this page View Source RenderSegments(List<PowerLineSegment>, Color) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments, Color EndingColor) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Color EndingColor Ending background color for the last segment transition Returns Type Description string"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html",
    "title": "Class ProgressTools | Terminaux API - Aptivi Internals",
    "keywords": "Class ProgressTools Progress tools Inheritance object ProgressTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class ProgressTools Properties | Edit this page View Source ProgressLeftFrameChar Left frame character for the progress bar Declaration public static char ProgressLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerFrameChar Lower frame character for the progress bar Declaration public static char ProgressLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerLeftCornerChar Lower left corner character for the progress bar Declaration public static char ProgressLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerRightCornerChar Lower right corner character for the progress bar Declaration public static char ProgressLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressRightFrameChar Right frame character for the progress bar Declaration public static char ProgressRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperFrameChar Upper frame character for the progress bar Declaration public static char ProgressUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperLeftCornerChar Upper left corner character for the progress bar Declaration public static char ProgressUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperRightCornerChar Upper right corner character for the progress bar Declaration public static char ProgressUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.html",
    "title": "Namespace Terminaux.Writer.FancyWriters.Tools | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.FancyWriters.Tools Classes BorderTools All border tools here CellOptions Table cell options PowerLineSegment PowerLine segment PowerLineTools PowerLine tools ProgressTools Progress tools"
  },
  "api/Terminaux.Writer.FancyWriters.html": {
    "href": "api/Terminaux.Writer.FancyWriters.html",
    "title": "Namespace Terminaux.Writer.FancyWriters | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.FancyWriters Classes BorderColor Border writer with color support BoxColor Box writer with color support BoxFrameColor BoxFrame writer with color support BoxFrameTextColor BoxFrame writer with color support CenteredFigletTextColor Centered Figlet writer CenteredTextColor Centered writer FigletColor Figlet writer FigletWhereColor Figlet writer (positional) InfoBoxColor Info box writer with color support PowerLineColor PowerLine writer ProgressBarColor Progress bar writer with color support ProgressBarVerticalColor Vertical progress bar writer with color support SeparatorWriterColor Separator writer TableColor Table writer with color support"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html",
    "title": "Class LineHandleRangedWriter | Terminaux API - Aptivi Internals",
    "keywords": "Class LineHandleRangedWriter Ranged line handle writer Inheritance object LineHandleRangedWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleRangedWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself as the start. int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html",
    "title": "Class LineHandleWriter | Terminaux API - Aptivi Internals",
    "keywords": "Class LineHandleWriter Line handle writer Inheritance object LineHandleWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string[], int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.html": {
    "href": "api/Terminaux.Writer.MiscWriters.html",
    "title": "Namespace Terminaux.Writer.MiscWriters | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.MiscWriters Classes LineHandleRangedWriter Ranged line handle writer LineHandleWriter Line handle writer"
  },
  "index.html": {
    "href": "index.html",
    "title": "What is Terminaux? | Terminaux API - Aptivi Internals",
    "keywords": "What is Terminaux? Terminaux is a library that allows you to manipulate with the console. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Terminaux, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2022-2023 Aptivi. All rights reserved."
  }
}