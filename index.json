{
  "api/Terminaux.Base.ConsoleChecker.html": {
    "href": "api/Terminaux.Base.ConsoleChecker.html",
    "title": "Class ConsoleChecker | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleChecker Console sanity checking module Inheritance System.Object ConsoleChecker Namespace : Terminaux.Base Assembly : Terminaux.dll Syntax public static class ConsoleChecker : object Properties IsDumb Is the console a dumb console? Declaration public static bool IsDumb { get; } Property Value Type Description System.Boolean Methods CheckConsole() Checks the running console for sanity, like the incompatible consoles, insane console types, etc. The severity of the checks can be described in two categories: Error: We'll throw when we detect that the console is not conforming to the standards. Warning: We'll just issue a warning in yellow text using the plain 16-color writer when we detect that the console is not supporting optional features, like 256-colors. Declaration public static void CheckConsole() IsConsole256Colors() Does the console support 256 colors? Always true on Windows Declaration public static bool IsConsole256Colors() Returns Type Description System.Boolean"
  },
  "api/Terminaux.Base.ConsoleExtensions.html": {
    "href": "api/Terminaux.Base.ConsoleExtensions.html",
    "title": "Class ConsoleExtensions | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleExtensions Additional routines for the console Inheritance System.Object ConsoleExtensions Namespace : Terminaux.Base Assembly : Terminaux.dll Syntax public static class ConsoleExtensions : object Methods ClearKeepPosition() Clears the console buffer, but keeps the current cursor position Declaration public static void ClearKeepPosition() ClearLineToRight() Clears the line to the right Declaration public static void ClearLineToRight() FilterVTSequences(String) Filters the VT sequences that matches the regex Declaration public static string FilterVTSequences(string Text) Parameters Type Name Description System.String Text The text that contains the VT sequences Returns Type Description System.String The text that doesn't contain the VT sequences FormatString(String, Object[]) Formats the string Declaration public static string FormatString(string Format, params object[] Vars) Parameters Type Name Description System.String Format The string to format System.Object [] Vars The variables used Returns Type Description System.String A formatted string if successful, or the unformatted one if failed. GetFilteredPositions(String, Object[]) Get the filtered cursor positions (by filtered means filtered from the VT escape sequences that matches the regex in the routine) Declaration public static (int, int) GetFilteredPositions(string Text, params object[] Vars) Parameters Type Name Description System.String Text The text that contains the VT sequences System.Object [] Vars Variables to be formatted in the text Returns Type Description System.ValueTuple < System.Int32 , System.Int32 > PercentRepeat(Int32, Int32, Int32) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeat(int CurrentNumber, int MaximumNumber, int WidthOffset) Parameters Type Name Description System.Int32 CurrentNumber The current number that is less than or equal to the maximum number. System.Int32 MaximumNumber The maximum number. System.Int32 WidthOffset The console window width offset. It's usually a multiple of 2. Returns Type Description System.Int32 How many times to repeat the character PercentRepeatTargeted(Int32, Int32, Int32) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeatTargeted(int CurrentNumber, int MaximumNumber, int TargetWidth) Parameters Type Name Description System.Int32 CurrentNumber The current number that is less than or equal to the maximum number. System.Int32 MaximumNumber The maximum number. System.Int32 TargetWidth The target width Returns Type Description System.Int32 How many times to repeat the character SetTitle(String) Sets the console title Declaration public static void SetTitle(string Text) Parameters Type Name Description System.String Text The text to be set"
  },
  "api/Terminaux.Base.ConsolePlatform.html": {
    "href": "api/Terminaux.Base.ConsolePlatform.html",
    "title": "Class ConsolePlatform | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsolePlatform Console platform class Inheritance System.Object ConsolePlatform Namespace : Terminaux.Base Assembly : Terminaux.dll Syntax public static class ConsolePlatform : object Properties NewLine New line constant Declaration public static string NewLine { get; } Property Value Type Description System.String Methods GetTerminalEmulator() Polls $TERM_PROGRAM to get terminal emulator Declaration public static string GetTerminalEmulator() Returns Type Description System.String GetTerminalType() Polls $TERM to get terminal type (vt100, dumb, ...) Declaration public static string GetTerminalType() Returns Type Description System.String IsOnMacOS() Is this system a macOS system? Declaration public static bool IsOnMacOS() Returns Type Description System.Boolean IsOnUnix() Is this system a Unix system? True for macOS, too! Declaration public static bool IsOnUnix() Returns Type Description System.Boolean IsOnWindows() Is this system a Windows system? Declaration public static bool IsOnWindows() Returns Type Description System.Boolean IsRunningFromTmux() Is Terminaux running from TMUX? Declaration public static bool IsRunningFromTmux() Returns Type Description System.Boolean"
  },
  "api/Terminaux.Base.ConsoleResizeListener.html": {
    "href": "api/Terminaux.Base.ConsoleResizeListener.html",
    "title": "Class ConsoleResizeListener | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleResizeListener The console resize listener module Inheritance System.Object ConsoleResizeListener Namespace : Terminaux.Base Assembly : Terminaux.dll Syntax public static class ConsoleResizeListener : object Methods WasResized(Boolean) This property checks to see if the console has been resized since the last time it has been called or the listener has started. Declaration public static bool WasResized(bool reset = true) Parameters Type Name Description System.Boolean reset Reset the resized value once this is called Returns Type Description System.Boolean"
  },
  "api/Terminaux.Base.html": {
    "href": "api/Terminaux.Base.html",
    "title": "Namespace Terminaux.Base | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Base Classes ConsoleChecker Console sanity checking module ConsoleExtensions Additional routines for the console ConsolePlatform Console platform class ConsoleResizeListener The console resize listener module"
  },
  "api/Terminaux.Colors.Accessibility.Deficiency.html": {
    "href": "api/Terminaux.Colors.Accessibility.Deficiency.html",
    "title": "Enum Deficiency | Terminaux API - Aptivi Internals",
    "keywords": "Enum Deficiency Color deficiency Namespace : Terminaux.Colors.Accessibility Assembly : Terminaux.dll Syntax public enum Deficiency : int Fields Name Description Deutan Red/green color blindness. It makes green look more red Protan Red/green color blindness. It makes red look more green Tritan Blue/yellow color blindness."
  },
  "api/Terminaux.Colors.Accessibility.html": {
    "href": "api/Terminaux.Colors.Accessibility.html",
    "title": "Namespace Terminaux.Colors.Accessibility | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors.Accessibility Enums Deficiency Color deficiency"
  },
  "api/Terminaux.Colors.Color.html": {
    "href": "api/Terminaux.Colors.Color.html",
    "title": "Class Color | Terminaux API - Aptivi Internals",
    "keywords": "Class Color Color information class Inheritance System.Object Color Namespace : Terminaux.Colors Assembly : Terminaux.dll Syntax public class Color : IEquatable<Color> Constructors Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from Exceptions Type Condition Terminaux.Colors.ColorSeqException Color(Int32) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum) Parameters Type Name Description System.Int32 ColorNum The color number Exceptions Type Condition Terminaux.Colors.ColorSeqException Color(Int32, Int32, Int32) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B) Parameters Type Name Description System.Int32 R The red level System.Int32 G The green level System.Int32 B The blue level Exceptions Type Condition Terminaux.Colors.ColorSeqException Color(String) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier) Parameters Type Name Description System.String ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Exceptions Type Condition Terminaux.Colors.ColorSeqException Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Exceptions Type Condition Terminaux.Colors.ColorSeqException Properties B The blue color value Declaration public int B { get; } Property Value Type Description System.Int32 ColorEnum16 The color value converted to . Not applicable [-1] to true color and 256 colors Declaration public ConsoleColor ColorEnum16 { get; } Property Value Type Description ConsoleColor ColorEnum255 The color value converted to ConsoleColors . Not applicable [-1] to true color Declaration public ConsoleColors ColorEnum255 { get; } Property Value Type Description ConsoleColors Empty Empty color singleton Declaration public static Color Empty { get; } Property Value Type Description Color G The green color value Declaration public int G { get; } Property Value Type Description System.Int32 Hex Hexadecimal representation of the color Declaration public string Hex { get; } Property Value Type Description System.String IsBright Is the color bright? Declaration public bool IsBright { get; } Property Value Type Description System.Boolean IsDark Is the color dark? Declaration public bool IsDark { get; } Property Value Type Description System.Boolean PlainSequence Either 0-255, or <R>;<G>;<B> Declaration public string PlainSequence { get; } Property Value Type Description System.String PlainSequenceEnclosed Either 0-255, or <R>;<G>;<B> enclosed in quotes if necessary Declaration public string PlainSequenceEnclosed { get; } Property Value Type Description System.String R The red color value Declaration public int R { get; } Property Value Type Description System.Int32 Type Color type Declaration public ColorType Type { get; } Property Value Type Description ColorType VTSequenceBackground Parsable VT sequence (Background) Declaration public string VTSequenceBackground { get; } Property Value Type Description System.String VTSequenceForeground Parsable VT sequence (Foreground) Declaration public string VTSequenceForeground { get; } Property Value Type Description System.String Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Equals(Color) Checks to see if this instance of the color is equal to another instance of the color Declaration public bool Equals(Color other) Parameters Type Name Description Color other Another instance of the color to compare with this color Returns Type Description System.Boolean True if both the colors match; otherwise, false. Equals(Color, Color) Checks to see if the first instance of the color is equal to another instance of the color Declaration public bool Equals(Color other, Color other2) Parameters Type Name Description Color other Another instance of the color to compare with another Color other2 Another instance of the color to compare with another Returns Type Description System.Boolean True if both the colors match; otherwise, false. GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Operators Equality(Color, Color) Declaration public static bool operator ==(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description System.Boolean Inequality(Color, Color) Declaration public static bool operator !=(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description System.Boolean"
  },
  "api/Terminaux.Colors.Color255.html": {
    "href": "api/Terminaux.Colors.Color255.html",
    "title": "Class Color255 | Terminaux API - Aptivi Internals",
    "keywords": "Class Color255 255 colors tools Inheritance System.Object Color255 Namespace : Terminaux.Colors Assembly : Terminaux.dll Syntax public static class Color255 : object Fields ColorDataJson The 255 console colors data JSON token to get information about these colors Declaration public static readonly JToken ColorDataJson Field Value Type Description JToken"
  },
  "api/Terminaux.Colors.ColorTools.html": {
    "href": "api/Terminaux.Colors.ColorTools.html",
    "title": "Class ColorTools | Terminaux API - Aptivi Internals",
    "keywords": "Class ColorTools Color tools and management Inheritance System.Object ColorTools Namespace : Terminaux.Colors Assembly : Terminaux.dll Syntax public static class ColorTools : object Properties ColorDeficiency The color deficiency or color blindness type Declaration public static Deficiency ColorDeficiency { get; set; } Property Value Type Description Deficiency ColorDeficiencySeverity The color deficiency severity Declaration public static double ColorDeficiencySeverity { get; set; } Property Value Type Description System.Double EnableColorTransformation Enables the color transformation to adjust to color blindness upon making a new instance of color Declaration public static bool EnableColorTransformation { get; set; } Property Value Type Description System.Boolean EnableSimpleColorTransformation Enables the simple color transformation. This changes formula from Brettel 1997 (value is false) to Vienot 1999 (value is true) Declaration public static bool EnableSimpleColorTransformation { get; set; } Property Value Type Description System.Boolean Methods ConvertFromHexToRGB(String) Converts from the hexadecimal representation of a color to the RGB sequence Declaration public static string ConvertFromHexToRGB(string Hex) Parameters Type Name Description System.String Hex A hexadecimal representation of a color (#AABBCC for example) Returns Type Description System.String <R>;<G>;<B> ConvertFromRGBToHex(Int32, Int32, Int32) Converts from the RGB sequence of a color to the hexadecimal representation Declaration public static string ConvertFromRGBToHex(int R, int G, int B) Parameters Type Name Description System.Int32 R The red level System.Int32 G The green level System.Int32 B The blue level Returns Type Description System.String A hexadecimal representation of a color (#AABBCC for example) ConvertFromRGBToHex(String) Converts from the RGB sequence of a color to the hexadecimal representation Declaration public static string ConvertFromRGBToHex(string RGBSequence) Parameters Type Name Description System.String RGBSequence <R>;<G>;<B> Returns Type Description System.String A hexadecimal representation of a color (#AABBCC for example) CorrectStandardColor(ConsoleColor) Corrects the color map for according to the X11 specification Declaration public static ConsoleColor CorrectStandardColor(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's to correct this color Returns Type Description ConsoleColor Corrected GetGray() Gets the gray color according to the brightness of the background color Declaration public static Color GetGray() Returns Type Description Color GetRandomColor(ColorType, Boolean) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, bool selectBlack = true) Parameters Type Name Description ColorType type Color type to generate System.Boolean selectBlack Whether to select the black color or not Returns Type Description Color A color instance GetRandomColor(ColorType, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, int minColor, int maxColor, int minColorR, int maxColorR, int minColorG, int maxColorG, int minColorB, int maxColorB) Parameters Type Name Description ColorType type Color type to generate System.Int32 minColor The minimum color level System.Int32 maxColor The maximum color level System.Int32 minColorR The minimum red color level System.Int32 maxColorR The maximum red color level System.Int32 minColorG The minimum green color level System.Int32 maxColorG The maximum green color level System.Int32 minColorB The minimum blue color level System.Int32 maxColorB The maximum blue color level Returns Type Description Color A color instance LinearRGBTosRGB(Double) Converts from Linear RGB to sRGB using a linear RGB number Declaration public static int LinearRGBTosRGB(double linear) Parameters Type Name Description System.Double linear Linear RGB number from 0 to 1 Returns Type Description System.Int32 sRGB value from 0 to 255 LoadBack() Loads the background Declaration public static void LoadBack() LoadBack(Color, Boolean) Loads the background Declaration public static void LoadBack(Color ColorSequence, bool Force = false) Parameters Type Name Description Color ColorSequence Color sequence used to load background System.Boolean Force Force set background even if background setting is disabled SetConsoleColor(Color, Boolean, Boolean, Boolean) Sets the console color Declaration public static void SetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance System.Boolean Background Whether to set background or not System.Boolean ForceSet Force set background even if background setting is disabled System.Boolean canSetBackground Can the console set the background? SRGBToLinearRGB(Int32) Converts from sRGB to Linear RGB using a color number Declaration public static double SRGBToLinearRGB(int colorNum) Parameters Type Name Description System.Int32 colorNum Color number from 0 to 255 Returns Type Description System.Double Linear RGB number ranging from 0 to 1 TranslateToStandardColorMap(ConsoleColors) Translates the color from X11's ConsoleColors to .NET's representation, Declaration public static ConsoleColor TranslateToStandardColorMap(ConsoleColors color) Parameters Type Name Description ConsoleColors color X11's ConsoleColors to translate this color to Returns Type Description ConsoleColor .NET's representation of this color, TranslateToX11ColorMap(ConsoleColor) Translates the color from .NET's to X11's representation, ConsoleColors Declaration public static ConsoleColors TranslateToX11ColorMap(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's to translate this color to Returns Type Description ConsoleColors X11's representation of this color, ConsoleColors TryParseColor(Int32) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int ColorNum) Parameters Type Name Description System.Int32 ColorNum The color number Returns Type Description System.Boolean True if successful; False if failed TryParseColor(Int32, Int32, Int32) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int R, int G, int B) Parameters Type Name Description System.Int32 R The red level System.Int32 G The green level System.Int32 B The blue level Returns Type Description System.Boolean True if successful; False if failed TryParseColor(String) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(string ColorSpecifier) Parameters Type Name Description System.String ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, or a VT sequence if using true color as follows: <R>;<G>;<B> Returns Type Description System.Boolean True if successful; False if failed TrySetConsoleColor(Color, Boolean) Sets the console color Declaration public static bool TrySetConsoleColor(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance System.Boolean Background Whether to set background or not Returns Type Description System.Boolean True if successful; False if unsuccessful"
  },
  "api/Terminaux.Colors.ColorType.html": {
    "href": "api/Terminaux.Colors.ColorType.html",
    "title": "Enum ColorType | Terminaux API - Aptivi Internals",
    "keywords": "Enum ColorType Color type enumeration Namespace : Terminaux.Colors Assembly : Terminaux.dll Syntax public enum ColorType : int Fields Name Description _16Color Color is a 4-bit color _255Color Color is a 8-bit color TrueColor Color is a true color"
  },
  "api/Terminaux.Colors.ConsoleColors.html": {
    "href": "api/Terminaux.Colors.ConsoleColors.html",
    "title": "Enum ConsoleColors | Terminaux API - Aptivi Internals",
    "keywords": "Enum ConsoleColors All 255 console colors Namespace : Terminaux.Colors Assembly : Terminaux.dll Syntax public enum ConsoleColors : int Fields Name Description Aquamarine1 Aquamarine1_87ffd7 Aquamarine3 Black Blue Blue1 Blue3 Blue3_d7 BlueViolet CadetBlue_5faf87 CadetBlue_5fafaf Chartreuse1 Chartreuse2 Chartreuse2_87d700 Chartreuse3 Chartreuse3_5fd700 Chartreuse4 CornflowerBlue Cornsilk1 Cyan Cyan1 Cyan2 Cyan3 DarkBlue DarkBlue_000087 DarkCyan DarkCyan_00af87 DarkGoldenrod DarkGray DarkGreen DarkGreen_005f00 DarkKhaki DarkMagenta DarkMagenta_870087 DarkMagenta_8700af DarkOliveGreen1 DarkOliveGreen1_d7ff87 DarkOliveGreen2 DarkOliveGreen3 DarkOliveGreen3_87d75f DarkOliveGreen3_afd75f DarkOrange DarkOrange3 DarkOrange3_d75f00 DarkRed DarkRed_5f0000 DarkRed_870000 DarkSeaGreen DarkSeaGreen1 DarkSeaGreen1_d7ffaf DarkSeaGreen2 DarkSeaGreen2_afffaf DarkSeaGreen3 DarkSeaGreen3_afd787 DarkSeaGreen4 DarkSeaGreen4_5faf5f DarkSlateGray1 DarkSlateGray2 DarkSlateGray3 DarkTurquoise DarkViolet DarkViolet_af00d7 DarkYellow DeepPink1_ff0087 DeepPink1_ff00af DeepPink2 DeepPink3 DeepPink3_d70087 DeepPink4 DeepPink4_87005f DeepPink4_af005f DeepSkyBlue1 DeepSkyBlue2 DeepSkyBlue3_0087af DeepSkyBlue3_0087d7 DeepSkyBlue4_005f5f DeepSkyBlue4_005f87 DeepSkyBlue4_005faf DodgerBlue1 DodgerBlue2 DodgerBlue3 Gold1 Gold3 Gold3_d7af00 Gray Green Green1 Green3_00d700 Green3_af00 Green4 GreenYellow Grey0 Grey100 Grey11 Grey15 Grey19 Grey23 Grey27 Grey3 Grey30 Grey35 Grey37 Grey39 Grey42 Grey46 Grey50 Grey53 Grey54 Grey58 Grey62 Grey63 Grey66 Grey69 Grey7 Grey70 Grey74 Grey78 Grey82 Grey84 Grey85 Grey89 Grey93 Honeydew2 HotPink_ff5faf HotPink_ff5fd7 HotPink2 HotPink3 HotPink3_d75f87 IndianRed IndianRed_d75f5f IndianRed1_ff5f5f IndianRed1_ff5f87 Khaki1 Khaki3 LightCoral LightCyan1 LightCyan3 LightGoldenrod1 LightGoldenrod2 LightGoldenrod2_ffd75f LightGoldenrod2_ffd787 LightGoldenrod3 LightGreen LightGreen_87ff87 LightPink1 LightPink3 LightPink4 LightSalmon1 LightSalmon3 LightSalmon3_d7875f LightSeaGreen LightSkyBlue1 LightSkyBlue3 LightSkyBlue3_87afd7 LightSlateBlue LightSlateGrey LightSteelBlue LightSteelBlue1 LightSteelBlue3 LightYellow3 Magenta Magenta1 Magenta2 Magenta2_ff00d7 Magenta3 Magenta3_d700af Magenta3_d700d7 MediumOrchid MediumOrchid1 MediumOrchid1_ff5fff MediumOrchid3 MediumPurple MediumPurple1 MediumPurple2 MediumPurple2_af87d7 MediumPurple3_875faf MediumPurple3_875fd7 MediumPurple4 MediumSpringGreen MediumTurquoise MediumVioletRed MistyRose1 MistyRose3 NavajoWhite1 NavajoWhite3 NavyBlue Orange1 Orange3 Orange4 Orange4_875f00 OrangeRed1 Orchid Orchid1 Orchid2 PaleGreen1 PaleGreen1_afff87 PaleGreen3 PaleGreen3_87d787 PaleTurquoise1 PaleTurquoise4 PaleVioletRed1 Pink1 Pink3 Plum1 Plum2 Plum3 Plum4 Purple Purple_af00ff Purple3 Purple4_5f0087 Purple4_5f00af Red Red1 Red3 Red3_d70000 RosyBrown RoyalBlue1 Salmon1 SandyBrown SeaGreen1 SeaGreen1_5fffaf SeaGreen2 SeaGreen3 SkyBlue1 SkyBlue2 SkyBlue3 SlateBlue1 SlateBlue3_5f5faf SlateBlue3_5f5fd7 SpringGreen1 SpringGreen2 SpringGreen2_00d787 SpringGreen3_00af5f SpringGreen3_00d75f SpringGreen4 SteelBlue SteelBlue1_5fafff SteelBlue1_5fd7ff SteelBlue3 Tan Thistle1 Thistle3 Turquoise2 Turquoise4 Violet Wheat1 Wheat4 White Yellow Yellow1 Yellow2 Yellow3 Yellow3_d7d700 Yellow4 Yellow4_87af00"
  },
  "api/Terminaux.Colors.ConsoleColorsInfo.html": {
    "href": "api/Terminaux.Colors.ConsoleColorsInfo.html",
    "title": "Class ConsoleColorsInfo | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleColorsInfo Information for the console colors that fit within the 256 colors Inheritance System.Object ConsoleColorsInfo Namespace : Terminaux.Colors Assembly : Terminaux.dll Syntax public class ConsoleColorsInfo : IEquatable<ConsoleColorsInfo> Constructors ConsoleColorsInfo(ConsoleColors) Makes a new instance of 255-color console color information Declaration public ConsoleColorsInfo(ConsoleColors ColorValue) Parameters Type Name Description ConsoleColors ColorValue A 255-color console color Properties B The blue color value Declaration public int B { get; } Property Value Type Description System.Int32 ColorID The color ID Declaration public int ColorID { get; } Property Value Type Description System.Int32 G The green color value Declaration public int G { get; } Property Value Type Description System.Int32 IsBright Is the color bright? Declaration public bool IsBright { get; } Property Value Type Description System.Boolean IsDark Is the color dark? Declaration public bool IsDark { get; } Property Value Type Description System.Boolean R The red color value Declaration public int R { get; } Property Value Type Description System.Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Equals(ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with this instance Returns Type Description System.Boolean True if both ConsoleColorsInfo instances match; otherwise, false. Equals(ConsoleColorsInfo, ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other, ConsoleColorsInfo other2) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with another instance ConsoleColorsInfo other2 Another instance of ConsoleColorsInfo to compare with another instance Returns Type Description System.Boolean True if both ConsoleColorsInfo instances match; otherwise, false. GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Operators Equality(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator ==(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description System.Boolean Inequality(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator !=(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description System.Boolean"
  },
  "api/Terminaux.Colors.html": {
    "href": "api/Terminaux.Colors.html",
    "title": "Namespace Terminaux.Colors | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors Classes Color Color information class Color255 255 colors tools ColorTools Color tools and management ConsoleColorsInfo Information for the console colors that fit within the 256 colors Enums ColorType Color type enumeration ConsoleColors All 255 console colors"
  },
  "api/Terminaux.Colors.Wheel.ColorWheel.html": {
    "href": "api/Terminaux.Colors.Wheel.ColorWheel.html",
    "title": "Class ColorWheel | Terminaux API - Aptivi Internals",
    "keywords": "Class ColorWheel Color wheel class Inheritance System.Object ColorWheel Namespace : Terminaux.Colors.Wheel Assembly : Terminaux.dll Syntax public static class ColorWheel : object Methods InputForColor() Inputs the user for color selection Declaration public static Color InputForColor() Returns Type Description Color The color from the user input InputForColor(Color) Inputs the user for color selection Declaration public static Color InputForColor(Color initialColor) Parameters Type Name Description Color initialColor Initial color Returns Type Description Color The color from the user input"
  },
  "api/Terminaux.Colors.Wheel.html": {
    "href": "api/Terminaux.Colors.Wheel.html",
    "title": "Namespace Terminaux.Colors.Wheel | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Colors.Wheel Classes ColorWheel Color wheel class"
  },
  "api/Terminaux.Reader.Bindings.BaseBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.BaseBinding.html",
    "title": "Class BaseBinding | Terminaux API - Aptivi Internals",
    "keywords": "Class BaseBinding Base key binding Inheritance System.Object BaseBinding Implements IBinding Namespace : Terminaux.Reader.Bindings Assembly : Terminaux.dll Syntax public abstract class BaseBinding : object, IBinding Properties BoundKeys Key to bind to Declaration public virtual ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo [] IsExit Does this binding cause the input to exit? Declaration public virtual bool IsExit { get; } Property Value Type Description System.Boolean Methods BindMatched(ConsoleKeyInfo) Whether the binding matched Declaration public virtual bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Input key Returns Type Description System.Boolean DoAction(TermReaderState) Do the action Declaration public virtual void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader Implements IBinding"
  },
  "api/Terminaux.Reader.Bindings.CustomBindings.html": {
    "href": "api/Terminaux.Reader.Bindings.CustomBindings.html",
    "title": "Class CustomBindings | Terminaux API - Aptivi Internals",
    "keywords": "Class CustomBindings Custom binding handler Inheritance System.Object CustomBindings Namespace : Terminaux.Reader.Bindings Assembly : Terminaux.dll Syntax public static class CustomBindings : object Methods Bind(BaseBinding) Binds the key to the custom bindings list to be executed on press Declaration public static void Bind(BaseBinding binding) Parameters Type Name Description BaseBinding binding Base containing information about key binding Unbind(ConsoleKeyInfo) Unbinds the key from the custom bindings list Declaration public static void Unbind(ConsoleKeyInfo cki) Parameters Type Name Description ConsoleKeyInfo cki Key information to remove the binding"
  },
  "api/Terminaux.Reader.Bindings.html": {
    "href": "api/Terminaux.Reader.Bindings.html",
    "title": "Namespace Terminaux.Reader.Bindings | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader.Bindings Classes BaseBinding Base key binding CustomBindings Custom binding handler Interfaces IBinding Key binding interface"
  },
  "api/Terminaux.Reader.Bindings.IBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.IBinding.html",
    "title": "Interface IBinding | Terminaux API - Aptivi Internals",
    "keywords": "Interface IBinding Key binding interface Namespace : Terminaux.Reader.Bindings Assembly : Terminaux.dll Syntax public interface IBinding Properties BoundKeys Keys to bind to Declaration ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo [] Methods BindMatched(ConsoleKeyInfo) Whether the bind matched Declaration bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Key Returns Type Description System.Boolean DoAction(TermReaderState) Do the action Declaration void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader"
  },
  "api/Terminaux.Reader.html": {
    "href": "api/Terminaux.Reader.html",
    "title": "Namespace Terminaux.Reader | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader Classes TermReader Terminal input reader module TermReaderSettings Settings for the reader TermReaderState State of the reader TermReaderTools Terminal reader tools"
  },
  "api/Terminaux.Reader.Inputs.html": {
    "href": "api/Terminaux.Reader.Inputs.html",
    "title": "Namespace Terminaux.Reader.Inputs | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader.Inputs Classes Input Console input module InputChoiceInfo Choice information for input InputChoiceTools Input choice tools"
  },
  "api/Terminaux.Reader.Inputs.Input.html": {
    "href": "api/Terminaux.Reader.Inputs.Input.html",
    "title": "Class Input | Terminaux API - Aptivi Internals",
    "keywords": "Class Input Console input module Inheritance System.Object Input Namespace : Terminaux.Reader.Inputs Assembly : Terminaux.dll Syntax public static class Input : object Properties CurrentMask Current mask character Declaration public static string CurrentMask { get; } Property Value Type Description System.String Methods DetectKeypress() Detects the keypress Declaration public static ConsoleKeyInfo DetectKeypress() Returns Type Description ConsoleKeyInfo ReadKeyTimeout(Boolean, TimeSpan) Reads the next key from the console input stream with the timeout Declaration public static ConsoleKeyInfo ReadKeyTimeout(bool Intercept, TimeSpan Timeout) Parameters Type Name Description System.Boolean Intercept Whether to intercept an input TimeSpan Timeout Timeout Returns Type Description ConsoleKeyInfo ReadLine() Reads the line from the console Declaration public static string ReadLine() Returns Type Description System.String ReadLine(String) Reads the line from the console Declaration public static string ReadLine(string InputText) Parameters Type Name Description System.String InputText Input text to write Returns Type Description System.String ReadLine(String, String) Reads the line from the console Declaration public static string ReadLine(string InputText, string DefaultValue) Parameters Type Name Description System.String InputText Input text to write System.String DefaultValue Default value Returns Type Description System.String ReadLine(String, String, TermReaderSettings) Reads the line from the console Declaration public static string ReadLine(string InputText, string DefaultValue, TermReaderSettings settings) Parameters Type Name Description System.String InputText Input text to write System.String DefaultValue Default value TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String ReadLine(String, String, TermReaderSettings, Boolean) Reads the line from the console. Declaration public static string ReadLine(string InputText, string DefaultValue, TermReaderSettings settings, bool OneLineWrap = false) Parameters Type Name Description System.String InputText Input text to write System.String DefaultValue Default value TermReaderSettings settings Settigns containing reader-related settings System.Boolean OneLineWrap Whether to wrap the input to one line Returns Type Description System.String ReadLine(String, TermReaderSettings) Reads the line from the console Declaration public static string ReadLine(string InputText, TermReaderSettings settings) Parameters Type Name Description System.String InputText Input text to write TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String ReadLine(TermReaderSettings) Reads the line from the console Declaration public static string ReadLine(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String ReadLineNoInput() Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput() Returns Type Description System.String ReadLineNoInput(Char) Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput(char MaskChar) Parameters Type Name Description System.Char MaskChar Specifies the password mask character Returns Type Description System.String ReadLineWrapped() Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped() Returns Type Description System.String ReadLineWrapped(String) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText) Parameters Type Name Description System.String InputText Input text to write Returns Type Description System.String ReadLineWrapped(String, String) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, string DefaultValue) Parameters Type Name Description System.String InputText Input text to write System.String DefaultValue Default value Returns Type Description System.String ReadLineWrapped(String, String, TermReaderSettings) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, string DefaultValue, TermReaderSettings settings) Parameters Type Name Description System.String InputText Input text to write System.String DefaultValue Default value TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String ReadLineWrapped(String, TermReaderSettings) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, TermReaderSettings settings) Parameters Type Name Description System.String InputText Input text to write TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String ReadLineWrapped(TermReaderSettings) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String"
  },
  "api/Terminaux.Reader.Inputs.InputChoiceInfo.html": {
    "href": "api/Terminaux.Reader.Inputs.InputChoiceInfo.html",
    "title": "Class InputChoiceInfo | Terminaux API - Aptivi Internals",
    "keywords": "Class InputChoiceInfo Choice information for input Inheritance System.Object InputChoiceInfo Namespace : Terminaux.Reader.Inputs Assembly : Terminaux.dll Syntax public class InputChoiceInfo : object Constructors InputChoiceInfo(String, String) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle) Parameters Type Name Description System.String choiceName Choice name System.String choiceTitle Choice title InputChoiceInfo(String, String, String) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription) Parameters Type Name Description System.String choiceName Choice name System.String choiceTitle Choice title System.String choiceDescription Choice description Properties ChoiceDescription Choice description Declaration public string ChoiceDescription { get; } Property Value Type Description System.String ChoiceName Choice name Declaration public string ChoiceName { get; } Property Value Type Description System.String ChoiceTitle Choice title Declaration public string ChoiceTitle { get; } Property Value Type Description System.String"
  },
  "api/Terminaux.Reader.Inputs.InputChoiceTools.html": {
    "href": "api/Terminaux.Reader.Inputs.InputChoiceTools.html",
    "title": "Class InputChoiceTools | Terminaux API - Aptivi Internals",
    "keywords": "Class InputChoiceTools Input choice tools Inheritance System.Object InputChoiceTools Namespace : Terminaux.Reader.Inputs Assembly : Terminaux.dll Syntax public static class InputChoiceTools : object Methods GetInputChoices(String, String[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string AnswersStr, string[] AnswersTitles) Parameters Type Name Description System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List < InputChoiceInfo > GetInputChoices(String[], String[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string[] Answers, string[] AnswersTitles) Parameters Type Name Description System.String [] Answers Set of answers. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List < InputChoiceInfo >"
  },
  "api/Terminaux.Reader.Inputs.Styles.ChoiceOutputType.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.ChoiceOutputType.html",
    "title": "Enum ChoiceOutputType | Terminaux API - Aptivi Internals",
    "keywords": "Enum ChoiceOutputType The enumeration for the choice command output type Namespace : Terminaux.Reader.Inputs.Styles Assembly : Terminaux.dll Syntax public enum ChoiceOutputType : int Fields Name Description Modern The modern way of listing choices OneLine A question and a set of answers in one line Table The table of choices TwoLines A question in a line and a set of answers in another line"
  },
  "api/Terminaux.Reader.Inputs.Styles.ChoiceStyle.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.ChoiceStyle.html",
    "title": "Class ChoiceStyle | Terminaux API - Aptivi Internals",
    "keywords": "Class ChoiceStyle Choice style for input module Inheritance System.Object ChoiceStyle Namespace : Terminaux.Reader.Inputs.Styles Assembly : Terminaux.dll Syntax public static class ChoiceStyle : object Methods PromptChoice(String, List<InputChoiceInfo>, List<InputChoiceInfo>, ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question List < InputChoiceInfo > Answers Set of answers. List < InputChoiceInfo > AltAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, List<InputChoiceInfo>, ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question List < InputChoiceInfo > Answers Set of answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String, String[], String, String[], ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. System.String [] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String, String[], String, ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String, String[], ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String, ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String[], String[], String[], String[], ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String [] AlternateAnswers Set of alternate answers. System.String [] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String[], String[], String[], ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String [] AlternateAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String[], String[], ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String PromptChoice(String, String[], ChoiceOutputType, Boolean) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. ChoiceOutputType OutputType Output type of choices System.Boolean PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description System.String"
  },
  "api/Terminaux.Reader.Inputs.Styles.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.html",
    "title": "Namespace Terminaux.Reader.Inputs.Styles | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Reader.Inputs.Styles Classes ChoiceStyle Choice style for input module InputStyle Input style module SelectionStyle Selection style for input module Enums ChoiceOutputType The enumeration for the choice command output type"
  },
  "api/Terminaux.Reader.Inputs.Styles.InputStyle.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.InputStyle.html",
    "title": "Class InputStyle | Terminaux API - Aptivi Internals",
    "keywords": "Class InputStyle Input style module Inheritance System.Object InputStyle Namespace : Terminaux.Reader.Inputs.Styles Assembly : Terminaux.dll Syntax public static class InputStyle : object Methods PromptInput(String) Prompts user for input (answer the question with your own answers) Declaration public static string PromptInput(string Question) Parameters Type Name Description System.String Question Returns Type Description System.String"
  },
  "api/Terminaux.Reader.Inputs.Styles.SelectionStyle.html": {
    "href": "api/Terminaux.Reader.Inputs.Styles.SelectionStyle.html",
    "title": "Class SelectionStyle | Terminaux API - Aptivi Internals",
    "keywords": "Class SelectionStyle Selection style for input module Inheritance System.Object SelectionStyle Namespace : Terminaux.Reader.Inputs.Styles Assembly : Terminaux.dll Syntax public static class SelectionStyle : object Methods PromptSelection(String, List<InputChoiceInfo>, List<InputChoiceInfo>, Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, bool kiosk = false) Parameters Type Name Description System.String Question A question List < InputChoiceInfo > Answers Set of answers. List < InputChoiceInfo > AltAnswers Set of alternate answers. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, List<InputChoiceInfo>, Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, bool kiosk = false) Parameters Type Name Description System.String Question A question List < InputChoiceInfo > Answers Set of answers. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String, Boolean) Prompts user for selection Declaration public static int PromptSelection(string Question, string AnswersStr, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String, String[], Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String, String[], String, Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String, String[], String, String[], Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String AnswersStr Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. System.String [] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String[], Boolean) Prompts user for selection Declaration public static int PromptSelection(string Question, string[] Answers, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. They can be written like this: Y/N/C. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String[], String[], Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String[], String[], String[], Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String [] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32 PromptSelection(String, String[], String[], String[], String[], Boolean) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description System.String Question A question System.String [] Answers Set of answers. They can be written like this: Y/N/C. System.String [] AnswersTitles Working titles for each answer. It must be the same amount as the answers. System.String [] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. System.String [] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. System.Boolean kiosk Whether to prevent exiting or not Returns Type Description System.Int32"
  },
  "api/Terminaux.Reader.TermReader.html": {
    "href": "api/Terminaux.Reader.TermReader.html",
    "title": "Class TermReader | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReader Terminal input reader module Inheritance System.Object TermReader Namespace : Terminaux.Reader Assembly : Terminaux.dll Syntax public static class TermReader : object Methods Read() Reads the input Declaration public static string Read() Returns Type Description System.String Read(String) Reads the input Declaration public static string Read(string inputPrompt) Parameters Type Name Description System.String inputPrompt The input to be read Returns Type Description System.String Read(String, String, Boolean, Boolean, Boolean) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, bool password = false, bool oneLineWrap = false, bool interruptible = false) Parameters Type Name Description System.String inputPrompt The input to be read System.String defaultValue Default value to use if no input is provided System.Boolean password Whether the password mode is enabled System.Boolean oneLineWrap Whether to warp overflown text as one line System.Boolean interruptible Whether the prompt is interruptible or not Returns Type Description System.String Read(String, String, TermReaderSettings, Boolean, Boolean, Boolean) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, TermReaderSettings settings, bool password = false, bool oneLineWrap = false, bool interruptible = false) Parameters Type Name Description System.String inputPrompt The input to be read System.String defaultValue Default value to use if no input is provided TermReaderSettings settings Settigns containing reader-related settings System.Boolean password Whether the password mode is enabled System.Boolean oneLineWrap Whether to warp overflown text as one line System.Boolean interruptible Whether the prompt is interruptible or not Returns Type Description System.String Read(String, TermReaderSettings) Reads the input Declaration public static string Read(string inputPrompt, TermReaderSettings settings) Parameters Type Name Description System.String inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String Read(TermReaderSettings) Reads the input Declaration public static string Read(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String ReadPassword() Reads the input with password character masking Declaration public static string ReadPassword() Returns Type Description System.String ReadPassword(String) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt) Parameters Type Name Description System.String inputPrompt The input to be read Returns Type Description System.String ReadPassword(String, TermReaderSettings) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, TermReaderSettings settings) Parameters Type Name Description System.String inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String ReadPassword(TermReaderSettings) Reads the input with password character masking Declaration public static string ReadPassword(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description System.String"
  },
  "api/Terminaux.Reader.TermReaderSettings.html": {
    "href": "api/Terminaux.Reader.TermReaderSettings.html",
    "title": "Class TermReaderSettings | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReaderSettings Settings for the reader Inheritance System.Object TermReaderSettings Namespace : Terminaux.Reader Assembly : Terminaux.dll Syntax public class TermReaderSettings : object Constructors TermReaderSettings() Initializes empty settings instance Declaration public TermReaderSettings() Properties HistoryEnabled Input history enabled Declaration public bool HistoryEnabled { get; set; } Property Value Type Description System.Boolean LeftMargin Left margin Declaration public int LeftMargin { get; set; } Property Value Type Description System.Int32 PasswordMaskChar Password mask character Declaration public char PasswordMaskChar { get; set; } Property Value Type Description System.Char RightMargin Right margin Declaration public int RightMargin { get; set; } Property Value Type Description System.Int32 Suggestions Suggestion entries Declaration public Func<string, int, char[], string[]> Suggestions { set; } Property Value Type Description Func < System.String , System.Int32 , System.Char [], System.String []> SuggestionsDelimiters Suggestion delimiters Declaration public char[] SuggestionsDelimiters { set; } Property Value Type Description System.Char [] TreatCtrlCAsInput Treat Ctrl + C as input Declaration public bool TreatCtrlCAsInput { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Terminaux.Reader.TermReaderState.html": {
    "href": "api/Terminaux.Reader.TermReaderState.html",
    "title": "Class TermReaderState | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReaderState State of the reader Inheritance System.Object TermReaderState Namespace : Terminaux.Reader Assembly : Terminaux.dll Syntax public class TermReaderState : object Properties CurrentCursorPosLeft Current cursor left position Declaration public int CurrentCursorPosLeft { get; } Property Value Type Description System.Int32 CurrentCursorPosTop Current cursor top position Declaration public int CurrentCursorPosTop { get; } Property Value Type Description System.Int32 CurrentHistoryPos Current history number Declaration public int CurrentHistoryPos { get; } Property Value Type Description System.Int32 CurrentSuggestionsPos Current suggestion number Declaration public int CurrentSuggestionsPos { get; } Property Value Type Description System.Int32 CurrentText Current text Declaration public StringBuilder CurrentText { get; } Property Value Type Description StringBuilder CurrentTextPos Current text character number Declaration public int CurrentTextPos { get; } Property Value Type Description System.Int32 History History entries Declaration public List<string> History { get; } Property Value Type Description List < System.String > InputPromptLeft Left position of the input prompt Declaration public int InputPromptLeft { get; } Property Value Type Description System.Int32 InputPromptText Input prompt text Declaration public string InputPromptText { get; } Property Value Type Description System.String InputPromptTop Top position of the input prompt Declaration public int InputPromptTop { get; } Property Value Type Description System.Int32 KillBuffer Text to be pasted Declaration public StringBuilder KillBuffer { get; } Property Value Type Description StringBuilder OneLineWrap Whether one line wrapping is enabled Declaration public bool OneLineWrap { get; } Property Value Type Description System.Boolean PasswordMode Password Mode Declaration public bool PasswordMode { get; } Property Value Type Description System.Boolean PressedKey Currently pressed key Declaration public ConsoleKeyInfo PressedKey { get; } Property Value Type Description ConsoleKeyInfo Settings Reader settings (general or overridden) Declaration public TermReaderSettings Settings { get; } Property Value Type Description TermReaderSettings"
  },
  "api/Terminaux.Reader.TermReaderTools.html": {
    "href": "api/Terminaux.Reader.TermReaderTools.html",
    "title": "Class TermReaderTools | Terminaux API - Aptivi Internals",
    "keywords": "Class TermReaderTools Terminal reader tools Inheritance System.Object TermReaderTools Namespace : Terminaux.Reader Assembly : Terminaux.dll Syntax public static class TermReaderTools : object Methods Interrupt() Interrupts the reading process Declaration public static void Interrupt()"
  },
  "api/Terminaux.Sequences.Builder.html": {
    "href": "api/Terminaux.Sequences.Builder.html",
    "title": "Namespace Terminaux.Sequences.Builder | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Sequences.Builder Classes VtSequenceBasicChars VT sequence basic characters for forming VT sequences VtSequenceBuilderTools VT sequence builder tools Enums VtSequenceSpecificTypes Specific VT sequences sorted by type"
  },
  "api/Terminaux.Sequences.Builder.Types.ApcSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.ApcSequences.html",
    "title": "Class ApcSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class ApcSequences List of APC sequences and their regular expressions Inheritance System.Object ApcSequences Namespace : Terminaux.Sequences.Builder.Types Assembly : Terminaux.dll Syntax public static class ApcSequences : object Properties ApcApplicationProgramCommandSequenceRegex [APC Pt ST] Regular expression for application program command Declaration public static string ApcApplicationProgramCommandSequenceRegex { get; } Property Value Type Description System.String Methods GenerateApcApplicationProgramCommand(String) [APC Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateApcApplicationProgramCommand(string proprietaryCommands) Parameters Type Name Description System.String proprietaryCommands Returns Type Description System.String"
  },
  "api/Terminaux.Sequences.Builder.Types.C1Sequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.C1Sequences.html",
    "title": "Class C1Sequences | Terminaux API - Aptivi Internals",
    "keywords": "Class C1Sequences List of C1 sequences and their regular expressions Inheritance System.Object C1Sequences Namespace : Terminaux.Sequences.Builder.Types Assembly : Terminaux.dll Syntax public static class C1Sequences : object Properties C1ApplicationProgramCommandSequenceRegex [ESC _] Regular expression for application program command Declaration public static string C1ApplicationProgramCommandSequenceRegex { get; } Property Value Type Description System.String C1ControlSequenceIndicatorSequenceRegex [ESC [] Regular expression for control sequence introducer Declaration public static string C1ControlSequenceIndicatorSequenceRegex { get; } Property Value Type Description System.String C1DeviceControlStringSequenceRegex [ESC P] Regular expression for device control string Declaration public static string C1DeviceControlStringSequenceRegex { get; } Property Value Type Description System.String C1EndOfGuardedAreaSequenceRegex [ESC W] Regular expression for end of guarded area Declaration public static string C1EndOfGuardedAreaSequenceRegex { get; } Property Value Type Description System.String C1IndexSequenceRegex [ESC D] Regular expression for index Declaration public static string C1IndexSequenceRegex { get; } Property Value Type Description System.String C1NextLineSequenceRegex [ESC E] Regular expression for next line Declaration public static string C1NextLineSequenceRegex { get; } Property Value Type Description System.String C1OperatingSystemCommandSequenceRegex [ESC ]] Regular expression for operating system command Declaration public static string C1OperatingSystemCommandSequenceRegex { get; } Property Value Type Description System.String C1PrivacyMessageSequenceRegex [ESC ^] Regular expression for privacy message Declaration public static string C1PrivacyMessageSequenceRegex { get; } Property Value Type Description System.String C1ReturnTerminalIdSequenceRegex [ESC Z] Regular expression for returning terminal ID Declaration public static string C1ReturnTerminalIdSequenceRegex { get; } Property Value Type Description System.String C1ReverseIndexSequenceRegex [ESC M] Regular expression for reverse index Declaration public static string C1ReverseIndexSequenceRegex { get; } Property Value Type Description System.String C1SingleShiftSelectG2CharacterSetSequenceRegex [ESC N] Regular expression for single shift select of G2 character set Declaration public static string C1SingleShiftSelectG2CharacterSetSequenceRegex { get; } Property Value Type Description System.String C1SingleShiftSelectG3CharacterSetSequenceRegex [ESC O] Regular expression for single shift select of G3 character set Declaration public static string C1SingleShiftSelectG3CharacterSetSequenceRegex { get; } Property Value Type Description System.String C1StartOfGuardedAreaSequenceRegex [ESC V] Regular expression for start of guarded area Declaration public static string C1StartOfGuardedAreaSequenceRegex { get; } Property Value Type Description System.String C1StartOfStringSequenceRegex [ESC X] Regular expression for start of string Declaration public static string C1StartOfStringSequenceRegex { get; } Property Value Type Description System.String C1StringTerminatorSequenceRegex [ESC ] Regular expression for string terminator Declaration public static string C1StringTerminatorSequenceRegex { get; } Property Value Type Description System.String C1TabSetSequenceRegex [ESC H] Regular expression for tab set Declaration public static string C1TabSetSequenceRegex { get; } Property Value Type Description System.String Methods GenerateC1ApplicationProgramCommand() [ESC _] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ApplicationProgramCommand() Returns Type Description System.String GenerateC1ControlSequenceIndicator() [ESC [] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ControlSequenceIndicator() Returns Type Description System.String GenerateC1DeviceControlString() [ESC P] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1DeviceControlString() Returns Type Description System.String GenerateC1EndOfGuardedArea() [ESC W] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1EndOfGuardedArea() Returns Type Description System.String GenerateC1Index() [ESC D] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1Index() Returns Type Description System.String GenerateC1NextLine() [ESC E] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1NextLine() Returns Type Description System.String GenerateC1OperatingSystemCommand() [ESC ]] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1OperatingSystemCommand() Returns Type Description System.String GenerateC1PrivacyMessage() [ESC ^] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1PrivacyMessage() Returns Type Description System.String GenerateC1ReturnTerminalId() [ESC Z] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ReturnTerminalId() Returns Type Description System.String GenerateC1ReverseIndex() [ESC M] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ReverseIndex() Returns Type Description System.String GenerateC1SingleShiftSelectG2CharacterSet() [ESC N] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1SingleShiftSelectG2CharacterSet() Returns Type Description System.String GenerateC1SingleShiftSelectG3CharacterSet() [ESC O] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1SingleShiftSelectG3CharacterSet() Returns Type Description System.String GenerateC1StartOfGuardedArea() [ESC V] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StartOfGuardedArea() Returns Type Description System.String GenerateC1StartOfString() [ESC X] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StartOfString() Returns Type Description System.String GenerateC1StringTerminator() [ESC ] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StringTerminator() Returns Type Description System.String GenerateC1TabSet() [ESC H] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1TabSet() Returns Type Description System.String"
  },
  "api/Terminaux.Sequences.Builder.Types.CsiSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.CsiSequences.html",
    "title": "Class CsiSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class CsiSequences List of CSI sequences and their regular expressions Inheritance System.Object CsiSequences Namespace : Terminaux.Sequences.Builder.Types Assembly : Terminaux.dll Syntax public static class CsiSequences : object Properties CsiChangeAttributesInRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pm $ r] Regular expression for changing attributes in rectangular area Declaration public static string CsiChangeAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description System.String CsiCharacterAttributesSequenceRegex [CSI Pm m] Regular expression for character attributes Declaration public static string CsiCharacterAttributesSequenceRegex { get; } Property Value Type Description System.String CsiCopyRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v] Regular expression for copying rectangular area Declaration public static string CsiCopyRectangularAreaSequenceRegex { get; } Property Value Type Description System.String CsiCursorBackwardTabulationSequenceRegex [CSI Ps Z] Regular expression for cursor backward tabulation Ps tab stops Declaration public static string CsiCursorBackwardTabulationSequenceRegex { get; } Property Value Type Description System.String CsiCursorCharacterAbsoluteLineSequenceRegex [CSI Ps G] Regular expression for cursor character absolute Declaration public static string CsiCursorCharacterAbsoluteLineSequenceRegex { get; } Property Value Type Description System.String CsiCursorForwardTabulationSequenceRegex [CSI Ps I] Regular expression for cursor forward tabulation Ps tab stops Declaration public static string CsiCursorForwardTabulationSequenceRegex { get; } Property Value Type Description System.String CsiCursorPositionAbsoluteSequenceRegex [CSI Ps `] Regular expression for cursor position (absolute) Declaration public static string CsiCursorPositionAbsoluteSequenceRegex { get; } Property Value Type Description System.String CsiCursorPositionRelativeSequenceRegex [CSI Ps a] Regular expression for cursor position (relative) Declaration public static string CsiCursorPositionRelativeSequenceRegex { get; } Property Value Type Description System.String CsiCursorPositionSequenceRegex [CSI Ps ; Ps H] Regular expression for cursor position (Ps column ; Ps row) Declaration public static string CsiCursorPositionSequenceRegex { get; } Property Value Type Description System.String CsiDecPrivateModeValuesSequenceRegex [CSI ? Pm s] Regular expression for saving DEC private mode values Declaration public static string CsiDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description System.String CsiDeleteCharsSequenceRegex [CSI Ps P] Regular expression for deleting Ps characters Declaration public static string CsiDeleteCharsSequenceRegex { get; } Property Value Type Description System.String CsiDeleteColumnsSequenceRegex [CSI Ps ' ~] Regular expression for deleting Ps columns Declaration public static string CsiDeleteColumnsSequenceRegex { get; } Property Value Type Description System.String CsiDeleteLineSequenceRegex [CSI Ps M] Regular expression for deleting Ps lines Declaration public static string CsiDeleteLineSequenceRegex { get; } Property Value Type Description System.String CsiDeviceStatusReportDecSequenceRegex [CSI ? Ps n] Regular expression for device status report (DEC-specific) Declaration public static string CsiDeviceStatusReportDecSequenceRegex { get; } Property Value Type Description System.String CsiDeviceStatusReportSequenceRegex [CSI Ps n] Regular expression for device status report Declaration public static string CsiDeviceStatusReportSequenceRegex { get; } Property Value Type Description System.String CsiDisableKeyModifierOptionsSequenceRegex [CSI > Ps n] Regular expression for disabling key modifier options Declaration public static string CsiDisableKeyModifierOptionsSequenceRegex { get; } Property Value Type Description System.String CsiEnableFilterRectangleSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ' w] Regular expression for enabling filter rectangle Declaration public static string CsiEnableFilterRectangleSequenceRegex { get; } Property Value Type Description System.String CsiEraseCharactersSequenceRegex [CSI Ps X] Regular expression for erasing Ps characters Declaration public static string CsiEraseCharactersSequenceRegex { get; } Property Value Type Description System.String CsiEraseInDisplayDecsedSequenceRegex [CSI ? Ps J] Regular expression for erasing in display (DECSED) Declaration public static string CsiEraseInDisplayDecsedSequenceRegex { get; } Property Value Type Description System.String CsiEraseInDisplaySequenceRegex [CSI Ps J] Regular expression for erasing in display (ED) Declaration public static string CsiEraseInDisplaySequenceRegex { get; } Property Value Type Description System.String CsiEraseInLineDecselSequenceRegex [CSI ? Ps K] Regular expression for erasing in line (DECSEL) Declaration public static string CsiEraseInLineDecselSequenceRegex { get; } Property Value Type Description System.String CsiEraseInLineSequenceRegex [CSI Ps K] Regular expression for erasing in line (EL) Declaration public static string CsiEraseInLineSequenceRegex { get; } Property Value Type Description System.String CsiEraseRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr $ z] Regular expression for erasing rectangular area Declaration public static string CsiEraseRectangularAreaSequenceRegex { get; } Property Value Type Description System.String CsiFillRectangularAreaSequenceRegex [CSI Pc ; Pt ; Pl ; Pb ; Pr $ x] Regular expression for filling rectangular area Declaration public static string CsiFillRectangularAreaSequenceRegex { get; } Property Value Type Description System.String CsiInitiateHighlightMouseTrackingSequenceRegex [CSI Ps ; Ps ; Ps ; Ps ; Ps T] Regular expression for initiating highlight mouse tracking Declaration public static string CsiInitiateHighlightMouseTrackingSequenceRegex { get; } Property Value Type Description System.String CsiInsertBlankCharactersSequenceRegex [CSI Ps @] Regular expression for inserting the blank characters Ps times Declaration public static string CsiInsertBlankCharactersSequenceRegex { get; } Property Value Type Description System.String CsiInsertColumnsSequenceRegex [CSI Ps ' }] Regular expression for inserting Ps columns Declaration public static string CsiInsertColumnsSequenceRegex { get; } Property Value Type Description System.String CsiInsertLineSequenceRegex [CSI Ps L] Regular expression for inserting Ps lines Declaration public static string CsiInsertLineSequenceRegex { get; } Property Value Type Description System.String CsiLeftTopPositionSequenceRegex [CSI Ps ; Ps f] Regular expression for horizontal and vertical position Declaration public static string CsiLeftTopPositionSequenceRegex { get; } Property Value Type Description System.String CsiLinePositionAbsoluteSequenceRegex [CSI Ps d] Regular expression for line position (absolute) Declaration public static string CsiLinePositionAbsoluteSequenceRegex { get; } Property Value Type Description System.String CsiLinePositionRelativeSequenceRegex [CSI Ps e] Regular expression for line position (relative) Declaration public static string CsiLinePositionRelativeSequenceRegex { get; } Property Value Type Description System.String CsiLoadLedsSequenceRegex [CSI Ps q] Regular expression for loading LEDs Declaration public static string CsiLoadLedsSequenceRegex { get; } Property Value Type Description System.String CsiLocatorReportingSequenceRegex [CSI Ps ; Pu ' z] Regular expression for enabling the locator reporting feature Declaration public static string CsiLocatorReportingSequenceRegex { get; } Property Value Type Description System.String CsiMediaCopyPrivateSequenceRegex [CSI ? Ps i] Regular expression for media copy (Private) Declaration public static string CsiMediaCopyPrivateSequenceRegex { get; } Property Value Type Description System.String CsiMediaCopySequenceRegex [CSI Ps i] Regular expression for media copy Declaration public static string CsiMediaCopySequenceRegex { get; } Property Value Type Description System.String CsiMoveCursorDownSequenceRegex [CSI Ps B] Regular expression for moving the cursor down Ps times Declaration public static string CsiMoveCursorDownSequenceRegex { get; } Property Value Type Description System.String CsiMoveCursorLeftSequenceRegex [CSI Ps D] Regular expression for moving the cursor to the left Ps times Declaration public static string CsiMoveCursorLeftSequenceRegex { get; } Property Value Type Description System.String CsiMoveCursorNextLineSequenceRegex [CSI Ps E] Regular expression for moving the cursor to the next line Ps times Declaration public static string CsiMoveCursorNextLineSequenceRegex { get; } Property Value Type Description System.String CsiMoveCursorPreviousLineSequenceRegex [CSI Ps F] Regular expression for moving the cursor to the previous line Ps times Declaration public static string CsiMoveCursorPreviousLineSequenceRegex { get; } Property Value Type Description System.String CsiMoveCursorRightSequenceRegex [CSI Ps C] Regular expression for moving the cursor to the right Ps times Declaration public static string CsiMoveCursorRightSequenceRegex { get; } Property Value Type Description System.String CsiMoveCursorUpSequenceRegex [CSI Ps A] Regular expression for moving the cursor up Ps times Declaration public static string CsiMoveCursorUpSequenceRegex { get; } Property Value Type Description System.String CsiPopColorFromStackSequenceRegex [CSI # Q] Regular expression for popping color from the stack Declaration public static string CsiPopColorFromStackSequenceRegex { get; } Property Value Type Description System.String CsiPopColorFromStackWithArgsSequenceRegex [CSI Pm # Q] Regular expression for popping color from the stack Declaration public static string CsiPopColorFromStackWithArgsSequenceRegex { get; } Property Value Type Description System.String CsiPopVideoAttributesFromStackSequenceRegex [CSI # q] Regular expression for popping video attributes from the stack Declaration public static string CsiPopVideoAttributesFromStackSequenceRegex { get; } Property Value Type Description System.String CsiPopVideoAttributesFromStackXtermSequenceRegex [CSI # }] Regular expression for popping video attributes from the stack for xterm Declaration public static string CsiPopVideoAttributesFromStackXtermSequenceRegex { get; } Property Value Type Description System.String CsiPushColorToStackSequenceRegex [CSI # P] Regular expression for pushing color into the stack Declaration public static string CsiPushColorToStackSequenceRegex { get; } Property Value Type Description System.String CsiPushColorToStackWithArgsSequenceRegex [CSI Pm # P] Regular expression for pushing color into the stack Declaration public static string CsiPushColorToStackWithArgsSequenceRegex { get; } Property Value Type Description System.String CsiPushVideoAttributesToStackSequenceRegex [CSI # p] Regular expression for pushing video attributes into the stack Declaration public static string CsiPushVideoAttributesToStackSequenceRegex { get; } Property Value Type Description System.String CsiPushVideoAttributesToStackWithArgsSequenceRegex [CSI Pm # p] Regular expression for pushing video attributes into the stack Declaration public static string CsiPushVideoAttributesToStackWithArgsSequenceRegex { get; } Property Value Type Description System.String CsiPushVideoAttributesToStackXtermSequenceRegex [CSI # {] Regular expression for pushing video attributes into the stack for xterm Declaration public static string CsiPushVideoAttributesToStackXtermSequenceRegex { get; } Property Value Type Description System.String CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex [CSI Pm # {] Regular expression for pushing video attributes into the stack for xterm Declaration public static string CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex { get; } Property Value Type Description System.String CsiQueryKeyModifierOptionsSequenceRegex [CSI > Pp m] Regular expression for querying key modifier options Declaration public static string CsiQueryKeyModifierOptionsSequenceRegex { get; } Property Value Type Description System.String CsiRectangularAreaChecksumSequenceRegex [CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y] Regular expression for reporting a checksum of a rectangular area Declaration public static string CsiRectangularAreaChecksumSequenceRegex { get; } Property Value Type Description System.String CsiRepeatGraphicCharacterSequenceRegex [CSI Ps b] Regular expression for repeating a graphic character Declaration public static string CsiRepeatGraphicCharacterSequenceRegex { get; } Property Value Type Description System.String CsiReportGraphicsRenditionRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr # |] Regular expression for reporting graphics rendition for a rectangular area Declaration public static string CsiReportGraphicsRenditionRectangularAreaSequenceRegex { get; } Property Value Type Description System.String CsiReportPaletteStackSequenceRegex [CSI # R] Regular expression for reporting the palette stack Declaration public static string CsiReportPaletteStackSequenceRegex { get; } Property Value Type Description System.String CsiReportXtermVersionSequenceRegex [CSI > Ps q] Regular expression for reporting the xterm version Declaration public static string CsiReportXtermVersionSequenceRegex { get; } Property Value Type Description System.String CsiRequestAnsiModeSequenceRegex [CSI Ps $ p] Regular expression for requesting ANSI mode Declaration public static string CsiRequestAnsiModeSequenceRegex { get; } Property Value Type Description System.String CsiRequestDecPrivateModeSequenceRegex [CSI ? Ps $ p] Regular expression for requesting DEC private mode Declaration public static string CsiRequestDecPrivateModeSequenceRegex { get; } Property Value Type Description System.String CsiRequestLocatorPositionSequenceRegex [CSI Ps ' |] Regular expression for requesting locator position Declaration public static string CsiRequestLocatorPositionSequenceRegex { get; } Property Value Type Description System.String CsiRequestPresentationStateReportSequenceRegex [CSI Ps $ w] Regular expression for requesting presentation state report Declaration public static string CsiRequestPresentationStateReportSequenceRegex { get; } Property Value Type Description System.String CsiRequestTerminalParametersSequenceRegex [CSI Ps x] Regular expression for requesting terminal parameters Declaration public static string CsiRequestTerminalParametersSequenceRegex { get; } Property Value Type Description System.String CsiResetKeyModifierOptionsSequenceRegex [CSI > Pp m] Regular expression for resetting key modifier options Declaration public static string CsiResetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description System.String CsiResetModeSequenceRegex [CSI Pm l] Regular expression for reset mode Declaration public static string CsiResetModeSequenceRegex { get; } Property Value Type Description System.String CsiResetPrivateModeSequenceRegex [CSI ? Pm l] Regular expression for reset mode (Private mode reset) Declaration public static string CsiResetPrivateModeSequenceRegex { get; } Property Value Type Description System.String CsiResetTitleModeFeaturesSequenceRegex [CSI > Pm T] Regular expression for resetting title mode features Declaration public static string CsiResetTitleModeFeaturesSequenceRegex { get; } Property Value Type Description System.String CsiRestoreCursorSequenceRegex [CSI u] Regular expression for restoring the cursor Declaration public static string CsiRestoreCursorSequenceRegex { get; } Property Value Type Description System.String CsiRestoreDecPrivateModeValuesSequenceRegex [CSI ? Pm r] Regular expression for restoring DEC private mode values Declaration public static string CsiRestoreDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description System.String CsiReverseAttributesInRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pm $ t] Regular expression for reversing attributes in rectangular area Declaration public static string CsiReverseAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description System.String CsiSaveCursorSequenceRegex [CSI s] Regular expression for saving the cursor Declaration public static string CsiSaveCursorSequenceRegex { get; } Property Value Type Description System.String CsiScrollDownOriginalSequenceRegex [CSI Ps ^] Regular expression for scrolling down Ps lines Declaration public static string CsiScrollDownOriginalSequenceRegex { get; } Property Value Type Description System.String CsiScrollDownSequenceRegex [CSI Ps T] Regular expression for scrolling down Ps lines Declaration public static string CsiScrollDownSequenceRegex { get; } Property Value Type Description System.String CsiScrollUpSequenceRegex [CSI Ps S] Regular expression for scrolling up Ps lines Declaration public static string CsiScrollUpSequenceRegex { get; } Property Value Type Description System.String CsiSelectActiveStatusDisplaySequenceRegex [CSI Ps $ }] Regular expression for selecting active status display Declaration public static string CsiSelectActiveStatusDisplaySequenceRegex { get; } Property Value Type Description System.String CsiSelectAttributeChangeExtentSequenceRegex [CSI Ps * x] Regular expression for selecting attribute change extent Declaration public static string CsiSelectAttributeChangeExtentSequenceRegex { get; } Property Value Type Description System.String CsiSelectCharacterProtectionAttributeSequenceRegex [CSI Ps \" q] Regular expression for selecting character protection attribute Declaration public static string CsiSelectCharacterProtectionAttributeSequenceRegex { get; } Property Value Type Description System.String CsiSelectChecksumExtensionSequenceRegex [CSI Ps # y] Regular expression for selecting checksum extension Declaration public static string CsiSelectChecksumExtensionSequenceRegex { get; } Property Value Type Description System.String CsiSelectColumnsPerPageSequenceRegex [CSI Ps $ |] Regular expression for selecting columns per page Declaration public static string CsiSelectColumnsPerPageSequenceRegex { get; } Property Value Type Description System.String CsiSelectiveEraseRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr $ {] Regular expression for selectively erasing rectangular area Declaration public static string CsiSelectiveEraseRectangularAreaSequenceRegex { get; } Property Value Type Description System.String CsiSelectLocatorEventsSequenceRegex [CSI Pm ' {] Regular expression for selecting locator events Declaration public static string CsiSelectLocatorEventsSequenceRegex { get; } Property Value Type Description System.String CsiSelectNumberOfLinesPerScreenSequenceRegex [CSI Ps * |] Regular expression for selecting number of lines per screen Declaration public static string CsiSelectNumberOfLinesPerScreenSequenceRegex { get; } Property Value Type Description System.String CsiSelectStatusLineTypeSequenceRegex [CSI Ps $ ~] Regular expression for selecting status line type Declaration public static string CsiSelectStatusLineTypeSequenceRegex { get; } Property Value Type Description System.String CsiSendDeviceAttributesPrimarySequenceRegex [CSI Ps c] Regular expression for sending device attributes (Primary DA) Declaration public static string CsiSendDeviceAttributesPrimarySequenceRegex { get; } Property Value Type Description System.String CsiSendDeviceAttributesSecondarySequenceRegex [CSI = Ps c] Regular expression for sending device attributes (Secondary DA) Declaration public static string CsiSendDeviceAttributesSecondarySequenceRegex { get; } Property Value Type Description System.String CsiSendDeviceAttributesTertiarySequenceRegex [CSI > Ps c] Regular expression for sending device attributes (Tertiary DA) Declaration public static string CsiSendDeviceAttributesTertiarySequenceRegex { get; } Property Value Type Description System.String CsiSetConformanceLevelSequenceRegex [CSI Pl ; Pc \" p] Regular expression for setting conformance level Declaration public static string CsiSetConformanceLevelSequenceRegex { get; } Property Value Type Description System.String CsiSetCursorStyleSequenceRegex [CSI Ps SP q] Regular expression for setting cursor style Declaration public static string CsiSetCursorStyleSequenceRegex { get; } Property Value Type Description System.String CsiSetGraphicsAttributeSequenceRegex [CSI ? Pi ; Pa ; Pv S] Regular expression for setting graphics attribute Declaration public static string CsiSetGraphicsAttributeSequenceRegex { get; } Property Value Type Description System.String CsiSetKeyModifierOptionsSequenceRegex [CSI > Pp ; Pv m] Regular expression for setting key modifier options Declaration public static string CsiSetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description System.String CsiSetLeftRightMarginsSequenceRegex [CSI Pl ; Pr s] Regular expression for setting left and right margins Declaration public static string CsiSetLeftRightMarginsSequenceRegex { get; } Property Value Type Description System.String CsiSetMarginBellVolumeSequenceRegex [CSI Ps SP u] Regular expression for setting margin bell volume Declaration public static string CsiSetMarginBellVolumeSequenceRegex { get; } Property Value Type Description System.String CsiSetModeSequenceRegex [CSI Pm h] Regular expression for setting mode Declaration public static string CsiSetModeSequenceRegex { get; } Property Value Type Description System.String CsiSetPointerModeXtermSequenceRegex [CSI > Ps p] Regular expression for setting pointerMode for xterm Declaration public static string CsiSetPointerModeXtermSequenceRegex { get; } Property Value Type Description System.String CsiSetPrivateModeSequenceRegex [CSI ? Pm h] Regular expression for setting mode (Private mode set) Declaration public static string CsiSetPrivateModeSequenceRegex { get; } Property Value Type Description System.String CsiSetScrollingRegionSequenceRegex [CSI Ps ; Ps r] Regular expression for setting scroll region Declaration public static string CsiSetScrollingRegionSequenceRegex { get; } Property Value Type Description System.String CsiSetShiftEscapeOptionsSequenceRegex [CSI > Ps s] Regular expression for setting shift-escape options Declaration public static string CsiSetShiftEscapeOptionsSequenceRegex { get; } Property Value Type Description System.String CsiSetTitleModeXtermSequenceRegex [CSI > Pm t] Regular expression for setting title mode for xterm Declaration public static string CsiSetTitleModeXtermSequenceRegex { get; } Property Value Type Description System.String CsiSetWarningBellVolumeSequenceRegex [CSI Ps SP t] Regular expression for setting warning bell volume Declaration public static string CsiSetWarningBellVolumeSequenceRegex { get; } Property Value Type Description System.String CsiShiftLeftColumnsSequenceRegex [CSI Ps SP @] Regular expression for shifting left Ps columns Declaration public static string CsiShiftLeftColumnsSequenceRegex { get; } Property Value Type Description System.String CsiShiftRightColumnsSequenceRegex [CSI Ps SP A] Regular expression for shifting right Ps columns Declaration public static string CsiShiftRightColumnsSequenceRegex { get; } Property Value Type Description System.String CsiSoftTerminalResetSequenceRegex [CSI ! p] Regular expression for soft terminal reset Declaration public static string CsiSoftTerminalResetSequenceRegex { get; } Property Value Type Description System.String CsiTabClearSequenceRegex [CSI Ps g] Regular expression for tab clear Declaration public static string CsiTabClearSequenceRegex { get; } Property Value Type Description System.String CsiWindowManipulationSequenceRegex [CSI Ps ; Ps ; Ps t] Regular expression for window manipulation Declaration public static string CsiWindowManipulationSequenceRegex { get; } Property Value Type Description System.String Methods GenerateCsiChangeAttributesInRectangularArea(String, Int32, Int32, Int32, Int32) [CSI Pt ; Pl ; Pb ; Pr ; Pm $ r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiChangeAttributesInRectangularArea(string attributes, int pt, int pl, int pb, int pr) Parameters Type Name Description System.String attributes System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiCharacterAttributes(String) [CSI Pm m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCharacterAttributes(string mode) Parameters Type Name Description System.String mode Returns Type Description System.String GenerateCsiCopyRectangularArea(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) [CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCopyRectangularArea(int ptSrc, int plSrc, int pbSrc, int prSrc, int sourcePage, int ptTarget, int plTarget, int targetPage) Parameters Type Name Description System.Int32 ptSrc System.Int32 plSrc System.Int32 pbSrc System.Int32 prSrc System.Int32 sourcePage System.Int32 ptTarget System.Int32 plTarget System.Int32 targetPage Returns Type Description System.String GenerateCsiCursorBackwardTabulation(Int32) [CSI Ps Z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorBackwardTabulation(int stops) Parameters Type Name Description System.Int32 stops Returns Type Description System.String GenerateCsiCursorCharacterAbsoluteLine(Int32) [CSI Ps G] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorCharacterAbsoluteLine(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.String GenerateCsiCursorForwardTabulation(Int32) [CSI Ps I] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorForwardTabulation(int stops) Parameters Type Name Description System.Int32 stops Returns Type Description System.String GenerateCsiCursorPosition(Int32, Int32) [CSI Ps ; Ps H] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPosition(int column, int row) Parameters Type Name Description System.Int32 column System.Int32 row Returns Type Description System.String GenerateCsiCursorPositionAbsolute(Int32) [CSI Ps `] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPositionAbsolute(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.String GenerateCsiCursorPositionRelative(Int32) [CSI Ps a] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPositionRelative(int column) Parameters Type Name Description System.Int32 column Returns Type Description System.String GenerateCsiDecPrivateModeValues(String) [CSI ? Pm s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDecPrivateModeValues(string values) Parameters Type Name Description System.String values Returns Type Description System.String GenerateCsiDeleteChars(Int32) [CSI Ps P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteChars(int chars) Parameters Type Name Description System.Int32 chars Returns Type Description System.String GenerateCsiDeleteColumns(Int32) [CSI Ps ' ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteColumns(int columns) Parameters Type Name Description System.Int32 columns Returns Type Description System.String GenerateCsiDeleteLine(Int32) [CSI Ps M] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteLine(int lines) Parameters Type Name Description System.Int32 lines Returns Type Description System.String GenerateCsiDeviceStatusReport(Int32) [CSI Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeviceStatusReport(int report) Parameters Type Name Description System.Int32 report Returns Type Description System.String GenerateCsiDeviceStatusReportDec(Int32) [CSI ? Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeviceStatusReportDec(int report) Parameters Type Name Description System.Int32 report Returns Type Description System.String GenerateCsiDisableKeyModifierOptions(Int32) [CSI > Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDisableKeyModifierOptions(int report) Parameters Type Name Description System.Int32 report Returns Type Description System.String GenerateCsiEnableFilterRectangle(Int32, Int32, Int32, Int32) [CSI Pt ; Pl ; Pb ; Pr ' w] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEnableFilterRectangle(int pt, int pl, int pb, int pr) Parameters Type Name Description System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiEraseCharacters(Int32) [CSI Ps X] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseCharacters(int chars) Parameters Type Name Description System.Int32 chars Returns Type Description System.String GenerateCsiEraseInDisplay(Int32) [CSI Ps J] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInDisplay(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiEraseInDisplayDecsed(Int32) [CSI ? Ps J] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInDisplayDecsed(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiEraseInLine(Int32) [CSI Ps K] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInLine(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiEraseInLineDecsel(Int32) [CSI ? Ps K] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInLineDecsel(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiEraseRectangularArea(Int32, Int32, Int32, Int32) [CSI Pt ; Pl ; Pb ; Pr $ z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiFillRectangularArea(Char, Int32, Int32, Int32, Int32) [CSI Pc ; Pt ; Pl ; Pb ; Pr $ x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiFillRectangularArea(char character, int pt, int pl, int pb, int pr) Parameters Type Name Description System.Char character System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiInitiateHighlightMouseTracking(Int32, Int32, Int32, Int32, Int32) [CSI Ps ; Ps ; Ps ; Ps ; Ps T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInitiateHighlightMouseTracking(int func, int startX, int startY, int firstRow, int lastRow) Parameters Type Name Description System.Int32 func System.Int32 startX System.Int32 startY System.Int32 firstRow System.Int32 lastRow Returns Type Description System.String GenerateCsiInsertBlankCharacters(Int32) [CSI Ps @] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertBlankCharacters(int blanks) Parameters Type Name Description System.Int32 blanks Returns Type Description System.String GenerateCsiInsertColumns(Int32) [CSI Ps ' }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertColumns(int columns) Parameters Type Name Description System.Int32 columns Returns Type Description System.String GenerateCsiInsertLine(Int32) [CSI Ps L] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertLine(int lines) Parameters Type Name Description System.Int32 lines Returns Type Description System.String GenerateCsiLeftTopPosition(Int32, Int32) [CSI Ps ; Ps f] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLeftTopPosition(int column, int row) Parameters Type Name Description System.Int32 column System.Int32 row Returns Type Description System.String GenerateCsiLinePositionAbsolute(Int32) [CSI Ps d] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLinePositionAbsolute(int row) Parameters Type Name Description System.Int32 row Returns Type Description System.String GenerateCsiLinePositionRelative(Int32) [CSI Ps e] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLinePositionRelative(int row) Parameters Type Name Description System.Int32 row Returns Type Description System.String GenerateCsiLoadLeds(Int32) [CSI Ps q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLoadLeds(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiLocatorReporting(Int32, Int32) [CSI Ps ; Pu ' z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLocatorReporting(int locatorMode, int measurement) Parameters Type Name Description System.Int32 locatorMode System.Int32 measurement Returns Type Description System.String GenerateCsiMediaCopy(Int32) [CSI Ps i] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMediaCopy(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiMediaCopyPrivate(Int32) [CSI ? Ps i] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMediaCopyPrivate(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiMoveCursorDown(Int32) [CSI Ps B] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorDown(int times) Parameters Type Name Description System.Int32 times Returns Type Description System.String GenerateCsiMoveCursorLeft(Int32) [CSI Ps D] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorLeft(int times) Parameters Type Name Description System.Int32 times Returns Type Description System.String GenerateCsiMoveCursorNextLine(Int32) [CSI Ps E] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorNextLine(int times) Parameters Type Name Description System.Int32 times Returns Type Description System.String GenerateCsiMoveCursorPreviousLine(Int32) [CSI Ps F] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorPreviousLine(int times) Parameters Type Name Description System.Int32 times Returns Type Description System.String GenerateCsiMoveCursorRight(Int32) [CSI Ps C] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorRight(int times) Parameters Type Name Description System.Int32 times Returns Type Description System.String GenerateCsiMoveCursorUp(Int32) [CSI Ps A] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorUp(int times) Parameters Type Name Description System.Int32 times Returns Type Description System.String GenerateCsiPopColorFromStack() [CSI # Q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopColorFromStack() Returns Type Description System.String GenerateCsiPopColorFromStack(String) [CSI Pm # Q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopColorFromStack(string parameters) Parameters Type Name Description System.String parameters Returns Type Description System.String GenerateCsiPopVideoAttributesFromStack() [CSI # q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopVideoAttributesFromStack() Returns Type Description System.String GenerateCsiPopVideoAttributesFromStackXterm() [CSI # }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopVideoAttributesFromStackXterm() Returns Type Description System.String GenerateCsiPushColorToStack() [CSI # P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushColorToStack() Returns Type Description System.String GenerateCsiPushColorToStack(String) [CSI Pm # P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushColorToStack(string parameters) Parameters Type Name Description System.String parameters Returns Type Description System.String GenerateCsiPushVideoAttributesToStack() [CSI # p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStack() Returns Type Description System.String GenerateCsiPushVideoAttributesToStack(String) [CSI Pm # p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStack(string args) Parameters Type Name Description System.String args Returns Type Description System.String GenerateCsiPushVideoAttributesToStackXterm() [CSI # {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStackXterm() Returns Type Description System.String GenerateCsiPushVideoAttributesToStackXterm(String) [CSI Pm # {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStackXterm(string parameters) Parameters Type Name Description System.String parameters Returns Type Description System.String GenerateCsiQueryKeyModifierOptions(Int32) [CSI ? Pp m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiQueryKeyModifierOptions(int resource) Parameters Type Name Description System.Int32 resource Returns Type Description System.String GenerateCsiRectangularAreaChecksum(Int32, Int32, Int32, Int32, Int32, Int32) [CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRectangularAreaChecksum(int requestId, int pageNumber, int pt, int pl, int pb, int pr) Parameters Type Name Description System.Int32 requestId System.Int32 pageNumber System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiRepeatGraphicCharacter(Int32) [CSI Ps b] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRepeatGraphicCharacter(int times) Parameters Type Name Description System.Int32 times Returns Type Description System.String GenerateCsiReportGraphicsRenditionRectangularArea(Int32, Int32, Int32, Int32) [CSI Pt ; Pl ; Pb ; Pr # |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportGraphicsRenditionRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiReportPaletteStack() [CSI # R] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportPaletteStack() Returns Type Description System.String GenerateCsiReportXtermVersion(Int32) [CSI > Ps q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportXtermVersion(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiRequestAnsiMode(Int32) [CSI Ps $ p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestAnsiMode(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiRequestDecPrivateMode(Int32) [CSI ? Ps $ p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestDecPrivateMode(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiRequestLocatorPosition(Int32) [CSI Ps ' |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestLocatorPosition(int transmit) Parameters Type Name Description System.Int32 transmit Returns Type Description System.String GenerateCsiRequestPresentationStateReport(Int32) [CSI Ps $ w] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestPresentationStateReport(int state) Parameters Type Name Description System.Int32 state Returns Type Description System.String GenerateCsiRequestTerminalParameters(Int32) [CSI Ps x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestTerminalParameters(int parameter) Parameters Type Name Description System.Int32 parameter Returns Type Description System.String GenerateCsiResetKeyModifierOptions(Int32) [CSI > Pp m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetKeyModifierOptions(int resource) Parameters Type Name Description System.Int32 resource Returns Type Description System.String GenerateCsiResetMode(String) [CSI Pm l] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetMode(string mode) Parameters Type Name Description System.String mode Returns Type Description System.String GenerateCsiResetPrivateMode(String) [CSI ? Pm l] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetPrivateMode(string mode) Parameters Type Name Description System.String mode Returns Type Description System.String GenerateCsiResetTitleModeFeatures(Int32) [CSI > Pm T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetTitleModeFeatures(int resetOptions) Parameters Type Name Description System.Int32 resetOptions Returns Type Description System.String GenerateCsiRestoreCursor() [CSI u] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRestoreCursor() Returns Type Description System.String GenerateCsiRestoreDecPrivateModeValues(String) [CSI ? Pm r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRestoreDecPrivateModeValues(string values) Parameters Type Name Description System.String values Returns Type Description System.String GenerateCsiReverseAttributesInRectangularArea(String, Int32, Int32, Int32, Int32) [CSI Pt ; Pl ; Pb ; Pr ; Pm $ t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReverseAttributesInRectangularArea(string attributes, int pt, int pl, int pb, int pr) Parameters Type Name Description System.String attributes System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiSaveCursor() [CSI s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSaveCursor() Returns Type Description System.String GenerateCsiScrollDown(Int32) [CSI Ps T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollDown(int lines) Parameters Type Name Description System.Int32 lines Returns Type Description System.String GenerateCsiScrollDownOriginal(Int32) [CSI Ps ^] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollDownOriginal(int lines) Parameters Type Name Description System.Int32 lines Returns Type Description System.String GenerateCsiScrollUp(Int32) [CSI Ps S] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollUp(int lines) Parameters Type Name Description System.Int32 lines Returns Type Description System.String GenerateCsiSelectActiveStatusDisplay(Int32) [CSI Ps $ }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectActiveStatusDisplay(int displayMode) Parameters Type Name Description System.Int32 displayMode Returns Type Description System.String GenerateCsiSelectAttributeChangeExtent(Int32) [CSI Ps * x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectAttributeChangeExtent(int extent) Parameters Type Name Description System.Int32 extent Returns Type Description System.String GenerateCsiSelectCharacterProtectionAttribute(Int32) [CSI Ps \" q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectCharacterProtectionAttribute(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiSelectChecksumExtension(Int32) [CSI Ps # y] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectChecksumExtension(int modifier) Parameters Type Name Description System.Int32 modifier Returns Type Description System.String GenerateCsiSelectColumnsPerPage(Int32) [CSI Ps $ |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectColumnsPerPage(int columnMode) Parameters Type Name Description System.Int32 columnMode Returns Type Description System.String GenerateCsiSelectiveEraseRectangularArea(Int32, Int32, Int32, Int32) [CSI Pt ; Pl ; Pb ; Pr $ {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectiveEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description System.Int32 pt System.Int32 pl System.Int32 pb System.Int32 pr Returns Type Description System.String GenerateCsiSelectLocatorEvents(String) [CSI Pm ' {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectLocatorEvents(string parameters) Parameters Type Name Description System.String parameters Returns Type Description System.String GenerateCsiSelectNumberOfLinesPerScreen(Int32) [CSI Ps * |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectNumberOfLinesPerScreen(int lines) Parameters Type Name Description System.Int32 lines Returns Type Description System.String GenerateCsiSelectStatusLineType(Int32) [CSI Ps $ ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectStatusLineType(int type) Parameters Type Name Description System.Int32 type Returns Type Description System.String GenerateCsiSendDeviceAttributesPrimary(Int32) [CSI Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesPrimary(int attributes) Parameters Type Name Description System.Int32 attributes Returns Type Description System.String GenerateCsiSendDeviceAttributesSecondary(Int32) [CSI = Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesSecondary(int attributes) Parameters Type Name Description System.Int32 attributes Returns Type Description System.String GenerateCsiSendDeviceAttributesTertiary(Int32) [CSI > Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesTertiary(int attributes) Parameters Type Name Description System.Int32 attributes Returns Type Description System.String GenerateCsiSetConformanceLevel(Int32, Int32) [CSI Pl ; Pc \" p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetConformanceLevel(int level, int conformance) Parameters Type Name Description System.Int32 level System.Int32 conformance Returns Type Description System.String GenerateCsiSetCursorStyle(Int32) [CSI Ps SP q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetCursorStyle(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiSetGraphicsAttribute(Int32, Int32, String) [CSI ? Pi ; Pa ; Pv S] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetGraphicsAttribute(int itemType, int attributeManager, string geometry) Parameters Type Name Description System.Int32 itemType System.Int32 attributeManager System.String geometry Returns Type Description System.String GenerateCsiSetKeyModifierOptions(Int32, Int32) [CSI > Pp ; Pv m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetKeyModifierOptions(int resource, int modify) Parameters Type Name Description System.Int32 resource System.Int32 modify Returns Type Description System.String GenerateCsiSetLeftRightMargins(Int32, Int32) [CSI Pl ; Pr s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetLeftRightMargins(int left, int right) Parameters Type Name Description System.Int32 left System.Int32 right Returns Type Description System.String GenerateCsiSetMarginBellVolume(Int32) [CSI Ps SP u] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetMarginBellVolume(int level) Parameters Type Name Description System.Int32 level Returns Type Description System.String GenerateCsiSetMode(String) [CSI Pm h] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetMode(string mode) Parameters Type Name Description System.String mode Returns Type Description System.String GenerateCsiSetPointerModeXterm(Int32) [CSI > Ps p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetPointerModeXterm(int hideMode) Parameters Type Name Description System.Int32 hideMode Returns Type Description System.String GenerateCsiSetPrivateMode(String) [CSI ? Pm h] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetPrivateMode(string mode) Parameters Type Name Description System.String mode Returns Type Description System.String GenerateCsiSetScrollingRegion(Int32, Int32) [CSI Ps ; Ps r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetScrollingRegion(int top, int bottom) Parameters Type Name Description System.Int32 top System.Int32 bottom Returns Type Description System.String GenerateCsiSetShiftEscapeOptions(Int32) [CSI > Ps s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetShiftEscapeOptions(int option) Parameters Type Name Description System.Int32 option Returns Type Description System.String GenerateCsiSetTitleModeXterm(String) [CSI > Pm t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetTitleModeXterm(string modes) Parameters Type Name Description System.String modes Returns Type Description System.String GenerateCsiSetWarningBellVolume(Int32) [CSI Ps SP t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetWarningBellVolume(int level) Parameters Type Name Description System.Int32 level Returns Type Description System.String GenerateCsiShiftLeftColumns(Int32) [CSI Ps SP @] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiShiftLeftColumns(int columns) Parameters Type Name Description System.Int32 columns Returns Type Description System.String GenerateCsiShiftRightColumns(Int32) [CSI Ps SP A] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiShiftRightColumns(int columns) Parameters Type Name Description System.Int32 columns Returns Type Description System.String GenerateCsiSoftTerminalReset() [CSI ! p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSoftTerminalReset() Returns Type Description System.String GenerateCsiTabClear(Int32) [CSI Ps g] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiTabClear(int mode) Parameters Type Name Description System.Int32 mode Returns Type Description System.String GenerateCsiWindowManipulation(Int32, Int32, Int32) [CSI Ps ; Ps ; Ps ; t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiWindowManipulation(int windowAction, int windowAction2, int windowAction3) Parameters Type Name Description System.Int32 windowAction System.Int32 windowAction2 System.Int32 windowAction3 Returns Type Description System.String"
  },
  "api/Terminaux.Sequences.Builder.Types.DcsSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.DcsSequences.html",
    "title": "Class DcsSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class DcsSequences List of DCS sequences and their regular expressions Inheritance System.Object DcsSequences Namespace : Terminaux.Sequences.Builder.Types Assembly : Terminaux.dll Syntax public static class DcsSequences : object Properties DcsRequestResourceValuesSequenceRegex [DCS + Q Pt ST] Regular expression for requesting resource values for xterm Declaration public static string DcsRequestResourceValuesSequenceRegex { get; } Property Value Type Description System.String DcsRequestStatusStringSequenceRegex [DCS $ q Pt ST] Regular expression for requesting status string Declaration public static string DcsRequestStatusStringSequenceRegex { get; } Property Value Type Description System.String DcsRequestTermInfoDataSequenceRegex [DCS + q Pt ST] Regular expression for requesting terminfo data for xterm Declaration public static string DcsRequestTermInfoDataSequenceRegex { get; } Property Value Type Description System.String DcsRestorePresentationStatusSequenceRegex [DCS Ps $ t Pt ST] Regular expression for restoring presentation status Declaration public static string DcsRestorePresentationStatusSequenceRegex { get; } Property Value Type Description System.String DcsSetTermInfoDataSequenceRegex [DCS + p Pt ST] Regular expression for setting terminfo data for xterm Declaration public static string DcsSetTermInfoDataSequenceRegex { get; } Property Value Type Description System.String DcsUserDefinedKeysSequenceRegex [DCS Ps ; Ps | Pt ST] Regular expression for user defined keys Declaration public static string DcsUserDefinedKeysSequenceRegex { get; } Property Value Type Description System.String Methods GenerateDcsRequestResourceValues(String) [DCS + Q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestResourceValues(string xtermResourceNames) Parameters Type Name Description System.String xtermResourceNames Returns Type Description System.String GenerateDcsRequestStatusString(String) [DCS $ q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestStatusString(string status) Parameters Type Name Description System.String status Returns Type Description System.String GenerateDcsRequestTermInfoData(String) [DCS + q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestTermInfoData(string termName) Parameters Type Name Description System.String termName Returns Type Description System.String GenerateDcsRestorePresentationStatus(Int32, String) [DCS Ps $ t Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRestorePresentationStatus(int controlConvert, string status) Parameters Type Name Description System.Int32 controlConvert System.String status Returns Type Description System.String GenerateDcsSetTermInfoData(String) [DCS + p Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsSetTermInfoData(string termName) Parameters Type Name Description System.String termName Returns Type Description System.String GenerateDcsUserDefinedKeys(Int32, Int32, String) [DCS Ps ; Ps | Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsUserDefinedKeys(int clearUdkDefinitions, int dontLockKeys, string keybindings) Parameters Type Name Description System.Int32 clearUdkDefinitions System.Int32 dontLockKeys System.String keybindings Returns Type Description System.String"
  },
  "api/Terminaux.Sequences.Builder.Types.EscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.EscSequences.html",
    "title": "Class EscSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class EscSequences List of ESC sequences and their regular expressions Inheritance System.Object EscSequences Namespace : Terminaux.Sequences.Builder.Types Assembly : Terminaux.dll Syntax public static class EscSequences : object Properties Esc7BitControlsSequenceRegex [ESC SP F] Regular expression for 7-bit controls Declaration public static string Esc7BitControlsSequenceRegex { get; } Property Value Type Description System.String Esc8BitControlsSequenceRegex [ESC SP G] Regular expression for 8-bit controls Declaration public static string Esc8BitControlsSequenceRegex { get; } Property Value Type Description System.String EscAnsiConformanceLevel1SequenceRegex [ESC SP L] Regular expression for setting ANSI conformance level 1 Declaration public static string EscAnsiConformanceLevel1SequenceRegex { get; } Property Value Type Description System.String EscAnsiConformanceLevel2SequenceRegex [ESC SP M] Regular expression for setting ANSI conformance level 2 Declaration public static string EscAnsiConformanceLevel2SequenceRegex { get; } Property Value Type Description System.String EscAnsiConformanceLevel3SequenceRegex [ESC SP N] Regular expression for setting ANSI conformance level 3 Declaration public static string EscAnsiConformanceLevel3SequenceRegex { get; } Property Value Type Description System.String EscApplicationKeypadSequenceRegex [ESC =] Regular expression for application keypad Declaration public static string EscApplicationKeypadSequenceRegex { get; } Property Value Type Description System.String EscBackIndexSequenceRegex [ESC 6] Regular expression for back index Declaration public static string EscBackIndexSequenceRegex { get; } Property Value Type Description System.String EscCursorToLowerLeftCornerSequenceRegex [ESC F] Regular expression for cursor to lower left corner Declaration public static string EscCursorToLowerLeftCornerSequenceRegex { get; } Property Value Type Description System.String EscDecDoubleHeightLineBottomHalfSequenceRegex [ESC # 4] Regular expression for DEC double-height line bottom half Declaration public static string EscDecDoubleHeightLineBottomHalfSequenceRegex { get; } Property Value Type Description System.String EscDecDoubleHeightLineTopHalfSequenceRegex [ESC # 3] Regular expression for DEC double-height line top half Declaration public static string EscDecDoubleHeightLineTopHalfSequenceRegex { get; } Property Value Type Description System.String EscDecDoubleWidthLineSequenceRegex [ESC # 6] Regular expression for DEC double-width line Declaration public static string EscDecDoubleWidthLineSequenceRegex { get; } Property Value Type Description System.String EscDecScreenAlignmentTestSequenceRegex [ESC # 8] Regular expression for DEC screen alignment test Declaration public static string EscDecScreenAlignmentTestSequenceRegex { get; } Property Value Type Description System.String EscDecSingleWidthLineSequenceRegex [ESC # 5] Regular expression for DEC single-width line Declaration public static string EscDecSingleWidthLineSequenceRegex { get; } Property Value Type Description System.String EscDesignateG0CharacterSetSequenceRegex [ESC ( Pc] Regular expression for designating the G0 character set Declaration public static string EscDesignateG0CharacterSetSequenceRegex { get; } Property Value Type Description System.String EscDesignateG1CharacterSetAltSequenceRegex [ESC - Pc] Regular expression for designating the G1 character set Declaration public static string EscDesignateG1CharacterSetAltSequenceRegex { get; } Property Value Type Description System.String EscDesignateG1CharacterSetSequenceRegex [ESC ) Pc] Regular expression for designating the G1 character set Declaration public static string EscDesignateG1CharacterSetSequenceRegex { get; } Property Value Type Description System.String EscDesignateG2CharacterSetAltSequenceRegex [ESC , Pc] Regular expression for designating the G2 character set Declaration public static string EscDesignateG2CharacterSetAltSequenceRegex { get; } Property Value Type Description System.String EscDesignateG2CharacterSetSequenceRegex [ESC * Pc] Regular expression for designating the G2 character set Declaration public static string EscDesignateG2CharacterSetSequenceRegex { get; } Property Value Type Description System.String EscDesignateG3CharacterSetAltSequenceRegex [ESC / Pc] Regular expression for designating the G3 character set Declaration public static string EscDesignateG3CharacterSetAltSequenceRegex { get; } Property Value Type Description System.String EscDesignateG3CharacterSetSequenceRegex [ESC + Pc] Regular expression for designating the G3 character set Declaration public static string EscDesignateG3CharacterSetSequenceRegex { get; } Property Value Type Description System.String EscForwardIndexSequenceRegex [ESC 9] Regular expression for forward index Declaration public static string EscForwardIndexSequenceRegex { get; } Property Value Type Description System.String EscFullResetSequenceRegex [ESC c] Regular expression for full reset Declaration public static string EscFullResetSequenceRegex { get; } Property Value Type Description System.String EscInvokeG1CharacterSetGrSequenceRegex [ESC ~] Regular expression for invoking the G1 character set as GR Declaration public static string EscInvokeG1CharacterSetGrSequenceRegex { get; } Property Value Type Description System.String EscInvokeG2CharacterSetGlSequenceRegex [ESC n] Regular expression for invoking the G2 character set as GL Declaration public static string EscInvokeG2CharacterSetGlSequenceRegex { get; } Property Value Type Description System.String EscInvokeG2CharacterSetGrSequenceRegex [ESC }] Regular expression for invoking the G2 character set as GR Declaration public static string EscInvokeG2CharacterSetGrSequenceRegex { get; } Property Value Type Description System.String EscInvokeG3CharacterSetGlSequenceRegex [ESC o] Regular expression for invoking the G3 character set as GL Declaration public static string EscInvokeG3CharacterSetGlSequenceRegex { get; } Property Value Type Description System.String EscInvokeG3CharacterSetGrSequenceRegex [ESC |] Regular expression for invoking the G3 character set as GR Declaration public static string EscInvokeG3CharacterSetGrSequenceRegex { get; } Property Value Type Description System.String EscMemoryLockSequenceRegex [ESC l] Regular expression for memory lock Declaration public static string EscMemoryLockSequenceRegex { get; } Property Value Type Description System.String EscMemoryUnlockSequenceRegex [ESC m] Regular expression for memory unlock Declaration public static string EscMemoryUnlockSequenceRegex { get; } Property Value Type Description System.String EscNormalKeypadSequenceRegex [ESC >] Regular expression for normal keypad Declaration public static string EscNormalKeypadSequenceRegex { get; } Property Value Type Description System.String EscRestoreCursorSequenceRegex [ESC 8] Regular expression for restoring cursor Declaration public static string EscRestoreCursorSequenceRegex { get; } Property Value Type Description System.String EscSaveCursorSequenceRegex [ESC 7] Regular expression for saving cursor Declaration public static string EscSaveCursorSequenceRegex { get; } Property Value Type Description System.String EscSelectDefaultCharacterSetSequenceRegex [ESC % @] Regular expression for selecting default character set Declaration public static string EscSelectDefaultCharacterSetSequenceRegex { get; } Property Value Type Description System.String EscSelectUtf8CharacterSetSequenceRegex [ESC % G] Regular expression for selecting UTF-8 character set Declaration public static string EscSelectUtf8CharacterSetSequenceRegex { get; } Property Value Type Description System.String Methods GenerateEsc7BitControls() [ESC SP F] Generates an escape sequence that can be used for the console Declaration public static string GenerateEsc7BitControls() Returns Type Description System.String GenerateEsc8BitControls() [ESC SP G] Generates an escape sequence that can be used for the console Declaration public static string GenerateEsc8BitControls() Returns Type Description System.String GenerateEscAnsiConformanceLevel1() [ESC SP L] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel1() Returns Type Description System.String GenerateEscAnsiConformanceLevel2() [ESC SP M] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel2() Returns Type Description System.String GenerateEscAnsiConformanceLevel3() [ESC SP N] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel3() Returns Type Description System.String GenerateEscApplicationKeypad() [ESC =] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscApplicationKeypad() Returns Type Description System.String GenerateEscBackIndex() [ESC 6] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscBackIndex() Returns Type Description System.String GenerateEscCursorToLowerLeftCorner() [ESC F] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscCursorToLowerLeftCorner() Returns Type Description System.String GenerateEscDecDoubleHeightLineBottomHalf() [ESC # 4] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleHeightLineBottomHalf() Returns Type Description System.String GenerateEscDecDoubleHeightLineTopHalf() [ESC # 3] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleHeightLineTopHalf() Returns Type Description System.String GenerateEscDecDoubleWidthLine() [ESC # 6] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleWidthLine() Returns Type Description System.String GenerateEscDecScreenAlignmentTest() [ESC # 8] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecScreenAlignmentTest() Returns Type Description System.String GenerateEscDecSingleWidthLine() [ESC # 5] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecSingleWidthLine() Returns Type Description System.String GenerateEscDesignateG0CharacterSet(String) [ESC ( Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG0CharacterSet(string charSet) Parameters Type Name Description System.String charSet Returns Type Description System.String GenerateEscDesignateG1CharacterSet(String) [ESC ) Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG1CharacterSet(string charSet) Parameters Type Name Description System.String charSet Returns Type Description System.String GenerateEscDesignateG1CharacterSetAlt(String) [ESC - Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG1CharacterSetAlt(string charSet) Parameters Type Name Description System.String charSet Returns Type Description System.String GenerateEscDesignateG2CharacterSet(String) [ESC * Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG2CharacterSet(string charSet) Parameters Type Name Description System.String charSet Returns Type Description System.String GenerateEscDesignateG2CharacterSetAlt(String) [ESC , Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG2CharacterSetAlt(string charSet) Parameters Type Name Description System.String charSet Returns Type Description System.String GenerateEscDesignateG3CharacterSet(String) [ESC + Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG3CharacterSet(string charSet) Parameters Type Name Description System.String charSet Returns Type Description System.String GenerateEscDesignateG3CharacterSetAlt(String) [ESC / Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG3CharacterSetAlt(string charSet) Parameters Type Name Description System.String charSet Returns Type Description System.String GenerateEscForwardIndex() [ESC 9] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscForwardIndex() Returns Type Description System.String GenerateEscFullReset() [ESC c] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscFullReset() Returns Type Description System.String GenerateEscInvokeG1CharacterSetGr() [ESC ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG1CharacterSetGr() Returns Type Description System.String GenerateEscInvokeG2CharacterSetGl() [ESC n] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG2CharacterSetGl() Returns Type Description System.String GenerateEscInvokeG2CharacterSetGr() [ESC }] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG2CharacterSetGr() Returns Type Description System.String GenerateEscInvokeG3CharacterSetGl() [ESC o] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG3CharacterSetGl() Returns Type Description System.String GenerateEscInvokeG3CharacterSetGr() [ESC |] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG3CharacterSetGr() Returns Type Description System.String GenerateEscMemoryLock() [ESC l] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscMemoryLock() Returns Type Description System.String GenerateEscMemoryUnlock() [ESC m] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscMemoryUnlock() Returns Type Description System.String GenerateEscNormalKeypad() [ESC >] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscNormalKeypad() Returns Type Description System.String GenerateEscRestoreCursor() [ESC 8] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscRestoreCursor() Returns Type Description System.String GenerateEscSaveCursor() [ESC 7] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSaveCursor() Returns Type Description System.String GenerateEscSelectDefaultCharacterSet() [ESC % @] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSelectDefaultCharacterSet() Returns Type Description System.String GenerateEscSelectUtf8CharacterSet() [ESC % G] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSelectUtf8CharacterSet() Returns Type Description System.String"
  },
  "api/Terminaux.Sequences.Builder.Types.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.html",
    "title": "Namespace Terminaux.Sequences.Builder.Types | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Sequences.Builder.Types Classes ApcSequences List of APC sequences and their regular expressions C1Sequences List of C1 sequences and their regular expressions CsiSequences List of CSI sequences and their regular expressions DcsSequences List of DCS sequences and their regular expressions EscSequences List of ESC sequences and their regular expressions OscSequences List of OSC sequences and their regular expressions PmSequences List of PM sequences and their regular expressions"
  },
  "api/Terminaux.Sequences.Builder.Types.OscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.OscSequences.html",
    "title": "Class OscSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class OscSequences List of OSC sequences and their regular expressions Inheritance System.Object OscSequences Namespace : Terminaux.Sequences.Builder.Types Assembly : Terminaux.dll Syntax public static class OscSequences : object Properties OscOperatingSystemCommandAltSequenceRegex [OSC Ps ; Pt ST] Regular expression for operating system command Declaration public static string OscOperatingSystemCommandAltSequenceRegex { get; } Property Value Type Description System.String OscOperatingSystemCommandSequenceRegex [OSC Ps ; Pt BEL] Regular expression for operating system command Declaration public static string OscOperatingSystemCommandSequenceRegex { get; } Property Value Type Description System.String Methods GenerateOscOperatingSystemCommand(String) [OSC Ps ; Pt BEL] Generates an escape sequence that can be used for the console Declaration public static string GenerateOscOperatingSystemCommand(string proprietaryCommands) Parameters Type Name Description System.String proprietaryCommands Returns Type Description System.String GenerateOscOperatingSystemCommandAlt(String) [OSC Ps ; Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateOscOperatingSystemCommandAlt(string proprietaryCommands) Parameters Type Name Description System.String proprietaryCommands Returns Type Description System.String"
  },
  "api/Terminaux.Sequences.Builder.Types.PmSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.PmSequences.html",
    "title": "Class PmSequences | Terminaux API - Aptivi Internals",
    "keywords": "Class PmSequences List of PM sequences and their regular expressions Inheritance System.Object PmSequences Namespace : Terminaux.Sequences.Builder.Types Assembly : Terminaux.dll Syntax public static class PmSequences : object Properties PmPrivacyMessageSequenceRegex [PM Pt ST] Regular expression for privacy message Declaration public static string PmPrivacyMessageSequenceRegex { get; } Property Value Type Description System.String Methods GeneratePmPrivacyMessage(String) [PM Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GeneratePmPrivacyMessage(string proprietaryCommands) Parameters Type Name Description System.String proprietaryCommands Returns Type Description System.String"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html",
    "title": "Class VtSequenceBasicChars | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceBasicChars VT sequence basic characters for forming VT sequences Inheritance System.Object VtSequenceBasicChars Namespace : Terminaux.Sequences.Builder Assembly : Terminaux.dll Syntax public static class VtSequenceBasicChars : object Fields AlternateCharacterSetChar Gets the alternate character set character Declaration public const char AlternateCharacterSetChar = null Field Value Type Description System.Char BackspaceChar Gets the backspace character Declaration public const char BackspaceChar = null Field Value Type Description System.Char BellChar Gets the bell character Declaration public const char BellChar = null Field Value Type Description System.Char CarriageReturnChar Gets the carriage return character Declaration public const char CarriageReturnChar = null Field Value Type Description System.Char EscapeChar Gets the escape character Declaration public const char EscapeChar = null Field Value Type Description System.Char FormFeedChar Gets the form feed character Declaration public const char FormFeedChar = null Field Value Type Description System.Char HorizontalTabChar Gets the horizontal tab character Declaration public const char HorizontalTabChar = null Field Value Type Description System.Char LineFeedChar Gets the line feed character Declaration public const char LineFeedChar = null Field Value Type Description System.Char ReturnTerminalStatusChar Gets the return terminal status character Declaration public const char ReturnTerminalStatusChar = null Field Value Type Description System.Char SpaceChar Gets the space character Declaration public const char SpaceChar = null Field Value Type Description System.Char StandardCharacterSetChar Gets the standard character set character Declaration public const char StandardCharacterSetChar = null Field Value Type Description System.Char StChar Gets the St character Declaration public const char StChar = null Field Value Type Description System.Char VerticalTabChar Gets the vertical tab character Declaration public const char VerticalTabChar = null Field Value Type Description System.Char"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html",
    "title": "Class VtSequenceBuilderTools | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceBuilderTools VT sequence builder tools Inheritance System.Object VtSequenceBuilderTools Namespace : Terminaux.Sequences.Builder Assembly : Terminaux.dll Syntax public static class VtSequenceBuilderTools : object Methods BuildVtSequence(VtSequenceSpecificTypes, Object[]) Builds a VT sequence using specific types Declaration public static string BuildVtSequence(VtSequenceSpecificTypes specificType, params object[] arguments) Parameters Type Name Description VtSequenceSpecificTypes specificType System.Object [] arguments Returns Type Description System.String DetermineTypeFromSequence(String) Determines the VT sequence type from the given sequence Declaration public static (VtSequenceType, VtSequenceSpecificTypes) DetermineTypeFromSequence(string sequence) Parameters Type Name Description System.String sequence The sequence to query Returns Type Description System.ValueTuple < VtSequenceType , VtSequenceSpecificTypes > A tuple of ( VtSequenceType , VtSequenceSpecificTypes ) containing information about a sequence type and a sequence command type"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html",
    "title": "Enum VtSequenceSpecificTypes | Terminaux API - Aptivi Internals",
    "keywords": "Enum VtSequenceSpecificTypes Specific VT sequences sorted by type Namespace : Terminaux.Sequences.Builder Assembly : Terminaux.dll Syntax public enum VtSequenceSpecificTypes : int Fields Name Description ApcApplicationProgramCommand Application program command (Kermit) C1ApplicationProgramCommand Application program command C1ControlSequenceIndicator Control sequence indicator C1DeviceControlString Device control string C1EndOfGuardedArea End of guarded area C1Index Index C1NextLine Next line C1OperatingSystemCommand Operating system command C1PrivacyMessage Privacy Message C1ReturnTerminalId Return terminal ID C1ReverseIndex Reverse index C1SingleShiftSelectG2CharacterSet Single shift G2 character set C1SingleShiftSelectG3CharacterSet Single shift G3 character set C1StartOfGuardedArea Start of guarded area C1StartOfString Start of string C1StringTerminator String terminator C1TabSet Tab set CsiChangeAttributesInRectangularArea Change attributes in a rectangular area CsiCharacterAttributes Character attributes (color, bold, formatting, ...) CsiCopyRectangularArea Copy rectangular area CsiCursorBackwardTabulation Cursor backward tabulation CsiCursorCharacterAbsoluteLine Cursor character absolute (line) CsiCursorForwardTabulation Cursor forward tabulation CsiCursorPosition Cursor position CsiCursorPositionAbsolute Cursor position (absolute) CsiCursorPositionRelative Cursor position (relative) CsiDecPrivateModeValues DEC private mode values CsiDeleteChars Delete characters CsiDeleteColumns Delete columns CsiDeleteLine Delete line CsiDeviceStatusReport Device status report CsiDeviceStatusReportDec Device status report (DEC) CsiDisableKeyModifierOptions Disable key modifier options CsiEnableFilterRectangle Enable filter rectangle CsiEraseCharacters Erase characters CsiEraseInDisplay Erase in display CsiEraseInDisplayDecsed Erase in display (DECSED) CsiEraseInLine Erase in line CsiEraseInLineDecsel Erase in line (DECSEL) CsiEraseRectangularArea Erase a rectangular area CsiFillRectangularArea Fill a rectuangular area CsiInitiateHighlightMouseTracking Initiate highlihgt mouse tracking CsiInsertBlankCharacters Insert blank characters CsiInsertColumns Insert columns CsiInsertLine Insert line CsiLeftTopPosition Left top position CsiLinePositionAbsolute Line position (absolute) CsiLinePositionRelative Line position (relative) CsiLoadLeds Load LEDs CsiLocatorReporting Locator reporting CsiMediaCopy Media copy CsiMediaCopyPrivate Media copy (private) CsiMoveCursorDown Move cursor down CsiMoveCursorLeft Move cursor left CsiMoveCursorNextLine Move cursor to next line CsiMoveCursorPreviousLine Move cursor to previous line CsiMoveCursorRight Move cursor right CsiMoveCursorUp Move cursor up CsiPopColorFromStack Pop color from stack CsiPopColorFromStackWithArgs Pop color from stack with arguments CsiPopVideoAttributesFromStack Pop video attributes from stack CsiPopVideoAttributesFromStackXterm Pop video attributes from stack for xterm CsiPushColorToStack Push color to stack CsiPushColorToStackWithArgs Push color to stack with arguments CsiPushVideoAttributesToStack Push video attributes to stack CsiPushVideoAttributesToStackWithArgs Push video attributes to stack with arguments CsiPushVideoAttributesToStackXterm Push video attributes to stack for xterm CsiPushVideoAttributesToStackXtermWithArgs Push video attributes to stack for xterm with arguments CsiQueryKeyModifierOptions Query key modifier options CsiRectangularAreaChecksum Checksum of a rectangular area CsiRepeatGraphicCharacter Repeat graphic character CsiReportGraphicsRenditionRectangularArea Report graphics rendition for a rectangular area CsiReportPaletteStack Report palette stack CsiReportXtermVersion Report xterm version CsiRequestAnsiMode Request ANSI mode CsiRequestDecPrivateMode Request DEC private mode CsiRequestLocatorPosition Request locator position CsiRequestPresentationStateReport Request presentation state report CsiRequestTerminalParameters Request terminal parameters CsiResetKeyModifierOptions Reset key modifier options CsiResetMode Reset mode CsiResetPrivateMode Reset private mode CsiResetTitleModeFeatures Reset title mode features CsiRestoreCursor Restore cursor CsiRestoreDecPrivateModeValues Restore DEC private mode values CsiReverseAttributesInRectangularArea Reverse attributes in rectangular area CsiSaveCursor Save cursor CsiScrollDown Scroll down CsiScrollDownOriginal Scroll down CsiScrollUp Scroll up CsiSelectActiveStatusDisplay Select active status display CsiSelectAttributeChangeExtent Select attribute change extent CsiSelectCharacterProtectionAttribute Select character protection attribute CsiSelectChecksumExtension Select checksum extension CsiSelectColumnsPerPage Select columns per page CsiSelectiveEraseRectangularArea Selectively erase a rectangular area CsiSelectLocatorEvents Select locator events CsiSelectNumberOfLinesPerScreen Select number of lines per screen CsiSelectStatusLineType Select status line type CsiSendDeviceAttributesPrimary Send device attributes (primary) CsiSendDeviceAttributesSecondary Send device attributes (secondary) CsiSendDeviceAttributesTertiary Send device attributes (tertiary) CsiSetConformanceLevel Set confirmance level CsiSetCursorStyle Set cursor style CsiSetGraphicsAttribute Set graphics attribute CsiSetKeyModifierOptions Set key modifier options CsiSetLeftRightMargins Set left right margins CsiSetMarginBellVolume Set margin bell volume CsiSetMode Set mode CsiSetPointerModeXterm Set pointer mode for xterm CsiSetPrivateMode Set private mode CsiSetScrollingRegion Set scrolling region CsiSetShiftEscapeOptions Set shift-escape options CsiSetTitleModeXterm Set title mode for xterm CsiSetWarningBellVolume Set warning bell volume CsiShiftLeftColumns Shift left columns CsiShiftRightColumns Shift right columns CsiSoftTerminalReset Soft terminal reset CsiTabClear Tab clear CsiWindowManipulation Window manipulation DcsRequestResourceValues Request resource values DcsRequestStatusString Request status string DcsRequestTermInfoData Request termino data DcsRestorePresentationStatus Restore presentation status DcsSetTermInfoData Set terminfo data DcsUserDefinedKeys User defined keys Esc7BitControls 7-bit controls Esc8BitControls 8-bit controls EscAnsiConformanceLevel1 ANSI conformance level 1 EscAnsiConformanceLevel2 ANSI conformance level 2 EscAnsiConformanceLevel3 ANSI conformance level 3 EscApplicationKeypad Application keypad EscBackIndex back index EscCursorToLowerLeftCorner Cursor to lower left corner EscDecDoubleHeightLineBottomHalf Double height line bottom half (DEC) EscDecDoubleHeightLineTopHalf Double height line top half (DEC) EscDecDoubleWidthLine Double width line (DEC) EscDecScreenAlignmentTest Screen alignment test (DEC) EscDecSingleWidthLine Single width line (DEC) EscDesignateG0CharacterSet Designate the G0 character set EscDesignateG1CharacterSet Designate the G1 character set EscDesignateG1CharacterSetAlt Designate the G1 character set (alt) EscDesignateG2CharacterSet Designate the G2 character set EscDesignateG2CharacterSetAlt Designate the G2 character set (alt) EscDesignateG3CharacterSet Designate the G3 character set EscDesignateG3CharacterSetAlt Designate the G3 character set (alt) EscForwardIndex Forward index EscFullReset Full reset EscInvokeG1CharacterSetGr Invoke G1 character set in GR mode EscInvokeG2CharacterSetGl Invoke G2 character set in GL mode EscInvokeG2CharacterSetGr Invoke G2 character set in GR mode EscInvokeG3CharacterSetGl Invoke G3 character set in GL mode EscInvokeG3CharacterSetGr Invoke G3 character set in GR mode EscMemoryLock Memory lock EscMemoryUnlock Memory unlock EscNormalKeypad Normal keypad EscRestoreCursor Restore cursor EscSaveCursor Save cursor EscSelectDefaultCharacterSet Select default character set EscSelectUtf8CharacterSet Select UTF8 character set OscOperatingSystemCommand Operating system command sequence OscOperatingSystemCommandAlt Operating system command sequence (alternative) PmPrivacyMessage Privacy message command sequence (Kermit)"
  },
  "api/Terminaux.Sequences.Tools.html": {
    "href": "api/Terminaux.Sequences.Tools.html",
    "title": "Namespace Terminaux.Sequences.Tools | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Sequences.Tools Classes VtSequenceRegexes VT sequence regular expressions VtSequenceTools Provides all the tools for manipulating with the VT sequences Enums VtSequenceType Denotes the VT sequence type"
  },
  "api/Terminaux.Sequences.Tools.VtSequenceRegexes.html": {
    "href": "api/Terminaux.Sequences.Tools.VtSequenceRegexes.html",
    "title": "Class VtSequenceRegexes | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceRegexes VT sequence regular expressions Inheritance System.Object VtSequenceRegexes Namespace : Terminaux.Sequences.Tools Assembly : Terminaux.dll Syntax public static class VtSequenceRegexes : object Properties AllVTSequences All VT sequences Declaration public static string AllVTSequences { get; } Property Value Type Description System.String APCSequences APC sequences Declaration public static string APCSequences { get; } Property Value Type Description System.String C1Sequences C1 sequences Declaration public static string C1Sequences { get; } Property Value Type Description System.String CSISequences CSI sequences Declaration public static string CSISequences { get; } Property Value Type Description System.String DCSSequences DCS sequences Declaration public static string DCSSequences { get; } Property Value Type Description System.String ESCSequences ESC sequences Declaration public static string ESCSequences { get; } Property Value Type Description System.String OSCSequences OSC sequences Declaration public static string OSCSequences { get; } Property Value Type Description System.String PMSequences PM sequences Declaration public static string PMSequences { get; } Property Value Type Description System.String"
  },
  "api/Terminaux.Sequences.Tools.VtSequenceTools.html": {
    "href": "api/Terminaux.Sequences.Tools.VtSequenceTools.html",
    "title": "Class VtSequenceTools | Terminaux API - Aptivi Internals",
    "keywords": "Class VtSequenceTools Provides all the tools for manipulating with the VT sequences Inheritance System.Object VtSequenceTools Namespace : Terminaux.Sequences.Tools Assembly : Terminaux.dll Syntax public static class VtSequenceTools : object Methods DetermineTypeFromText(String) Determines the VT sequence type from the given text Declaration public static VtSequenceType DetermineTypeFromText(string Text) Parameters Type Name Description System.String Text Text that contains escape sequences Returns Type Description VtSequenceType The type that contains all the VT escape sequence types found in the Text FilterVTSequences(String, String, VtSequenceType, RegexOptions) Filters all of the VT sequences Declaration public static string FilterVTSequences(string Text, string replace = \"\", VtSequenceType type = default(VtSequenceType), RegexOptions options = null) Parameters Type Name Description System.String Text The text that contains the VT sequences System.String replace Replace the sequences with this text VtSequenceType type VT sequence type RegexOptions options Regular expression options Returns Type Description System.String The text that doesn't contain the VT sequences GetSequenceFilterRegexFromType(VtSequenceType) Gets the sequence filter regular expression from the provided VT sequence type ( VtSequenceType ) Declaration public static string GetSequenceFilterRegexFromType(VtSequenceType type = default(VtSequenceType)) Parameters Type Name Description VtSequenceType type VT sequence type Returns Type Description System.String regular expression from the provided VT sequence type IsMatchVTSequences(String, VtSequenceType, RegexOptions) Does the string contain all of the VT sequences or a VT sequence of any type? Declaration public static bool IsMatchVTSequences(string Text, VtSequenceType type = default(VtSequenceType), RegexOptions options = null) Parameters Type Name Description System.String Text The text that contains the VT sequences VtSequenceType type VT sequence type RegexOptions options Regular expression options Returns Type Description System.Boolean True if any of the provided VT types are found; otherwise, false. IsMatchVTSequencesSpecific(String, VtSequenceType, RegexOptions) Does the string contain all of the VT sequences or a VT sequence of any specific type? Declaration public static Dictionary<VtSequenceType, bool> IsMatchVTSequencesSpecific(string Text, VtSequenceType type = default(VtSequenceType), RegexOptions options = null) Parameters Type Name Description System.String Text The text that contains the VT sequences VtSequenceType type VT sequence type RegexOptions options Regular expression options Returns Type Description Dictionary < VtSequenceType , System.Boolean > A dictionary of each VT sequence type with either true/false for any type test. MatchVTSequences(String, VtSequenceType, RegexOptions) Matches all of the VT sequences Declaration public static MatchCollection[] MatchVTSequences(string Text, VtSequenceType type = default(VtSequenceType), RegexOptions options = null) Parameters Type Name Description System.String Text The text that contains the VT sequences VtSequenceType type VT sequence type RegexOptions options Regular expression options Returns Type Description MatchCollection [] The array of s that contain the capture and group information for the found VT sequences SplitVTSequences(String, VtSequenceType, RegexOptions) Splits all of the VT sequences Declaration public static string[] SplitVTSequences(string Text, VtSequenceType type = default(VtSequenceType), RegexOptions options = null) Parameters Type Name Description System.String Text The text that contains the VT sequences VtSequenceType type VT sequence type RegexOptions options Regular expression options Returns Type Description System.String [] The group of texts that don't contain the VT sequences"
  },
  "api/Terminaux.Sequences.Tools.VtSequenceType.html": {
    "href": "api/Terminaux.Sequences.Tools.VtSequenceType.html",
    "title": "Enum VtSequenceType | Terminaux API - Aptivi Internals",
    "keywords": "Enum VtSequenceType Denotes the VT sequence type Namespace : Terminaux.Sequences.Tools Assembly : Terminaux.dll Syntax public enum VtSequenceType : int Fields Name Description All All VT sequences Apc VT sequence is one of the APC sequences C1 VT sequence is one of the C1 sequences Csi VT sequence is one of the CSI sequences Dcs VT sequence is one of the DCS sequences Esc VT sequence is one of the ESC sequences None No VT sequence Osc VT sequence is one of the OSC sequences Pm VT sequence is one of the PM sequences"
  },
  "api/Terminaux.Tools.ConsoleTools.html": {
    "href": "api/Terminaux.Tools.ConsoleTools.html",
    "title": "Class ConsoleTools | Terminaux API - Aptivi Internals",
    "keywords": "Class ConsoleTools Wrapper for the class to ensure safety against dumb consoles. Taken from Kernel Simulator 0.1.0. Inheritance System.Object ConsoleTools Namespace : Terminaux.Tools Assembly : Terminaux.dll Syntax public static class ConsoleTools : object Properties ActionBeep Beeps the console Declaration public static Action ActionBeep { get; set; } Property Value Type Description Action ActionBufferHeight The console buffer height (rows) Declaration public static Func<int> ActionBufferHeight { get; set; } Property Value Type Description Func < System.Int32 > ActionCursorLeft The cursor left position Declaration public static Func<int> ActionCursorLeft { get; set; } Property Value Type Description Func < System.Int32 > ActionCursorTop The cursor top position Declaration public static Func<int> ActionCursorTop { get; set; } Property Value Type Description Func < System.Int32 > ActionCursorVisible The cursor visibility mode Declaration public static Action<bool> ActionCursorVisible { get; set; } Property Value Type Description Action < System.Boolean > ActionIsDumb Is the console a dumb console? Declaration public static Func<bool> ActionIsDumb { get; set; } Property Value Type Description Func < System.Boolean > ActionKeyAvailable Whether a key is pressed Declaration public static Func<bool> ActionKeyAvailable { get; set; } Property Value Type Description Func < System.Boolean > ActionReadKey Reads a key Boolean value indicates whether to intercept Declaration public static Func<bool, ConsoleKeyInfo> ActionReadKey { get; set; } Property Value Type Description Func < System.Boolean , ConsoleKeyInfo > ActionSetCursorLeft Sets the cursor left position First integer is the X position from 0 Declaration public static Action<int> ActionSetCursorLeft { get; set; } Property Value Type Description Action < System.Int32 > ActionSetCursorPosition Sets the cursor position First integer is the X position from 0 Second integer is the Y position from 0 Declaration public static Action<int, int> ActionSetCursorPosition { get; set; } Property Value Type Description Action < System.Int32 , System.Int32 > ActionSetCursorTop Sets the cursor top position First integer is the Y position from 0 Declaration public static Action<int> ActionSetCursorTop { get; set; } Property Value Type Description Action < System.Int32 > ActionTreatCtrlCAsInput The cursor visibility mode Declaration public static Action<bool> ActionTreatCtrlCAsInput { get; set; } Property Value Type Description Action < System.Boolean > ActionWindowHeight The console window height (rows) Declaration public static Func<int> ActionWindowHeight { get; set; } Property Value Type Description Func < System.Int32 > ActionWindowWidth The console window width (columns) Declaration public static Func<int> ActionWindowWidth { get; set; } Property Value Type Description Func < System.Int32 > ActionWriteChar Writes a character to console A character Declaration public static Action<char, TermReaderSettings> ActionWriteChar { get; set; } Property Value Type Description Action < System.Char , TermReaderSettings > ActionWriteLine Writes new line to console Declaration public static Action ActionWriteLine { get; set; } Property Value Type Description Action ActionWriteLineParameterized Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteLineParameterized { get; set; } Property Value Type Description Action < System.String , TermReaderSettings , System.Object []> ActionWriteLineString Writes text to console with line terminator The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteLineString { get; set; } Property Value Type Description Action < System.String , TermReaderSettings > ActionWriteParameterized Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteParameterized { get; set; } Property Value Type Description Action < System.String , TermReaderSettings , System.Object []> ActionWriteString Writes text to console The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteString { get; set; } Property Value Type Description Action < System.String , TermReaderSettings >"
  },
  "api/Terminaux.Tools.html": {
    "href": "api/Terminaux.Tools.html",
    "title": "Namespace Terminaux.Tools | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Tools Classes ConsoleTools Wrapper for the class to ensure safety against dumb consoles. Taken from Kernel Simulator 0.1.0."
  },
  "api/Terminaux.Writer.ConsoleWriters.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.html",
    "title": "Namespace Terminaux.Writer.ConsoleWriters | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.ConsoleWriters Classes ListWriterColor List writer with color support TextWriterColor Console text writer with color support TextWriterSlowColor Console text writer with color support (slow write) TextWriterWhereColor Console text writer with color support (positional write) TextWriterWhereSlowColor Console text writer with color support (slow positional write) TextWriterWrappedColor Console text writer with color support (wrapped)"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html",
    "title": "Class ListWriterColor | Terminaux API - Aptivi Internals",
    "keywords": "Class ListWriterColor List writer with color support Inheritance System.Object ListWriterColor Namespace : Terminaux.Writer.ConsoleWriters Assembly : Terminaux.dll Syntax public static class ListWriterColor : object Methods WriteList<T>(IEnumerable<T>, Color, Color, Boolean) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable <T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. System.Boolean Wrap Wraps the output as needed. Type Parameters Name Description T WriteList<T>(IEnumerable<T>, ConsoleColors, ConsoleColors, Boolean) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable <T> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. System.Boolean Wrap Wraps the output as needed. Type Parameters Name Description T WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color, Boolean) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description Dictionary <TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. System.Boolean Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue WriteList<TKey, TValue>(Dictionary<TKey, TValue>, ConsoleColors, ConsoleColors, Boolean) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor, bool Wrap) Parameters Type Name Description Dictionary <TKey, TValue> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. System.Boolean Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue"
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html",
    "title": "Class TextWriterColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterColor Console text writer with color support Inheritance System.Object TextWriterColor Namespace : Terminaux.Writer.ConsoleWriters Assembly : Terminaux.dll Syntax public static class TextWriterColor : object Methods Write() Outputs the new line into the terminal prompt, and sets colors as needed. Declaration public static void Write() Write(String, Boolean, Boolean, Object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, bool Highlight, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Boolean Highlight Highlight the text written System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, Boolean, Color, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, bool Highlight, Color color, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Boolean Highlight Highlight the text written Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, Boolean, Color, Color, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, bool Highlight, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Boolean Highlight Highlight the text written Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, Boolean, ConsoleColors, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, bool Highlight, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Boolean Highlight Highlight the text written ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, Boolean, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, bool Highlight, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Boolean Highlight Highlight the text written ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, Object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, Color, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, Color, Color, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, ConsoleColors, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Boolean, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void Write(string Text, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. Write(String, Object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Object [] vars Variables to format the message before it's written. WritePlain(String, Boolean, Object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, bool Line, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Object [] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterSlowColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterSlowColor.html",
    "title": "Class TextWriterSlowColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterSlowColor Console text writer with color support (slow write) Inheritance System.Object TextWriterSlowColor Namespace : Terminaux.Writer.ConsoleWriters Assembly : Terminaux.dll Syntax public static class TextWriterSlowColor : object Methods WriteSlowly(String, Boolean, Double, Color, Object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowly(string msg, bool Line, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteSlowly(String, Boolean, Double, Color, Color, Object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowly(string msg, bool Line, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteSlowly(String, Boolean, Double, ConsoleColors, Object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowly(string msg, bool Line, double MsEachLetter, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Double MsEachLetter Time in milliseconds to delay writing ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteSlowly(String, Boolean, Double, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowly(string msg, bool Line, double MsEachLetter, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Double MsEachLetter Time in milliseconds to delay writing ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteSlowlyPlain(String, Boolean, Double, Object[]) Outputs the text into the terminal prompt slowly with no color support. Declaration public static void WriteSlowlyPlain(string msg, bool Line, double MsEachLetter, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Double MsEachLetter Time in milliseconds to delay writing System.Object [] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html",
    "title": "Class TextWriterWhereColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterWhereColor Console text writer with color support (positional write) Inheritance System.Object TextWriterWhereColor Namespace : Terminaux.Writer.ConsoleWriters Assembly : Terminaux.dll Syntax public static class TextWriterWhereColor : object Methods WriteWhere(String, Int32, Int32, Boolean, Int32, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, Int32, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, Int32, Color, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, Int32, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, Int32, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, Color color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, Color, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Boolean, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, Color color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, Color, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhere(String, Int32, Int32, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhere(string msg, int Left, int Top, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWherePlain(String, Int32, Int32, Boolean, Int32, Object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin System.Object [] vars Variables to format the message before it's written. WriteWherePlain(String, Int32, Int32, Boolean, Object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position System.Object [] vars Variables to format the message before it's written. WriteWherePlain(String, Int32, Int32, Object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Int32 Left Column number in console System.Int32 Top Row number in console System.Object [] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereSlowColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereSlowColor.html",
    "title": "Class TextWriterWhereSlowColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterWhereSlowColor Console text writer with color support (slow positional write) Inheritance System.Object TextWriterWhereSlowColor Namespace : Terminaux.Writer.ConsoleWriters Assembly : Terminaux.dll Syntax public static class TextWriterWhereSlowColor : object Methods WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Int32, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Int32, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Int32, Color, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Int32, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Int32, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, Color, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Boolean, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, Color, Color, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowly(String, Boolean, Int32, Int32, Double, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWhereSlowlyPlain(String, Boolean, Int32, Int32, Double, Boolean, Int32, Object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Int32 RightMargin The right margin System.Object [] vars Variables to format the message before it's written. WriteWhereSlowlyPlain(String, Boolean, Int32, Int32, Double, Boolean, Object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Boolean Return Whether or not to return to old position System.Object [] vars Variables to format the message before it's written. WriteWhereSlowlyPlain(String, Boolean, Int32, Int32, Double, Object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description System.String msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Int32 Left Column number in console System.Int32 Top Row number in console System.Double MsEachLetter Time in milliseconds to delay writing System.Object [] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWrappedColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWrappedColor.html",
    "title": "Class TextWriterWrappedColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TextWriterWrappedColor Console text writer with color support (wrapped) Inheritance System.Object TextWriterWrappedColor Namespace : Terminaux.Writer.ConsoleWriters Assembly : Terminaux.dll Syntax public static class TextWriterWrappedColor : object Methods WriteWrapped(String, Boolean, Color, Object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrapped(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not Color color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWrapped(String, Boolean, Color, Color, Object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrapped(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWrapped(String, Boolean, ConsoleColors, Object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrapped(string Text, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not ConsoleColors color A color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWrapped(String, Boolean, ConsoleColors, ConsoleColors, Object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrapped(string Text, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] vars Variables to format the message before it's written. WriteWrappedPlain(String, Boolean, Object[]) Outputs the text into the terminal prompt, wraps the long terminal output if needed. Declaration public static void WriteWrappedPlain(string Text, bool Line, params object[] vars) Parameters Type Name Description System.String Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... System.Boolean Line Whether to print a new line or not System.Object [] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.BorderColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BorderColor.html",
    "title": "Class BorderColor | Terminaux API - Aptivi Internals",
    "keywords": "Class BorderColor Border writer with color support Inheritance System.Object BorderColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class BorderColor : object Methods WriteBorder(Int32, Int32, Int32, Int32) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames WriteBorder(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for border System.Char LowerLeftCornerChar Lower left corner character for border System.Char UpperRightCornerChar Upper right corner character for border System.Char LowerRightCornerChar Lower right corner character for border System.Char UpperFrameChar Upper frame character for border System.Char LowerFrameChar Lower frame character for border System.Char LeftFrameChar Left frame character for border System.Char RightFrameChar Right frame character for border WriteBorder(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for border System.Char LowerLeftCornerChar Lower left corner character for border System.Char UpperRightCornerChar Upper right corner character for border System.Char LowerRightCornerChar Lower right corner character for border System.Char UpperFrameChar Upper frame character for border System.Char LowerFrameChar Lower frame character for border System.Char LeftFrameChar Left frame character for border System.Char RightFrameChar Right frame character for border Color BorderColor Border color WriteBorder(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for border System.Char LowerLeftCornerChar Lower left corner character for border System.Char UpperRightCornerChar Upper right corner character for border System.Char LowerRightCornerChar Lower right corner character for border System.Char UpperFrameChar Upper frame character for border System.Char LowerFrameChar Lower frame character for border System.Char LeftFrameChar Left frame character for border System.Char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color WriteBorder(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for border System.Char LowerLeftCornerChar Lower left corner character for border System.Char UpperRightCornerChar Upper right corner character for border System.Char LowerRightCornerChar Lower right corner character for border System.Char UpperFrameChar Upper frame character for border System.Char LowerFrameChar Lower frame character for border System.Char LeftFrameChar Left frame character for border System.Char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color WriteBorder(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor, ConsoleColors BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for border System.Char LowerLeftCornerChar Lower left corner character for border System.Char UpperRightCornerChar Upper right corner character for border System.Char LowerRightCornerChar Lower right corner character for border System.Char UpperFrameChar Upper frame character for border System.Char LowerFrameChar Lower frame character for border System.Char LeftFrameChar Left frame character for border System.Char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color ConsoleColors BackgroundColor Border background color WriteBorder(Int32, Int32, Int32, Int32, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color WriteBorder(Int32, Int32, Int32, Int32, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color WriteBorder(Int32, Int32, Int32, Int32, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color WriteBorder(Int32, Int32, Int32, Int32, ConsoleColors, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor, ConsoleColors BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color from Terminaux's Color ConsoleColors BackgroundColor Border background color from Terminaux's Color WriteBorderPlain(Int32, Int32, Int32, Int32) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames WriteBorderPlain(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description System.Int32 Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for border System.Char LowerLeftCornerChar Lower left corner character for border System.Char UpperRightCornerChar Upper right corner character for border System.Char LowerRightCornerChar Lower right corner character for border System.Char UpperFrameChar Upper frame character for border System.Char LowerFrameChar Lower frame character for border System.Char LeftFrameChar Left frame character for border System.Char RightFrameChar Right frame character for border"
  },
  "api/Terminaux.Writer.FancyWriters.BoxColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxColor.html",
    "title": "Class BoxColor | Terminaux API - Aptivi Internals",
    "keywords": "Class BoxColor Box writer with color support Inheritance System.Object BoxColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class BoxColor : object Methods WriteBox(Int32, Int32, Int32, Int32) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description System.Int32 Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames WriteBox(Int32, Int32, Int32, Int32, Color) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description System.Int32 Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color WriteBox(Int32, Int32, Int32, Int32, ConsoleColors) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxColor) Parameters Type Name Description System.Int32 Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxColor Box color WriteBoxPlain(Int32, Int32, Int32, Int32) Writes the box plainly Declaration public static void WriteBoxPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description System.Int32 Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames"
  },
  "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html",
    "title": "Class BoxFrameColor | Terminaux API - Aptivi Internals",
    "keywords": "Class BoxFrameColor BoxFrame writer with color support Inheritance System.Object BoxFrameColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class BoxFrameColor : object Methods WriteBoxFrame(Int32, Int32, Int32, Int32) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames WriteBoxFrame(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for box frame System.Char LowerLeftCornerChar Lower left corner character for box frame System.Char UpperRightCornerChar Upper right corner character for box frame System.Char LowerRightCornerChar Lower right corner character for box frame System.Char UpperFrameChar Upper frame character for box frame System.Char LowerFrameChar Lower frame character for box frame System.Char LeftFrameChar Left frame character for box frame System.Char RightFrameChar Right frame character for box frame WriteBoxFrame(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for box frame System.Char LowerLeftCornerChar Lower left corner character for box frame System.Char UpperRightCornerChar Upper right corner character for box frame System.Char LowerRightCornerChar Lower right corner character for box frame System.Char UpperFrameChar Upper frame character for box frame System.Char LowerFrameChar Lower frame character for box frame System.Char LeftFrameChar Left frame character for box frame System.Char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color WriteBoxFrame(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for box frame System.Char LowerLeftCornerChar Lower left corner character for box frame System.Char UpperRightCornerChar Upper right corner character for box frame System.Char LowerRightCornerChar Lower right corner character for box frame System.Char UpperFrameChar Upper frame character for box frame System.Char LowerFrameChar Lower frame character for box frame System.Char LeftFrameChar Left frame character for box frame System.Char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color WriteBoxFrame(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for box frame System.Char LowerLeftCornerChar Lower left corner character for box frame System.Char UpperRightCornerChar Upper right corner character for box frame System.Char LowerRightCornerChar Lower right corner character for box frame System.Char UpperFrameChar Upper frame character for box frame System.Char LowerFrameChar Lower frame character for box frame System.Char LeftFrameChar Left frame character for box frame System.Char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color WriteBoxFrame(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for box frame System.Char LowerLeftCornerChar Lower left corner character for box frame System.Char UpperRightCornerChar Upper right corner character for box frame System.Char LowerRightCornerChar Lower right corner character for box frame System.Char UpperFrameChar Upper frame character for box frame System.Char LowerFrameChar Lower frame character for box frame System.Char LeftFrameChar Left frame character for box frame System.Char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color ConsoleColors BackgroundColor BoxFrame background color WriteBoxFrame(Int32, Int32, Int32, Int32, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color WriteBoxFrame(Int32, Int32, Int32, Int32, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color WriteBoxFrame(Int32, Int32, Int32, Int32, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color WriteBoxFrame(Int32, Int32, Int32, Int32, ConsoleColors, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color from Terminaux's Color ConsoleColors BackgroundColor BoxFrame background color from Terminaux's Color WriteBoxFramePlain(Int32, Int32, Int32, Int32) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames WriteBoxFramePlain(Int32, Int32, Int32, Int32, Char, Char, Char, Char, Char, Char, Char, Char) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description System.Int32 Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. System.Int32 InteriorWidth The width of the interior window, excluding the two console columns for left and right frames System.Int32 InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames System.Char UpperLeftCornerChar Upper left corner character for box frame System.Char LowerLeftCornerChar Lower left corner character for box frame System.Char UpperRightCornerChar Upper right corner character for box frame System.Char LowerRightCornerChar Lower right corner character for box frame System.Char UpperFrameChar Upper frame character for box frame System.Char LowerFrameChar Lower frame character for box frame System.Char LeftFrameChar Left frame character for box frame System.Char RightFrameChar Right frame character for box frame"
  },
  "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html",
    "title": "Class CenteredFigletTextColor | Terminaux API - Aptivi Internals",
    "keywords": "Class CenteredFigletTextColor Centered Figlet writer Inheritance System.Object CenteredFigletTextColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class CenteredFigletTextColor : object Methods WriteCenteredFiglet(FiggleFont, String, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FiggleFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(FiggleFont, String, Color, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FiggleFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(FiggleFont, String, Color, Color, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FiggleFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(FiggleFont, String, ConsoleColors, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FiggleFont FigletFont, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(FiggleFont, String, ConsoleColors, ConsoleColors, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FiggleFont FigletFont, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(Int32, FiggleFont, String, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FiggleFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered figlet text to FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(Int32, FiggleFont, String, Color, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FiggleFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered figlet text to FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(Int32, FiggleFont, String, Color, Color, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FiggleFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered figlet text to FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(Int32, FiggleFont, String, ConsoleColors, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FiggleFont FigletFont, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered figlet text to FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCenteredFiglet(Int32, FiggleFont, String, ConsoleColors, ConsoleColors, Object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FiggleFont FigletFont, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered figlet text to FiggleFont FigletFont Figlet font to use in the text. System.String Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html",
    "title": "Class CenteredTextColor | Terminaux API - Aptivi Internals",
    "keywords": "Class CenteredTextColor Centered writer Inheritance System.Object CenteredTextColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class CenteredTextColor : object Methods WriteCentered(Int32, String, Object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered text to System.String Text Text to be written. If nothing, the entire line is filled with the centered. System.Object [] Vars Variables to format the message before it's written. WriteCentered(Int32, String, Color, Object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered text to System.String Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCentered(Int32, String, Color, Color, Object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered text to System.String Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCentered(Int32, String, ConsoleColors, Object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered text to System.String Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteCentered(Int32, String, ConsoleColors, ConsoleColors, Object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description System.Int32 top Top position to write centered text to System.String Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletColor.html",
    "title": "Class FigletColor | Terminaux API - Aptivi Internals",
    "keywords": "Class FigletColor Figlet writer Inheritance System.Object FigletColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class FigletColor : object Methods WriteFiglet(String, FiggleFont, Color, Object[]) Writes the figlet text Declaration public static void WriteFiglet(string Text, FiggleFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. FiggleFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFiglet(String, FiggleFont, Color, Color, Object[]) Writes the figlet text Declaration public static void WriteFiglet(string Text, FiggleFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. FiggleFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFiglet(String, FiggleFont, ConsoleColors, Object[]) Writes the figlet text Declaration public static void WriteFiglet(string Text, FiggleFont FigletFont, ConsoleColors Color, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. FiggleFont FigletFont Figlet font to use in the text. ConsoleColors Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFiglet(String, FiggleFont, ConsoleColors, ConsoleColors, Object[]) Writes the figlet text Declaration public static void WriteFiglet(string Text, FiggleFont FigletFont, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. FiggleFont FigletFont Figlet font to use in the text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFigletPlain(String, FiggleFont, Object[]) Writes the figlet text Declaration public static void WriteFigletPlain(string Text, FiggleFont FigletFont, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. FiggleFont FigletFont Figlet font to use in the text. System.Object [] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html",
    "title": "Class FigletWhereColor | Terminaux API - Aptivi Internals",
    "keywords": "Class FigletWhereColor Figlet writer (positional) Inheritance System.Object FigletWhereColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class FigletWhereColor : object Methods WriteFigletWhere(String, Int32, Int32, Boolean, FiggleFont, Color, Object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhere(string Text, int Left, int Top, bool Return, FiggleFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position FiggleFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFigletWhere(String, Int32, Int32, Boolean, FiggleFont, Color, Color, Object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhere(string Text, int Left, int Top, bool Return, FiggleFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position FiggleFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFigletWhere(String, Int32, Int32, Boolean, FiggleFont, ConsoleColors, Object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhere(string Text, int Left, int Top, bool Return, FiggleFont FigletFont, ConsoleColors Color, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position FiggleFont FigletFont Figlet font to use in the text. ConsoleColors Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFigletWhere(String, Int32, Int32, Boolean, FiggleFont, ConsoleColors, ConsoleColors, Object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhere(string Text, int Left, int Top, bool Return, FiggleFont FigletFont, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position FiggleFont FigletFont Figlet font to use in the text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteFigletWherePlain(String, Int32, Int32, Boolean, FiggleFont, Object[]) Writes the figlet text with position support Declaration public static void WriteFigletWherePlain(string Text, int Left, int Top, bool Return, FiggleFont FigletFont, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Int32 Left Column number in console System.Int32 Top Row number in console System.Boolean Return Whether or not to return to old position FiggleFont FigletFont Figlet font to use in the text. System.Object [] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.html": {
    "href": "api/Terminaux.Writer.FancyWriters.html",
    "title": "Namespace Terminaux.Writer.FancyWriters | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.FancyWriters Classes BorderColor Border writer with color support BoxColor Box writer with color support BoxFrameColor BoxFrame writer with color support CenteredFigletTextColor Centered Figlet writer CenteredTextColor Centered writer FigletColor Figlet writer FigletWhereColor Figlet writer (positional) InfoBoxColor Info box writer with color support PowerLineColor PowerLine writer ProgressBarColor Progress bar writer with color support ProgressBarVerticalColor Vertical progress bar writer with color support SeparatorWriterColor Separator writer TableColor Table writer with color support"
  },
  "api/Terminaux.Writer.FancyWriters.InfoBoxColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.InfoBoxColor.html",
    "title": "Class InfoBoxColor | Terminaux API - Aptivi Internals",
    "keywords": "Class InfoBoxColor Info box writer with color support Inheritance System.Object InfoBoxColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class InfoBoxColor : object Methods WriteInfoBox(String, Char, Char, Char, Char, Char, Char, Char, Char, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, Char, Char, Char, Char, Char, Char, Char, Char, Color, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, Char, Char, Char, Char, Char, Char, Char, Char, Color, Color, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors, ConsoleColors, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, Color, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. Color InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, Color, Color, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. Color InfoBoxColor InfoBox color from Terminaux's Color Color BackgroundColor InfoBox background color from Terminaux's Color System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, ConsoleColors, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. ConsoleColors InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. WriteInfoBox(String, ConsoleColors, ConsoleColors, Object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. ConsoleColors InfoBoxColor InfoBox color from Terminaux's Color ConsoleColors BackgroundColor InfoBox background color from Terminaux's Color System.Object [] vars Variables to format the message before it's written. WriteInfoBoxInput(String, Char, Char, Char, Char, Char, Char, Char, Char, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, Char, Char, Char, Char, Char, Char, Char, Char, Color, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, Char, Char, Char, Char, Char, Char, Char, Char, Color, Color, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, Char, Char, Char, Char, Char, Char, Char, Char, ConsoleColors, ConsoleColors, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, Color, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. Color InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, Color, Color, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. Color InfoBoxColor InfoBox color from Terminaux's Color Color BackgroundColor InfoBox background color from Terminaux's Color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, ConsoleColors, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. ConsoleColors InfoBoxColor InfoBox color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxInput(String, ConsoleColors, ConsoleColors, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description System.String text Text to be written. ConsoleColors InfoBoxColor InfoBox color from Terminaux's Color ConsoleColors BackgroundColor InfoBox background color from Terminaux's Color System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxPlain(String, Char, Char, Char, Char, Char, Char, Char, Char, Object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box System.Object [] vars Variables to format the message before it's written. WriteInfoBoxPlain(String, Object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Object [] vars Variables to format the message before it's written. WriteInfoBoxPlainInput(String, Char, Char, Char, Char, Char, Char, Char, Char, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Char UpperLeftCornerChar Upper left corner character for info box System.Char LowerLeftCornerChar Lower left corner character for info box System.Char UpperRightCornerChar Upper right corner character for info box System.Char LowerRightCornerChar Lower right corner character for info box System.Char UpperFrameChar Upper frame character for info box System.Char LowerFrameChar Lower frame character for info box System.Char LeftFrameChar Left frame character for info box System.Char RightFrameChar Right frame character for info box System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String WriteInfoBoxPlainInput(String, Object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, params object[] vars) Parameters Type Name Description System.String text Text to be written. System.Object [] vars Variables to format the message before it's written. Returns Type Description System.String"
  },
  "api/Terminaux.Writer.FancyWriters.PowerLineColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.PowerLineColor.html",
    "title": "Class PowerLineColor | Terminaux API - Aptivi Internals",
    "keywords": "Class PowerLineColor PowerLine writer Inheritance System.Object PowerLineColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class PowerLineColor : object Methods WritePowerLine(List<PowerLineSegment>, Color, Boolean) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List < PowerLineSegment > Segments List of PowerLine segments Color EndingColor A color that will be changed at the end of the transition System.Boolean Line Write new line after writing the segments WritePowerLine(List<PowerLineSegment>, ConsoleColors, Boolean) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, ConsoleColors EndingColor, bool Line = false) Parameters Type Name Description List < PowerLineSegment > Segments List of PowerLine segments ConsoleColors EndingColor A color that will be changed at the end of the transition System.Boolean Line Write new line after writing the segments WritePowerLinePlain(List<PowerLineSegment>, Boolean) Writes the PowerLine text Declaration public static void WritePowerLinePlain(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List < PowerLineSegment > Segments Segments to write System.Boolean Line Write new line after writing the segments"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html",
    "title": "Class ProgressBarColor | Terminaux API - Aptivi Internals",
    "keywords": "Class ProgressBarColor Progress bar writer with color support Inheritance System.Object ProgressBarColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class ProgressBarColor : object Methods WriteProgress(Double, Int32, Int32, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Int32, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Int32, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right Color ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Int32, Color, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Int32, Color, Color, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Int32, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Int32, ConsoleColors, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Int32, ConsoleColors, ConsoleColors, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset Color ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Color, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, Color, Color, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset ConsoleColors ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, ConsoleColors, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Int32, ConsoleColors, ConsoleColors, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top Color ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Color, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, Color, Color, Color, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top ConsoleColors ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, ConsoleColors, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgress(Double, Int32, Int32, ConsoleColors, ConsoleColors, ConsoleColors, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgressPlain(Double, Int32, Int32, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgressPlain(Double, Int32, Int32, Int32, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 WidthOffset Width offset System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage? WriteProgressPlain(Double, Int32, Int32, Int32, Int32, Boolean, Boolean) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 LeftWidthOffset Width offset from the left System.Int32 RightWidthOffset Width offset from the right System.Boolean DrawBorder Whether to draw the border or not System.Boolean Targeted Targeted percentage?"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html",
    "title": "Class ProgressBarVerticalColor | Terminaux API - Aptivi Internals",
    "keywords": "Class ProgressBarVerticalColor Vertical progress bar writer with color support Inheritance System.Object ProgressBarVerticalColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class ProgressBarVerticalColor : object Methods WriteVerticalProgress(Double, Int32, Int32, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 HeightOffset Height offset System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Int32, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 TopHeightOffset Height offset from the top System.Int32 BottomHeightOffset Height offset from the bottom System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Int32, Color, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 TopHeightOffset Height offset from the top System.Int32 BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Int32, Color, Color, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 TopHeightOffset Height offset from the top System.Int32 BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Int32, ConsoleColors, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 TopHeightOffset Height offset from the top System.Int32 BottomHeightOffset Height offset from the bottom ConsoleColors ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Int32, ConsoleColors, ConsoleColors, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 TopHeightOffset Height offset from the top System.Int32 BottomHeightOffset Height offset from the bottom ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Color, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 HeightOffset Height offset Color ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, Color, Color, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, ConsoleColors, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 HeightOffset Height offset ConsoleColors ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Int32, ConsoleColors, ConsoleColors, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 HeightOffset Height offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Color, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top Color ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, Color, Color, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, ConsoleColors, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top ConsoleColors ProgressColor The progress bar color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgress(Double, Int32, Int32, ConsoleColors, ConsoleColors, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgressPlain(Double, Int32, Int32, Boolean) Writes the vertical progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgressPlain(Double, Int32, Int32, Int32, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 HeightOffset Height offset System.Boolean DrawBorder Whether to draw the border or not WriteVerticalProgressPlain(Double, Int32, Int32, Int32, Int32, Boolean) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description System.Double Progress The progress percentage System.Int32 Left The progress position from the upper left corner System.Int32 Top The progress position from the top System.Int32 TopHeightOffset Height offset from the top System.Int32 BottomHeightOffset Height offset from the bottom System.Boolean DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html",
    "title": "Class SeparatorWriterColor | Terminaux API - Aptivi Internals",
    "keywords": "Class SeparatorWriterColor Separator writer Inheritance System.Object SeparatorWriterColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class SeparatorWriterColor : object Methods WriteSeparator(String, Boolean, Object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Boolean PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. System.Object [] Vars Variables to format the message before it's written. WriteSeparator(String, Boolean, Color, Object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, Color Color, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Boolean PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteSeparator(String, Boolean, Color, Color, Object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Boolean PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteSeparator(String, Boolean, ConsoleColors, Object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, ConsoleColors Color, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Boolean PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. ConsoleColors Color A color that will be changed to. System.Object [] Vars Variables to format the message before it's written. WriteSeparator(String, Boolean, ConsoleColors, ConsoleColors, Object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description System.String Text Text to be written. If nothing, the entire line is filled with the separator. System.Boolean PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Object [] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.TableColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.TableColor.html",
    "title": "Class TableColor | Terminaux API - Aptivi Internals",
    "keywords": "Class TableColor Table writer with color support Inheritance System.Object TableColor Namespace : Terminaux.Writer.FancyWriters Assembly : Terminaux.dll Syntax public static class TableColor : object Methods WriteTable(String[], String[,], Int32, Boolean, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[, ] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description System.String [] Headers Headers to insert to the table. System.String [,] Rows Rows to insert to the table. System.Int32 Margin Safe threshold from left System.Boolean SeparateRows Separate the rows? List < CellOptions > CellOptions Specifies the cell options WriteTable(String[], String[,], Int32, Color, Color, Color, Color, Boolean, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[, ] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description System.String [] Headers Headers to insert to the table. System.String [,] Rows Rows to insert to the table. System.Int32 Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. System.Boolean SeparateRows Separate the rows? List < CellOptions > CellOptions Specifies the cell options WriteTable(String[], String[,], Int32, ConsoleColors, ConsoleColors, ConsoleColors, ConsoleColors, Boolean, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[, ] Rows, int Margin, ConsoleColors SeparatorForegroundColor, ConsoleColors HeaderForegroundColor, ConsoleColors ValueForegroundColor, ConsoleColors BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description System.String [] Headers Headers to insert to the table. System.String [,] Rows Rows to insert to the table. System.Int32 Margin Margin offset ConsoleColors SeparatorForegroundColor A separator foreground color that will be changed to. ConsoleColors HeaderForegroundColor A header foreground color that will be changed to. ConsoleColors ValueForegroundColor A value foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. System.Boolean SeparateRows Separate the rows? List < CellOptions > CellOptions Specifies the cell options"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html",
    "title": "Class BorderTools | Terminaux API - Aptivi Internals",
    "keywords": "Class BorderTools All border tools here Inheritance System.Object BorderTools Namespace : Terminaux.Writer.FancyWriters.Tools Assembly : Terminaux.dll Syntax public static class BorderTools : object Properties BorderLeftFrameChar Left frame character Declaration public static char BorderLeftFrameChar { get; set; } Property Value Type Description System.Char BorderLowerFrameChar Lower frame character Declaration public static char BorderLowerFrameChar { get; set; } Property Value Type Description System.Char BorderLowerLeftCornerChar Lower left corner character Declaration public static char BorderLowerLeftCornerChar { get; set; } Property Value Type Description System.Char BorderLowerRightCornerChar Lower right corner character Declaration public static char BorderLowerRightCornerChar { get; set; } Property Value Type Description System.Char BorderRightFrameChar Right frame character Declaration public static char BorderRightFrameChar { get; set; } Property Value Type Description System.Char BorderUpperFrameChar Upper frame character Declaration public static char BorderUpperFrameChar { get; set; } Property Value Type Description System.Char BorderUpperLeftCornerChar Upper left corner character Declaration public static char BorderUpperLeftCornerChar { get; set; } Property Value Type Description System.Char BorderUpperRightCornerChar Upper right corner character Declaration public static char BorderUpperRightCornerChar { get; set; } Property Value Type Description System.Char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html",
    "title": "Class CellOptions | Terminaux API - Aptivi Internals",
    "keywords": "Class CellOptions Table cell options Inheritance System.Object CellOptions Namespace : Terminaux.Writer.FancyWriters.Tools Assembly : Terminaux.dll Syntax public class CellOptions : object Constructors CellOptions(Int32, Int32) Makes a new instance of the cell options class Declaration public CellOptions(int ColumnNumber, int RowNumber) Parameters Type Name Description System.Int32 ColumnNumber The column number System.Int32 RowNumber The row number Properties CellBackgroundColor The custom background cell color Declaration public Color CellBackgroundColor { get; set; } Property Value Type Description Color CellColor The custom cell color Declaration public Color CellColor { get; set; } Property Value Type Description Color ColoredCell Whether to color the cell Declaration public bool ColoredCell { get; set; } Property Value Type Description System.Boolean ColumnIndex The column, or row value, index Declaration public int ColumnIndex { get; } Property Value Type Description System.Int32 ColumnNumber The column, or row value, number Declaration public int ColumnNumber { get; } Property Value Type Description System.Int32 RowIndex The row index Declaration public int RowIndex { get; } Property Value Type Description System.Int32 RowNumber The row number Declaration public int RowNumber { get; } Property Value Type Description System.Int32"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.FigletTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.FigletTools.html",
    "title": "Class FigletTools | Terminaux API - Aptivi Internals",
    "keywords": "Class FigletTools Figlet tools Inheritance System.Object FigletTools Namespace : Terminaux.Writer.FancyWriters.Tools Assembly : Terminaux.dll Syntax public static class FigletTools : object Fields FigletFonts The figlet fonts dictionary. It lists all the Figlet fonts supported by the Figgle library. Declaration public static readonly Dictionary<string, object> FigletFonts Field Value Type Description Dictionary < System.String , System.Object > Methods GetFigletFont(String) Gets the figlet font from font name Declaration public static FiggleFont GetFigletFont(string FontName) Parameters Type Name Description System.String FontName Font name that is supported by the Figgle library. Consult FigletFonts for more info. Returns Type Description FiggleFont Figlet font instance of your font, or Small if not found GetFigletFontName(FiggleFont) Gets the figlet font name from font Declaration public static string GetFigletFontName(FiggleFont Font) Parameters Type Name Description FiggleFont Font Font instance that is supported by the Figgle library. Consult FigletFonts for more info. Returns Type Description System.String Figlet font name of your font, or an empty string if not found Remarks Since the Figgle library doesn't have a meaningful way of checking if the provided FiggleFont exists, the function looks for the specific instance of the font that the function provided to check to see if the FigletFonts contains that specific font instance. GetFigletHeight(String, FiggleFont) Gets the figlet text height Declaration public static int GetFigletHeight(string Text, FiggleFont FigletFont) Parameters Type Name Description System.String Text Text FiggleFont FigletFont Target figlet font Returns Type Description System.Int32 GetFigletLines(String, FiggleFont) Gets the figlet lines Declaration public static string[] GetFigletLines(string Text, FiggleFont FigletFont) Parameters Type Name Description System.String Text Text FiggleFont FigletFont Target figlet font Returns Type Description System.String [] GetFigletWidth(String, FiggleFont) Gets the figlet text width Declaration public static int GetFigletWidth(string Text, FiggleFont FigletFont) Parameters Type Name Description System.String Text Text FiggleFont FigletFont Target figlet font Returns Type Description System.Int32 RenderFiglet(String, FiggleFont, Object[]) Renders the figlet font Declaration public static string RenderFiglet(string Text, FiggleFont FigletFont, params object[] Vars) Parameters Type Name Description System.String Text Text to render FiggleFont FigletFont Figlet font instance to render. Consult FigletFonts for more info. System.Object [] Vars Variables to use when formatting the string Returns Type Description System.String RenderFiglet(String, String, Object[]) Renders the figlet font Declaration public static string RenderFiglet(string Text, string figletFontName, params object[] Vars) Parameters Type Name Description System.String Text Text to render System.String figletFontName Figlet font name to render. Consult FigletFonts for more info. System.Object [] Vars Variables to use when formatting the string Returns Type Description System.String"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.html",
    "title": "Namespace Terminaux.Writer.FancyWriters.Tools | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.FancyWriters.Tools Classes BorderTools All border tools here CellOptions Table cell options FigletTools Figlet tools PowerLineSegment PowerLine segment PowerLineTools PowerLine tools ProgressTools Progress tools"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html",
    "title": "Class PowerLineSegment | Terminaux API - Aptivi Internals",
    "keywords": "Class PowerLineSegment PowerLine segment Inheritance System.Object PowerLineSegment Namespace : Terminaux.Writer.FancyWriters.Tools Assembly : Terminaux.dll Syntax public class PowerLineSegment : object Constructors PowerLineSegment(Color, Color, String, Char, Char) Installs the segment values to the instance Declaration public PowerLineSegment(Color segmentForeground, Color segmentBackground, string segmentText, char segmentIcon = null, char segmentTransitionIcon = null) Parameters Type Name Description Color segmentForeground Color segmentBackground System.String segmentText System.Char segmentIcon System.Char segmentTransitionIcon Properties SegmentBackground Background color or next segment transition color of the segment Declaration public Color SegmentBackground { get; } Property Value Type Description Color SegmentForeground Foreground color of the segment Declaration public Color SegmentForeground { get; } Property Value Type Description Color SegmentIcon Segment icon. This should be an iconic character. Declaration public char SegmentIcon { get; } Property Value Type Description System.Char SegmentText Segment text. Usually a status. Declaration public string SegmentText { get; } Property Value Type Description System.String SegmentTransitionIcon Segment transition icon. This should be an iconic character. Declaration public char SegmentTransitionIcon { get; } Property Value Type Description System.Char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html",
    "title": "Class PowerLineTools | Terminaux API - Aptivi Internals",
    "keywords": "Class PowerLineTools PowerLine tools Inheritance System.Object PowerLineTools Namespace : Terminaux.Writer.FancyWriters.Tools Assembly : Terminaux.dll Syntax public static class PowerLineTools : object Methods RenderSegments(List<PowerLineSegment>) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments) Parameters Type Name Description List < PowerLineSegment > segments List of segments to render Returns Type Description System.String RenderSegments(List<PowerLineSegment>, Color) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments, Color EndingColor) Parameters Type Name Description List < PowerLineSegment > segments List of segments to render Color EndingColor Ending background color for the last segment transition Returns Type Description System.String"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html",
    "title": "Class ProgressTools | Terminaux API - Aptivi Internals",
    "keywords": "Class ProgressTools Progress tools Inheritance System.Object ProgressTools Namespace : Terminaux.Writer.FancyWriters.Tools Assembly : Terminaux.dll Syntax public static class ProgressTools : object Properties ProgressLeftFrameChar Left frame character for the progress bar Declaration public static char ProgressLeftFrameChar { get; set; } Property Value Type Description System.Char ProgressLowerFrameChar Lower frame character for the progress bar Declaration public static char ProgressLowerFrameChar { get; set; } Property Value Type Description System.Char ProgressLowerLeftCornerChar Lower left corner character for the progress bar Declaration public static char ProgressLowerLeftCornerChar { get; set; } Property Value Type Description System.Char ProgressLowerRightCornerChar Lower right corner character for the progress bar Declaration public static char ProgressLowerRightCornerChar { get; set; } Property Value Type Description System.Char ProgressRightFrameChar Right frame character for the progress bar Declaration public static char ProgressRightFrameChar { get; set; } Property Value Type Description System.Char ProgressUpperFrameChar Upper frame character for the progress bar Declaration public static char ProgressUpperFrameChar { get; set; } Property Value Type Description System.Char ProgressUpperLeftCornerChar Upper left corner character for the progress bar Declaration public static char ProgressUpperLeftCornerChar { get; set; } Property Value Type Description System.Char ProgressUpperRightCornerChar Upper right corner character for the progress bar Declaration public static char ProgressUpperRightCornerChar { get; set; } Property Value Type Description System.Char"
  },
  "api/Terminaux.Writer.MiscWriters.html": {
    "href": "api/Terminaux.Writer.MiscWriters.html",
    "title": "Namespace Terminaux.Writer.MiscWriters | Terminaux API - Aptivi Internals",
    "keywords": "Namespace Terminaux.Writer.MiscWriters Classes LineHandleWriter Line handle writer"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html",
    "title": "Class LineHandleWriter | Terminaux API - Aptivi Internals",
    "keywords": "Class LineHandleWriter Line handle writer Inheritance System.Object LineHandleWriter Namespace : Terminaux.Writer.MiscWriters Assembly : Terminaux.dll Syntax public static class LineHandleWriter : object Methods PrintLineWithHandle(String, Int32, Int32) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description System.String Filename Path to text file System.Int32 LineNumber Line number (not index) System.Int32 ColumnNumber Column number (not index). This tells the handle where to place itself PrintLineWithHandle(String, Int32, Int32, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color ColorType) Parameters Type Name Description System.String Filename Path to text file System.Int32 LineNumber Line number (not index) System.Int32 ColumnNumber Column number (not index). This tells the handle where to place itself Color ColorType The type of color PrintLineWithHandle(String[], Int32, Int32) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description System.String [] Array A string array containing the contents of the file System.Int32 LineNumber Line number (not index) System.Int32 ColumnNumber Column number (not index). This tells the handle where to place itself PrintLineWithHandle(String[], Int32, Int32, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color ColorType) Parameters Type Name Description System.String [] Array A string array containing the contents of the file System.Int32 LineNumber Line number (not index) System.Int32 ColumnNumber Column number (not index). This tells the handle where to place itself Color ColorType The type of color"
  },
  "index.html": {
    "href": "index.html",
    "title": "What is Terminaux? | Terminaux API - Aptivi Internals",
    "keywords": "What is Terminaux? Terminaux is a library that allows you to manipulate with the console. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Terminaux, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request ; we don't support override files that are made by clicking on Improve this doc . Any meaningful contributions are welcome. Copyright (c) 2022-2023 Aptivi. All rights reserved."
  }
}