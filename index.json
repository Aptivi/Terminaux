{
  "api/Terminaux.Base.Buffered.Screen.html": {
    "href": "api/Terminaux.Base.Buffered.Screen.html",
    "title": "Class Screen | Terminaux API - Aptivi",
    "keywords": "Class Screen A screen instance to store your buffered screen parts Inheritance object Screen Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public class Screen Constructors | Edit this page View Source Screen() Makes a new instance of the screen Declaration public Screen() Properties | Edit this page View Source ScreenParts Buffered screen parts list to render one by one while buffering the console Declaration public ScreenPart[] ScreenParts { get; } Property Value Type Description ScreenPart[] Methods | Edit this page View Source AddBufferedPart(string, ScreenPart) Adds the buffered part to the list of screen parts Declaration public void AddBufferedPart(string name, ScreenPart part) Parameters Type Name Description string name Screen buffer part name ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source CheckBufferedPart(int) Checks the buffered part to the list of screen parts Declaration public bool CheckBufferedPart(int idx) Parameters Type Name Description int idx Part index Returns Type Description bool Exceptions Type Condition TerminauxException | Edit this page View Source CheckBufferedPart(string) Checks the buffered part to the list of screen parts Declaration public bool CheckBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Returns Type Description bool Exceptions Type Condition TerminauxException | Edit this page View Source EditBufferedPart(int, ScreenPart) Edits the buffered part to the list of screen parts Declaration public void EditBufferedPart(int idx, ScreenPart part) Parameters Type Name Description int idx Part index ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source EditBufferedPart(string, ScreenPart) Edits the buffered part to the list of screen parts Declaration public void EditBufferedPart(string name, ScreenPart part) Parameters Type Name Description string name Screen buffer part name ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source GetBuffer() Gets a buffer from all the buffered screen parts Declaration public string GetBuffer() Returns Type Description string A buffer that is to be written to the console | Edit this page View Source GetBufferedPart(int) Gets the buffered part to the list of screen parts Declaration public ScreenPart GetBufferedPart(int idx) Parameters Type Name Description int idx Part index Returns Type Description ScreenPart Exceptions Type Condition TerminauxException | Edit this page View Source GetBufferedPart(string) Gets the buffered part to the list of screen parts Declaration public ScreenPart GetBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Returns Type Description ScreenPart Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedPart(int) Removes the buffered part from the list of screen parts Declaration public void RemoveBufferedPart(int idx) Parameters Type Name Description int idx Part index Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedPart(string) Removes the buffered part from the list of screen parts Declaration public void RemoveBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedParts() Removes all the buffered parts from the list of screen parts Declaration public void RemoveBufferedParts()"
  },
  "api/Terminaux.Base.Buffered.ScreenPart.html": {
    "href": "api/Terminaux.Base.Buffered.ScreenPart.html",
    "title": "Class ScreenPart | Terminaux API - Aptivi",
    "keywords": "Class ScreenPart Buffered screen part Inheritance object ScreenPart Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public class ScreenPart Constructors | Edit this page View Source ScreenPart() Makes a new instance of the screen part Declaration public ScreenPart() Properties | Edit this page View Source Order Order to use while buffering the screen. Declaration public int Order { get; set; } Property Value Type Description int Remarks This is compared in an ascending way so that the screen management system sorts the parts from the least important to the most important. For example, parts that are in order number 0 will get buffered before parts that have their order number of 1, and so on. Methods | Edit this page View Source AddDynamicText(Func<string>) Adds a dynamic text to the buffer Declaration public void AddDynamicText(Func<string> textFunc) Parameters Type Name Description Func<string> textFunc Text to add to the dynamic buffer queue | Edit this page View Source AddText(string) Adds a text to the buffer Declaration public void AddText(string text) Parameters Type Name Description string text Text to write to the buffer builder | Edit this page View Source AddTextLine(string) Adds a text to the buffer with a new line Declaration public void AddTextLine(string text) Parameters Type Name Description string text Text to write to the buffer builder | Edit this page View Source BackgroundColor(Color, bool) Adds the VT sequence to set the background color Declaration public void BackgroundColor(Color color, bool forceTrue = false) Parameters Type Name Description Color color Color to use for background color bool forceTrue Forces the usage of the true color | Edit this page View Source Clear() Clears the buffer Declaration public void Clear() | Edit this page View Source ForegroundColor(Color, bool) Adds the VT sequence to set the foreground color Declaration public void ForegroundColor(Color color, bool forceTrue = false) Parameters Type Name Description Color color Color to use for foreground color bool forceTrue Forces the usage of the true color | Edit this page View Source GetBuffer() Gets the resulting buffer Declaration public string GetBuffer() Returns Type Description string The resulting buffer | Edit this page View Source LeftPosition(int) Adds the VT sequence to set the left cursor position Declaration public void LeftPosition(int left) Parameters Type Name Description int left Zero-based left position | Edit this page View Source Position(int, int) Adds the VT sequence to set the cursor position Declaration public void Position(int left, int top) Parameters Type Name Description int left Zero-based left position int top Zero-based top position | Edit this page View Source ResetBackgroundColor() Adds the VT sequence to reset the background color Declaration public void ResetBackgroundColor() | Edit this page View Source ResetColors() Adds the VT sequence to reset the colors Declaration public void ResetColors() | Edit this page View Source ResetForegroundColor() Adds the VT sequence to reset the foreground color Declaration public void ResetForegroundColor() | Edit this page View Source TopPosition(int) Adds the VT sequence to set the top cursor position Declaration public void TopPosition(int top) Parameters Type Name Description int top Zero-based top position"
  },
  "api/Terminaux.Base.Buffered.ScreenTools.html": {
    "href": "api/Terminaux.Base.Buffered.ScreenTools.html",
    "title": "Class ScreenTools | Terminaux API - Aptivi",
    "keywords": "Class ScreenTools Buffered screen tools Inheritance object ScreenTools Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public static class ScreenTools Properties | Edit this page View Source CurrentScreen Gets the currently displaying screen Declaration public static Screen CurrentScreen { get; } Property Value Type Description Screen Methods | Edit this page View Source Render(bool) Renders the current screen one time Declaration public static void Render(bool clearScreen = false) Parameters Type Name Description bool clearScreen Whether to clear the screen before writing the buffer down to the console | Edit this page View Source Render(Screen, bool) Renders the screen one time Declaration public static void Render(Screen screen, bool clearScreen = false) Parameters Type Name Description Screen screen The screen to be rendered bool clearScreen Whether to clear the screen before writing the buffer down to the console | Edit this page View Source SetCurrent(Screen) Sets the current screen instance Declaration public static void SetCurrent(Screen screen) Parameters Type Name Description Screen screen The screen to add to the list Exceptions Type Condition TerminauxException | Edit this page View Source UnsetCurrent(Screen) Unsets the current screen instance Declaration public static void UnsetCurrent(Screen screen) Parameters Type Name Description Screen screen The screen to remove from the list Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Base.Buffered.html": {
    "href": "api/Terminaux.Base.Buffered.html",
    "title": "Namespace Terminaux.Base.Buffered | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Buffered Classes Screen A screen instance to store your buffered screen parts ScreenPart Buffered screen part ScreenTools Buffered screen tools"
  },
  "api/Terminaux.Base.Checks.ConsoleChecker.html": {
    "href": "api/Terminaux.Base.Checks.ConsoleChecker.html",
    "title": "Class ConsoleChecker | Terminaux API - Aptivi",
    "keywords": "Class ConsoleChecker Console sanity checking module Inheritance object ConsoleChecker Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class ConsoleChecker Properties | Edit this page View Source HomePath Platform-dependent home path Declaration public static string HomePath { get; } Property Value Type Description string | Edit this page View Source IsDumb Is the console a dumb console? Declaration public static bool IsDumb { get; } Property Value Type Description bool Methods | Edit this page View Source CheckConsole() Checks the running console for sanity, like the incompatible consoles, insane console types, etc. Declaration public static void CheckConsole() | Edit this page View Source CheckConsoleSize(int, int) Checks the console size with edge cases Declaration public static bool CheckConsoleSize(int minimumWidth = 80, int minimumHeight = 24) Parameters Type Name Description int minimumWidth Minimum console window width to check int minimumHeight Minimum console window height to check Returns Type Description bool | Edit this page View Source CheckConsoleSizePrompt(int, int) Checks the console size with edge cases, prompting the user to resize the screen if the minimum console size requirements is not satisfied. Declaration public static void CheckConsoleSizePrompt(int minimumWidth = 80, int minimumHeight = 24) Parameters Type Name Description int minimumWidth Minimum console window width to check int minimumHeight Minimum console window height to check | Edit this page View Source IsConsole256Colors() Does the console support 256 colors? Declaration public static bool IsConsole256Colors() Returns Type Description bool"
  },
  "api/Terminaux.Base.Checks.TerminalEmulatorBlacklist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalEmulatorBlacklist.html",
    "title": "Class TerminalEmulatorBlacklist | Terminaux API - Aptivi",
    "keywords": "Class TerminalEmulatorBlacklist The blacklist module for the terminal emulator Inheritance object TerminalEmulatorBlacklist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalEmulatorBlacklist Methods | Edit this page View Source AddToBlacklist(Func<string, bool>, string) Adds a match for the terminal emulator to the blacklist Declaration public static void AddToBlacklist(Func<string, bool> emulatorQuery, string justification) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match string justification Reason for the blacklist | Edit this page View Source GetBlacklistedEmulators() Gets the blacklisted terminal emulator queries Declaration public static (Func<string, bool>, string)[] GetBlacklistedEmulators() Returns Type Description (Func<string, bool>, string)[] Terminal emulators with their matches and their justifications | Edit this page View Source IsEmulatorBlacklisted() Checks to see if the current terminal emulator is blacklisted Declaration public static (bool blacklisted, string justification) IsEmulatorBlacklisted() Returns Type Description (bool blacklisted, string justification) True if blacklisted; false otherwise | Edit this page View Source IsQueryBlacklisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query blacklisted? Declaration public static bool IsQueryBlacklisted(Func<string, bool> emulatorQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> emulatorQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source RemoveFromBlacklist(Func<string, bool>) Removes a match for the terminal emulator from the blacklist Declaration public static void RemoveFromBlacklist(Func<string, bool> emulatorQuery) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match"
  },
  "api/Terminaux.Base.Checks.TerminalEmulatorGreylist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalEmulatorGreylist.html",
    "title": "Class TerminalEmulatorGreylist | Terminaux API - Aptivi",
    "keywords": "Class TerminalEmulatorGreylist The greylist module for the terminal emulator Inheritance object TerminalEmulatorGreylist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalEmulatorGreylist Methods | Edit this page View Source AddToGreylist(Func<string, bool>, string) Adds a match for the terminal emulator to the greylist Declaration public static void AddToGreylist(Func<string, bool> emulatorQuery, string justification) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match string justification Reason for the greylist | Edit this page View Source GetGreylistedEmulators() Gets the greylisted terminal emulator queries Declaration public static (Func<string, bool>, string)[] GetGreylistedEmulators() Returns Type Description (Func<string, bool>, string)[] Terminal emulators with their matches and their justifications | Edit this page View Source IsEmulatorGreylisted() Checks to see if the current terminal emulator is greylisted Declaration public static (bool greylisted, string justification) IsEmulatorGreylisted() Returns Type Description (bool blacklisted, string justification) True if greylisted; false otherwise | Edit this page View Source IsQueryGreylisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query greylisted? Declaration public static bool IsQueryGreylisted(Func<string, bool> emulatorQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> emulatorQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source RemoveFromGreylist(Func<string, bool>) Removes a match for the terminal emulator from the greylist Declaration public static void RemoveFromGreylist(Func<string, bool> emulatorQuery) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match"
  },
  "api/Terminaux.Base.Checks.TerminalTypeBlacklist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalTypeBlacklist.html",
    "title": "Class TerminalTypeBlacklist | Terminaux API - Aptivi",
    "keywords": "Class TerminalTypeBlacklist The blacklist module for the terminal type Inheritance object TerminalTypeBlacklist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalTypeBlacklist Methods | Edit this page View Source AddToBlacklist(Func<string, bool>, string) Adds a match for the terminal type to the blacklist Declaration public static void AddToBlacklist(Func<string, bool> typeQuery, string justification) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match string justification Reason for the blacklist | Edit this page View Source GetBlacklistedTypes() Gets the blacklisted terminal type queries Declaration public static (Func<string, bool>, string)[] GetBlacklistedTypes() Returns Type Description (Func<string, bool>, string)[] Terminal types with their matches and their justifications | Edit this page View Source IsQueryBlacklisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query blacklisted? Declaration public static bool IsQueryBlacklisted(Func<string, bool> typeQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> typeQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source IsTypeBlacklisted() Checks to see if the current terminal type is blacklisted Declaration public static (bool blacklisted, string justification) IsTypeBlacklisted() Returns Type Description (bool blacklisted, string justification) True if blacklisted; false otherwise | Edit this page View Source RemoveFromBlacklist(Func<string, bool>) Removes a match for the terminal type from the blacklist Declaration public static void RemoveFromBlacklist(Func<string, bool> typeQuery) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match"
  },
  "api/Terminaux.Base.Checks.TerminalTypeGreylist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalTypeGreylist.html",
    "title": "Class TerminalTypeGreylist | Terminaux API - Aptivi",
    "keywords": "Class TerminalTypeGreylist The greylist module for the terminal type Inheritance object TerminalTypeGreylist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalTypeGreylist Methods | Edit this page View Source AddToGreylist(Func<string, bool>, string) Adds a match for the terminal type to the greylist Declaration public static void AddToGreylist(Func<string, bool> typeQuery, string justification) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match string justification Reason for the greylist | Edit this page View Source GetGreylistedTypes() Gets the greylisted terminal type queries Declaration public static (Func<string, bool>, string)[] GetGreylistedTypes() Returns Type Description (Func<string, bool>, string)[] Terminal types with their matches and their justifications | Edit this page View Source IsQueryGreylisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query greylisted? Declaration public static bool IsQueryGreylisted(Func<string, bool> typeQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> typeQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source IsTypeGreylisted() Checks to see if the current terminal type is greylisted Declaration public static (bool greylisted, string justification) IsTypeGreylisted() Returns Type Description (bool blacklisted, string justification) True if greylisted; false otherwise | Edit this page View Source RemoveFromGreylist(Func<string, bool>) Removes a match for the terminal type from the greylist Declaration public static void RemoveFromGreylist(Func<string, bool> typeQuery) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match"
  },
  "api/Terminaux.Base.Checks.html": {
    "href": "api/Terminaux.Base.Checks.html",
    "title": "Namespace Terminaux.Base.Checks | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Checks Classes ConsoleChecker Console sanity checking module TerminalEmulatorBlacklist The blacklist module for the terminal emulator TerminalEmulatorGreylist The greylist module for the terminal emulator TerminalTypeBlacklist The blacklist module for the terminal type TerminalTypeGreylist The greylist module for the terminal type"
  },
  "api/Terminaux.Base.ConsoleExtensions.html": {
    "href": "api/Terminaux.Base.ConsoleExtensions.html",
    "title": "Class ConsoleExtensions | Terminaux API - Aptivi",
    "keywords": "Class ConsoleExtensions Additional routines for the console Inheritance object ConsoleExtensions Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleExtensions Methods | Edit this page View Source ClearKeepPosition() Clears the console buffer, but keeps the current cursor position Declaration public static void ClearKeepPosition() | Edit this page View Source ClearLineToRight() Clears the line to the right Declaration public static void ClearLineToRight() | Edit this page View Source FilterVTSequences(string) Filters the VT sequences that matches the regex Declaration public static string FilterVTSequences(string Text) Parameters Type Name Description string Text The text that contains the VT sequences Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source GetClearLineToRightSequence() Clears the line to the right Declaration public static string GetClearLineToRightSequence() Returns Type Description string | Edit this page View Source GetFilteredPositions(string, bool, params object[]) Get the filtered cursor positions (by filtered means filtered from the VT escape sequences that matches the regex in the routine) Declaration public static (int, int) GetFilteredPositions(string Text, bool line, params object[] Vars) Parameters Type Name Description string Text The text that contains the VT sequences bool line Whether to simulate the new line at the end of text or not object[] Vars Variables to be formatted in the text Returns Type Description (int, int) | Edit this page View Source PercentRepeat(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeat(int CurrentNumber, int MaximumNumber, int WidthOffset) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int WidthOffset The console window width offset. It's usually a multiple of 2. Returns Type Description int How many times to repeat the character | Edit this page View Source PercentRepeatTargeted(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeatTargeted(int CurrentNumber, int MaximumNumber, int TargetWidth) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int TargetWidth The target width Returns Type Description int How many times to repeat the character | Edit this page View Source ResetAll() Resets the entire console Declaration public static void ResetAll() | Edit this page View Source ResetBackground() Resets the background color without clearing screen Declaration public static void ResetBackground() | Edit this page View Source ResetColors() Resets the console colors without clearing screen Declaration public static void ResetColors() | Edit this page View Source ResetForeground() Resets the foreground color without clearing screen Declaration public static void ResetForeground() | Edit this page View Source SetTitle(string) Sets the console title Declaration public static void SetTitle(string Text) Parameters Type Name Description string Text The text to be set"
  },
  "api/Terminaux.Base.ConsolePlatform.html": {
    "href": "api/Terminaux.Base.ConsolePlatform.html",
    "title": "Class ConsolePlatform | Terminaux API - Aptivi",
    "keywords": "Class ConsolePlatform Console platform class Inheritance object ConsolePlatform Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsolePlatform Methods | Edit this page View Source GetTerminalEmulator() Polls $TERM_PROGRAM to get terminal emulator Declaration public static string GetTerminalEmulator() Returns Type Description string | Edit this page View Source GetTerminalType() Polls $TERM to get terminal type (vt100, dumb, ...) Declaration public static string GetTerminalType() Returns Type Description string | Edit this page View Source IsOnMacOS() Is this system a macOS system? Declaration public static bool IsOnMacOS() Returns Type Description bool | Edit this page View Source IsOnUnix() Is this system a Unix system? True for macOS, too! Declaration public static bool IsOnUnix() Returns Type Description bool | Edit this page View Source IsOnUnixMusl() Is this system a Unix system that contains musl libc? Declaration public static bool IsOnUnixMusl() Returns Type Description bool True if running on Unix systems that use musl libc. Otherwise, false. | Edit this page View Source IsOnWindows() Is this system a Windows system? Declaration public static bool IsOnWindows() Returns Type Description bool | Edit this page View Source IsRunningFromGrilo() Is Terminaux running from GRILO? Declaration public static bool IsRunningFromGrilo() Returns Type Description bool | Edit this page View Source IsRunningFromMono() Is Terminaux running from Mono? Declaration public static bool IsRunningFromMono() Returns Type Description bool | Edit this page View Source IsRunningFromScreen() Is Terminaux running from GNU Screen? Declaration public static bool IsRunningFromScreen() Returns Type Description bool | Edit this page View Source IsRunningFromTmux() Is Terminaux running from TMUX? Declaration public static bool IsRunningFromTmux() Returns Type Description bool"
  },
  "api/Terminaux.Base.ConsoleResizeHandler.html": {
    "href": "api/Terminaux.Base.ConsoleResizeHandler.html",
    "title": "Class ConsoleResizeHandler | Terminaux API - Aptivi",
    "keywords": "Class ConsoleResizeHandler The console resize listener module Inheritance object ConsoleResizeHandler Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleResizeHandler Properties | Edit this page View Source RunEssentialHandler Whether to run the base console resize handler or not after running a custom action Declaration public static bool RunEssentialHandler { get; set; } Property Value Type Description bool Methods | Edit this page View Source GetCurrentConsoleSize() Gets the console size from the cached window height and width position Declaration public static (int Width, int Height) GetCurrentConsoleSize() Returns Type Description (int, int) | Edit this page View Source WasResized(bool) This property checks to see if the console has been resized since the last time it has been called or the listener has started. Declaration public static bool WasResized(bool reset = true) Parameters Type Name Description bool reset Reset the resized value once this is called Returns Type Description bool"
  },
  "api/Terminaux.Base.ConsoleWrapper.html": {
    "href": "api/Terminaux.Base.ConsoleWrapper.html",
    "title": "Class ConsoleWrapper | Terminaux API - Aptivi",
    "keywords": "Class ConsoleWrapper Wrapper for the Console class to ensure safety against dumb consoles. This connects to the console wrapper that Terminaux manages. Inheritance object ConsoleWrapper Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleWrapper Properties | Edit this page View Source BufferHeight The console buffer height (rows) Declaration public static int BufferHeight { get; } Property Value Type Description int | Edit this page View Source CursorLeft The cursor left position Declaration public static int CursorLeft { get; set; } Property Value Type Description int | Edit this page View Source CursorTop The cursor top position Declaration public static int CursorTop { get; set; } Property Value Type Description int | Edit this page View Source CursorVisible The cursor visibility mode Declaration public static bool CursorVisible { get; set; } Property Value Type Description bool | Edit this page View Source IsDumb Checks to see if the console is dumb Declaration public static bool IsDumb { get; } Property Value Type Description bool | Edit this page View Source KeyAvailable Whether a key is pressed Declaration public static bool KeyAvailable { get; } Property Value Type Description bool | Edit this page View Source TreatCtrlCAsInput Whether to treat Ctrl + C as input or not Declaration public static bool TreatCtrlCAsInput { get; set; } Property Value Type Description bool | Edit this page View Source WindowHeight The console window height (rows) Declaration public static int WindowHeight { get; } Property Value Type Description int | Edit this page View Source WindowWidth The console window width (columns) Declaration public static int WindowWidth { get; } Property Value Type Description int Methods | Edit this page View Source Beep() Beeps the console Declaration public static void Beep() | Edit this page View Source Clear() Clears the console screen. Declaration public static void Clear() | Edit this page View Source ReadKey(bool) Reads a key Declaration public static ConsoleKeyInfo ReadKey(bool intercept = false) Parameters Type Name Description bool intercept Whether to intercept Returns Type Description ConsoleKeyInfo | Edit this page View Source SetCursorPosition(int, int) Sets the cursor position Declaration public static void SetCursorPosition(int left, int top) Parameters Type Name Description int left The left to be set (from 0) int top The top to be set (from 0) | Edit this page View Source Write(char) Writes a character to console Declaration public static void Write(char value) Parameters Type Name Description char value A character | Edit this page View Source Write(string) Writes text to console Declaration public static void Write(string text) Parameters Type Name Description string text The text to write | Edit this page View Source Write(string, params object[]) Writes text to console Declaration public static void Write(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate | Edit this page View Source WriteLine() Writes new line to console Declaration public static void WriteLine() | Edit this page View Source WriteLine(string) Writes text to console with line terminator Declaration public static void WriteLine(string text) Parameters Type Name Description string text The text to write | Edit this page View Source WriteLine(string, params object[]) Writes text to console with line terminator Declaration public static void WriteLine(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate | Edit this page View Source WriteLine(string, TermReaderSettings) Writes text to console with line terminator Declaration public static void WriteLine(string text, TermReaderSettings settings) Parameters Type Name Description string text The text to write TermReaderSettings settings Reader settings | Edit this page View Source WriteLine(string, TermReaderSettings, params object[]) Writes text to console with line terminator Declaration public static void WriteLine(string text, TermReaderSettings settings, params object[] args) Parameters Type Name Description string text The text to write TermReaderSettings settings Reader settings object[] args The arguments to evaluate"
  },
  "api/Terminaux.Base.ConsoleWrapperTools.html": {
    "href": "api/Terminaux.Base.ConsoleWrapperTools.html",
    "title": "Class ConsoleWrapperTools | Terminaux API - Aptivi",
    "keywords": "Class ConsoleWrapperTools Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. Inheritance object ConsoleWrapperTools Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleWrapperTools Properties | Edit this page View Source ActionBeep Beeps the console Declaration public static Action ActionBeep { set; } Property Value Type Description Action | Edit this page View Source ActionBufferHeight The console buffer height (rows) Declaration public static Func<int> ActionBufferHeight { set; } Property Value Type Description Func<int> | Edit this page View Source ActionClear Clears the console Declaration public static Action ActionClear { set; } Property Value Type Description Action | Edit this page View Source ActionCursorLeft The cursor left position Declaration public static Func<int> ActionCursorLeft { set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorTop The cursor top position Declaration public static Func<int> ActionCursorTop { set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorVisible The cursor visibility mode Declaration public static Action<bool> ActionCursorVisible { set; } Property Value Type Description Action<bool> | Edit this page View Source ActionGetCursorVisible The cursor visibility mode Declaration public static Func<bool> ActionGetCursorVisible { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionGetTreatCtrlCAsInput Whether to treat CTRL + C as input Declaration public static Func<bool> ActionGetTreatCtrlCAsInput { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionIsDumb Is the console a dumb console? Declaration public static Func<bool> ActionIsDumb { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionKeyAvailable Whether a key is pressed Declaration public static Func<bool> ActionKeyAvailable { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionReadKey Reads a key Boolean value indicates whether to intercept Declaration public static Func<bool, ConsoleKeyInfo> ActionReadKey { set; } Property Value Type Description Func<bool, ConsoleKeyInfo> | Edit this page View Source ActionSetCursorLeft Sets the cursor left position First integer is the X position from 0 Declaration public static Action<int> ActionSetCursorLeft { set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetCursorPosition Sets the cursor position First integer is the X position from 0 Second integer is the Y position from 0 Declaration public static Action<int, int> ActionSetCursorPosition { set; } Property Value Type Description Action<int, int> | Edit this page View Source ActionSetCursorTop Sets the cursor top position First integer is the Y position from 0 Declaration public static Action<int> ActionSetCursorTop { set; } Property Value Type Description Action<int> | Edit this page View Source ActionTreatCtrlCAsInput Whether to treat CTRL + C as input Declaration public static Action<bool> ActionTreatCtrlCAsInput { set; } Property Value Type Description Action<bool> | Edit this page View Source ActionWindowHeight The console window height (rows) Declaration public static Func<int> ActionWindowHeight { set; } Property Value Type Description Func<int> | Edit this page View Source ActionWindowWidth The console window width (columns) Declaration public static Func<int> ActionWindowWidth { set; } Property Value Type Description Func<int> | Edit this page View Source ActionWriteChar Writes a character to console A character Declaration public static Action<char> ActionWriteChar { set; } Property Value Type Description Action<char> | Edit this page View Source ActionWriteLine Writes new line to console Declaration public static Action ActionWriteLine { set; } Property Value Type Description Action | Edit this page View Source ActionWriteLineParameterized Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteLineParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteLineParameterizedNonStandalone Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteLineParameterizedNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings, object[]> | Edit this page View Source ActionWriteLineString Writes text to console with line terminator The text to write Declaration public static Action<string> ActionWriteLineString { set; } Property Value Type Description Action<string> | Edit this page View Source ActionWriteLineStringNonStandalone Writes text to console with line terminator The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteLineStringNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings> | Edit this page View Source ActionWriteParameterized Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteParameterizedNonStandalone Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteParameterizedNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings, object[]> | Edit this page View Source ActionWriteString Writes text to console The text to write Declaration public static Action<string> ActionWriteString { set; } Property Value Type Description Action<string> | Edit this page View Source ActionWriteStringNonStandalone Writes text to console The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteStringNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings>"
  },
  "api/Terminaux.Base.TerminauxContinuableException.html": {
    "href": "api/Terminaux.Base.TerminauxContinuableException.html",
    "title": "Class TerminauxContinuableException | Terminaux API - Aptivi",
    "keywords": "Class TerminauxContinuableException Terminaux continuable exception class Inheritance object Exception TerminauxContinuableException Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public class TerminauxContinuableException : Exception Constructors | Edit this page View Source TerminauxContinuableException() Declaration public TerminauxContinuableException() | Edit this page View Source TerminauxContinuableException(string) Declaration public TerminauxContinuableException(string message) Parameters Type Name Description string message | Edit this page View Source TerminauxContinuableException(string, Exception) Declaration public TerminauxContinuableException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/Terminaux.Base.TerminauxException.html": {
    "href": "api/Terminaux.Base.TerminauxException.html",
    "title": "Class TerminauxException | Terminaux API - Aptivi",
    "keywords": "Class TerminauxException Terminaux exception class Inheritance object Exception TerminauxException Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public class TerminauxException : Exception Constructors | Edit this page View Source TerminauxException() Declaration public TerminauxException() | Edit this page View Source TerminauxException(string) Declaration public TerminauxException(string message) Parameters Type Name Description string message | Edit this page View Source TerminauxException(string, Exception) Declaration public TerminauxException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/Terminaux.Base.html": {
    "href": "api/Terminaux.Base.html",
    "title": "Namespace Terminaux.Base | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base Classes ConsoleExtensions Additional routines for the console ConsolePlatform Console platform class ConsoleResizeHandler The console resize listener module ConsoleWrapper Wrapper for the Console class to ensure safety against dumb consoles. This connects to the console wrapper that Terminaux manages. ConsoleWrapperTools Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. TerminauxContinuableException Terminaux continuable exception class TerminauxException Terminaux exception class"
  },
  "api/Terminaux.Colors.Color.html": {
    "href": "api/Terminaux.Colors.Color.html",
    "title": "Class Color | Terminaux API - Aptivi",
    "keywords": "Class Color Color information class Inheritance object Color Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class Color Constructors | Edit this page View Source Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColor, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef, ColorSettings settings) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(int) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum) Parameters Type Name Description int ColorNum The color number Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, int, int) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, int, int, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B, ColorSettings settings) Parameters Type Name Description int R The red level int G The green level int B The blue level ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum, ColorSettings settings) Parameters Type Name Description int ColorNum The color number ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(string) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Exceptions Type Condition TerminauxException | Edit this page View Source Color(string, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier, ColorSettings settings) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColors, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef, ColorSettings settings) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException Properties | Edit this page View Source B The blue color value [0 -> 255] Declaration public int B { get; } Property Value Type Description int | Edit this page View Source BNormalized The blue color value [0.0 -> 0.1] Declaration public double BNormalized { get; } Property Value Type Description double | Edit this page View Source Brightness Determines the color brightness whether it indicates dark or light mode Declaration public ColorBrightness Brightness { get; } Property Value Type Description ColorBrightness | Edit this page View Source ColorEnum16 The color value converted to ConsoleColor. Not applicable [-1] to true color and 256 colors Declaration public ConsoleColor ColorEnum16 { get; } Property Value Type Description ConsoleColor | Edit this page View Source ColorEnum255 The color value converted to ConsoleColors. Not applicable [-1] to true color Declaration public ConsoleColors ColorEnum255 { get; } Property Value Type Description ConsoleColors | Edit this page View Source ColorId The color ID for 256- and 16-color modes. Declaration public int ColorId { get; } Property Value Type Description int | Edit this page View Source Empty Empty color singleton Declaration public static Color Empty { get; } Property Value Type Description Color | Edit this page View Source G The green color value [0 -> 255] Declaration public int G { get; } Property Value Type Description int | Edit this page View Source GNormalized The green color value [0.0 -> 0.1] Declaration public double GNormalized { get; } Property Value Type Description double | Edit this page View Source Hex Hexadecimal representation of the color Declaration public string Hex { get; } Property Value Type Description string | Edit this page View Source PlainSequence Either 0-255, or <R>;<G>;<B>, depending on the usage of the terminal palette. Declaration public string PlainSequence { get; } Property Value Type Description string | Edit this page View Source PlainSequenceEnclosed Either 0-255, or <R>;<G>;<B> enclosed in quotes if necessary. Declaration public string PlainSequenceEnclosed { get; } Property Value Type Description string | Edit this page View Source PlainSequenceEnclosedTrueColor <R>;<G>;<B> enclosed in quotes if necessary Declaration public string PlainSequenceEnclosedTrueColor { get; } Property Value Type Description string | Edit this page View Source PlainSequenceOriginal Either 0-255, or <R>;<G>;<B> in its original form. Declaration public string PlainSequenceOriginal { get; } Property Value Type Description string | Edit this page View Source PlainSequenceTrueColor <R>;<G>;<B> Declaration public string PlainSequenceTrueColor { get; } Property Value Type Description string | Edit this page View Source R The red color value [0 -> 255] Declaration public int R { get; } Property Value Type Description int | Edit this page View Source RGB An instance of RGB Declaration public RedGreenBlue RGB { get; } Property Value Type Description RedGreenBlue | Edit this page View Source RNormalized The red color value [0.0 -> 0.1] Declaration public double RNormalized { get; } Property Value Type Description double | Edit this page View Source Type Color type Declaration public ColorType Type { get; } Property Value Type Description ColorType | Edit this page View Source VTSequenceBackground Parsable VT sequence (Background) Declaration public string VTSequenceBackground { get; } Property Value Type Description string | Edit this page View Source VTSequenceBackgroundOriginal Parsable VT sequence (Background, original) Declaration public string VTSequenceBackgroundOriginal { get; } Property Value Type Description string | Edit this page View Source VTSequenceBackgroundTrueColor Parsable VT sequence (Background, true color) Declaration public string VTSequenceBackgroundTrueColor { get; } Property Value Type Description string | Edit this page View Source VTSequenceForeground Parsable VT sequence (Foreground) Declaration public string VTSequenceForeground { get; } Property Value Type Description string | Edit this page View Source VTSequenceForegroundOriginal Parsable VT sequence (Foreground, original) Declaration public string VTSequenceForegroundOriginal { get; } Property Value Type Description string | Edit this page View Source VTSequenceForegroundTrueColor Parsable VT sequence (Foreground, true color) Declaration public string VTSequenceForegroundTrueColor { get; } Property Value Type Description string Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(Color) Checks to see if this instance of the color is equal to another instance of the color Declaration public bool Equals(Color other) Parameters Type Name Description Color other Another instance of the color to compare with this color Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source Equals(Color, Color) Checks to see if the first instance of the color is equal to another instance of the color Declaration public bool Equals(Color other, Color other2) Parameters Type Name Description Color other Another instance of the color to compare with another Color other2 Another instance of the color to compare with another Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() Either 0-255, or <R>;<G>;<B>, depending on the usage of the terminal palette. Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(Color, Color) Declaration public static bool operator ==(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool | Edit this page View Source implicit operator Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(int) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(int ColorNum) Parameters Type Name Description int ColorNum The color number Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(string) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source operator !=(Color, Color) Declaration public static bool operator !=(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool Extension Methods ColorContrast.GetContrastColorHalf(Color) ColorContrast.GetContrastColorNtsc(Color)"
  },
  "api/Terminaux.Colors.ColorBrightness.html": {
    "href": "api/Terminaux.Colors.ColorBrightness.html",
    "title": "Enum ColorBrightness | Terminaux API - Aptivi",
    "keywords": "Enum ColorBrightness Color brightness enumeration Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public enum ColorBrightness Fields Name Description Dark Dark color Light Light color"
  },
  "api/Terminaux.Colors.ColorContrast.html": {
    "href": "api/Terminaux.Colors.ColorContrast.html",
    "title": "Class ColorContrast | Terminaux API - Aptivi",
    "keywords": "Class ColorContrast Color contrast tools Inheritance object ColorContrast Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public static class ColorContrast Methods | Edit this page View Source GetContrastColorHalf(Color) Gets the color contrast appropriate for the specified color using the half white integer Declaration public static Color GetContrastColorHalf(this Color color) Parameters Type Name Description Color color Target color to work on Returns Type Description Color Black if the color is greater than half white; otherwise, false. | Edit this page View Source GetContrastColorNtsc(Color) Gets the color contrast appropriate for the specified color using the luma part of the YIQ color space (NTSC 1953) Declaration public static Color GetContrastColorNtsc(this Color color) Parameters Type Name Description Color color Target color to work on Returns Type Description Color Black if the luma info is less than or equal to 128, or white if greater than 128 | Edit this page View Source IsSeeable(ColorType, int, int, int, int) Checks to see if the specified color is considered seeable Declaration public static bool IsSeeable(ColorType type, int colorLevel, int colorR, int colorG, int colorB) Parameters Type Name Description ColorType type The color type to use int colorLevel The color level that is in the range of 0-255 int colorR The red color level int colorG The green color level int colorB The blue color level Returns Type Description bool True if the specified color is considered \"seeable.\" False otherwise. Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.ColorContrastType.html": {
    "href": "api/Terminaux.Colors.ColorContrastType.html",
    "title": "Enum ColorContrastType | Terminaux API - Aptivi",
    "keywords": "Enum ColorContrastType The color contrast type Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public enum ColorContrastType Fields Name Description Half Uses the half-white contrast method to determine the color contrast used for mixing (black or white) Light Uses the light vs. dark contrast method to determine the color contrast used for mixing (black or white) Ntsc Uses the NTSC contrast method (see LumaInPhaseQuadrature for more info) to determine the color contrast used for mixing (black or white)"
  },
  "api/Terminaux.Colors.ColorSettings.html": {
    "href": "api/Terminaux.Colors.ColorSettings.html",
    "title": "Class ColorSettings | Terminaux API - Aptivi",
    "keywords": "Class ColorSettings The color settings class Inheritance object ColorSettings Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class ColorSettings Properties | Edit this page View Source ColorBlindnessSeverity The color blindness severity (Only for color blindness formulas): Protan Deutan Tritan Declaration public double ColorBlindnessSeverity { get; set; } Property Value Type Description double | Edit this page View Source ColorTransformationFormula The color transformation formula to use when generating transformed colors, such as color blindness. Declaration public TransformationFormula ColorTransformationFormula { get; set; } Property Value Type Description TransformationFormula | Edit this page View Source ColorTransformationMethod The color transformation method for color blindness. Declaration public TransformationMethod ColorTransformationMethod { get; set; } Property Value Type Description TransformationMethod | Edit this page View Source EnableColorTransformation Enables the color transformation to adjust to color blindness upon making a new instance of color Declaration public bool EnableColorTransformation { get; set; } Property Value Type Description bool | Edit this page View Source UseTerminalPalette If enabled, calls to PlainSequence and its siblings return color ID if said color is either a 256 color or a 16 color. Otherwise, calls to these properties are wrappers to PlainSequenceTrueColor and its siblings. By default, it's enabled. Declaration public bool UseTerminalPalette { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Colors.ColorTools.html": {
    "href": "api/Terminaux.Colors.ColorTools.html",
    "title": "Class ColorTools | Terminaux API - Aptivi",
    "keywords": "Class ColorTools Color tools and management Inheritance object ColorTools Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public static class ColorTools Properties | Edit this page View Source CurrentBackgroundColor Current background color Declaration public static Color CurrentBackgroundColor { get; } Property Value Type Description Color | Edit this page View Source CurrentForegroundColor Current foreground color Declaration public static Color CurrentForegroundColor { get; } Property Value Type Description Color | Edit this page View Source GlobalSettings Global color settings Declaration public static ColorSettings GlobalSettings { get; } Property Value Type Description ColorSettings Methods | Edit this page View Source ConvertFromHexToRGB(string) Converts from the hexadecimal representation of a color to the RGB sequence Declaration [Obsolete(\"Use Color.Hex instead. It'll be removed in a future release.\")] public static string ConvertFromHexToRGB(string Hex) Parameters Type Name Description string Hex A hexadecimal representation of a color (#AABBCC for example) Returns Type Description string <R>;<G>;<B> | Edit this page View Source ConvertFromRGBToHex(int, int, int) Converts from the RGB sequence of a color to the hexadecimal representation Declaration [Obsolete(\"Use Color.Hex instead. It'll be removed in a future release.\")] public static string ConvertFromRGBToHex(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Returns Type Description string A hexadecimal representation of a color (#AABBCC for example) | Edit this page View Source ConvertFromRGBToHex(string) Converts from the RGB sequence of a color to the hexadecimal representation Declaration [Obsolete(\"Use Color.Hex instead. It'll be removed in a future release.\")] public static string ConvertFromRGBToHex(string RGBSequence) Parameters Type Name Description string RGBSequence <R>;<G>;<B> Returns Type Description string A hexadecimal representation of a color (#AABBCC for example) | Edit this page View Source CorrectStandardColor(ConsoleColor) Corrects the color map for ConsoleColor according to the X11 specification Declaration public static ConsoleColor CorrectStandardColor(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to correct this color Returns Type Description ConsoleColor Corrected ConsoleColor | Edit this page View Source GetGray(Color, ColorContrastType) Gets the gray color according to the brightness of the specified color Declaration public static Color GetGray(Color color, ColorContrastType contrastType = ColorContrastType.Light) Parameters Type Name Description Color color Target color to use when getting the gray color ColorContrastType contrastType Contrast type Returns Type Description Color | Edit this page View Source GetGray(ColorContrastType) Gets the gray color according to the brightness of the background color Declaration public static Color GetGray(ColorContrastType contrastType = ColorContrastType.Light) Parameters Type Name Description ColorContrastType contrastType Contrast type Returns Type Description Color | Edit this page View Source GetRandomColor(bool) Gets a random color instance (true color) Declaration public static Color GetRandomColor(bool selectBlack = true) Parameters Type Name Description bool selectBlack Whether to select the black color or not Returns Type Description Color A color instance | Edit this page View Source GetRandomColor(ColorType, bool) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, bool selectBlack = true) Parameters Type Name Description ColorType type Color type to generate bool selectBlack Whether to select the black color or not Returns Type Description Color A color instance | Edit this page View Source GetRandomColor(ColorType, int, int, int, int, int, int, int, int) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, int minColor, int maxColor, int minColorR, int maxColorR, int minColorG, int maxColorG, int minColorB, int maxColorB) Parameters Type Name Description ColorType type Color type to generate int minColor The minimum color level int maxColor The maximum color level int minColorR The minimum red color level int maxColorR The maximum red color level int minColorG The minimum green color level int maxColorG The maximum green color level int minColorB The minimum blue color level int maxColorB The maximum blue color level Returns Type Description Color A color instance | Edit this page View Source LinearRGBTosRGB(double) Converts from Linear RGB to sRGB using a linear RGB number Declaration public static int LinearRGBTosRGB(double linear) Parameters Type Name Description double linear Linear RGB number from 0 to 1 Returns Type Description int sRGB value from 0 to 255 | Edit this page View Source LoadBack() Loads the background Declaration public static void LoadBack() | Edit this page View Source LoadBack(Color, bool) Loads the background Declaration public static void LoadBack(Color ColorSequence, bool Force = false) Parameters Type Name Description Color ColorSequence Color sequence used to load background bool Force Force set background even if background setting is disabled | Edit this page View Source RenderColorBlindnessAware(Color, TransformationFormula, double, TransformationMethod) Provides you an easy way to generate new Color instances with color blindness applied Declaration public static Color RenderColorBlindnessAware(Color color, TransformationFormula formula, double severity, TransformationMethod method = TransformationMethod.Brettel1997) Parameters Type Name Description Color color Color to use TransformationFormula formula Selected formula for color blindness double severity Severity of the color blindness TransformationMethod method Choose color blindness calculation method Returns Type Description Color An instance of Color with adjusted color values for color-blindness | Edit this page View Source SRGBToLinearRGB(int) Converts from sRGB to Linear RGB using a color number Declaration public static double SRGBToLinearRGB(int colorNum) Parameters Type Name Description int colorNum Color number from 0 to 255 Returns Type Description double Linear RGB number ranging from 0 to 1 | Edit this page View Source SetConsoleColor(Color, bool, bool, bool) Sets the console color Declaration public static void SetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled bool canSetBackground Can the console set the background? | Edit this page View Source SetConsoleColorDry(Color, bool, bool, bool) Sets the console color dryly Declaration public static void SetConsoleColorDry(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled bool canSetBackground Can the console set the background? | Edit this page View Source TranslateToStandardColorMap(ConsoleColors) Translates the color from X11's ConsoleColors to .NET's representation, ConsoleColor Declaration public static ConsoleColor TranslateToStandardColorMap(ConsoleColors color) Parameters Type Name Description ConsoleColors color X11's ConsoleColors to translate this color to Returns Type Description ConsoleColor .NET's representation of this color, ConsoleColor | Edit this page View Source TranslateToX11ColorMap(ConsoleColor) Translates the color from .NET's ConsoleColor to X11's representation, ConsoleColors Declaration public static ConsoleColors TranslateToX11ColorMap(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to translate this color to Returns Type Description ConsoleColors X11's representation of this color, ConsoleColors | Edit this page View Source TryParseColor(int) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int ColorNum) Parameters Type Name Description int ColorNum The color number Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(int, int, int) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(string) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, or a VT sequence if using true color as follows: <R>;<G>;<B> Returns Type Description bool True if successful; False if failed | Edit this page View Source TrySetConsoleColor(Color, bool, bool, bool) Sets the console color Declaration public static bool TrySetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled bool canSetBackground Can the console set the background? Returns Type Description bool True if successful; False if unsuccessful | Edit this page View Source TrySetConsoleColorDry(Color, bool, bool, bool) Sets the console color dryly Declaration public static bool TrySetConsoleColorDry(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled bool canSetBackground Can the console set the background? Returns Type Description bool True if successful; False if unsuccessful"
  },
  "api/Terminaux.Colors.ColorType.html": {
    "href": "api/Terminaux.Colors.ColorType.html",
    "title": "Enum ColorType | Terminaux API - Aptivi",
    "keywords": "Enum ColorType Color type enumeration Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public enum ColorType Fields Name Description TrueColor Color is a true color _16Color Color is a 4-bit color _255Color Color is a 8-bit color"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.Hsl.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.Hsl.html",
    "title": "Class ConsoleColorData.Hsl | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorData.Hsl The hue, saturation, and luminance values Inheritance object ConsoleColorData.Hsl Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData.Hsl Properties | Edit this page View Source H The hue level Declaration [JsonIgnore] public float H { get; } Property Value Type Description float | Edit this page View Source L The lightness level Declaration [JsonIgnore] public int L { get; } Property Value Type Description int | Edit this page View Source S The saturation level Declaration [JsonIgnore] public int S { get; } Property Value Type Description int"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.Rgb.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.Rgb.html",
    "title": "Class ConsoleColorData.Rgb | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorData.Rgb Decoy class for RGB Inheritance object ConsoleColorData.Rgb Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData.Rgb Properties | Edit this page View Source B Blue color level Declaration [JsonIgnore] public int B { get; } Property Value Type Description int | Edit this page View Source G Green color level Declaration [JsonIgnore] public int G { get; } Property Value Type Description int | Edit this page View Source R Red color level Declaration [JsonIgnore] public int R { get; } Property Value Type Description int"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.html",
    "title": "Class ConsoleColorData | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorData Console color data Inheritance object ConsoleColorData Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData Properties | Edit this page View Source ColorId The color ID Declaration [JsonIgnore] public int ColorId { get; } Property Value Type Description int | Edit this page View Source HSL The HSL values Declaration [JsonIgnore] public ConsoleColorData.Hsl HSL { get; } Property Value Type Description ConsoleColorData.Hsl | Edit this page View Source HexString Hexadecimal representation of the color Declaration [JsonIgnore] public string HexString { get; } Property Value Type Description string | Edit this page View Source Name The color name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string | Edit this page View Source RGB The RGB values Declaration [JsonIgnore] public ConsoleColorData.Rgb RGB { get; } Property Value Type Description ConsoleColorData.Rgb Methods | Edit this page View Source GetColorData() Gets the console colors data Declaration public static ConsoleColorData[] GetColorData() Returns Type Description ConsoleColorData[]"
  },
  "api/Terminaux.Colors.Data.ConsoleColors.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColors.html",
    "title": "Enum ConsoleColors | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleColors All 255 console colors Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public enum ConsoleColors Fields Name Description Aquamarine1 Aquamarine1_87ffd7 Aquamarine3 Black Blue Blue1 Blue3 Blue3_d7 BlueViolet CadetBlue_5faf87 CadetBlue_5fafaf Chartreuse1 Chartreuse2 Chartreuse2_87d700 Chartreuse3 Chartreuse3_5fd700 Chartreuse4 CornflowerBlue Cornsilk1 Cyan Cyan1 Cyan2 Cyan3 DarkBlue DarkBlue_000087 DarkCyan DarkCyan_00af87 DarkGoldenrod DarkGray DarkGreen DarkGreen_005f00 DarkKhaki DarkMagenta DarkMagenta_870087 DarkMagenta_8700af DarkOliveGreen1 DarkOliveGreen1_d7ff87 DarkOliveGreen2 DarkOliveGreen3 DarkOliveGreen3_87d75f DarkOliveGreen3_afd75f DarkOrange DarkOrange3 DarkOrange3_d75f00 DarkRed DarkRed_5f0000 DarkRed_870000 DarkSeaGreen DarkSeaGreen1 DarkSeaGreen1_d7ffaf DarkSeaGreen2 DarkSeaGreen2_afffaf DarkSeaGreen3 DarkSeaGreen3_afd787 DarkSeaGreen4 DarkSeaGreen4_5faf5f DarkSlateGray1 DarkSlateGray2 DarkSlateGray3 DarkTurquoise DarkViolet DarkViolet_af00d7 DarkYellow DeepPink1_ff0087 DeepPink1_ff00af DeepPink2 DeepPink3 DeepPink3_d70087 DeepPink4 DeepPink4_87005f DeepPink4_af005f DeepSkyBlue1 DeepSkyBlue2 DeepSkyBlue3_0087af DeepSkyBlue3_0087d7 DeepSkyBlue4_005f5f DeepSkyBlue4_005f87 DeepSkyBlue4_005faf DodgerBlue1 DodgerBlue2 DodgerBlue3 Gold1 Gold3 Gold3_d7af00 Gray Green Green1 Green3_00d700 Green3_af00 Green4 GreenYellow Grey0 Grey100 Grey11 Grey15 Grey19 Grey23 Grey27 Grey3 Grey30 Grey35 Grey37 Grey39 Grey42 Grey46 Grey50 Grey53 Grey54 Grey58 Grey62 Grey63 Grey66 Grey69 Grey7 Grey70 Grey74 Grey78 Grey82 Grey84 Grey85 Grey89 Grey93 Honeydew2 HotPink2 HotPink3 HotPink3_d75f87 HotPink_ff5faf HotPink_ff5fd7 IndianRed IndianRed1_ff5f5f IndianRed1_ff5f87 IndianRed_d75f5f Khaki1 Khaki3 LightCoral LightCyan1 LightCyan3 LightGoldenrod1 LightGoldenrod2 LightGoldenrod2_ffd75f LightGoldenrod2_ffd787 LightGoldenrod3 LightGreen LightGreen_87ff87 LightPink1 LightPink3 LightPink4 LightSalmon1 LightSalmon3 LightSalmon3_d7875f LightSeaGreen LightSkyBlue1 LightSkyBlue3 LightSkyBlue3_87afd7 LightSlateBlue LightSlateGrey LightSteelBlue LightSteelBlue1 LightSteelBlue3 LightYellow3 Magenta Magenta1 Magenta2 Magenta2_ff00d7 Magenta3 Magenta3_d700af Magenta3_d700d7 MediumOrchid MediumOrchid1 MediumOrchid1_ff5fff MediumOrchid3 MediumPurple MediumPurple1 MediumPurple2 MediumPurple2_af87d7 MediumPurple3_875faf MediumPurple3_875fd7 MediumPurple4 MediumSpringGreen MediumTurquoise MediumVioletRed MistyRose1 MistyRose3 NavajoWhite1 NavajoWhite3 NavyBlue Orange1 Orange3 Orange4 Orange4_875f00 OrangeRed1 Orchid Orchid1 Orchid2 PaleGreen1 PaleGreen1_afff87 PaleGreen3 PaleGreen3_87d787 PaleTurquoise1 PaleTurquoise4 PaleVioletRed1 Pink1 Pink3 Plum1 Plum2 Plum3 Plum4 Purple Purple3 Purple4_5f0087 Purple4_5f00af Purple_af00ff Red Red1 Red3 Red3_d70000 RosyBrown RoyalBlue1 Salmon1 SandyBrown SeaGreen1 SeaGreen1_5fffaf SeaGreen2 SeaGreen3 SkyBlue1 SkyBlue2 SkyBlue3 SlateBlue1 SlateBlue3_5f5faf SlateBlue3_5f5fd7 SpringGreen1 SpringGreen2 SpringGreen2_00d787 SpringGreen3_00af5f SpringGreen3_00d75f SpringGreen4 SteelBlue SteelBlue1_5fafff SteelBlue1_5fd7ff SteelBlue3 Tan Thistle1 Thistle3 Turquoise2 Turquoise4 Violet Wheat1 Wheat4 White Yellow Yellow1 Yellow2 Yellow3 Yellow3_d7d700 Yellow4 Yellow4_87af00"
  },
  "api/Terminaux.Colors.Data.ConsoleColorsInfo.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorsInfo.html",
    "title": "Class ConsoleColorsInfo | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorsInfo Information for the console colors that fit within the 256 colors Inheritance object ConsoleColorsInfo Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorsInfo Constructors | Edit this page View Source ConsoleColorsInfo(ConsoleColors) Makes a new instance of 255-color console color information Declaration public ConsoleColorsInfo(ConsoleColors ColorValue) Parameters Type Name Description ConsoleColors ColorValue A 255-color console color Properties | Edit this page View Source B The blue color value Declaration public int B { get; } Property Value Type Description int | Edit this page View Source Color A Color instance to get more information Declaration public Color Color { get; } Property Value Type Description Color | Edit this page View Source ColorID The color ID Declaration public int ColorID { get; } Property Value Type Description int | Edit this page View Source G The green color value Declaration public int G { get; } Property Value Type Description int | Edit this page View Source R The red color value Declaration public int R { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with this instance Returns Type Description bool True if both ConsoleColorsInfo instances match; otherwise, false. | Edit this page View Source Equals(ConsoleColorsInfo, ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other, ConsoleColorsInfo other2) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with another instance ConsoleColorsInfo other2 Another instance of ConsoleColorsInfo to compare with another instance Returns Type Description bool True if both ConsoleColorsInfo instances match; otherwise, false. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator ==(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description bool | Edit this page View Source operator !=(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator !=(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description bool"
  },
  "api/Terminaux.Colors.Data.html": {
    "href": "api/Terminaux.Colors.Data.html",
    "title": "Namespace Terminaux.Colors.Data | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Data Classes ConsoleColorData Console color data ConsoleColorData.Hsl The hue, saturation, and luminance values ConsoleColorData.Rgb Decoy class for RGB ConsoleColorsInfo Information for the console colors that fit within the 256 colors Enums ConsoleColors All 255 console colors"
  },
  "api/Terminaux.Colors.Models.Conversion.CmyConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.CmyConversionTools.html",
    "title": "Class CmyConversionTools | Terminaux API - Aptivi",
    "keywords": "Class CmyConversionTools Color model conversion tools (to CMY) Inheritance object CmyConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class CmyConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.CmykConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.CmykConversionTools.html",
    "title": "Class CmykConversionTools | Terminaux API - Aptivi",
    "keywords": "Class CmykConversionTools Color model conversion tools (to CMYK) Inheritance object CmykConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class CmykConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.HslConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.HslConversionTools.html",
    "title": "Class HslConversionTools | Terminaux API - Aptivi",
    "keywords": "Class HslConversionTools Color model conversion tools (to HSL) Inheritance object HslConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class HslConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to HSL Declaration public static HueSaturationLightness ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to HSL Declaration public static HueSaturationLightness ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to HSL Declaration public static HueSaturationLightness ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to HSL Declaration public static HueSaturationLightness ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to HSL Declaration public static HueSaturationLightness ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to HSL Declaration public static HueSaturationLightness ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to HSL Declaration public static HueSaturationLightness ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.HsvConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.HsvConversionTools.html",
    "title": "Class HsvConversionTools | Terminaux API - Aptivi",
    "keywords": "Class HsvConversionTools Color model conversion tools (to HSV) Inheritance object HsvConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class HsvConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to HSV Declaration public static HueSaturationValue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to HSV Declaration public static HueSaturationValue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to HSV Declaration public static HueSaturationValue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to HSV Declaration public static HueSaturationValue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to HSV Declaration public static HueSaturationValue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to HSV Declaration public static HueSaturationValue ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to HSV Declaration public static HueSaturationValue ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.RgbConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.RgbConversionTools.html",
    "title": "Class RgbConversionTools | Terminaux API - Aptivi",
    "keywords": "Class RgbConversionTools Color model conversion tools (to RGB) Inheritance object RgbConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class RgbConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to RGB Declaration public static RedGreenBlue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to RGB Declaration public static RedGreenBlue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to RGB Declaration public static RedGreenBlue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to RGB Declaration public static RedGreenBlue ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to RGB Declaration public static RedGreenBlue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to RGB Declaration public static RedGreenBlue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to RGB Declaration public static RedGreenBlue ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.RybConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.RybConversionTools.html",
    "title": "Class RybConversionTools | Terminaux API - Aptivi",
    "keywords": "Class RybConversionTools Color model conversion tools (to RYB) Inheritance object RybConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class RybConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to RYB Declaration public static RedYellowBlue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to RYB Declaration public static RedYellowBlue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to RYB Declaration public static RedYellowBlue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to RYB Declaration public static RedYellowBlue ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to RYB Declaration public static RedYellowBlue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to RYB Declaration public static RedYellowBlue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to RYB Declaration public static RedYellowBlue ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.YiqConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.YiqConversionTools.html",
    "title": "Class YiqConversionTools | Terminaux API - Aptivi",
    "keywords": "Class YiqConversionTools Color model conversion tools (to YIQ) Inheritance object YiqConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class YiqConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.YuvConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.YuvConversionTools.html",
    "title": "Class YuvConversionTools | Terminaux API - Aptivi",
    "keywords": "Class YuvConversionTools Color model conversion tools (to YUV) Inheritance object YuvConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class YuvConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to YUV Declaration public static LumaChromaUv ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to YUV Declaration public static LumaChromaUv ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to YUV Declaration public static LumaChromaUv ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to YUV Declaration public static LumaChromaUv ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to YUV Declaration public static LumaChromaUv ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to YUV Declaration public static LumaChromaUv ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to YUV Declaration public static LumaChromaUv ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.html",
    "title": "Namespace Terminaux.Colors.Models.Conversion | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models.Conversion Classes CmyConversionTools Color model conversion tools (to CMY) CmykConversionTools Color model conversion tools (to CMYK) HslConversionTools Color model conversion tools (to HSL) HsvConversionTools Color model conversion tools (to HSV) RgbConversionTools Color model conversion tools (to RGB) RybConversionTools Color model conversion tools (to RYB) YiqConversionTools Color model conversion tools (to YIQ) YuvConversionTools Color model conversion tools (to YUV)"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellow.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellow.html",
    "title": "Class CyanMagentaYellow | Terminaux API - Aptivi",
    "keywords": "Class CyanMagentaYellow The CMY class instance Inheritance object CyanMagentaYellow Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellow Properties | Edit this page View Source C The cyan color value [0.0 -> 1.0] Declaration public double C { get; } Property Value Type Description double | Edit this page View Source CWhole The cyan color value [0 -> 100] Declaration public int CWhole { get; } Property Value Type Description int | Edit this page View Source M The magenta color value [0.0 -> 1.0] Declaration public double M { get; } Property Value Type Description double | Edit this page View Source MWhole The magenta color value [0 -> 100] Declaration public int MWhole { get; } Property Value Type Description int | Edit this page View Source Y The yellow color value [0.0 -> 1.0] Declaration public double Y { get; } Property Value Type Description double | Edit this page View Source YWhole The yellow color value [0 -> 100] Declaration public int YWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellow) Declaration public bool Equals(CyanMagentaYellow other) Parameters Type Name Description CyanMagentaYellow other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() cmy:<C>;<M>;<Y> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator ==(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator !=(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html",
    "title": "Class CyanMagentaYellowKey | Terminaux API - Aptivi",
    "keywords": "Class CyanMagentaYellowKey The CMYK class instance Inheritance object CyanMagentaYellowKey Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellowKey Properties | Edit this page View Source CMY The Cyan, Magenta, and Yellow color values Declaration public CyanMagentaYellow CMY { get; } Property Value Type Description CyanMagentaYellow | Edit this page View Source K The black key color value [0.0 -> 1.0] Declaration public double K { get; } Property Value Type Description double | Edit this page View Source KWhole The black key color value [0 -> 100] Declaration public int KWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellowKey) Declaration public bool Equals(CyanMagentaYellowKey other) Parameters Type Name Description CyanMagentaYellowKey other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() cmyk:<C>;<M>;<Y>;<K> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator ==(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator !=(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationLightness.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationLightness.html",
    "title": "Class HueSaturationLightness | Terminaux API - Aptivi",
    "keywords": "Class HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model Inheritance object HueSaturationLightness Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationLightness Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source Lightness The lightness of the color, indicating how light the color is [0.0 -> 1.0] Declaration public double Lightness { get; } Property Value Type Description double | Edit this page View Source LightnessWhole The lightness of the color, indicating how light the color is [0 -> 100] Declaration public int LightnessWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationLightness) Declaration public bool Equals(HueSaturationLightness other) Parameters Type Name Description HueSaturationLightness other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() hsl:<H>;<S>;<L> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator ==(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator !=(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationValue.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationValue.html",
    "title": "Class HueSaturationValue | Terminaux API - Aptivi",
    "keywords": "Class HueSaturationValue The Hue, Saturation, and Value (HSV) model Inheritance object HueSaturationValue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationValue Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int | Edit this page View Source Value The value of the color [0.0 -> 1.0] Declaration public double Value { get; } Property Value Type Description double | Edit this page View Source ValueWhole The value of the color [0 -> 100] Declaration public int ValueWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationValue) Declaration public bool Equals(HueSaturationValue other) Parameters Type Name Description HueSaturationValue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() hsv:<H>;<S>;<V> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(HueSaturationValue, HueSaturationValue) Declaration public static bool operator ==(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationValue, HueSaturationValue) Declaration public static bool operator !=(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.LumaChromaUv.html": {
    "href": "api/Terminaux.Colors.Models.LumaChromaUv.html",
    "title": "Class LumaChromaUv | Terminaux API - Aptivi",
    "keywords": "Class LumaChromaUv The Luma chroma (YUV, PAL, SDTV with BT.470) model Inheritance object LumaChromaUv Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class LumaChromaUv Properties | Edit this page View Source ChromaU The U component, known as chroma [0 -> 255] Declaration public double ChromaU { get; } Property Value Type Description double | Edit this page View Source ChromaV The V component, known as chroma [0 -> 255] Declaration public double ChromaV { get; } Property Value Type Description double | Edit this page View Source Luma The Y component, known as luma information [0 -> 255] Declaration public double Luma { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(LumaChromaUv) Declaration public bool Equals(LumaChromaUv other) Parameters Type Name Description LumaChromaUv other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() yuv:<Y>;<I>;<Q> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(LumaChromaUv, LumaChromaUv) Declaration public static bool operator ==(LumaChromaUv left, LumaChromaUv right) Parameters Type Name Description LumaChromaUv left LumaChromaUv right Returns Type Description bool | Edit this page View Source operator !=(LumaChromaUv, LumaChromaUv) Declaration public static bool operator !=(LumaChromaUv left, LumaChromaUv right) Parameters Type Name Description LumaChromaUv left LumaChromaUv right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.LumaInPhaseQuadrature.html": {
    "href": "api/Terminaux.Colors.Models.LumaInPhaseQuadrature.html",
    "title": "Class LumaInPhaseQuadrature | Terminaux API - Aptivi",
    "keywords": "Class LumaInPhaseQuadrature The Luma, In-phase, and Quadrature (YIQ, NTSC 1953) model Inheritance object LumaInPhaseQuadrature Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class LumaInPhaseQuadrature Properties | Edit this page View Source InPhase The I component, known as chrominance information [-0.5957 -> 0.5957] Declaration public double InPhase { get; } Property Value Type Description double | Edit this page View Source Luma The Y component, known as luma information [0.0 -> 1.0] Declaration public double Luma { get; } Property Value Type Description double | Edit this page View Source Quadrature The Q component, known as chrominance information [-0.5226 -> 0.5226] Declaration public double Quadrature { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(LumaInPhaseQuadrature) Declaration public bool Equals(LumaInPhaseQuadrature other) Parameters Type Name Description LumaInPhaseQuadrature other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() yiq:<Y>;<I>;<Q> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(LumaInPhaseQuadrature, LumaInPhaseQuadrature) Declaration public static bool operator ==(LumaInPhaseQuadrature left, LumaInPhaseQuadrature right) Parameters Type Name Description LumaInPhaseQuadrature left LumaInPhaseQuadrature right Returns Type Description bool | Edit this page View Source operator !=(LumaInPhaseQuadrature, LumaInPhaseQuadrature) Declaration public static bool operator !=(LumaInPhaseQuadrature left, LumaInPhaseQuadrature right) Parameters Type Name Description LumaInPhaseQuadrature left LumaInPhaseQuadrature right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.Parsing.CmyParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.CmyParsingTools.html",
    "title": "Class CmyParsingTools | Terminaux API - Aptivi",
    "keywords": "Class CmyParsingTools Tools to parse CMY specifiers Inheritance object CmyParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class CmyParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid CMY specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid CMY specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid CMY specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid CMY specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of CyanMagentaYellow Declaration public static CyanMagentaYellow ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of CMY Returns Type Description CyanMagentaYellow An instance of CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of CyanMagentaYellow converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of CMY ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.CmykParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.CmykParsingTools.html",
    "title": "Class CmykParsingTools | Terminaux API - Aptivi",
    "keywords": "Class CmykParsingTools Tools to parse CMYK specifiers Inheritance object CmykParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class CmykParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid CMYK specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid CMYK specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid CMYK specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid CMYK specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of CyanMagentaYellowKey Declaration public static CyanMagentaYellowKey ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of CMYK Returns Type Description CyanMagentaYellowKey An instance of CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of CyanMagentaYellowKey converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of CMYK ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.HslParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.HslParsingTools.html",
    "title": "Class HslParsingTools | Terminaux API - Aptivi",
    "keywords": "Class HslParsingTools Tools to parse HSL specifiers Inheritance object HslParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class HslParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid HSL specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid HSL specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid HSL specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid HSL specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of HueSaturationLightness Declaration public static HueSaturationLightness ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of HSL Returns Type Description HueSaturationLightness An instance of HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of HueSaturationLightness converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of HSL ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.HsvParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.HsvParsingTools.html",
    "title": "Class HsvParsingTools | Terminaux API - Aptivi",
    "keywords": "Class HsvParsingTools Tools to parse HSV specifiers Inheritance object HsvParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class HsvParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid HSV specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid HSV specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid HSV specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid HSV specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of HueSaturationValue Declaration public static HueSaturationValue ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of HSV Returns Type Description HueSaturationValue An instance of HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of HueSaturationValue converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of HSV ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.ParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.ParsingTools.html",
    "title": "Class ParsingTools | Terminaux API - Aptivi",
    "keywords": "Class ParsingTools Tools to parse RGB specifiers for general use Inheritance object ParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class ParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid model-agnostic specifier and contain valid values? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid model-agnostic specifier and contains valid values Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierAndValueValidRgbHash(string) Does the string specifier represent a valid RGB hash (#RGB or #RRGGBB) as in HTML? Declaration public static bool IsSpecifierAndValueValidRgbHash(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB hash (#RGB or #RRGGBB) as in HTML Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierConsoleColors(string) Does the string specifier represent either a color name taken from ConsoleColors or a color number from 0 to 255? Declaration public static bool IsSpecifierConsoleColors(string specifier) Parameters Type Name Description string specifier Specifier that represents either a color name taken from ConsoleColors or a color number from 0 to 255 Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string) Does the string specifier represent a valid model-agnostic specifier? Declaration public static bool IsSpecifierValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid model-agnostic specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValidRgbHash(string) Does the string specifier represent a valid RGB hash (#RGB or #RRGGBB) as in HTML? Declaration public static bool IsSpecifierValidRgbHash(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB hash (#RGB or #RRGGBB) as in HTML Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string, ColorSettings) Parses the specifier and returns an instance of RedGreenBlue Declaration public static (RedGreenBlue rgb, ConsoleColorsInfo cci) ParseSpecifier(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description (RedGreenBlue rgb, ConsoleColorsInfo cci) An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierRgbHash(string, ColorSettings) Parses the hex representation of RGB and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierRgbHash(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB in hex representation ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierRgbName(string, ColorSettings) Parses the specifier that holds the color name and returns an instance of RedGreenBlue Declaration public static (RedGreenBlue rgb, ConsoleColorsInfo cci) ParseSpecifierRgbName(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Color name defined in ConsoleColors ColorSettings settings Settings to use. Use null for global settings Returns Type Description (RedGreenBlue rgb, ConsoleColorsInfo cci) An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifier(string, out (RedGreenBlue rgb, ConsoleColorsInfo cci)) Parses the specifier and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifier(string specifier, out (RedGreenBlue rgb, ConsoleColorsInfo cci) output) Parameters Type Name Description string specifier Specifier of RGB (RedGreenBlue rgb, ConsoleColorsInfo cci) output Output for both the RGB component and the color info for 256- and 16-color modes Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifierRgbHash(string, out RedGreenBlue) Parses the hex representation of RGB and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifierRgbHash(string specifier, out RedGreenBlue output) Parameters Type Name Description string specifier Specifier of RGB in hex representation RedGreenBlue output Output for the RGB component Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifierRgbName(string, out (RedGreenBlue rgb, ConsoleColorsInfo cci)) Parses the specifier that holds the color name and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifierRgbName(string specifier, out (RedGreenBlue rgb, ConsoleColorsInfo cci) output) Parameters Type Name Description string specifier Color name defined in ConsoleColors (RedGreenBlue rgb, ConsoleColorsInfo cci) output Output for both the RGB component and the color info for 256- and 16-color modes Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.RgbParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.RgbParsingTools.html",
    "title": "Class RgbParsingTools | Terminaux API - Aptivi",
    "keywords": "Class RgbParsingTools Tools to parse RGB specifiers Inheritance object RgbParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class RgbParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid RGB specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid RGB specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid RGB specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.RybParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.RybParsingTools.html",
    "title": "Class RybParsingTools | Terminaux API - Aptivi",
    "keywords": "Class RybParsingTools Tools to parse RYB specifiers Inheritance object RybParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class RybParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid RYB specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RYB specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid RYB specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid RYB specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of RedYellowBlue Declaration public static RedYellowBlue ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of RYB Returns Type Description RedYellowBlue An instance of RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of RedYellowBlue converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.YiqParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.YiqParsingTools.html",
    "title": "Class YiqParsingTools | Terminaux API - Aptivi",
    "keywords": "Class YiqParsingTools Tools to parse YIQ specifiers Inheritance object YiqParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class YiqParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid YIQ specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid YIQ specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid YIQ specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid YIQ specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of LumaInPhaseQuadrature Declaration public static LumaInPhaseQuadrature ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of YIQ Returns Type Description LumaInPhaseQuadrature An instance of LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of LumaInPhaseQuadrature converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.YuvParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.YuvParsingTools.html",
    "title": "Class YuvParsingTools | Terminaux API - Aptivi",
    "keywords": "Class YuvParsingTools Tools to parse YUV specifiers Inheritance object YuvParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class YuvParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid YUV specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid YUV specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid YUV specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid YUV specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of LumaChromaUv Declaration public static LumaChromaUv ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of YUV Returns Type Description LumaChromaUv An instance of LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of LumaChromaUv converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.html",
    "title": "Namespace Terminaux.Colors.Models.Parsing | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models.Parsing Classes CmyParsingTools Tools to parse CMY specifiers CmykParsingTools Tools to parse CMYK specifiers HslParsingTools Tools to parse HSL specifiers HsvParsingTools Tools to parse HSV specifiers ParsingTools Tools to parse RGB specifiers for general use RgbParsingTools Tools to parse RGB specifiers RybParsingTools Tools to parse RYB specifiers YiqParsingTools Tools to parse YIQ specifiers YuvParsingTools Tools to parse YUV specifiers"
  },
  "api/Terminaux.Colors.Models.RedGreenBlue.html": {
    "href": "api/Terminaux.Colors.Models.RedGreenBlue.html",
    "title": "Class RedGreenBlue | Terminaux API - Aptivi",
    "keywords": "Class RedGreenBlue The RGB class instance Inheritance object RedGreenBlue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class RedGreenBlue Properties | Edit this page View Source B The blue color value [0 -> 255] Declaration public int B { get; } Property Value Type Description int | Edit this page View Source BNormalized The blue color value [0.0 -> 0.1] Declaration public double BNormalized { get; } Property Value Type Description double | Edit this page View Source G The green color value [0 -> 255] Declaration public int G { get; } Property Value Type Description int | Edit this page View Source GNormalized The green color value [0.0 -> 0.1] Declaration public double GNormalized { get; } Property Value Type Description double | Edit this page View Source R The red color value [0 -> 255] Declaration public int R { get; } Property Value Type Description int | Edit this page View Source RNormalized The red color value [0.0 -> 0.1] Declaration public double RNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(RedGreenBlue) Declaration public bool Equals(RedGreenBlue other) Parameters Type Name Description RedGreenBlue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() <R>;<G>;<B> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(RedGreenBlue, RedGreenBlue) Declaration public static bool operator ==(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool | Edit this page View Source operator !=(RedGreenBlue, RedGreenBlue) Declaration public static bool operator !=(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.RedYellowBlue.html": {
    "href": "api/Terminaux.Colors.Models.RedYellowBlue.html",
    "title": "Class RedYellowBlue | Terminaux API - Aptivi",
    "keywords": "Class RedYellowBlue The RYB class instance Inheritance object RedYellowBlue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class RedYellowBlue Properties | Edit this page View Source B The blue color value [0 -> 100] Declaration public int B { get; } Property Value Type Description int | Edit this page View Source R The red color value [0 -> 100] Declaration public int R { get; } Property Value Type Description int | Edit this page View Source Y The yellow color value [0 -> 100] Declaration public int Y { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(RedYellowBlue) Declaration public bool Equals(RedYellowBlue other) Parameters Type Name Description RedYellowBlue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() ryb:<R>;<Y>;<B> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(RedYellowBlue, RedYellowBlue) Declaration public static bool operator ==(RedYellowBlue left, RedYellowBlue right) Parameters Type Name Description RedYellowBlue left RedYellowBlue right Returns Type Description bool | Edit this page View Source operator !=(RedYellowBlue, RedYellowBlue) Declaration public static bool operator !=(RedYellowBlue left, RedYellowBlue right) Parameters Type Name Description RedYellowBlue left RedYellowBlue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.html": {
    "href": "api/Terminaux.Colors.Models.html",
    "title": "Namespace Terminaux.Colors.Models | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models Classes CyanMagentaYellow The CMY class instance CyanMagentaYellowKey The CMYK class instance HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model HueSaturationValue The Hue, Saturation, and Value (HSV) model LumaChromaUv The Luma chroma (YUV, PAL, SDTV with BT.470) model LumaInPhaseQuadrature The Luma, In-phase, and Quadrature (YIQ, NTSC 1953) model RedGreenBlue The RGB class instance RedYellowBlue The RYB class instance"
  },
  "api/Terminaux.Colors.Selector.ColorSelector.html": {
    "href": "api/Terminaux.Colors.Selector.ColorSelector.html",
    "title": "Class ColorSelector | Terminaux API - Aptivi",
    "keywords": "Class ColorSelector Color selection application Inheritance object ColorSelector Namespace: Terminaux.Colors.Selector Assembly: Terminaux.dll Syntax public static class ColorSelector Methods | Edit this page View Source OpenColorSelector() Opens the color selector Declaration public static Color OpenColorSelector() Returns Type Description Color An instance of Color to get the resulting color | Edit this page View Source OpenColorSelector(Color) Opens the color selector Declaration public static Color OpenColorSelector(Color initialColor) Parameters Type Name Description Color initialColor Initial color to use Returns Type Description Color An instance of Color to get the resulting color | Edit this page View Source OpenColorSelector(ConsoleColors) Opens the color selector Declaration public static Color OpenColorSelector(ConsoleColors initialColor) Parameters Type Name Description ConsoleColors initialColor Initial color to use Returns Type Description Color An instance of Color to get the resulting color"
  },
  "api/Terminaux.Colors.Selector.html": {
    "href": "api/Terminaux.Colors.Selector.html",
    "title": "Namespace Terminaux.Colors.Selector | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Selector Classes ColorSelector Color selection application"
  },
  "api/Terminaux.Colors.Transformation.TransformationFormula.html": {
    "href": "api/Terminaux.Colors.Transformation.TransformationFormula.html",
    "title": "Enum TransformationFormula | Terminaux API - Aptivi",
    "keywords": "Enum TransformationFormula Color transformation formula Namespace: Terminaux.Colors.Transformation Assembly: Terminaux.dll Syntax public enum TransformationFormula Fields Name Description BlueScale Blue tinted monochromacy Deutan Red/green color blindness. It makes green look more red GreenScale Green tinted monochromacy Inverse Inverse colors Monochromacy Full color blindness, can only see grayscale. Protan Red/green color blindness. It makes red look more green RedScale Red tinted monochromacy Tritan Blue/yellow color blindness."
  },
  "api/Terminaux.Colors.Transformation.TransformationMethod.html": {
    "href": "api/Terminaux.Colors.Transformation.TransformationMethod.html",
    "title": "Enum TransformationMethod | Terminaux API - Aptivi",
    "keywords": "Enum TransformationMethod Color transformation method Namespace: Terminaux.Colors.Transformation Assembly: Terminaux.dll Syntax public enum TransformationMethod Fields Name Description Brettel1997 Transform colors for color blindness using the Brettel algorithm (1997) Vienot1999 Transform colors for color blindness using the Vienot algorithm (1999)"
  },
  "api/Terminaux.Colors.Transformation.html": {
    "href": "api/Terminaux.Colors.Transformation.html",
    "title": "Namespace Terminaux.Colors.Transformation | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Transformation Enums TransformationFormula Color transformation formula TransformationMethod Color transformation method"
  },
  "api/Terminaux.Colors.html": {
    "href": "api/Terminaux.Colors.html",
    "title": "Namespace Terminaux.Colors | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors Classes Color Color information class ColorContrast Color contrast tools ColorSettings The color settings class ColorTools Color tools and management Enums ColorBrightness Color brightness enumeration ColorContrastType The color contrast type ColorType Color type enumeration"
  },
  "api/Terminaux.Inputs.Input.html": {
    "href": "api/Terminaux.Inputs.Input.html",
    "title": "Class Input | Terminaux API - Aptivi",
    "keywords": "Class Input Console input module Inheritance object Input Namespace: Terminaux.Inputs Assembly: Terminaux.dll Syntax public static class Input Properties | Edit this page View Source CurrentMask Current mask character Declaration public static string CurrentMask { get; } Property Value Type Description string | Edit this page View Source GlobalReaderSettings The global reader settings Declaration public static TermReaderSettings GlobalReaderSettings { get; } Property Value Type Description TermReaderSettings Methods | Edit this page View Source DetectKeypress() Detects the keypress Declaration public static ConsoleKeyInfo DetectKeypress() Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadKeyTimeout(bool, TimeSpan) Reads the next key from the console input stream with the timeout Declaration public static ConsoleKeyInfo ReadKeyTimeout(bool Intercept, TimeSpan Timeout) Parameters Type Name Description bool Intercept Whether to intercept an input TimeSpan Timeout Timeout Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadLine(bool) Reads the line from the console Declaration public static string ReadLine(bool interruptible = false) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLine(string, bool) Reads the line from the console Declaration public static string ReadLine(string InputText, bool interruptible = false) Parameters Type Name Description string InputText Input text to write bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLine(string, string, bool) Reads the line from the console Declaration public static string ReadLine(string InputText, string DefaultValue, bool interruptible = false) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLine(string, string, bool, bool) Reads the line from the console unsafely. This doesn't wait until the screensaver lock mode is released. Declaration public static string ReadLine(string InputText, string DefaultValue, bool OneLineWrap = false, bool interruptible = false) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value bool OneLineWrap Whether to wrap the input to one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLine(string, string, bool, TermReaderSettings, bool) Reads the line from the console unsafely. This doesn't wait until the screensaver lock mode is released. Declaration public static string ReadLine(string InputText, string DefaultValue, bool OneLineWrap = false, TermReaderSettings settings = null, bool interruptible = false) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value bool OneLineWrap Whether to wrap the input to one line TermReaderSettings settings Reader settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLine(string, string, TermReaderSettings, bool) Reads the line from the console Declaration public static string ReadLine(string InputText, string DefaultValue, TermReaderSettings settings, bool interruptible = false) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value TermReaderSettings settings Reader settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineNoInput(bool) Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput(bool interruptible = false) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineNoInput(char, bool) Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput(char MaskChar, bool interruptible = false) Parameters Type Name Description char MaskChar Specifies the password mask character bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineNoInput(char, TermReaderSettings, bool) Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput(char MaskChar, TermReaderSettings settings, bool interruptible = false) Parameters Type Name Description char MaskChar Specifies the password mask character TermReaderSettings settings Reader settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineNoInput(TermReaderSettings, bool) Reads the next line of characters from the standard input stream without showing input being written by user. Declaration public static string ReadLineNoInput(TermReaderSettings settings, bool interruptible = false) Parameters Type Name Description TermReaderSettings settings Reader settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineWrapped(bool) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(bool interruptible = false) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineWrapped(string, bool) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, bool interruptible = false) Parameters Type Name Description string InputText Input text to write bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineWrapped(string, string, bool) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, string DefaultValue, bool interruptible = false) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadLineWrapped(string, string, TermReaderSettings, bool) Reads the line from the console (wrapped to one line) Declaration public static string ReadLineWrapped(string InputText, string DefaultValue, TermReaderSettings settings, bool interruptible = false) Parameters Type Name Description string InputText Input text to write string DefaultValue Default value TermReaderSettings settings Reader settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string"
  },
  "api/Terminaux.Inputs.InputChoiceInfo.html": {
    "href": "api/Terminaux.Inputs.InputChoiceInfo.html",
    "title": "Class InputChoiceInfo | Terminaux API - Aptivi",
    "keywords": "Class InputChoiceInfo Choice information for input Inheritance object InputChoiceInfo Namespace: Terminaux.Inputs Assembly: Terminaux.dll Syntax public class InputChoiceInfo Constructors | Edit this page View Source InputChoiceInfo(string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title | Edit this page View Source InputChoiceInfo(string, string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description Properties | Edit this page View Source ChoiceDescription Choice description Declaration public string ChoiceDescription { get; } Property Value Type Description string | Edit this page View Source ChoiceName Choice name Declaration public string ChoiceName { get; } Property Value Type Description string | Edit this page View Source ChoiceTitle Choice title Declaration public string ChoiceTitle { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.InputChoiceTools.html": {
    "href": "api/Terminaux.Inputs.InputChoiceTools.html",
    "title": "Class InputChoiceTools | Terminaux API - Aptivi",
    "keywords": "Class InputChoiceTools Input choice tools Inheritance object InputChoiceTools Namespace: Terminaux.Inputs Assembly: Terminaux.dll Syntax public static class InputChoiceTools Methods | Edit this page View Source GetInputChoices(string, string[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string AnswersStr, string[] AnswersTitles) Parameters Type Name Description string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List<InputChoiceInfo> | Edit this page View Source GetInputChoices(string[], string[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string[] Answers, string[] AnswersTitles) Parameters Type Name Description string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List<InputChoiceInfo>"
  },
  "api/Terminaux.Inputs.Interactive.BaseInteractiveTui.html": {
    "href": "api/Terminaux.Inputs.Interactive.BaseInteractiveTui.html",
    "title": "Class BaseInteractiveTui | Terminaux API - Aptivi",
    "keywords": "Class BaseInteractiveTui A base class for your interactive user interface for terminal apps Inheritance object BaseInteractiveTui Implements IInteractiveTui Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public class BaseInteractiveTui : IInteractiveTui Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration public virtual bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration public virtual List<InteractiveTuiBinding> Bindings { get; set; } Property Value Type Description List<InteractiveTuiBinding> | Edit this page View Source Instance The interactive TUI instance Declaration public static BaseInteractiveTui Instance { get; } Property Value Type Description BaseInteractiveTui | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration public virtual IEnumerable PrimaryDataSource { get; } Property Value Type Description IEnumerable | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration public virtual int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source Screen The screen instance for this interactive TUI Declaration public Screen Screen { get; } Property Value Type Description Screen | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration public virtual bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration public virtual IEnumerable SecondaryDataSource { get; } Property Value Type Description IEnumerable Methods | Edit this page View Source GetEntryFromItem(object) Gets an entry string from a specified item for listing Declaration public virtual string GetEntryFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(object) Gets the info from the item Declaration public virtual string GetInfoFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration public virtual void HandleExit() | Edit this page View Source LastOnOverflow() Goes up to the last element upon overflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration public virtual void LastOnOverflow() | Edit this page View Source RenderStatus(object) Renders the status Declaration public virtual void RenderStatus(object item) Parameters Type Name Description object item Target item Implements IInteractiveTui"
  },
  "api/Terminaux.Inputs.Interactive.IInteractiveTui.html": {
    "href": "api/Terminaux.Inputs.Interactive.IInteractiveTui.html",
    "title": "Interface IInteractiveTui | Terminaux API - Aptivi",
    "keywords": "Interface IInteractiveTui An interface for your interactive user interface for terminal apps Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public interface IInteractiveTui Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration List<InteractiveTuiBinding> Bindings { get; set; } Property Value Type Description List<InteractiveTuiBinding> | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration IEnumerable PrimaryDataSource { get; } Property Value Type Description IEnumerable | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration IEnumerable SecondaryDataSource { get; } Property Value Type Description IEnumerable Methods | Edit this page View Source GetEntryFromItem(object) Gets an entry string from a specified item for listing Declaration string GetEntryFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(object) Gets the info from the item Declaration string GetInfoFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration void HandleExit() | Edit this page View Source LastOnOverflow() Goes up to the last element upon overflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration void LastOnOverflow() | Edit this page View Source RenderStatus(object) Renders the status Declaration void RenderStatus(object item) Parameters Type Name Description object item Target item"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiBinding.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiBinding.html",
    "title": "Class InteractiveTuiBinding | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiBinding Interactive TUI binding information class Inheritance object InteractiveTuiBinding Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public class InteractiveTuiBinding Constructors | Edit this page View Source InteractiveTuiBinding(string, ConsoleKey, Action<object, int>) Makes a new instance of an interactive TUI key binding Declaration public InteractiveTuiBinding(string bindingName, ConsoleKey bindingKeyName, Action<object, int> bindingAction) Parameters Type Name Description string bindingName Key binding name ConsoleKey bindingKeyName Which key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data | Edit this page View Source InteractiveTuiBinding(string, ConsoleKey, ConsoleModifiers, Action<object, int>) Makes a new instance of an interactive TUI key binding Declaration public InteractiveTuiBinding(string bindingName, ConsoleKey bindingKeyName, ConsoleModifiers bindingKeyModifiers, Action<object, int> bindingAction) Parameters Type Name Description string bindingName Key binding name ConsoleKey bindingKeyName Which key is bound to the action? ConsoleModifiers bindingKeyModifiers Which modifiers of the key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data Properties | Edit this page View Source BindingAction The action to execute. The integer argument denotes the currently selected data Declaration public Action<object, int> BindingAction { get; } Property Value Type Description Action<object, int> | Edit this page View Source BindingKeyModifiers Which key is bound to the action? Declaration public ConsoleModifiers BindingKeyModifiers { get; } Property Value Type Description ConsoleModifiers | Edit this page View Source BindingKeyName Which key is bound to the action? Declaration public ConsoleKey BindingKeyName { get; } Property Value Type Description ConsoleKey | Edit this page View Source BindingName Key binding name Declaration public string BindingName { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiStatus.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiStatus.html",
    "title": "Class InteractiveTuiStatus | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiStatus Interactive TUI status Inheritance object InteractiveTuiStatus Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public static class InteractiveTuiStatus Properties | Edit this page View Source BackgroundColor Interactive TUI background color Declaration public static Color BackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source BoxBackgroundColor Interactive TUI box background color Declaration public static Color BoxBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source BoxForegroundColor Interactive TUI box foreground color Declaration public static Color BoxForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source CurrentPane Current pane Declaration public static int CurrentPane { get; set; } Property Value Type Description int | Edit this page View Source FirstPaneCurrentSelection Current selection for the first pane Declaration public static int FirstPaneCurrentSelection { get; set; } Property Value Type Description int | Edit this page View Source ForegroundColor Interactive TUI foreground color Declaration public static Color ForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source KeyBindingOptionColor Interactive TUI key binding in option color Declaration public static Color KeyBindingOptionColor { get; set; } Property Value Type Description Color | Edit this page View Source OptionBackgroundColor Interactive TUI option background color Declaration public static Color OptionBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source OptionForegroundColor Interactive TUI option foreground color Declaration public static Color OptionForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneBackgroundColor Interactive TUI pane background color Declaration public static Color PaneBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneItemBackColor Interactive TUI pane item color (background) Declaration public static Color PaneItemBackColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneItemForeColor Interactive TUI pane item color (foreground) Declaration public static Color PaneItemForeColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedItemBackColor Interactive TUI pane selected item color (background) Declaration public static Color PaneSelectedItemBackColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedItemForeColor Interactive TUI pane selected item color (foreground) Declaration public static Color PaneSelectedItemForeColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedSeparatorColor Interactive TUI pane selected separator color Declaration public static Color PaneSelectedSeparatorColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSeparatorColor Interactive TUI pane separator color Declaration public static Color PaneSeparatorColor { get; set; } Property Value Type Description Color | Edit this page View Source SecondPaneCurrentSelection Current selection for the second pane Declaration public static int SecondPaneCurrentSelection { get; set; } Property Value Type Description int | Edit this page View Source Status Current status Declaration public static string Status { get; set; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiTools.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiTools.html",
    "title": "Class InteractiveTuiTools | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiTools Tools for the interactive TUI implementation Inheritance object InteractiveTuiTools Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public static class InteractiveTuiTools Methods | Edit this page View Source OpenInteractiveTui(BaseInteractiveTui) Opens the interactive TUI Declaration public static void OpenInteractiveTui(BaseInteractiveTui interactiveTui) Parameters Type Name Description BaseInteractiveTui interactiveTui The inherited class instance of the interactive TUI Exceptions Type Condition TerminauxException | Edit this page View Source SelectionMovement(BaseInteractiveTui, int) Initiates the selection movement Declaration public static void SelectionMovement(BaseInteractiveTui interactiveTui, int pos) Parameters Type Name Description BaseInteractiveTui interactiveTui Interactive TUI to deal with int pos Position to move the pane selection to"
  },
  "api/Terminaux.Inputs.Interactive.html": {
    "href": "api/Terminaux.Inputs.Interactive.html",
    "title": "Namespace Terminaux.Inputs.Interactive | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Interactive Classes BaseInteractiveTui A base class for your interactive user interface for terminal apps InteractiveTuiBinding Interactive TUI binding information class InteractiveTuiStatus Interactive TUI status InteractiveTuiTools Tools for the interactive TUI implementation Interfaces IInteractiveTui An interface for your interactive user interface for terminal apps"
  },
  "api/Terminaux.Inputs.Styles.Choice.ChoiceOutputType.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.ChoiceOutputType.html",
    "title": "Enum ChoiceOutputType | Terminaux API - Aptivi",
    "keywords": "Enum ChoiceOutputType The enumeration for the choice command output type Namespace: Terminaux.Inputs.Styles.Choice Assembly: Terminaux.dll Syntax public enum ChoiceOutputType Fields Name Description Modern The modern way of listing choices OneLine A question and a set of answers in one line Table The table of choices TwoLines A question in a line and a set of answers in another line"
  },
  "api/Terminaux.Inputs.Styles.Choice.ChoiceStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.ChoiceStyle.html",
    "title": "Class ChoiceStyle | Terminaux API - Aptivi",
    "keywords": "Class ChoiceStyle Choice style for input module Inheritance object ChoiceStyle Namespace: Terminaux.Inputs.Styles.Choice Assembly: Terminaux.dll Syntax public static class ChoiceStyle Methods | Edit this page View Source PromptChoice(string, List<InputChoiceInfo>, List<InputChoiceInfo>, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, List<InputChoiceInfo>, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], string, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Choice.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.html",
    "title": "Namespace Terminaux.Inputs.Styles.Choice | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Choice Classes ChoiceStyle Choice style for input module Enums ChoiceOutputType The enumeration for the choice command output type"
  },
  "api/Terminaux.Inputs.Styles.FigletSelector.html": {
    "href": "api/Terminaux.Inputs.Styles.FigletSelector.html",
    "title": "Class FigletSelector | Terminaux API - Aptivi",
    "keywords": "Class FigletSelector Figlet selector Inheritance object FigletSelector Namespace: Terminaux.Inputs.Styles Assembly: Terminaux.dll Syntax public static class FigletSelector Methods | Edit this page View Source PromptForFiglet() Prompts the user for a figlet font Declaration public static string PromptForFiglet() Returns Type Description string Selected figlet font | Edit this page View Source PromptForFiglet(string) Prompts the user for a figlet font Declaration public static string PromptForFiglet(string font) Parameters Type Name Description string font Initial font to select Returns Type Description string Selected figlet font"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxButtonsColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxButtonsColor.html",
    "title": "Class InfoBoxButtonsColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxButtonsColor Info box writer with buttons and color support Inheritance object InfoBoxButtonsColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxButtonsColor Methods | Edit this page View Source WriteInfoBoxButtons(string, string[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string title, string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(string, string[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string title, string[] buttons, string text, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(string[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(string[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string[] buttons, string text, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, string[], string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, string[], string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, string[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, string[] buttons, string text, Color InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, string[], string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, string[] buttons, string text, ConsoleColors InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. ConsoleColors InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string[], string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string[], string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string[] buttons, string text, Color InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string[], string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string[] buttons, string text, ConsoleColors InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. ConsoleColors InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, string[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color Color BackgroundColor InfoBoxTitledButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, string[], string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledButtonsColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledButtonsColor InfoBoxTitledButtons color ConsoleColors BackgroundColor InfoBoxTitledButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, string[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, string[] buttons, string text, Color InfoBoxTitledButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, string[], string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, string[] buttons, string text, ConsoleColors InfoBoxTitledButtonsColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. ConsoleColors InfoBoxTitledButtonsColor InfoBoxTitledButtons color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitledButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxButtonsColor InfoBoxButtons color Color BackgroundColor InfoBoxButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string[], string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxButtonsColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxButtonsColor InfoBoxButtons color ConsoleColors BackgroundColor InfoBoxButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string[] buttons, string text, Color InfoBoxButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxButtonsColor InfoBoxButtons color from Nitrocid KS's Color Color BackgroundColor InfoBoxButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string[], string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string[] buttons, string text, ConsoleColors InfoBoxButtonsColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. ConsoleColors InfoBoxButtonsColor InfoBoxButtons color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string, string[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string title, string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string, string[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string title, string[] buttons, string text, params object[] vars) Parameters Type Name Description string title Title to be written string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string[] buttons, string text, params object[] vars) Parameters Type Name Description string[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxColor.html",
    "title": "Class InfoBoxColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxColor Info box writer with color support Inheritance object InfoBoxColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxColor Methods | Edit this page View Source WriteInfoBox(string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, ConsoleColors InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, ConsoleColors InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. ConsoleColors InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxColor InfoBox color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledColor InfoBoxTitled color ConsoleColors BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, ConsoleColors InfoBoxTitledColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledColor InfoBoxTitled color ConsoleColors BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, ConsoleColors InfoBoxTitledColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. ConsoleColors InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, char, char, char, char, char, char, char, char, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, char, char, char, char, char, char, char, char, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputColor.html",
    "title": "Class InfoBoxInputColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxInputColor Info box writer with input and color support Inheritance object InfoBoxInputColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxInputColor Methods | Edit this page View Source WriteInfoBoxInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, ConsoleColors InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. ConsoleColors InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, ConsoleColors InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxColor InfoBox color ConsoleColors BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledColor InfoBoxTitled color ConsoleColors BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, ConsoleColors InfoBoxTitledColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. ConsoleColors InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, ConsoleColors InfoBoxColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. ConsoleColors InfoBoxColor InfoBox color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxProgressColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxProgressColor.html",
    "title": "Class InfoBoxProgressColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxProgressColor Info box writer with progress and color support Inheritance object InfoBoxProgressColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxProgressColor Methods | Edit this page View Source WriteInfoBoxProgress(double, string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(double, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, bool waitForInput, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, bool, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, bool waitForInput, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, bool, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, bool waitForInput, ConsoleColors InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, ConsoleColors InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. ConsoleColors InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, bool, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, bool waitForInput, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, bool, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, bool waitForInput, ConsoleColors InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, ConsoleColors InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color Color BackgroundColor InfoBoxProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, bool, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxProgressColor InfoBoxProgress color ConsoleColors BackgroundColor InfoBoxProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, bool waitForInput, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxProgressColor InfoBoxProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, bool, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, bool waitForInput, ConsoleColors InfoBoxProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxProgressColor InfoBoxProgress color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color Color BackgroundColor InfoBoxProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxProgressColor InfoBoxProgress color ConsoleColors BackgroundColor InfoBoxProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxProgressColor InfoBoxProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, ConsoleColors InfoBoxProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. ConsoleColors InfoBoxProgressColor InfoBoxProgress color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color Color BackgroundColor InfoBoxTitledProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, bool, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color ConsoleColors BackgroundColor InfoBoxTitledProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, bool waitForInput, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledProgressColor InfoBoxTitledProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, bool, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, bool waitForInput, ConsoleColors InfoBoxTitledProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitledProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color Color BackgroundColor InfoBoxTitledProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color ConsoleColors BackgroundColor InfoBoxTitledProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxTitledProgressColor InfoBoxTitledProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, ConsoleColors InfoBoxTitledProgressColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. ConsoleColors InfoBoxTitledProgressColor InfoBoxTitledProgress color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitledProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(double progress, string text, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(string, double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(string, double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(string title, double progress, string text, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionColor.html",
    "title": "Class InfoBoxSelectionColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxSelectionColor Info box writer with selection and color support Inheritance object InfoBoxSelectionColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxSelectionColor Methods | Edit this page View Source WriteInfoBoxSelection(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledSelectionColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledSelectionColor InfoBoxTitledSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(string, InputChoiceInfo[], string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(string title, InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxTitledSelectionColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxTitledSelectionColor InfoBoxTitledSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxSelectionColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxSelectionColor InfoBoxSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionColor InfoBoxSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(InputChoiceInfo[], string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxSelectionColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxSelectionColor InfoBoxSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color Color BackgroundColor InfoBoxTitledSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledSelectionColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledSelectionColor InfoBoxTitledSelection color ConsoleColors BackgroundColor InfoBoxTitledSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxTitledSelectionColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxTitledSelectionColor InfoBoxTitledSelection color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitledSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxSelectionColor InfoBoxSelection color Color BackgroundColor InfoBoxSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxSelectionColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxSelectionColor InfoBoxSelection color ConsoleColors BackgroundColor InfoBoxSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionColor InfoBoxSelection color from Nitrocid KS's Color Color BackgroundColor InfoBoxSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxSelectionColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxSelectionColor InfoBoxSelection color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionMultipleColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionMultipleColor.html",
    "title": "Class InfoBoxSelectionMultipleColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxSelectionMultipleColor Info box writer with selection and color support Inheritance object InfoBoxSelectionMultipleColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxSelectionMultipleColor Methods | Edit this page View Source WriteInfoBoxSelectionMultiple(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledSelectionMultipleColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionMultipleColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(string, InputChoiceInfo[], string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(string title, InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxTitledSelectionMultipleColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxSelectionMultipleColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionMultipleColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[], string, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxSelectionMultipleColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color Color BackgroundColor InfoBoxTitledSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxTitledSelectionMultipleColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color ConsoleColors BackgroundColor InfoBoxTitledSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxTitledSelectionMultipleColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxTitledSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color Color BackgroundColor InfoBoxSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors InfoBoxSelectionMultipleColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box ConsoleColors InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color ConsoleColors BackgroundColor InfoBoxSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color from Nitrocid KS's Color Color BackgroundColor InfoBoxSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, ConsoleColors, ConsoleColors, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, ConsoleColors InfoBoxSelectionMultipleColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. ConsoleColors InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color from Nitrocid KS's Color ConsoleColors BackgroundColor InfoBoxSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.html",
    "title": "Namespace Terminaux.Inputs.Styles.Infobox | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Infobox Classes InfoBoxButtonsColor Info box writer with buttons and color support InfoBoxColor Info box writer with color support InfoBoxInputColor Info box writer with input and color support InfoBoxProgressColor Info box writer with progress and color support InfoBoxSelectionColor Info box writer with selection and color support InfoBoxSelectionMultipleColor Info box writer with selection and color support"
  },
  "api/Terminaux.Inputs.Styles.InputStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.InputStyle.html",
    "title": "Class InputStyle | Terminaux API - Aptivi",
    "keywords": "Class InputStyle Input style module Inheritance object InputStyle Namespace: Terminaux.Inputs.Styles Assembly: Terminaux.dll Syntax public static class InputStyle Methods | Edit this page View Source PromptInput(string) Prompts user for input (answer the question with your own answers) Declaration public static string PromptInput(string Question) Parameters Type Name Description string Question Returns Type Description string | Edit this page View Source PromptInputPassword(string) Prompts user for password (answer the question with your own answers) Declaration public static string PromptInputPassword(string Question) Parameters Type Name Description string Question Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionMultipleStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionMultipleStyle.html",
    "title": "Class SelectionMultipleStyle | Terminaux API - Aptivi",
    "keywords": "Class SelectionMultipleStyle Multiple selection style for input module Inheritance object SelectionMultipleStyle Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionMultipleStyle Methods | Edit this page View Source PromptMultipleSelection(string, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, List<InputChoiceInfo> Answers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, List<InputChoiceInfo>, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], string, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], string, string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[]"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionStyle.html",
    "title": "Class SelectionStyle | Terminaux API - Aptivi",
    "keywords": "Class SelectionStyle Selection style for input module Inheritance object SelectionStyle Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionStyle Methods | Edit this page View Source PromptSelection(string, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, List<InputChoiceInfo>, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, bool) Prompts user for selection Declaration public static int PromptSelection(string Question, string AnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], string, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], string, string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], bool) Prompts user for selection Declaration public static int PromptSelection(string Question, string[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int"
  },
  "api/Terminaux.Inputs.Styles.Selection.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.html",
    "title": "Namespace Terminaux.Inputs.Styles.Selection | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Selection Classes SelectionMultipleStyle Multiple selection style for input module SelectionStyle Selection style for input module"
  },
  "api/Terminaux.Inputs.Styles.html": {
    "href": "api/Terminaux.Inputs.Styles.html",
    "title": "Namespace Terminaux.Inputs.Styles | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles Classes FigletSelector Figlet selector InputStyle Input style module"
  },
  "api/Terminaux.Inputs.html": {
    "href": "api/Terminaux.Inputs.html",
    "title": "Namespace Terminaux.Inputs | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs Classes Input Console input module InputChoiceInfo Choice information for input InputChoiceTools Input choice tools"
  },
  "api/Terminaux.Reader.Bindings.BaseBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.BaseBinding.html",
    "title": "Class BaseBinding | Terminaux API - Aptivi",
    "keywords": "Class BaseBinding Base key binding Inheritance object BaseBinding Implements IBinding Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public abstract class BaseBinding : IBinding Properties | Edit this page View Source BoundKeys Key to bind to Declaration public virtual ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] | Edit this page View Source IsExit Does this binding cause the input to exit? Declaration public virtual bool IsExit { get; } Property Value Type Description bool | Edit this page View Source ResetSuggestionsTextPos Resets the suggestions text position Declaration public virtual bool ResetSuggestionsTextPos { get; } Property Value Type Description bool Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the binding matched Declaration public virtual bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Input key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration public virtual void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader Implements IBinding"
  },
  "api/Terminaux.Reader.Bindings.CustomBindings.html": {
    "href": "api/Terminaux.Reader.Bindings.CustomBindings.html",
    "title": "Class CustomBindings | Terminaux API - Aptivi",
    "keywords": "Class CustomBindings Custom binding handler Inheritance object CustomBindings Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public static class CustomBindings Methods | Edit this page View Source Bind(BaseBinding) Binds the key to the custom bindings list to be executed on press Declaration public static void Bind(BaseBinding binding) Parameters Type Name Description BaseBinding binding Base containing information about key binding | Edit this page View Source Unbind(ConsoleKeyInfo) Unbinds the key from the custom bindings list Declaration public static void Unbind(ConsoleKeyInfo cki) Parameters Type Name Description ConsoleKeyInfo cki Key information to remove the binding"
  },
  "api/Terminaux.Reader.Bindings.IBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.IBinding.html",
    "title": "Interface IBinding | Terminaux API - Aptivi",
    "keywords": "Interface IBinding Key binding interface Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public interface IBinding Properties | Edit this page View Source BoundKeys Keys to bind to Declaration ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] | Edit this page View Source ResetSuggestionsTextPos Resets the suggestions text position Declaration bool ResetSuggestionsTextPos { get; } Property Value Type Description bool Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the bind matched Declaration bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader"
  },
  "api/Terminaux.Reader.Bindings.html": {
    "href": "api/Terminaux.Reader.Bindings.html",
    "title": "Namespace Terminaux.Reader.Bindings | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Bindings Classes BaseBinding Base key binding CustomBindings Custom binding handler Interfaces IBinding Key binding interface"
  },
  "api/Terminaux.Reader.TermReader.html": {
    "href": "api/Terminaux.Reader.TermReader.html",
    "title": "Class TermReader | Terminaux API - Aptivi",
    "keywords": "Class TermReader Terminal input reader module Inheritance object TermReader Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReader Methods | Edit this page View Source Read() Reads the input Declaration public static string Read() Returns Type Description string | Edit this page View Source Read(string) Reads the input Declaration public static string Read(string inputPrompt) Parameters Type Name Description string inputPrompt The input to be read Returns Type Description string | Edit this page View Source Read(string, string, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, bool password = false, bool oneLineWrap = false, bool interruptible = false) Parameters Type Name Description string inputPrompt The input to be read string defaultValue Default value to use if no input is provided bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, string, TermReaderSettings, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, TermReaderSettings settings, bool password = false, bool oneLineWrap = false, bool interruptible = false) Parameters Type Name Description string inputPrompt The input to be read string defaultValue Default value to use if no input is provided TermReaderSettings settings Settings containing reader-related settings bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, TermReaderSettings) Reads the input Declaration public static string Read(string inputPrompt, TermReaderSettings settings) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source Read(TermReaderSettings) Reads the input Declaration public static string Read(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings Returns Type Description string | Edit this page View Source ReadPassword(bool) Reads the input with password character masking Declaration public static string ReadPassword(bool interruptible = false) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(string, bool) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, bool interruptible = false) Parameters Type Name Description string inputPrompt The input to be read bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(string, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, TermReaderSettings settings, bool interruptible = false) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(TermReaderSettings settings, bool interruptible = false) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string"
  },
  "api/Terminaux.Reader.TermReaderSettings.html": {
    "href": "api/Terminaux.Reader.TermReaderSettings.html",
    "title": "Class TermReaderSettings | Terminaux API - Aptivi",
    "keywords": "Class TermReaderSettings Settings for the reader Inheritance object TermReaderSettings Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderSettings Constructors | Edit this page View Source TermReaderSettings() Initializes empty settings instance Declaration public TermReaderSettings() Properties | Edit this page View Source HistoryEnabled Input history enabled Declaration public bool HistoryEnabled { get; set; } Property Value Type Description bool | Edit this page View Source InputBackgroundColor Input background color Declaration public Color InputBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source InputForegroundColor Input foreground color Declaration public Color InputForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source LeftMargin Left margin Declaration public int LeftMargin { get; set; } Property Value Type Description int | Edit this page View Source PasswordMaskChar Password mask character Declaration public char PasswordMaskChar { get; set; } Property Value Type Description char | Edit this page View Source RightMargin Right margin Declaration public int RightMargin { get; set; } Property Value Type Description int | Edit this page View Source Suggestions Suggestion entries Declaration public Func<string, int, char[], string[]> Suggestions { set; } Property Value Type Description Func<string, int, char[], string[]> | Edit this page View Source SuggestionsDelimiters Suggestion delimiters Declaration public char[] SuggestionsDelimiters { set; } Property Value Type Description char[] | Edit this page View Source TreatCtrlCAsInput Treat Ctrl + C as input Declaration public bool TreatCtrlCAsInput { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Reader.TermReaderState.html": {
    "href": "api/Terminaux.Reader.TermReaderState.html",
    "title": "Class TermReaderState | Terminaux API - Aptivi",
    "keywords": "Class TermReaderState State of the reader Inheritance object TermReaderState Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderState Properties | Edit this page View Source CanInsert Can insert a new character? Declaration public bool CanInsert { get; } Property Value Type Description bool | Edit this page View Source CurrentCursorPosLeft Current cursor left position Declaration public int CurrentCursorPosLeft { get; } Property Value Type Description int | Edit this page View Source CurrentCursorPosTop Current cursor top position Declaration public int CurrentCursorPosTop { get; } Property Value Type Description int | Edit this page View Source CurrentHistoryPos Current history number Declaration public int CurrentHistoryPos { get; } Property Value Type Description int | Edit this page View Source CurrentSuggestionsPos Current suggestion number Declaration public int CurrentSuggestionsPos { get; } Property Value Type Description int | Edit this page View Source CurrentSuggestionsTextPos Current suggestions text position Declaration public int CurrentSuggestionsTextPos { get; } Property Value Type Description int | Edit this page View Source CurrentText Current text Declaration public StringBuilder CurrentText { get; } Property Value Type Description StringBuilder | Edit this page View Source CurrentTextPos Current text character number Declaration public int CurrentTextPos { get; } Property Value Type Description int | Edit this page View Source History History entries Declaration public List<string> History { get; } Property Value Type Description List<string> | Edit this page View Source InputPromptLastLineLength Input prompt last line length Declaration public int InputPromptLastLineLength { get; } Property Value Type Description int | Edit this page View Source InputPromptLeft Left position of the input prompt (with the left margin) Declaration public int InputPromptLeft { get; } Property Value Type Description int | Edit this page View Source InputPromptText Input prompt text Declaration public string InputPromptText { get; } Property Value Type Description string | Edit this page View Source InputPromptTop Top position of the input prompt Declaration public int InputPromptTop { get; } Property Value Type Description int | Edit this page View Source KillBuffer Text to be pasted Declaration public StringBuilder KillBuffer { get; } Property Value Type Description StringBuilder | Edit this page View Source LeftMargin Left margin Declaration public int LeftMargin { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeft Longest sentence length (from the leftmost position, without offset created by the last line in the prompt) Declaration public int LongestSentenceLengthFromLeft { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeftForFirstLine Longest sentence length (from the leftmost position, with the length of the last line in the prompt plus the left margin) Declaration public int LongestSentenceLengthFromLeftForFirstLine { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeftForGeneralLine Longest sentence length (from the leftmost position, with the left margin) Declaration public int LongestSentenceLengthFromLeftForGeneralLine { get; } Property Value Type Description int | Edit this page View Source MaximumInputPositionLeft Maximum input left position Declaration public int MaximumInputPositionLeft { get; } Property Value Type Description int | Edit this page View Source OneLineWrap Whether one line wrapping is enabled Declaration public bool OneLineWrap { get; } Property Value Type Description bool | Edit this page View Source PasswordMode Password Mode Declaration public bool PasswordMode { get; } Property Value Type Description bool | Edit this page View Source PressedKey Currently pressed key Declaration public ConsoleKeyInfo PressedKey { get; } Property Value Type Description ConsoleKeyInfo | Edit this page View Source RightMargin Right margin Declaration public int RightMargin { get; } Property Value Type Description int | Edit this page View Source Settings Reader settings (general or overridden) Declaration public TermReaderSettings Settings { get; } Property Value Type Description TermReaderSettings"
  },
  "api/Terminaux.Reader.TermReaderTools.html": {
    "href": "api/Terminaux.Reader.TermReaderTools.html",
    "title": "Class TermReaderTools | Terminaux API - Aptivi",
    "keywords": "Class TermReaderTools Terminal reader tools Inheritance object TermReaderTools Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReaderTools Properties | Edit this page View Source Busy Specifies whether the terminal reader is busy waiting for input or not Declaration public static bool Busy { get; } Property Value Type Description bool Methods | Edit this page View Source ClearHistory() Clears the history Declaration public static void ClearHistory() | Edit this page View Source Interrupt() Interrupts the reading process Declaration public static void Interrupt() | Edit this page View Source SetHistory(List<string>) Sets the history Declaration public static void SetHistory(List<string> History) Parameters Type Name Description List<string> History List of history entries"
  },
  "api/Terminaux.Reader.Tools.PositioningTools.html": {
    "href": "api/Terminaux.Reader.Tools.PositioningTools.html",
    "title": "Class PositioningTools | Terminaux API - Aptivi",
    "keywords": "Class PositioningTools Positioning tools for the console input reader Inheritance object PositioningTools Namespace: Terminaux.Reader.Tools Assembly: Terminaux.dll Syntax public static class PositioningTools Methods | Edit this page View Source Commit(TermReaderState) Commits the positional changes by changing the cursor dimensions to the current position according to the reader state Declaration public static void Commit(TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state Remarks You don't need to call this function most of the time, except if you want to show the cursor changes or if you want to write directly to that position. | Edit this page View Source GoBack(int, ref TermReaderState) Goes to the number of steps closer to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoBack(int steps, ref TermReaderState state) Parameters Type Name Description int steps The number of steps to go closer to the beginning of the text TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoBack(ref TermReaderState) Goes one step closer to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoBack(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoForward(int, ref TermReaderState) Goes to the number of steps closer to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoForward(int steps, ref TermReaderState state) Parameters Type Name Description int steps The number of steps to go closer to the end of the text TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoForward(ref TermReaderState) Goes one step closer to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoForward(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoLeftmost(ref TermReaderState) Goes to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoLeftmost(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoRightmost(ref TermReaderState) Goes to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoRightmost(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source SeekTo(int, int, ref TermReaderState) Seeks to the selected text position number, pos (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void SeekTo(int fromPos, int pos, ref TermReaderState state) Parameters Type Name Description int fromPos The text position number offset (zero-based) int pos The text position number (zero-based) TermReaderState state State of the terminal reader in its present state | Edit this page View Source SeekTo(int, ref TermReaderState) Seeks to the selected text position number, pos (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void SeekTo(int pos, ref TermReaderState state) Parameters Type Name Description int pos The text position number (zero-based) TermReaderState state State of the terminal reader in its present state"
  },
  "api/Terminaux.Reader.Tools.html": {
    "href": "api/Terminaux.Reader.Tools.html",
    "title": "Namespace Terminaux.Reader.Tools | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Tools Classes PositioningTools Positioning tools for the console input reader"
  },
  "api/Terminaux.Reader.html": {
    "href": "api/Terminaux.Reader.html",
    "title": "Namespace Terminaux.Reader | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader Classes TermReader Terminal input reader module TermReaderSettings Settings for the reader TermReaderState State of the reader TermReaderTools Terminal reader tools"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListEntryWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListEntryWriterColor.html",
    "title": "Class ListEntryWriterColor | Terminaux API - Aptivi",
    "keywords": "Class ListEntryWriterColor List entry writer with color support Inheritance object ListEntryWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class ListEntryWriterColor Methods | Edit this page View Source RenderListEntry(string, string, int) Renders a list entry and value. Declaration public static string RenderListEntry(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed. string value A list value that will be listed. int indent Indentation level Returns Type Description string A list entry without the new line at the end | Edit this page View Source RenderListEntry(string, string, Color, Color, int) Renders a list entry and value. Declaration public static string RenderListEntry(string entry, string value, Color ListKeyColor, Color ListValueColor, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed. string value A list value that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. int indent Indentation level Returns Type Description string A list entry without the new line at the end | Edit this page View Source WriteListEntry(string, string, int) Outputs a list entry and value into the terminal prompt. Declaration public static void WriteListEntry(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. int indent Indentation level | Edit this page View Source WriteListEntry(string, string, Color, Color, int) Outputs a list entry and value into the terminal prompt. Declaration public static void WriteListEntry(string entry, string value, Color ListKeyColor, Color ListValueColor, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. int indent Indentation level | Edit this page View Source WriteListEntry(string, string, ConsoleColors, ConsoleColors, int) Outputs a list entry and value into the terminal prompt. Declaration public static void WriteListEntry(string entry, string value, ConsoleColors ListKeyColor, ConsoleColors ListValueColor, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. int indent Indentation level | Edit this page View Source WriteListEntryPlain(string, string, int) Outputs a list entry and value into the terminal prompt plainly. Declaration public static void WriteListEntryPlain(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. int indent Indentation level"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html",
    "title": "Class ListWriterColor | Terminaux API - Aptivi",
    "keywords": "Class ListWriterColor List writer with color support Inheritance object ListWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class ListWriterColor Methods | Edit this page View Source RenderList<T>(IEnumerable<T>) Renders the list entries. Declaration public static string RenderList<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed. Returns Type Description string Type Parameters Name Description T | Edit this page View Source RenderList<T>(IEnumerable<T>, Color, Color) Renders the list entries. Declaration public static string RenderList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string Type Parameters Name Description T | Edit this page View Source RenderList<TKey, TValue>(Dictionary<TKey, TValue>) Renders the list entries. Declaration public static string RenderList<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed. Returns Type Description string Type Parameters Name Description TKey TValue | Edit this page View Source RenderList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color) Renders the list entries. Declaration public static string RenderList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string Type Parameters Name Description TKey TValue | Edit this page View Source WriteListPlain<T>(IEnumerable<T>) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description T | Edit this page View Source WriteListPlain<T>(IEnumerable<T>, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain<T>(IEnumerable<T> List, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue>) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description TKey TValue | Edit this page View Source WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue>, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue> List, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<T>(IEnumerable<T>) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList<T>(IEnumerable<T> List, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, ConsoleColors, ConsoleColors) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, ConsoleColors, ConsoleColors, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, ConsoleColors, ConsoleColors) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, ConsoleColors, ConsoleColors, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, ConsoleColors ListKeyColor, ConsoleColors ListValueColor, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. ConsoleColors ListKeyColor A key color. ConsoleColors ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue"
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html",
    "title": "Class TextWriterColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterColor Console text writer with color support Inheritance object TextWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterColor Methods | Edit this page View Source Write() Outputs the new line into the terminal prompt. Declaration public static void Write() | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, bool, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, TermReaderSettings, bool, params object[]) Outputs the text into the terminal prompt plainly. Use for TermReader custom bindings. Declaration public static void WritePlain(string Text, TermReaderSettings settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, TermReaderSettings, params object[]) Outputs the text into the terminal prompt plainly. Use for TermReader custom bindings. Declaration public static void WritePlain(string Text, TermReaderSettings settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterHighlightedColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterHighlightedColor.html",
    "title": "Class TextWriterHighlightedColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterHighlightedColor Console text writer with color support Inheritance object TextWriterHighlightedColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterHighlightedColor Methods | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterSlowColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterSlowColor.html",
    "title": "Class TextWriterSlowColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterSlowColor Console text writer with color support (slow write) Inheritance object TextWriterSlowColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterSlowColor Methods | Edit this page View Source WriteSlowlyColor(string, bool, double, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColor(string msg, bool Line, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColor(string, bool, double, ConsoleColors, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColor(string msg, bool Line, double MsEachLetter, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColorBack(string, bool, double, Color, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColorBack(string msg, bool Line, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColorBack(string, bool, double, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColorBack(string msg, bool Line, double MsEachLetter, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyPlain(string, bool, double, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyPlain(string msg, bool Line, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html",
    "title": "Class TextWriterWhereColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWhereColor Console text writer with color support (positional write) Inheritance object TextWriterWhereColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereColor Methods | Edit this page View Source RenderWhere(string, int, int, bool, int, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhere(string, int, int, bool, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhere(string, int, int, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWherePlain(string, int, int, bool, int, params object[]) Renders the text with location support. Declaration public static string RenderWherePlain(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWherePlain(string, int, int, bool, params object[]) Renders the text with location support. Declaration public static string RenderWherePlain(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWherePlain(string, int, int, params object[]) Renders the text with location support. Declaration public static string RenderWherePlain(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteWhere(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, int, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, int, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereSlowColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereSlowColor.html",
    "title": "Class TextWriterWhereSlowColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWhereSlowColor Console text writer with color support (slow positional write) Inheritance object TextWriterWhereSlowColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereSlowColor Methods | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, int, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, ConsoleColors color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, int, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWrappedColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWrappedColor.html",
    "title": "Class TextWriterWrappedColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWrappedColor Console text writer with color support (wrapped) Inheritance object TextWriterWrappedColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWrappedColor Methods | Edit this page View Source WriteWrappedColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColor(string, bool, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColor(string Text, bool Line, ConsoleColors color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColorBack(string Text, bool Line, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedPlain(string, bool, params object[]) Outputs the text into the terminal prompt, wraps the long terminal output if needed, and sets colors as needed. Declaration public static void WriteWrappedPlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.html",
    "title": "Namespace Terminaux.Writer.ConsoleWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.ConsoleWriters Classes ListEntryWriterColor List entry writer with color support ListWriterColor List writer with color support TextWriterColor Console text writer with color support TextWriterHighlightedColor Console text writer with color support TextWriterSlowColor Console text writer with color support (slow write) TextWriterWhereColor Console text writer with color support (positional write) TextWriterWhereSlowColor Console text writer with color support (slow positional write) TextWriterWrappedColor Console text writer with color support (wrapped)"
  },
  "api/Terminaux.Writer.FancyWriters.BorderColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BorderColor.html",
    "title": "Class BorderColor | Terminaux API - Aptivi",
    "keywords": "Class BorderColor Border writer with color support Inheritance object BorderColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BorderColor Methods | Edit this page View Source RenderBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(int, int, int, int) Renders the border plainly Declaration public static string RenderBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string | Edit this page View Source RenderBorderPlain(int, int, int, int, char, char, char, char, char, char, char, char) Renders the border plainly Declaration public static string RenderBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteBorder(int, int, int, int) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color ConsoleColors BackgroundColor Border background color | Edit this page View Source WriteBorder(int, int, int, int, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(int, int, int, int, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, ConsoleColors, ConsoleColors) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color from Terminaux's Color ConsoleColors BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BorderColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border ConsoleColors BorderColor Border color ConsoleColors BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, ConsoleColors, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, ConsoleColors, ConsoleColors, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BorderColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BorderColor Border color from Terminaux's Color ConsoleColors BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorderPlain(int, int, int, int) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorderPlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border"
  },
  "api/Terminaux.Writer.FancyWriters.BoxColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxColor.html",
    "title": "Class BoxColor | Terminaux API - Aptivi",
    "keywords": "Class BoxColor Box writer with color support Inheritance object BoxColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxColor Methods | Edit this page View Source RenderBox(int, int, int, int) Renders the box Declaration public static string RenderBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string The rendered box | Edit this page View Source RenderBox(int, int, int, int, Color) Renders the box Declaration public static string RenderBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color Returns Type Description string The rendered box | Edit this page View Source WriteBox(int, int, int, int) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBox(int, int, int, int, Color) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color | Edit this page View Source WriteBox(int, int, int, int, ConsoleColors) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxColor Box color | Edit this page View Source WriteBoxPlain(int, int, int, int) Writes the box plainly Declaration public static void WriteBoxPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames"
  },
  "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html",
    "title": "Class BoxFrameColor | Terminaux API - Aptivi",
    "keywords": "Class BoxFrameColor BoxFrame writer with color support Inheritance object BoxFrameColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxFrameColor Methods | Edit this page View Source RenderBoxFrame(int, int, int, int) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source WriteBoxFrame(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color ConsoleColors BackgroundColor BoxFrame background color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color | Edit this page View Source WriteBoxFrame(int, int, int, int, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, ConsoleColors, ConsoleColors) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color from Terminaux's Color ConsoleColors BackgroundColor BoxFrame background color from Terminaux's Color | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, ConsoleColors, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame ConsoleColors BoxFrameColor BoxFrame color ConsoleColors BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, ConsoleColors, ConsoleColors, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, ConsoleColors BoxFrameColor, ConsoleColors BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames ConsoleColors BoxFrameColor BoxFrame color from Terminaux's Color ConsoleColors BackgroundColor BoxFrame background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFramePlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html",
    "title": "Class CenteredFigletTextColor | Terminaux API - Aptivi",
    "keywords": "Class CenteredFigletTextColor Centered Figlet writer Inheritance object CenteredFigletTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredFigletTextColor Methods | Edit this page View Source RenderCenteredFiglet(FigletizeFont, string, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(FigletizeFont, string, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletizeFont FigletFont, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(FigletizeFont, string, Color, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletizeFont, string, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletizeFont, string, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletizeFont FigletFont, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletizeFont, string, Color, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteCenteredFiglet(FigletizeFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFiglet(int, FigletizeFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(FigletizeFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(FigletizeFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(FigletizeFont, string, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(FigletizeFont FigletFont, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(int, FigletizeFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(int top, FigletizeFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(int, FigletizeFont, string, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(int top, FigletizeFont FigletFont, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(FigletizeFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(FigletizeFont, string, ConsoleColors, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(FigletizeFont FigletFont, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(int, FigletizeFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(int top, FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(int, FigletizeFont, string, ConsoleColors, ConsoleColors, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(int top, FigletizeFont FigletFont, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html",
    "title": "Class CenteredTextColor | Terminaux API - Aptivi",
    "keywords": "Class CenteredTextColor Centered writer Inheritance object CenteredTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredTextColor Methods | Edit this page View Source RenderCentered(int, string, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(int, string, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(int, string, Color, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, Color, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, Color, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, Color, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteCentered(int, string, params object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCentered(string, params object[]) Draws a centered text Declaration public static void WriteCentered(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(int, string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(int, string, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(int top, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(string, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(int, string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(int, string, ConsoleColors, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(int top, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(string, ConsoleColors, ConsoleColors, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLine(int, string, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLine(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLine(string, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLine(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(int, string, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(int, string, ConsoleColors, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(int top, string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(string, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(string, ConsoleColors, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(int, string, Color, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(int, string, ConsoleColors, ConsoleColors, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(int top, string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(string, Color, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(string, ConsoleColors, ConsoleColors, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletColor.html",
    "title": "Class FigletColor | Terminaux API - Aptivi",
    "keywords": "Class FigletColor Figlet writer Inheritance object FigletColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletColor Methods | Edit this page View Source RenderFiglet(string, FigletizeFont, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, FigletizeFont FigletFont, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFiglet(string, FigletizeFont, Color, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletPlain(string, FigletizeFont, params object[]) Renders the figlet text Declaration public static string RenderFigletPlain(string Text, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteFigletColor(string, FigletizeFont, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, FigletizeFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColor(string, FigletizeFont, ConsoleColors, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, FigletizeFont FigletFont, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, FigletizeFont, Color, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, FigletizeFont, ConsoleColors, ConsoleColors, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, FigletizeFont FigletFont, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletPlain(string, FigletizeFont, params object[]) Writes the figlet text Declaration public static void WriteFigletPlain(string Text, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html",
    "title": "Class FigletWhereColor | Terminaux API - Aptivi",
    "keywords": "Class FigletWhereColor Figlet writer (positional) Inheritance object FigletWhereColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletWhereColor Methods | Edit this page View Source RenderFigletWhere(string, int, int, bool, FigletizeFont, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWhere(string, int, int, bool, FigletizeFont, Color, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWherePlain(string, int, int, bool, FigletizeFont, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWherePlain(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, FigletizeFont, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, FigletizeFont, ConsoleColors, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, FigletizeFont, Color, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, FigletizeFont, ConsoleColors, ConsoleColors, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWherePlain(string, int, int, bool, FigletizeFont, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWherePlain(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.PowerLineColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.PowerLineColor.html",
    "title": "Class PowerLineColor | Terminaux API - Aptivi",
    "keywords": "Class PowerLineColor PowerLine writer Inheritance object PowerLineColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class PowerLineColor Methods | Edit this page View Source RenderPowerLine(List<PowerLineSegment>, bool) Renders the PowerLine text Declaration public static string RenderPowerLine(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write bool Line Write new line after writing the segments Returns Type Description string | Edit this page View Source RenderPowerLine(List<PowerLineSegment>, Color, bool) Renders the PowerLine text Declaration public static string RenderPowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write Color EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments Returns Type Description string | Edit this page View Source WritePowerLine(List<PowerLineSegment>, Color, bool) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments List of PowerLine segments Color EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments | Edit this page View Source WritePowerLine(List<PowerLineSegment>, ConsoleColors, bool) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, ConsoleColors EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments List of PowerLine segments ConsoleColors EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments | Edit this page View Source WritePowerLinePlain(List<PowerLineSegment>, bool) Writes the PowerLine text Declaration public static void WritePowerLinePlain(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write bool Line Write new line after writing the segments"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html",
    "title": "Class ProgressBarColor | Terminaux API - Aptivi",
    "keywords": "Class ProgressBarColor Progress bar writer with color support Inheritance object ProgressBarColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarColor Methods | Edit this page View Source RenderProgress(double, int, int, int, int, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgress(double, int, int, int, int, Color, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgress(double, int, int, int, int, Color, Color, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgressPlain(double, int, int, int, int, bool, bool) Renders the progress bar Declaration public static string RenderProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source WriteProgress(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage?"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html",
    "title": "Class ProgressBarVerticalColor | Terminaux API - Aptivi",
    "keywords": "Class ProgressBarVerticalColor Vertical progress bar writer with color support Inheritance object ProgressBarVerticalColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarVerticalColor Methods | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, Color, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgressPlain(double, int, int, int, int, bool) Renders the progress bar Declaration public static string RenderVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source WriteVerticalProgress(double, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, ConsoleColors, ConsoleColors, ConsoleColors, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, ConsoleColors ProgressColor, ConsoleColors FrameColor, ConsoleColors BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top ConsoleColors ProgressColor The progress bar color ConsoleColors FrameColor The progress bar frame color ConsoleColors BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, bool) Writes the vertical progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html",
    "title": "Class SeparatorWriterColor | Terminaux API - Aptivi",
    "keywords": "Class SeparatorWriterColor Separator writer Inheritance object SeparatorWriterColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SeparatorWriterColor Methods | Edit this page View Source RenderSeparator(string, bool, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, bool, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, bool PrintSuffix, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, bool, Color, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, bool PrintSuffix, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, Color, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteSeparator(string, bool, params object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparator(string, params object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, bool, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, bool PrintSuffix, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, bool, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, bool PrintSuffix, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, ConsoleColors Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. ConsoleColors Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, bool, Color, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, bool PrintSuffix, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, bool, ConsoleColors, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, bool PrintSuffix, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, Color, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, ConsoleColors, ConsoleColors, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, ConsoleColors ForegroundColor, ConsoleColors BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. ConsoleColors ForegroundColor A foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorPlain(string, bool, params object[]) Draw a separator with text plainly Declaration public static void WriteSeparatorPlain(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorPlain(string, params object[]) Draw a separator with text plainly Declaration public static void WriteSeparatorPlain(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.TableColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.TableColor.html",
    "title": "Class TableColor | Terminaux API - Aptivi",
    "keywords": "Class TableColor Table writer with color support Inheritance object TableColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class TableColor Methods | Edit this page View Source RenderTable(string[], string[,], int, Color, Color, Color, Color, bool, List<CellOptions>) Renders a table with text Declaration public static string RenderTable(string[] Headers, string[,] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options Returns Type Description string | Edit this page View Source RenderTablePlain(string[], string[,], int, bool, List<CellOptions>) Renders a table with text Declaration public static string RenderTablePlain(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options Returns Type Description string | Edit this page View Source WriteTable(string[], string[,], int, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Safe threshold from left bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTable(string[], string[,], int, Color, Color, Color, Color, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTable(string[], string[,], int, ConsoleColors, ConsoleColors, ConsoleColors, ConsoleColors, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, ConsoleColors SeparatorForegroundColor, ConsoleColors HeaderForegroundColor, ConsoleColors ValueForegroundColor, ConsoleColors BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset ConsoleColors SeparatorForegroundColor A separator foreground color that will be changed to. ConsoleColors HeaderForegroundColor A header foreground color that will be changed to. ConsoleColors ValueForegroundColor A value foreground color that will be changed to. ConsoleColors BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTablePlain(string[], string[,], int, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTablePlain(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Safe threshold from left bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html",
    "title": "Class BorderTools | Terminaux API - Aptivi",
    "keywords": "Class BorderTools All border tools here Inheritance object BorderTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class BorderTools Properties | Edit this page View Source BorderLeftFrameChar Left frame character Declaration public static char BorderLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerFrameChar Lower frame character Declaration public static char BorderLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerLeftCornerChar Lower left corner character Declaration public static char BorderLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerRightCornerChar Lower right corner character Declaration public static char BorderLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderRightFrameChar Right frame character Declaration public static char BorderRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperFrameChar Upper frame character Declaration public static char BorderUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperLeftCornerChar Upper left corner character Declaration public static char BorderUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperRightCornerChar Upper right corner character Declaration public static char BorderUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html",
    "title": "Class CellOptions | Terminaux API - Aptivi",
    "keywords": "Class CellOptions Table cell options Inheritance object CellOptions Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class CellOptions Constructors | Edit this page View Source CellOptions(int, int) Makes a new instance of the cell options class Declaration public CellOptions(int ColumnNumber, int RowNumber) Parameters Type Name Description int ColumnNumber The column number int RowNumber The row number Properties | Edit this page View Source CellBackgroundColor The custom background cell color Declaration public Color CellBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source CellColor The custom cell color Declaration public Color CellColor { get; set; } Property Value Type Description Color | Edit this page View Source ColoredCell Whether to color the cell Declaration public bool ColoredCell { get; set; } Property Value Type Description bool | Edit this page View Source ColumnIndex The column, or row value, index Declaration public int ColumnIndex { get; } Property Value Type Description int | Edit this page View Source ColumnNumber The column, or row value, number Declaration public int ColumnNumber { get; } Property Value Type Description int | Edit this page View Source RowIndex The row index Declaration public int RowIndex { get; } Property Value Type Description int | Edit this page View Source RowNumber The row number Declaration public int RowNumber { get; } Property Value Type Description int"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html",
    "title": "Class PowerLineSegment | Terminaux API - Aptivi",
    "keywords": "Class PowerLineSegment PowerLine segment Inheritance object PowerLineSegment Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class PowerLineSegment Constructors | Edit this page View Source PowerLineSegment(Color, Color, string, char, char) Installs the segment values to the instance Declaration public PowerLineSegment(Color segmentForeground, Color segmentBackground, string segmentText, char segmentIcon = '\\0', char segmentTransitionIcon = '\\0') Parameters Type Name Description Color segmentForeground Color segmentBackground string segmentText char segmentIcon char segmentTransitionIcon Properties | Edit this page View Source SegmentBackground Background color or next segment transition color of the segment Declaration public Color SegmentBackground { get; } Property Value Type Description Color | Edit this page View Source SegmentForeground Foreground color of the segment Declaration public Color SegmentForeground { get; } Property Value Type Description Color | Edit this page View Source SegmentIcon Segment icon. This should be an iconic character. Declaration public char SegmentIcon { get; } Property Value Type Description char | Edit this page View Source SegmentText Segment text. Usually a status. Declaration public string SegmentText { get; } Property Value Type Description string | Edit this page View Source SegmentTransitionIcon Segment transition icon. This should be an iconic character. Declaration public char SegmentTransitionIcon { get; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html",
    "title": "Class PowerLineTools | Terminaux API - Aptivi",
    "keywords": "Class PowerLineTools PowerLine tools Inheritance object PowerLineTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class PowerLineTools Methods | Edit this page View Source RenderSegments(List<PowerLineSegment>) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Returns Type Description string | Edit this page View Source RenderSegments(List<PowerLineSegment>, Color) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments, Color EndingColor) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Color EndingColor Ending background color for the last segment transition Returns Type Description string"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html",
    "title": "Class ProgressTools | Terminaux API - Aptivi",
    "keywords": "Class ProgressTools Progress tools Inheritance object ProgressTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class ProgressTools Properties | Edit this page View Source ProgressLeftFrameChar Left frame character for the progress bar Declaration public static char ProgressLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerFrameChar Lower frame character for the progress bar Declaration public static char ProgressLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerLeftCornerChar Lower left corner character for the progress bar Declaration public static char ProgressLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerRightCornerChar Lower right corner character for the progress bar Declaration public static char ProgressLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressRightFrameChar Right frame character for the progress bar Declaration public static char ProgressRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperFrameChar Upper frame character for the progress bar Declaration public static char ProgressUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperLeftCornerChar Upper left corner character for the progress bar Declaration public static char ProgressUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperRightCornerChar Upper right corner character for the progress bar Declaration public static char ProgressUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.html",
    "title": "Namespace Terminaux.Writer.FancyWriters.Tools | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.FancyWriters.Tools Classes BorderTools All border tools here CellOptions Table cell options PowerLineSegment PowerLine segment PowerLineTools PowerLine tools ProgressTools Progress tools"
  },
  "api/Terminaux.Writer.FancyWriters.html": {
    "href": "api/Terminaux.Writer.FancyWriters.html",
    "title": "Namespace Terminaux.Writer.FancyWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.FancyWriters Classes BorderColor Border writer with color support BoxColor Box writer with color support BoxFrameColor BoxFrame writer with color support CenteredFigletTextColor Centered Figlet writer CenteredTextColor Centered writer FigletColor Figlet writer FigletWhereColor Figlet writer (positional) PowerLineColor PowerLine writer ProgressBarColor Progress bar writer with color support ProgressBarVerticalColor Vertical progress bar writer with color support SeparatorWriterColor Separator writer TableColor Table writer with color support"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html",
    "title": "Class LineHandleRangedWriter | Terminaux API - Aptivi",
    "keywords": "Class LineHandleRangedWriter Ranged line handle writer (with start and end positions) Inheritance object LineHandleRangedWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleRangedWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself as the start. int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html",
    "title": "Class LineHandleWriter | Terminaux API - Aptivi",
    "keywords": "Class LineHandleWriter Line handle writer Inheritance object LineHandleWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string[], int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.html": {
    "href": "api/Terminaux.Writer.MiscWriters.html",
    "title": "Namespace Terminaux.Writer.MiscWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.MiscWriters Classes LineHandleRangedWriter Ranged line handle writer (with start and end positions) LineHandleWriter Line handle writer"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Terminaux API - Aptivi",
    "keywords": "What is Terminaux? Terminaux is a library that allows you to manipulate with the console. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Terminaux, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2022-2023 Aptivi. All rights reserved."
  }
}