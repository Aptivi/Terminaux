{
  "api/Terminaux.Base.Buffered.Screen.html": {
    "href": "api/Terminaux.Base.Buffered.Screen.html",
    "title": "Class Screen | Terminaux API - Aptivi",
    "keywords": "Class Screen A screen instance to store your buffered screen parts Inheritance object Screen Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public class Screen Constructors | Edit this page View Source Screen() Makes a new instance of the screen Declaration public Screen() Properties | Edit this page View Source ResetResize Whether to reset the resize state or not Declaration public bool ResetResize { get; set; } Property Value Type Description bool | Edit this page View Source ScreenParts Buffered screen parts list to render one by one while buffering the console Declaration public ScreenPart[] ScreenParts { get; } Property Value Type Description ScreenPart[] Methods | Edit this page View Source AddBufferedPart(string, ScreenPart) Adds the buffered part to the list of screen parts Declaration public void AddBufferedPart(string name, ScreenPart part) Parameters Type Name Description string name Screen buffer part name ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source CheckBufferedPart(Guid) Checks the buffered part in the list of screen parts using the GUID Declaration public bool CheckBufferedPart(Guid id) Parameters Type Name Description Guid id Screen buffer part GUID Returns Type Description bool Exceptions Type Condition TerminauxException | Edit this page View Source CheckBufferedPart(int) Checks the buffered part in the list of screen parts Declaration public bool CheckBufferedPart(int idx) Parameters Type Name Description int idx Part index Returns Type Description bool Exceptions Type Condition TerminauxException | Edit this page View Source CheckBufferedPart(string) Checks the buffered part in the list of screen parts Declaration public bool CheckBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Returns Type Description bool Exceptions Type Condition TerminauxException | Edit this page View Source EditBufferedPart(Guid, ScreenPart) Edits the buffered part in the list of screen parts Declaration public void EditBufferedPart(Guid id, ScreenPart part) Parameters Type Name Description Guid id Screen buffer part GUID ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source EditBufferedPart(int, ScreenPart) Edits the buffered part in the list of screen parts Declaration public void EditBufferedPart(int idx, ScreenPart part) Parameters Type Name Description int idx Part index ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source EditBufferedPart(string, ScreenPart) Edits the buffered part in the list of screen parts Declaration public void EditBufferedPart(string name, ScreenPart part) Parameters Type Name Description string name Screen buffer part name ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source GetBuffer() Gets a buffer from all the buffered screen parts Declaration public string GetBuffer() Returns Type Description string A buffer that is to be written to the console | Edit this page View Source GetBufferedPart(Guid) Gets the buffered part from the list of screen parts Declaration public ScreenPart GetBufferedPart(Guid id) Parameters Type Name Description Guid id Screen buffer part GUID Returns Type Description ScreenPart Exceptions Type Condition TerminauxException | Edit this page View Source GetBufferedPart(int) Gets the buffered part from the list of screen parts Declaration public ScreenPart GetBufferedPart(int idx) Parameters Type Name Description int idx Part index Returns Type Description ScreenPart Exceptions Type Condition TerminauxException | Edit this page View Source GetBufferedPart(string) Gets the buffered part from the list of screen parts Declaration public ScreenPart GetBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Returns Type Description ScreenPart Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedPart(Guid) Removes the buffered part from the list of screen parts using the GUID Declaration public void RemoveBufferedPart(Guid id) Parameters Type Name Description Guid id Screen buffer part GUID Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedPart(int) Removes the buffered part from the list of screen parts Declaration public void RemoveBufferedPart(int idx) Parameters Type Name Description int idx Part index Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedPart(string) Removes the buffered part from the list of screen parts Declaration public void RemoveBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedParts() Removes all the buffered parts from the list of screen parts Declaration public void RemoveBufferedParts() | Edit this page View Source RequireRefresh() Tells the clear screen part that the refresh is required Declaration public void RequireRefresh()"
  },
  "api/Terminaux.Base.Buffered.ScreenPart.html": {
    "href": "api/Terminaux.Base.Buffered.ScreenPart.html",
    "title": "Class ScreenPart | Terminaux API - Aptivi",
    "keywords": "Class ScreenPart Buffered screen part Inheritance object ScreenPart Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public class ScreenPart Constructors | Edit this page View Source ScreenPart() Makes a new instance of the screen part Declaration public ScreenPart() Properties | Edit this page View Source Id Screen part identification Declaration public Guid Id { get; } Property Value Type Description Guid | Edit this page View Source Order Order to use while buffering the screen. Declaration public int Order { get; set; } Property Value Type Description int Remarks This is compared in an ascending way so that the screen management system sorts the parts from the least important to the most important. For example, parts that are in order number 0 will get buffered before parts that have their order number of 1, and so on. Methods | Edit this page View Source AddDynamicText(Func<string>) Adds a dynamic text to the buffer Declaration public void AddDynamicText(Func<string> textFunc) Parameters Type Name Description Func<string> textFunc Text to add to the dynamic buffer queue | Edit this page View Source AddText(string) Adds a text to the buffer Declaration public void AddText(string text) Parameters Type Name Description string text Text to write to the buffer builder | Edit this page View Source AddTextLine(string) Adds a text to the buffer with a new line Declaration public void AddTextLine(string text) Parameters Type Name Description string text Text to write to the buffer builder | Edit this page View Source BackgroundColor(Color, bool) Adds the VT sequence to set the background color Declaration public void BackgroundColor(Color color, bool forceTrue = false) Parameters Type Name Description Color color Color to use for background color bool forceTrue Forces the usage of the true color | Edit this page View Source Clear() Clears the buffer Declaration public void Clear() | Edit this page View Source ForegroundColor(Color, bool) Adds the VT sequence to set the foreground color Declaration public void ForegroundColor(Color color, bool forceTrue = false) Parameters Type Name Description Color color Color to use for foreground color bool forceTrue Forces the usage of the true color | Edit this page View Source GetBuffer() Gets the resulting buffer Declaration public string GetBuffer() Returns Type Description string The resulting buffer | Edit this page View Source LeftPosition(int) Adds the VT sequence to set the left cursor position Declaration public void LeftPosition(int left) Parameters Type Name Description int left Zero-based left position | Edit this page View Source Position(int, int) Adds the VT sequence to set the cursor position Declaration public void Position(int left, int top) Parameters Type Name Description int left Zero-based left position int top Zero-based top position | Edit this page View Source ResetBackgroundColor() Adds the VT sequence to reset the background color Declaration public void ResetBackgroundColor() | Edit this page View Source ResetColors() Adds the VT sequence to reset the colors Declaration public void ResetColors() | Edit this page View Source ResetForegroundColor() Adds the VT sequence to reset the foreground color Declaration public void ResetForegroundColor() | Edit this page View Source TopPosition(int) Adds the VT sequence to set the top cursor position Declaration public void TopPosition(int top) Parameters Type Name Description int top Zero-based top position"
  },
  "api/Terminaux.Base.Buffered.ScreenTools.html": {
    "href": "api/Terminaux.Base.Buffered.ScreenTools.html",
    "title": "Class ScreenTools | Terminaux API - Aptivi",
    "keywords": "Class ScreenTools Buffered screen tools Inheritance object ScreenTools Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public static class ScreenTools Properties | Edit this page View Source CurrentScreen Gets the currently displaying screen Declaration public static Screen? CurrentScreen { get; } Property Value Type Description Screen Methods | Edit this page View Source Render() Renders the current screen one time Declaration public static void Render() | Edit this page View Source Render(Screen?) Renders the screen one time Declaration public static void Render(Screen? screen) Parameters Type Name Description Screen screen The screen to be rendered | Edit this page View Source SetCurrent(Screen) Sets the current screen instance Declaration public static void SetCurrent(Screen screen) Parameters Type Name Description Screen screen The screen to add to the list Exceptions Type Condition TerminauxException | Edit this page View Source UnsetCurrent(Screen) Unsets the current screen instance Declaration public static void UnsetCurrent(Screen screen) Parameters Type Name Description Screen screen The screen to remove from the list Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Base.Buffered.html": {
    "href": "api/Terminaux.Base.Buffered.html",
    "title": "Namespace Terminaux.Base.Buffered | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Buffered Classes Screen A screen instance to store your buffered screen parts ScreenPart Buffered screen part ScreenTools Buffered screen tools"
  },
  "api/Terminaux.Base.Checks.ConsoleChecker.html": {
    "href": "api/Terminaux.Base.Checks.ConsoleChecker.html",
    "title": "Class ConsoleChecker | Terminaux API - Aptivi",
    "keywords": "Class ConsoleChecker Console sanity checking module Inheritance object ConsoleChecker Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class ConsoleChecker Properties | Edit this page View Source HomePath Platform-dependent home path Declaration public static string HomePath { get; } Property Value Type Description string | Edit this page View Source IsDumb Is the console a dumb console? Declaration public static bool IsDumb { get; } Property Value Type Description bool Methods | Edit this page View Source AddToCheckWhitelist(Assembly) Adds the assembly to the check whitelist Declaration public static void AddToCheckWhitelist(Assembly asm) Parameters Type Name Description Assembly asm Assembly to add | Edit this page View Source CheckConsole() Checks the running console for sanity, like the incompatible consoles, insane console types, etc. Declaration public static void CheckConsole() | Edit this page View Source CheckConsoleSize(int, int) Checks the console size with edge cases Declaration public static bool CheckConsoleSize(int minimumWidth = 80, int minimumHeight = 24) Parameters Type Name Description int minimumWidth Minimum console window width to check int minimumHeight Minimum console window height to check Returns Type Description bool | Edit this page View Source CheckConsoleSizePrompt(int, int) Checks the console size with edge cases, prompting the user to resize the screen if the minimum console size requirements is not satisfied. Declaration public static void CheckConsoleSizePrompt(int minimumWidth = 80, int minimumHeight = 24) Parameters Type Name Description int minimumWidth Minimum console window width to check int minimumHeight Minimum console window height to check | Edit this page View Source IsConHost() Checks whether this current application is running off ConHost or not Declaration public static bool IsConHost() Returns Type Description bool True if running off ConHost; otherwise, false. Always false on Linux systems. | Edit this page View Source IsConsole256Colors() Does the console support 256 colors? Declaration public static bool IsConsole256Colors() Returns Type Description bool | Edit this page View Source RemoveFromCheckWhitelist(Assembly) Removes the assembly from the check whitelist Declaration public static void RemoveFromCheckWhitelist(Assembly asm) Parameters Type Name Description Assembly asm Assembly to remove"
  },
  "api/Terminaux.Base.Checks.ConsoleFilter.html": {
    "href": "api/Terminaux.Base.Checks.ConsoleFilter.html",
    "title": "Class ConsoleFilter | Terminaux API - Aptivi",
    "keywords": "Class ConsoleFilter Console filter tools Inheritance object ConsoleFilter Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class ConsoleFilter Methods | Edit this page View Source AddToFilter(string, ConsoleFilterType, ConsoleFilterSeverity, string) Adds a match for the terminal type or emulator to the blacklist or the graylist Declaration public static void AddToFilter(string query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification) Parameters Type Name Description string query The type query for the console type to match ConsoleFilterType type Filter type ConsoleFilterSeverity severity Filter severity string justification Reason for the blacklist | Edit this page View Source AddToFilter(Regex, ConsoleFilterType, ConsoleFilterSeverity, string) Adds a match for the terminal type or emulator to the blacklist or the graylist Declaration public static void AddToFilter(Regex query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification) Parameters Type Name Description Regex query The type query for the console type to match ConsoleFilterType type Filter type ConsoleFilterSeverity severity Filter severity string justification Reason for the blacklist | Edit this page View Source GetFilteredQueries() Gets the filtered queries Declaration public static (Regex? query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification)[] GetFilteredQueries() Returns Type Description (Regex query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification)[] Terminal queries with their matches, their types, their severities, and their justifications | Edit this page View Source IsConsoleFiltered(ConsoleFilterType, ConsoleFilterSeverity) Checks to see if the current console is filtered Declaration public static (bool filtered, string justification) IsConsoleFiltered(ConsoleFilterType type, ConsoleFilterSeverity severity) Parameters Type Name Description ConsoleFilterType type ConsoleFilterSeverity severity Returns Type Description (bool filtered, string justification) True if filtered; false otherwise | Edit this page View Source IsInFilter(string, ConsoleFilterType, ConsoleFilterSeverity, out (Regex? query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification)) Is the query in the filter? Declaration public static bool IsInFilter(string query, ConsoleFilterType type, ConsoleFilterSeverity severity, out (Regex? query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification) queryTuple) Parameters Type Name Description string query The query to check ConsoleFilterType type Filter type ConsoleFilterSeverity severity Filter severity (Regex query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification) queryTuple Output query tuple Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source IsInFilter(Regex, ConsoleFilterType, ConsoleFilterSeverity, out (Regex? query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification)) Is the query in the filter? Declaration public static bool IsInFilter(Regex query, ConsoleFilterType type, ConsoleFilterSeverity severity, out (Regex? query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification) queryTuple) Parameters Type Name Description Regex query The query to check ConsoleFilterType type Filter type ConsoleFilterSeverity severity Filter severity (Regex query, ConsoleFilterType type, ConsoleFilterSeverity severity, string justification) queryTuple Output query tuple Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source RemoveFromFilter(string, ConsoleFilterType, ConsoleFilterSeverity) Removes a match for the terminal type from the blacklist Declaration public static void RemoveFromFilter(string query, ConsoleFilterType type, ConsoleFilterSeverity severity) Parameters Type Name Description string query The type query for the console type to match ConsoleFilterType type Filter type ConsoleFilterSeverity severity Filter severity | Edit this page View Source RemoveFromFilter(Regex, ConsoleFilterType, ConsoleFilterSeverity) Removes a match for the terminal type from the blacklist Declaration public static void RemoveFromFilter(Regex query, ConsoleFilterType type, ConsoleFilterSeverity severity) Parameters Type Name Description Regex query The type query for the console type to match ConsoleFilterType type Filter type ConsoleFilterSeverity severity Filter severity"
  },
  "api/Terminaux.Base.Checks.ConsoleFilterSeverity.html": {
    "href": "api/Terminaux.Base.Checks.ConsoleFilterSeverity.html",
    "title": "Enum ConsoleFilterSeverity | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleFilterSeverity Console filter severity Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public enum ConsoleFilterSeverity Fields Name Description Blacklist Whether either the type or the emulator is blacklisted (i.e. not supporting VT sequences) Graylist Whether either the type or the emulator is graylisted (i.e. misleading color support value)"
  },
  "api/Terminaux.Base.Checks.ConsoleFilterType.html": {
    "href": "api/Terminaux.Base.Checks.ConsoleFilterType.html",
    "title": "Enum ConsoleFilterType | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleFilterType Console filter types Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public enum ConsoleFilterType Fields Name Description Emulator Whether the filter is on the console emulator (Apple_Terminal, ...) Type Whether the filter is on the console type (vt100, xterm-256color, screen, ...)"
  },
  "api/Terminaux.Base.Checks.html": {
    "href": "api/Terminaux.Base.Checks.html",
    "title": "Namespace Terminaux.Base.Checks | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Checks Classes ConsoleChecker Console sanity checking module ConsoleFilter Console filter tools Enums ConsoleFilterSeverity Console filter severity ConsoleFilterType Console filter types"
  },
  "api/Terminaux.Base.ConsoleResizeHandler.html": {
    "href": "api/Terminaux.Base.ConsoleResizeHandler.html",
    "title": "Class ConsoleResizeHandler | Terminaux API - Aptivi",
    "keywords": "Class ConsoleResizeHandler The console resize listener module Inheritance object ConsoleResizeHandler Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleResizeHandler Properties | Edit this page View Source RunEssentialHandler Whether to run the base console resize handler or not after running a custom action Declaration public static bool RunEssentialHandler { get; set; } Property Value Type Description bool Methods | Edit this page View Source GetCurrentConsoleSize() Gets the console size from the cached window height and width position Declaration public static (int Width, int Height) GetCurrentConsoleSize() Returns Type Description (int Width, int Height) | Edit this page View Source WasResized(bool) This property checks to see if the console has been resized since the last time it has been called or the listener has started. Declaration public static bool WasResized(bool reset = true) Parameters Type Name Description bool reset Reset the resized value once this is called Returns Type Description bool"
  },
  "api/Terminaux.Base.ConsoleWrapper.html": {
    "href": "api/Terminaux.Base.ConsoleWrapper.html",
    "title": "Class ConsoleWrapper | Terminaux API - Aptivi",
    "keywords": "Class ConsoleWrapper Wrapper for the Console class to ensure safety against dumb consoles. This connects to the console wrapper that Terminaux manages. Inheritance object ConsoleWrapper Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleWrapper Properties | Edit this page View Source BufferHeight The console buffer height (rows) Declaration public static int BufferHeight { get; set; } Property Value Type Description int | Edit this page View Source BufferWidth The console buffer width (columns) Declaration public static int BufferWidth { get; set; } Property Value Type Description int | Edit this page View Source CursorLeft The cursor left position Declaration public static int CursorLeft { get; set; } Property Value Type Description int | Edit this page View Source CursorTop The cursor top position Declaration public static int CursorTop { get; set; } Property Value Type Description int | Edit this page View Source CursorVisible The cursor visibility mode Declaration public static bool CursorVisible { get; set; } Property Value Type Description bool | Edit this page View Source IsDumb Checks to see if the console is dumb Declaration public static bool IsDumb { get; } Property Value Type Description bool | Edit this page View Source KeyAvailable Whether a key is pressed Declaration public static bool KeyAvailable { get; } Property Value Type Description bool | Edit this page View Source TreatCtrlCAsInput Whether to treat Ctrl + C as input or not Declaration public static bool TreatCtrlCAsInput { get; set; } Property Value Type Description bool | Edit this page View Source WindowHeight The console window height (rows) Declaration public static int WindowHeight { get; set; } Property Value Type Description int | Edit this page View Source WindowWidth The console window width (columns) Declaration public static int WindowWidth { get; set; } Property Value Type Description int Methods | Edit this page View Source Beep() Beeps the console Declaration public static void Beep() | Edit this page View Source BeepSeq() Beeps the console (VT Sequence method) Declaration public static void BeepSeq() | Edit this page View Source Clear() Clears the console screen. Declaration public static void Clear() | Edit this page View Source ClearLoadBack() Clears the console screen while loading the background. Declaration public static void ClearLoadBack() | Edit this page View Source ReadKey(bool) Reads a key Declaration public static ConsoleKeyInfo ReadKey(bool intercept = false) Parameters Type Name Description bool intercept Whether to intercept Returns Type Description ConsoleKeyInfo | Edit this page View Source SetBufferDimensions(int, int) Sets the buffer dimensions Declaration public static void SetBufferDimensions(int width, int height) Parameters Type Name Description int width The buffer width to be set (from 0) int height The buffer height to be set (from 0) | Edit this page View Source SetCursorPosition(int, int) Sets the cursor position Declaration public static void SetCursorPosition(int left, int top) Parameters Type Name Description int left The left to be set (from 0) int top The top to be set (from 0) | Edit this page View Source SetWindowDimensions(int, int) Sets the window dimensions Declaration public static void SetWindowDimensions(int width, int height) Parameters Type Name Description int width The window width to be set (from 0) int height The window height to be set (from 0) | Edit this page View Source Write(char) Writes a character to console (stdout) Declaration public static void Write(char value) Parameters Type Name Description char value A character | Edit this page View Source Write(string) Writes text to console (stdout) Declaration public static void Write(string text) Parameters Type Name Description string text The text to write | Edit this page View Source Write(string, params object[]) Writes text to console (stdout) Declaration public static void Write(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate | Edit this page View Source WriteError(char) Writes a character to console (stderr) Declaration public static void WriteError(char value) Parameters Type Name Description char value A character | Edit this page View Source WriteError(string) Writes text to console (stderr) Declaration public static void WriteError(string text) Parameters Type Name Description string text The text to write | Edit this page View Source WriteError(string, params object[]) Writes text to console (stderr) Declaration public static void WriteError(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate | Edit this page View Source WriteLine() Writes new line to console (stdout) Declaration public static void WriteLine() | Edit this page View Source WriteLine(string) Writes text to console (stdout) with line terminator Declaration public static void WriteLine(string text) Parameters Type Name Description string text The text to write | Edit this page View Source WriteLine(string, params object[]) Writes text to console (stdout) with line terminator Declaration public static void WriteLine(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate | Edit this page View Source WriteLineError() Writes new line to console (stderr) Declaration public static void WriteLineError() | Edit this page View Source WriteLineError(string) Writes text to console (stderr) with line terminator Declaration public static void WriteLineError(string text) Parameters Type Name Description string text The text to write | Edit this page View Source WriteLineError(string, params object[]) Writes text to console (stderr) with line terminator Declaration public static void WriteLineError(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate"
  },
  "api/Terminaux.Base.ConsoleWrapperTools.html": {
    "href": "api/Terminaux.Base.ConsoleWrapperTools.html",
    "title": "Class ConsoleWrapperTools | Terminaux API - Aptivi",
    "keywords": "Class ConsoleWrapperTools Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. Inheritance object ConsoleWrapperTools Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleWrapperTools Properties | Edit this page View Source ActionBeep Beeps the console Declaration public static Action ActionBeep { set; } Property Value Type Description Action | Edit this page View Source ActionBeepSeq Beeps the console (VT Sequence method) Declaration public static Action ActionBeepSeq { set; } Property Value Type Description Action | Edit this page View Source ActionBufferHeight The console buffer height (rows) Declaration public static Func<int> ActionBufferHeight { set; } Property Value Type Description Func<int> | Edit this page View Source ActionBufferWidth The console buffer width (columns) Declaration public static Func<int> ActionBufferWidth { set; } Property Value Type Description Func<int> | Edit this page View Source ActionClear Clears the console Declaration public static Action ActionClear { set; } Property Value Type Description Action | Edit this page View Source ActionClearLoadBack Clears the console while loading the background Declaration public static Action ActionClearLoadBack { set; } Property Value Type Description Action | Edit this page View Source ActionCursorLeft The cursor left position Declaration public static Func<int> ActionCursorLeft { set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorTop The cursor top position Declaration public static Func<int> ActionCursorTop { set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorVisible The cursor visibility mode Declaration public static Action<bool> ActionCursorVisible { set; } Property Value Type Description Action<bool> | Edit this page View Source ActionGetCursorVisible The cursor visibility mode Declaration public static Func<bool> ActionGetCursorVisible { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionGetTreatCtrlCAsInput Whether to treat CTRL + C as input Declaration public static Func<bool> ActionGetTreatCtrlCAsInput { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionIsDumb Is the console a dumb console? Declaration public static Func<bool> ActionIsDumb { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionKeyAvailable Whether a key is pressed Declaration public static Func<bool> ActionKeyAvailable { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionReadKey Reads a key Boolean value indicates whether to intercept Declaration public static Func<bool, ConsoleKeyInfo> ActionReadKey { set; } Property Value Type Description Func<bool, ConsoleKeyInfo> | Edit this page View Source ActionSetBufferDimensions Sets the buffer dimensions First integer is the buffer width from 0 Second integer is the buffer height from 0 Declaration public static Action<int, int> ActionSetBufferDimensions { set; } Property Value Type Description Action<int, int> | Edit this page View Source ActionSetBufferHeight The console buffer height (rows, set) Declaration public static Action<int> ActionSetBufferHeight { set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetBufferWidth The console buffer width (columns, set) Declaration public static Action<int> ActionSetBufferWidth { set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetCursorLeft Sets the cursor left position First integer is the X position from 0 Declaration public static Action<int> ActionSetCursorLeft { set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetCursorPosition Sets the cursor position First integer is the X position from 0 Second integer is the Y position from 0 Declaration public static Action<int, int> ActionSetCursorPosition { set; } Property Value Type Description Action<int, int> | Edit this page View Source ActionSetCursorTop Sets the cursor top position First integer is the Y position from 0 Declaration public static Action<int> ActionSetCursorTop { set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetWindowDimensions Sets the window dimensions First integer is the window width from 0 Second integer is the window height from 0 Declaration public static Action<int, int> ActionSetWindowDimensions { set; } Property Value Type Description Action<int, int> | Edit this page View Source ActionSetWindowHeight The console window height (rows, set) Declaration public static Action<int> ActionSetWindowHeight { set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetWindowWidth The console window width (columns, set) Declaration public static Action<int> ActionSetWindowWidth { set; } Property Value Type Description Action<int> | Edit this page View Source ActionTreatCtrlCAsInput Whether to treat CTRL + C as input Declaration public static Action<bool> ActionTreatCtrlCAsInput { set; } Property Value Type Description Action<bool> | Edit this page View Source ActionWindowHeight The console window height (rows) Declaration public static Func<int> ActionWindowHeight { set; } Property Value Type Description Func<int> | Edit this page View Source ActionWindowWidth The console window width (columns) Declaration public static Func<int> ActionWindowWidth { set; } Property Value Type Description Func<int> | Edit this page View Source ActionWriteChar Writes a character to console A character Declaration public static Action<char> ActionWriteChar { set; } Property Value Type Description Action<char> | Edit this page View Source ActionWriteErrorChar Writes a character to console A character Declaration public static Action<char> ActionWriteErrorChar { set; } Property Value Type Description Action<char> | Edit this page View Source ActionWriteErrorLine Writes new line to console Declaration public static Action ActionWriteErrorLine { set; } Property Value Type Description Action | Edit this page View Source ActionWriteErrorLineParameterized Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteErrorLineParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteErrorLineString Writes text to console with line terminator The text to write Declaration public static Action<string> ActionWriteErrorLineString { set; } Property Value Type Description Action<string> | Edit this page View Source ActionWriteErrorParameterized Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteErrorParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteErrorString Writes text to console The text to write Declaration public static Action<string> ActionWriteErrorString { set; } Property Value Type Description Action<string> | Edit this page View Source ActionWriteLine Writes new line to console Declaration public static Action ActionWriteLine { set; } Property Value Type Description Action | Edit this page View Source ActionWriteLineParameterized Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteLineParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteLineString Writes text to console with line terminator The text to write Declaration public static Action<string> ActionWriteLineString { set; } Property Value Type Description Action<string> | Edit this page View Source ActionWriteParameterized Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteString Writes text to console The text to write Declaration public static Action<string> ActionWriteString { set; } Property Value Type Description Action<string>"
  },
  "api/Terminaux.Base.Extensions.ConsoleChar.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleChar.html",
    "title": "Class ConsoleChar | Terminaux API - Aptivi",
    "keywords": "Class ConsoleChar Console character manipulation routines Inheritance object ConsoleChar Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleChar Properties | Edit this page View Source UseTwoCellsForAmbiguousChars Whether to use two cells for ambiguous characters or only one cell Declaration public static bool UseTwoCellsForAmbiguousChars { get; set; } Property Value Type Description bool | Edit this page View Source UseTwoCellsForPrivateChars Whether to use two cells for private characters or only one cell Declaration public static bool UseTwoCellsForPrivateChars { get; set; } Property Value Type Description bool | Edit this page View Source UseTwoCellsForUnassignedChars Whether to use two cells for unassigned characters or only one cell Declaration public static bool UseTwoCellsForUnassignedChars { get; set; } Property Value Type Description bool Methods | Edit this page View Source EstimateCellWidth(string) Estimates the cell width (how many cells a string takes up) Declaration public static int EstimateCellWidth(string sentence) Parameters Type Name Description string sentence A sentence to process Returns Type Description int Length of the string by character widths (a.k.a. how many cells this sentence takes up) | Edit this page View Source EstimateCellWidth(string, int) Estimates the cell width (how many cells a string takes up) of a character Declaration public static int EstimateCellWidth(string sentence, int index) Parameters Type Name Description string sentence A sentence to process int index Index of a character within a sentence Returns Type Description int Length of a character by character widths (a.k.a. how many cells this sentence takes up), or -1 if empty | Edit this page View Source EstimateFullWidths(string) Estimates the amount of zero-width characters Declaration public static int EstimateFullWidths(string sentence) Parameters Type Name Description string sentence A sentence to process Returns Type Description int The amount of zero-width characters that this sentence contains | Edit this page View Source EstimateZeroWidths(string) Estimates the amount of zero-width characters Declaration public static int EstimateZeroWidths(string sentence) Parameters Type Name Description string sentence A sentence to process Returns Type Description int The amount of zero-width characters that this sentence contains | Edit this page View Source GetCharWidth(int) Gets the character width Declaration public static int GetCharWidth(int c) Parameters Type Name Description int c A character number (codepoint) to parse Returns Type Description int Either 0 for non-printing characters, 1 for half-width characters, or 2 for full-width characters Exceptions Type Condition TerminauxInternalException | Edit this page View Source GetCharWidthType(int) Gets the character width type Declaration public static CharWidthType GetCharWidthType(int c) Parameters Type Name Description int c A character number (codepoint) to parse Returns Type Description CharWidthType Character width type Exceptions Type Condition TerminauxInternalException"
  },
  "api/Terminaux.Base.Extensions.ConsoleClearing.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleClearing.html",
    "title": "Class ConsoleClearing | Terminaux API - Aptivi",
    "keywords": "Class ConsoleClearing Console clearing tools Inheritance object ConsoleClearing Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleClearing Methods | Edit this page View Source ClearLineToRight() Clears the line to the right Declaration public static void ClearLineToRight() | Edit this page View Source GetClearLineToRightSequence() Gets a sequence that clears the line to the right Declaration public static string GetClearLineToRightSequence() Returns Type Description string | Edit this page View Source GetClearWholeScreenSequence() Gets a sequence that clears the whole screen Declaration public static string GetClearWholeScreenSequence() Returns Type Description string | Edit this page View Source ResetAll() Resets the entire console Declaration public static void ResetAll()"
  },
  "api/Terminaux.Base.Extensions.ConsoleCursor.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleCursor.html",
    "title": "Class ConsoleCursor | Terminaux API - Aptivi",
    "keywords": "Class ConsoleCursor Console cursor tools Inheritance object ConsoleCursor Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleCursor Properties | Edit this page View Source CursorType Specifies the cursor type Declaration public static ConsoleCursorType CursorType { get; set; } Property Value Type Description ConsoleCursorType | Edit this page View Source CursorVisible Determines whether the cursor is visible or not Declaration public static bool CursorVisible { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Base.Extensions.ConsoleCursorType.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleCursorType.html",
    "title": "Enum ConsoleCursorType | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleCursorType Console cursor type Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public enum ConsoleCursorType Fields Name Description BarBlinking Blinking bar BarSteady Blinking steady BlockBlinking Blinking block BlockSteady Steady block UnderlineBlinking Blinking underline UnderlineSteady Steady underline User Determined by the terminal emulator"
  },
  "api/Terminaux.Base.Extensions.ConsoleFormatting.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleFormatting.html",
    "title": "Class ConsoleFormatting | Terminaux API - Aptivi",
    "keywords": "Class ConsoleFormatting Text formatting tools for the console Inheritance object ConsoleFormatting Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleFormatting Properties | Edit this page View Source CurrentFormatting Current text formatting Declaration public static ConsoleFormattingType CurrentFormatting { get; } Property Value Type Description ConsoleFormattingType | Edit this page View Source TextFormatted Has the text been formatted? Declaration public static bool TextFormatted { get; } Property Value Type Description bool Methods | Edit this page View Source GetFormattingSequences(ConsoleFormattingType) Gets the formatting sequences for the selected formatting types Declaration public static string GetFormattingSequences(ConsoleFormattingType types) Parameters Type Name Description ConsoleFormattingType types Selected formatting types Returns Type Description string A string containing necessary VT sequences for all selected text formatting | Edit this page View Source ResetFormatting() Resets console text formatting Declaration public static void ResetFormatting() | Edit this page View Source SetFormatting(ConsoleFormattingType) Sets text formatting for future plain writes Declaration public static void SetFormatting(ConsoleFormattingType formattings) Parameters Type Name Description ConsoleFormattingType formattings All text formatting to use"
  },
  "api/Terminaux.Base.Extensions.ConsoleFormattingType.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleFormattingType.html",
    "title": "Enum ConsoleFormattingType | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleFormattingType Console formatting type Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public enum ConsoleFormattingType Fields Name Description Conceal [8] Conceals text Default [0] Default formatting Encircled [52] Encircled Faint [2] Reduced intensity (either light or dim) text FastBlink [6] Blinks the cursor quickly Framed [51] Framed Intense [1] Intense (either bold or bright) text Italic [3] Italic text NoProportionalSpacing [50] No proportional spacing NotBlinking [25] Not blinking NotBold [21] Not bold NotFramedEncircled [54] Not framed/encircled NotIntense [22] Not intense NotItalic [23] Not italic NotOverlined [55] Not overlined NotReversed [27] Not reversed NotStruckthrough [29] Not struckthrough NotUnderlined [24] Not underlined Overlined [53] Overlined ProportionalSpacing [26] Proportional spacing Reveal [28] Reveal Reverse [7] Swaps background and foreground colors SlowBlink [5] Blinks the cursor slowly Strikethrough [9] Strikes text through Underline [4] Underlined text"
  },
  "api/Terminaux.Base.Extensions.ConsoleMisc.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleMisc.html",
    "title": "Class ConsoleMisc | Terminaux API - Aptivi",
    "keywords": "Class ConsoleMisc Miscellaneous extensions for the console Inheritance object ConsoleMisc Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleMisc Properties | Edit this page View Source IsOnAltBuffer Checks to see whether we're in the alternative buffer or not Declaration public static bool IsOnAltBuffer { get; } Property Value Type Description bool | Edit this page View Source TerminalReversesRtlText Specifies whether your terminal emulator reverses the RTL text automatically or not Declaration public static bool TerminalReversesRtlText { get; set; } Property Value Type Description bool Methods | Edit this page View Source FilterVTSequences(string) Filters the VT sequences that matches the regex Declaration public static string FilterVTSequences(string Text) Parameters Type Name Description string Text The text that contains the VT sequences Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source GetWrappedSentences(string, int) Gets the wrapped sentences for text wrapping for console (with character wrapping) Declaration public static string[] GetWrappedSentences(string text, int maximumLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping Returns Type Description string[] | Edit this page View Source GetWrappedSentences(string, int, int) Gets the wrapped sentences for text wrapping for console (with character wrapping) Declaration public static string[] GetWrappedSentences(string text, int maximumLength, int indentLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping int indentLength Indentation length Returns Type Description string[] | Edit this page View Source GetWrappedSentencesByWords(string, int) Gets the wrapped sentences for text wrapping for console (with word wrapping) Declaration public static string[] GetWrappedSentencesByWords(string text, int maximumLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping Returns Type Description string[] Remarks This function returns the same output as GetWrappedSentences(string, int, int) if there are any full-width characters. | Edit this page View Source GetWrappedSentencesByWords(string, int, int) Gets the wrapped sentences for text wrapping for console (with word wrapping) Declaration public static string[] GetWrappedSentencesByWords(string text, int maximumLength, int indentLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping int indentLength Indentation length Returns Type Description string[] Remarks This function returns the same output as GetWrappedSentences(string, int, int) if there are any full-width characters. | Edit this page View Source PercentRepeat(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeat(int CurrentNumber, int MaximumNumber, int WidthOffset) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int WidthOffset The console window width offset. It's usually a multiple of 2. Returns Type Description int How many times to repeat the character | Edit this page View Source PercentRepeatTargeted(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeatTargeted(int CurrentNumber, int MaximumNumber, int TargetWidth) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int TargetWidth The target width Returns Type Description int How many times to repeat the character | Edit this page View Source ReverseRtl(string) Reverses the right-to-left characters in a string (for terminal printing) Declaration public static string ReverseRtl(string target) Parameters Type Name Description string target Target string to reverse Returns Type Description string A string containing reversed RTL characters for usage with terminal writing. Returns the original string if either the terminal emulator is reversing the order of RTL characters or if there are no RTL characters | Edit this page View Source SetTitle(string) Sets the console title Declaration public static void SetTitle(string Text) Parameters Type Name Description string Text The text to be set | Edit this page View Source ShowAltBuffer() Shows the alternate buffer Declaration public static void ShowAltBuffer() | Edit this page View Source ShowMainBuffer() Shows the main buffer Declaration public static void ShowMainBuffer() | Edit this page View Source Truncate(string, int) Truncates the string if the string is larger than the threshold, otherwise, returns an unchanged string Declaration public static string Truncate(this string target, int threshold) Parameters Type Name Description string target Source string to truncate int threshold Max number of string characters Returns Type Description string Truncated string"
  },
  "api/Terminaux.Base.Extensions.ConsolePositioning.html": {
    "href": "api/Terminaux.Base.Extensions.ConsolePositioning.html",
    "title": "Class ConsolePositioning | Terminaux API - Aptivi",
    "keywords": "Class ConsolePositioning Console positioning tools Inheritance object ConsolePositioning Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsolePositioning Methods | Edit this page View Source ClearKeepPosition() Clears the console buffer, but keeps the current cursor position Declaration public static void ClearKeepPosition() | Edit this page View Source GetFilteredPositions(string, bool, params object[]) Get the filtered cursor positions (by filtered means filtered from the VT escape sequences that matches the regex in the routine) Declaration public static (int, int) GetFilteredPositions(string Text, bool line, params object[] Vars) Parameters Type Name Description string Text The text that contains the VT sequences bool line Whether to simulate the new line at the end of text or not object[] Vars Variables to be formatted in the text Returns Type Description (int Width, int Height) | Edit this page View Source InitializeSequences() Initializes the VT sequence handling for Windows systems. Declaration public static bool InitializeSequences() Returns Type Description bool"
  },
  "api/Terminaux.Base.Extensions.Data.CharWidthType.html": {
    "href": "api/Terminaux.Base.Extensions.Data.CharWidthType.html",
    "title": "Enum CharWidthType | Terminaux API - Aptivi",
    "keywords": "Enum CharWidthType Character width type Namespace: Terminaux.Base.Extensions.Data Assembly: Terminaux.dll Syntax public enum CharWidthType Fields Name Description Ambiguous Ambiguous characters Combining Combining characters DoubleWidth Double width characters Emoji Emoji characters NonPrinting Non-printing characters Private Private characters Unassigned Unassigned characters"
  },
  "api/Terminaux.Base.Extensions.Data.html": {
    "href": "api/Terminaux.Base.Extensions.Data.html",
    "title": "Namespace Terminaux.Base.Extensions.Data | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Extensions.Data Enums CharWidthType Character width type"
  },
  "api/Terminaux.Base.Extensions.html": {
    "href": "api/Terminaux.Base.Extensions.html",
    "title": "Namespace Terminaux.Base.Extensions | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Extensions Classes ConsoleChar Console character manipulation routines ConsoleClearing Console clearing tools ConsoleCursor Console cursor tools ConsoleFormatting Text formatting tools for the console ConsoleMisc Miscellaneous extensions for the console ConsolePositioning Console positioning tools Enums ConsoleCursorType Console cursor type ConsoleFormattingType Console formatting type"
  },
  "api/Terminaux.Base.TermInfo.ExtendedCapabilities.html": {
    "href": "api/Terminaux.Base.TermInfo.ExtendedCapabilities.html",
    "title": "Class ExtendedCapabilities | Terminaux API - Aptivi",
    "keywords": "Class ExtendedCapabilities Represents extended capabilities. Inheritance object ExtendedCapabilities Namespace: Terminaux.Base.TermInfo Assembly: Terminaux.dll Syntax public sealed class ExtendedCapabilities Properties | Edit this page View Source Count Gets the number of extended capabilities. Declaration public int Count { get; } Property Value Type Description int Methods | Edit this page View Source Exist(string) Checks whether or not a specific extended capability exist. Declaration public bool Exist(string key) Parameters Type Name Description string key The extended capability key to check. Returns Type Description bool true if the extended capability exist, otherwise false. | Edit this page View Source GetBoolean(string) Gets a extended boolean capability. Declaration public bool? GetBoolean(string key) Parameters Type Name Description string key The key of the extended boolean capability. Returns Type Description bool? The value of the extended capability, or null if its missing. | Edit this page View Source GetNames(TermInfoCapsKind) Gets the names for the specified capability kind. Declaration public List<string> GetNames(TermInfoCapsKind kind) Parameters Type Name Description TermInfoCapsKind kind The capability kind to get the names for. Returns Type Description List<string> The names for the specified capability kind. | Edit this page View Source GetNum(string) Gets a extended numeric capability. Declaration public int? GetNum(string key) Parameters Type Name Description string key The key of the extended numeric capability. Returns Type Description int? The value of the extended capability, or null if its missing. | Edit this page View Source GetString(string) Gets a extended string capability. Declaration public string? GetString(string key) Parameters Type Name Description string key The key of the extended string capability. Returns Type Description string The value of the extended capability, or null if its missing."
  },
  "api/Terminaux.Base.TermInfo.TermInfoCaps.Boolean.html": {
    "href": "api/Terminaux.Base.TermInfo.TermInfoCaps.Boolean.html",
    "title": "Enum TermInfoCaps.Boolean | Terminaux API - Aptivi",
    "keywords": "Enum TermInfoCaps.Boolean Represents known boolean terminfo capabilities. Namespace: Terminaux.Base.TermInfo Assembly: Terminaux.dll Syntax public enum TermInfoCaps.Boolean Fields Name Description AutoLeftMargin The auto_left_margin [auto_left_margin, bw] bool capability indicates cub 1 wraps from column 0 to last column. AutoRightMargin The auto_right_margin [auto_right_margin, am] bool capability indicates terminal has automatic margins. BackColorErase The back_color_erase [back_color_erase, bce] bool capability indicates screen erased with background color. BackspacesWithBs The backspaces_with_bs [backspaces_with_bs, OTbs] bool capability indicates uses h to move left. CanChange The can_change [can_change, ccc] bool capability indicates terminal can re define existing colors. CeolStandoutGlitch The ceol_standout_glitch [ceol_standout_glitch, xhp] bool capability indicates standout not erased by overwriting hp. ColAddrGlitch The col_addr_glitch [col_addr_glitch, xhpa] bool capability indicates only positive motion for hpa mhpa caps. CpiChangesRes The cpi_changes_res [cpi_changes_res, cpix] bool capability indicates changing character pitch changes resolution. CrCancelsMicroMode The cr_cancels_micro_mode [cr_cancels_micro_mode, crxm] bool capability indicates using cr turns off micro mode. CrtNoScrolling The crt_no_scrolling [crt_no_scrolling, OTns] bool capability indicates crt cannot scroll. DestTabsMagicSmso The dest_tabs_magic_smso [dest_tabs_magic_smso, xt] bool capability indicates tabs destructive magic so char t 1061. EatNewlineGlitch The eat_newline_glitch [eat_newline_glitch, xenl] bool capability indicates newline ignored after 80 cols concept. EraseOverstrike The erase_overstrike [erase_overstrike, eo] bool capability indicates can erase overstrikes with a blank. GenericType The generic_type [generic_type, gn] bool capability indicates generic line type. GnuHasMetaKey The gnu_has_meta_key [gnu_has_meta_key, OTMT] bool capability indicates has meta key. HardCopy The hard_copy [hard_copy, hc] bool capability indicates hardcopy terminal. HardCursor The hard_cursor [hard_cursor, chts] bool capability indicates cursor is hard to see. HasHardwareTabs The has_hardware_tabs [has_hardware_tabs, OTpt] bool capability indicates has 8 char tabs invoked with ^i. HasMetaKey The has_meta_key [has_meta_key, km] bool capability indicates has a meta key (i.e., sets 8th bit). HasPrintWheel The has_print_wheel [has_print_wheel, daisy] bool capability indicates printer needs operator to change character set. HasStatusLine The has_status_line [has_status_line, hs] bool capability indicates has extra status line. HueLightnessSaturation The hue_lightness_saturation [hue_lightness_saturation, hls] bool capability indicates terminal uses only hls color notation tektronix. InsertNullGlitch The insert_null_glitch [insert_null_glitch, in] bool capability indicates insert mode distinguishes nulls. LinefeedIsNewline The linefeed_is_newline [linefeed_is_newline, OTNL] bool capability indicates move down with n. LpiChangesRes The lpi_changes_res [lpi_changes_res, lpix] bool capability indicates changing line pitch changes resolution. MemoryAbove The memory_above [memory_above, da] bool capability indicates display may be retained above the screen. MemoryBelow The memory_below [memory_below, db] bool capability indicates display may be retained below the screen. MoveInsertMode The move_insert_mode [move_insert_mode, mir] bool capability indicates safe to move while in insert mode. MoveStandoutMode The move_standout_mode [move_standout_mode, msgr] bool capability indicates safe to move while in standout mode. NeedsXonXoff The needs_xon_xoff [needs_xon_xoff, nxon] bool capability indicates padding will not work xon xoff required. NoCorrectlyWorkingCr The no_correctly_working_cr [no_correctly_working_cr, OTnc] bool capability indicates no way to go to start of line. NoEscCtlc The no_esc_ctlc [no_esc_ctlc, xsb] bool capability indicates beehive f 1 escape f 2 ctrl c. NoPadChar The no_pad_char [no_pad_char, npc] bool capability indicates pad character does not exist. NonDestScrollRegion The non_dest_scroll_region [non_dest_scroll_region, ndscr] bool capability indicates scrolling region is non destructive. NonRevRmcup The non_rev_rmcup [non_rev_rmcup, nrrmc] bool capability indicates smcup does not reverse rmcup. OverStrike The over_strike [over_strike, os] bool capability indicates terminal can overstrike. PrtrSilent The prtr_silent [prtr_silent, mc5i] bool capability indicates printer will not echo on screen. ReturnDoesClrEol The return_does_clr_eol [return_does_clr_eol, OTxr] bool capability indicates return clears the line. RowAddrGlitch The row_addr_glitch [row_addr_glitch, xvpa] bool capability indicates only positive motion for vpa mvpa caps. SemiAutoRightMargin The semi_auto_right_margin [semi_auto_right_margin, sam] bool capability indicates printing in last column causes cr. StatusLineEscOk The status_line_esc_ok [status_line_esc_ok, eslok] bool capability indicates escape can be used on the status line. TildeGlitch The tilde_glitch [tilde_glitch, hz] bool capability indicates cannot print s hazeltine. TransparentUnderline The transparent_underline [transparent_underline, ul] bool capability indicates underline character overstrikes. XonXoff The xon_xoff [xon_xoff, xon] bool capability indicates terminal uses xon xoff handshaking."
  },
  "api/Terminaux.Base.TermInfo.TermInfoCaps.Num.html": {
    "href": "api/Terminaux.Base.TermInfo.TermInfoCaps.Num.html",
    "title": "Enum TermInfoCaps.Num | Terminaux API - Aptivi",
    "keywords": "Enum TermInfoCaps.Num Represents known numeric terminfo capabilities. Namespace: Terminaux.Base.TermInfo Assembly: Terminaux.dll Syntax public enum TermInfoCaps.Num Fields Name Description BackspaceDelay The backspace_delay [backspace_delay, OTdB] num capability is padding required for h. BitImageEntwining The bit_image_entwining [bit_image_entwining, bitwin] num capability is number of passes for each bit image row. BitImageType The bit_image_type [bit_image_type, bitype] num capability is type of bit image device. BufferCapacity The buffer_capacity [buffer_capacity, bufsz] num capability is numbers of bytes buffered before printing. Buttons The buttons [buttons, btns] num capability is number of buttons on mouse. CarriageReturnDelay The carriage_return_delay [carriage_return_delay, OTdC] num capability is pad needed for cr. Columns The columns [columns, cols] num capability is number of columns in a line. DotHorzSpacing The dot_horz_spacing [dot_horz_spacing, spinh] num capability is spacing of dots horizontally in dots per inch. DotVertSpacing The dot_vert_spacing [dot_vert_spacing, spinv] num capability is spacing of pins vertically in pins per inch. HorizontalTabDelay The horizontal_tab_delay [horizontal_tab_delay, OTdT] num capability is padding required for i. InitTabs The init_tabs [init_tabs, it] num capability is tabs initially every spaces. LabelHeight The label_height [label_height, lh] num capability is rows in each label. LabelWidth The label_width [label_width, lw] num capability is columns in each label. Lines The lines [lines, lines] num capability is number of lines on screen or page. LinesOfMemory The lines_of_memory [lines_of_memory, lm] num capability is lines of memory if line 0 means varies. MagicCookieGlitch The magic_cookie_glitch [magic_cookie_glitch, xmc] num capability is number of blank characters left by smso or rmso. MagicCookieGlitchUl The magic_cookie_glitch_ul [magic_cookie_glitch_ul, OTug] num capability is number of blanks left by ul. MaxAttributes The max_attributes [max_attributes, ma] num capability is maximum combined attributes terminal can handle. MaxColors The max_colors [max_colors, colors] num capability is maximum number of colors on screen. MaxMicroAddress The max_micro_address [max_micro_address, maddr] num capability is maximum value in micro ... address. MaxMicroJump The max_micro_jump [max_micro_jump, mjump] num capability is maximum value in parm ... micro. MaxPairs The max_pairs [max_pairs, pairs] num capability is maximum number of color pairs on the screen. MaximumWindows The maximum_windows [maximum_windows, wnum] num capability is maximum number of definable windows. MicroColSize The micro_col_size [micro_col_size, mcs] num capability is character step size when in micro mode. MicroLineSize The micro_line_size [micro_line_size, mls] num capability is line step size when in micro mode. NewLineDelay The new_line_delay [new_line_delay, OTdN] num capability is pad needed for lf. NoColorVideo The no_color_video [no_color_video, ncv] num capability is video attributes that cannot be used with colors. NumLabels The num_labels [num_labels, nlab] num capability is number of labels on screen. NumberOfFunctionKeys The number_of_function_keys [number_of_function_keys, OTkn] num capability is count of function keys. NumberOfPins The number_of_pins [number_of_pins, npins] num capability is numbers of pins in print head. OutputResChar The output_res_char [output_res_char, orc] num capability is horizontal resolution in units per line. OutputResHorzInch The output_res_horz_inch [output_res_horz_inch, orhi] num capability is horizontal resolution in units per inch. OutputResLine The output_res_line [output_res_line, orl] num capability is vertical resolution in units per line. OutputResVertInch The output_res_vert_inch [output_res_vert_inch, orvi] num capability is vertical resolution in units per inch. PaddingBaudRate The padding_baud_rate [padding_baud_rate, pb] num capability is lowest baud rate where padding needed. PrintRate The print_rate [print_rate, cps] num capability is print rate in characters per second. VirtualTerminal The virtual_terminal [virtual_terminal, vt] num capability is virtual terminal number cb unix. WideCharSize The wide_char_size [wide_char_size, widcs] num capability is character step size when in double wide mode. WidthStatusLine The width_status_line [width_status_line, wsl] num capability is number of columns in status line."
  },
  "api/Terminaux.Base.TermInfo.TermInfoCaps.String.html": {
    "href": "api/Terminaux.Base.TermInfo.TermInfoCaps.String.html",
    "title": "Enum TermInfoCaps.String | Terminaux API - Aptivi",
    "keywords": "Enum TermInfoCaps.String Represents known string terminfo capabilities. Namespace: Terminaux.Base.TermInfo Assembly: Terminaux.dll Syntax public enum TermInfoCaps.String Fields Name Description AcsBtee The acs_btee [acs_btee, OTGU] string capability is the tee pointing up. AcsChars The acs_chars [acs_chars, acsc] string capability is the graphics charset pairs based on vt 100. AcsHline The acs_hline [acs_hline, OTGH] string capability is the single horizontal line. AcsLlcorner The acs_llcorner [acs_llcorner, OTG3] string capability is the single lower left. AcsLrcorner The acs_lrcorner [acs_lrcorner, OTG4] string capability is the single lower right. AcsLtee The acs_ltee [acs_ltee, OTGR] string capability is the tee pointing right. AcsPlus The acs_plus [acs_plus, OTGC] string capability is the single intersection. AcsRtee The acs_rtee [acs_rtee, OTGL] string capability is the tee pointing left. AcsTtee The acs_ttee [acs_ttee, OTGD] string capability is the tee pointing down. AcsUlcorner The acs_ulcorner [acs_ulcorner, OTG2] string capability is the single upper left. AcsUrcorner The acs_urcorner [acs_urcorner, OTG1] string capability is the single upper right. AcsVline The acs_vline [acs_vline, OTGV] string capability is the single vertical line. AltScancodeEsc The alt_scancode_esc [alt_scancode_esc, scesa] string capability is the alternate escape for scancode emulation. ArrowKeyMap The arrow_key_map [arrow_key_map, OTma] string capability is the map motion keys for vi version 2. BackTab The back_tab [back_tab, cbt] string capability is the back tab p. BackspaceIfNotBs The backspace_if_not_bs [backspace_if_not_bs, OTbc] string capability is the move left if not h. Bell The bell [bell, bel] string capability is the audible signal bell p. BitImageCarriageReturn The bit_image_carriage_return [bit_image_carriage_return, bicr] string capability is the move to beginning of same row. BitImageNewline The bit_image_newline [bit_image_newline, binel] string capability is the move to next row of the bit image. BitImageRepeat The bit_image_repeat [bit_image_repeat, birep] string capability is the repeat bit image cell 1 2 times. BoxChars1 The box_chars_1 [box_chars_1, box1] string capability is the box characters primary set. CarriageReturn The carriage_return [carriage_return, cr] string capability is the carriage return p p. ChangeCharPitch The change_char_pitch [change_char_pitch, cpi] string capability is the change number of characters per inch to 1. ChangeLinePitch The change_line_pitch [change_line_pitch, lpi] string capability is the change number of lines per inch to 1. ChangeResHorz The change_res_horz [change_res_horz, chr] string capability is the change horizontal resolution to 1. ChangeResVert The change_res_vert [change_res_vert, cvr] string capability is the change vertical resolution to 1. ChangeScrollRegion The change_scroll_region [change_scroll_region, csr] string capability is the change region to line 1 to line 2 p. CharPadding The char_padding [char_padding, rmp] string capability is the like ip but when in insert mode. CharSetNames The char_set_names [char_set_names, csnm] string capability is the produce 1 th item from list of character set names. ClearAllTabs The clear_all_tabs [clear_all_tabs, tbc] string capability is the clear all tab stops p. ClearMargins The clear_margins [clear_margins, mgc] string capability is the clear right and left soft margins. ClearScreen The clear_screen [clear_screen, clear] string capability is the clear screen and home cursor p. ClrBol The clr_bol [clr_bol, el1] string capability is the clear to beginning of line. ClrEol The clr_eol [clr_eol, el] string capability is the clear to end of line p. ClrEos The clr_eos [clr_eos, ed] string capability is the clear to end of screen p. CodeSetInit The code_set_init [code_set_init, csin] string capability is the init sequence for multiple codesets. ColorNames The color_names [color_names, colornm] string capability is the give name for color 1. ColumnAddress The column_address [column_address, hpa] string capability is the horizontal position 1 absolute p. CommandCharacter The command_character [command_character, cmdch] string capability is the terminal settable cmd character in prototype. CreateWindow The create_window [create_window, cwin] string capability is the define a window 1 from 2 3 to 4 5. CursorAddress The cursor_address [cursor_address, cup] string capability is the move to row 1 columns 2. CursorDown The cursor_down [cursor_down, cud1] string capability is the down one line. CursorHome The cursor_home [cursor_home, home] string capability is the home cursor if no cup. CursorInvisible The cursor_invisible [cursor_invisible, civis] string capability is the make cursor invisible. CursorLeft The cursor_left [cursor_left, cub1] string capability is the move left one space. CursorMemAddress The cursor_mem_address [cursor_mem_address, mrcup] string capability is the memory relative cursor addressing move to row 1 columns 2. CursorNormal The cursor_normal [cursor_normal, cnorm] string capability is the make cursor appear normal undo civis cvvis. CursorRight The cursor_right [cursor_right, cuf1] string capability is the non destructive space (move right one space). CursorToLl The cursor_to_ll [cursor_to_ll, ll] string capability is the last line first column if no cup. CursorUp The cursor_up [cursor_up, cuu1] string capability is the up one line. CursorVisible The cursor_visible [cursor_visible, cvvis] string capability is the make cursor very visible. DefineBitImageRegion The define_bit_image_region [define_bit_image_region, defbi] string capability is the define rectangular bit image region. DefineChar The define_char [define_char, defc] string capability is the define a character 1 2 dots wide descender 3. DeleteCharacter The delete_character [delete_character, dch1] string capability is the delete character p. DeleteLine The delete_line [delete_line, dl1] string capability is the delete line p. DeviceType The device_type [device_type, devt] string capability is the indicate language codeset support. DialPhone The dial_phone [dial_phone, dial] string capability is the dial number 1. DisStatusLine The dis_status_line [dis_status_line, dsl] string capability is the disable status line. DisplayClock The display_clock [display_clock, dclk] string capability is the display clock. DisplayPcChar The display_pc_char [display_pc_char, dispc] string capability is the display pc character 1. DownHalfLine The down_half_line [down_half_line, hd] string capability is the half a line down. EnaAcs The ena_acs [ena_acs, enacs] string capability is the enable alternate char set. EndBitImageRegion The end_bit_image_region [end_bit_image_region, endbi] string capability is the end a bit image region. EnterAltCharsetMode The enter_alt_charset_mode [enter_alt_charset_mode, smacs] string capability is the start alternate character set p. EnterAmMode The enter_am_mode [enter_am_mode, smam] string capability is the turn on automatic margins. EnterBlinkMode The enter_blink_mode [enter_blink_mode, blink] string capability is the turn on blinking. EnterBoldMode The enter_bold_mode [enter_bold_mode, bold] string capability is the turn on bold extra bright mode. EnterCaMode The enter_ca_mode [enter_ca_mode, smcup] string capability is the string to start programs using cup. EnterDeleteMode The enter_delete_mode [enter_delete_mode, smdc] string capability is the enter delete mode. EnterDimMode The enter_dim_mode [enter_dim_mode, dim] string capability is the turn on half bright mode. EnterDoublewideMode The enter_doublewide_mode [enter_doublewide_mode, swidm] string capability is the enter double wide mode. EnterDraftQuality The enter_draft_quality [enter_draft_quality, sdrfq] string capability is the enter draft quality mode. EnterHorizontalHlMode The enter_horizontal_hl_mode [enter_horizontal_hl_mode, ehhlm] string capability is the enter horizontal highlight mode. EnterInsertMode The enter_insert_mode [enter_insert_mode, smir] string capability is the enter insert mode. EnterItalicsMode The enter_italics_mode [enter_italics_mode, sitm] string capability is the enter italic mode. EnterLeftHlMode The enter_left_hl_mode [enter_left_hl_mode, elhlm] string capability is the enter left highlight mode. EnterLeftwardMode The enter_leftward_mode [enter_leftward_mode, slm] string capability is the start leftward carriage motion. EnterLowHlMode The enter_low_hl_mode [enter_low_hl_mode, elohlm] string capability is the enter low highlight mode. EnterMicroMode The enter_micro_mode [enter_micro_mode, smicm] string capability is the start micro motion mode. EnterNearLetterQuality The enter_near_letter_quality [enter_near_letter_quality, snlq] string capability is the enter nlq mode. EnterNormalQuality The enter_normal_quality [enter_normal_quality, snrmq] string capability is the enter normal quality mode. EnterPcCharsetMode The enter_pc_charset_mode [enter_pc_charset_mode, smpch] string capability is the enter pc character display mode. EnterProtectedMode The enter_protected_mode [enter_protected_mode, prot] string capability is the turn on protected mode. EnterReverseMode The enter_reverse_mode [enter_reverse_mode, rev] string capability is the turn on reverse video mode. EnterRightHlMode The enter_right_hl_mode [enter_right_hl_mode, erhlm] string capability is the enter right highlight mode. EnterScancodeMode The enter_scancode_mode [enter_scancode_mode, smsc] string capability is the enter pc scancode mode. EnterSecureMode The enter_secure_mode [enter_secure_mode, invis] string capability is the turn on blank mode characters invisible. EnterShadowMode The enter_shadow_mode [enter_shadow_mode, sshm] string capability is the enter shadow print mode. EnterStandoutMode The enter_standout_mode [enter_standout_mode, smso] string capability is the begin standout mode. EnterSubscriptMode The enter_subscript_mode [enter_subscript_mode, ssubm] string capability is the enter subscript mode. EnterSuperscriptMode The enter_superscript_mode [enter_superscript_mode, ssupm] string capability is the enter superscript mode. EnterTopHlMode The enter_top_hl_mode [enter_top_hl_mode, ethlm] string capability is the enter top highlight mode. EnterUnderlineMode The enter_underline_mode [enter_underline_mode, smul] string capability is the begin underline mode. EnterUpwardMode The enter_upward_mode [enter_upward_mode, sum] string capability is the start upward carriage motion. EnterVerticalHlMode The enter_vertical_hl_mode [enter_vertical_hl_mode, evhlm] string capability is the enter vertical highlight mode. EnterXonMode The enter_xon_mode [enter_xon_mode, smxon] string capability is the turn on xon xoff handshaking. EraseChars The erase_chars [erase_chars, ech] string capability is the erase 1 characters p. ExitAltCharsetMode The exit_alt_charset_mode [exit_alt_charset_mode, rmacs] string capability is the end alternate character set p. ExitAmMode The exit_am_mode [exit_am_mode, rmam] string capability is the turn off automatic margins. ExitAttributeMode The exit_attribute_mode [exit_attribute_mode, sgr0] string capability is the turn off all attributes. ExitCaMode The exit_ca_mode [exit_ca_mode, rmcup] string capability is the strings to end programs using cup. ExitDeleteMode The exit_delete_mode [exit_delete_mode, rmdc] string capability is the end delete mode. ExitDoublewideMode The exit_doublewide_mode [exit_doublewide_mode, rwidm] string capability is the end double wide mode. ExitInsertMode The exit_insert_mode [exit_insert_mode, rmir] string capability is the exit insert mode. ExitItalicsMode The exit_italics_mode [exit_italics_mode, ritm] string capability is the end italic mode. ExitLeftwardMode The exit_leftward_mode [exit_leftward_mode, rlm] string capability is the end left motion mode. ExitMicroMode The exit_micro_mode [exit_micro_mode, rmicm] string capability is the end micro motion mode. ExitPcCharsetMode The exit_pc_charset_mode [exit_pc_charset_mode, rmpch] string capability is the exit pc character display mode. ExitScancodeMode The exit_scancode_mode [exit_scancode_mode, rmsc] string capability is the exit pc scancode mode. ExitShadowMode The exit_shadow_mode [exit_shadow_mode, rshm] string capability is the end shadow print mode. ExitStandoutMode The exit_standout_mode [exit_standout_mode, rmso] string capability is the exit standout mode. ExitSubscriptMode The exit_subscript_mode [exit_subscript_mode, rsubm] string capability is the end subscript mode. ExitSuperscriptMode The exit_superscript_mode [exit_superscript_mode, rsupm] string capability is the end superscript mode. ExitUnderlineMode The exit_underline_mode [exit_underline_mode, rmul] string capability is the exit underline mode. ExitUpwardMode The exit_upward_mode [exit_upward_mode, rum] string capability is the end reverse character motion. ExitXonMode The exit_xon_mode [exit_xon_mode, rmxon] string capability is the turn off xon xoff handshaking. FixedPause The fixed_pause [fixed_pause, pause] string capability is the pause for 2 3 seconds. FlashHook The flash_hook [flash_hook, hook] string capability is the flash switch hook. FlashScreen The flash_screen [flash_screen, flash] string capability is the visible bell may not move cursor. FormFeed The form_feed [form_feed, ff] string capability is the hardcopy terminal page eject p. FromStatusLine The from_status_line [from_status_line, fsl] string capability is the return from status line. GetMouse The get_mouse [get_mouse, getm] string capability is the curses should get button events parameter 1 not documented. GotoWindow The goto_window [goto_window, wingo] string capability is the go to window 1. Hangup The hangup [hangup, hup] string capability is the hang up phone. Init1string The init_1string [init_1string, is1] string capability is the initialization string. Init2string The init_2string [init_2string, is2] string capability is the initialization string. Init3string The init_3string [init_3string, is3] string capability is the initialization string. InitFile The init_file [init_file, if] string capability is the name of initialization file. InitProg The init_prog [init_prog, iprog] string capability is the path name of program for initialization. InitializeColor The initialize_color [initialize_color, initc] string capability is the initialize color 1 to 2 3 4. InitializePair The initialize_pair [initialize_pair, initp] string capability is the initialize color pair 1 to fg 2 3 4 bg 5 6 7. InsertCharacter The insert_character [insert_character, ich1] string capability is the insert character p. InsertLine The insert_line [insert_line, il1] string capability is the insert line p. InsertPadding The insert_padding [insert_padding, ip] string capability is the insert padding after inserted character. KeyA1 The key_a1 [key_a1, ka1] string capability is the upper left of keypad. KeyA3 The key_a3 [key_a3, ka3] string capability is the upper right of keypad. KeyB2 The key_b2 [key_b2, kb2] string capability is the center of keypad. KeyBackspace The key_backspace [key_backspace, kbs] string capability is the backspace key. KeyBeg The key_beg [key_beg, kbeg] string capability is the begin key. KeyBtab The key_btab [key_btab, kcbt] string capability is the back tab key. KeyC1 The key_c1 [key_c1, kc1] string capability is the lower left of keypad. KeyC3 The key_c3 [key_c3, kc3] string capability is the lower right of keypad. KeyCancel The key_cancel [key_cancel, kcan] string capability is the cancel key. KeyCatab The key_catab [key_catab, ktbc] string capability is the clear all tabs key. KeyClear The key_clear [key_clear, kclr] string capability is the clear screen or erase key. KeyClose The key_close [key_close, kclo] string capability is the close key. KeyCommand The key_command [key_command, kcmd] string capability is the command key. KeyCopy The key_copy [key_copy, kcpy] string capability is the copy key. KeyCreate The key_create [key_create, kcrt] string capability is the create key. KeyCtab The key_ctab [key_ctab, kctab] string capability is the clear tab key. KeyDc The key_dc [key_dc, kdch1] string capability is the delete character key. KeyDl The key_dl [key_dl, kdl1] string capability is the delete line key. KeyDown The key_down [key_down, kcud1] string capability is the down arrow key. KeyEic The key_eic [key_eic, krmir] string capability is the sent by rmir or smir in insert mode. KeyEnd The key_end [key_end, kend] string capability is the end key. KeyEnter The key_enter [key_enter, kent] string capability is the enter send key. KeyEol The key_eol [key_eol, kel] string capability is the clear to end of line key. KeyEos The key_eos [key_eos, ked] string capability is the clear to end of screen key. KeyExit The key_exit [key_exit, kext] string capability is the exit key. KeyF0 The key_f0 [key_f0, kf0] string capability is the f 0 function key. KeyF1 The key_f1 [key_f1, kf1] string capability is the f 1 function key. KeyF10 The key_f10 [key_f10, kf10] string capability is the f 10 function key. KeyF11 The key_f11 [key_f11, kf11] string capability is the f 11 function key. KeyF12 The key_f12 [key_f12, kf12] string capability is the f 12 function key. KeyF13 The key_f13 [key_f13, kf13] string capability is the f 13 function key. KeyF14 The key_f14 [key_f14, kf14] string capability is the f 14 function key. KeyF15 The key_f15 [key_f15, kf15] string capability is the f 15 function key. KeyF16 The key_f16 [key_f16, kf16] string capability is the f 16 function key. KeyF17 The key_f17 [key_f17, kf17] string capability is the f 17 function key. KeyF18 The key_f18 [key_f18, kf18] string capability is the f 18 function key. KeyF19 The key_f19 [key_f19, kf19] string capability is the f 19 function key. KeyF2 The key_f2 [key_f2, kf2] string capability is the f 2 function key. KeyF20 The key_f20 [key_f20, kf20] string capability is the f 20 function key. KeyF21 The key_f21 [key_f21, kf21] string capability is the f 21 function key. KeyF22 The key_f22 [key_f22, kf22] string capability is the f 22 function key. KeyF23 The key_f23 [key_f23, kf23] string capability is the f 23 function key. KeyF24 The key_f24 [key_f24, kf24] string capability is the f 24 function key. KeyF25 The key_f25 [key_f25, kf25] string capability is the f 25 function key. KeyF26 The key_f26 [key_f26, kf26] string capability is the f 26 function key. KeyF27 The key_f27 [key_f27, kf27] string capability is the f 27 function key. KeyF28 The key_f28 [key_f28, kf28] string capability is the f 28 function key. KeyF29 The key_f29 [key_f29, kf29] string capability is the f 29 function key. KeyF3 The key_f3 [key_f3, kf3] string capability is the f 3 function key. KeyF30 The key_f30 [key_f30, kf30] string capability is the f 30 function key. KeyF31 The key_f31 [key_f31, kf31] string capability is the f 31 function key. KeyF32 The key_f32 [key_f32, kf32] string capability is the f 32 function key. KeyF33 The key_f33 [key_f33, kf33] string capability is the f 33 function key. KeyF34 The key_f34 [key_f34, kf34] string capability is the f 34 function key. KeyF35 The key_f35 [key_f35, kf35] string capability is the f 35 function key. KeyF36 The key_f36 [key_f36, kf36] string capability is the f 36 function key. KeyF37 The key_f37 [key_f37, kf37] string capability is the f 37 function key. KeyF38 The key_f38 [key_f38, kf38] string capability is the f 38 function key. KeyF39 The key_f39 [key_f39, kf39] string capability is the f 39 function key. KeyF4 The key_f4 [key_f4, kf4] string capability is the f 4 function key. KeyF40 The key_f40 [key_f40, kf40] string capability is the f 40 function key. KeyF41 The key_f41 [key_f41, kf41] string capability is the f 41 function key. KeyF42 The key_f42 [key_f42, kf42] string capability is the f 42 function key. KeyF43 The key_f43 [key_f43, kf43] string capability is the f 43 function key. KeyF44 The key_f44 [key_f44, kf44] string capability is the f 44 function key. KeyF45 The key_f45 [key_f45, kf45] string capability is the f 45 function key. KeyF46 The key_f46 [key_f46, kf46] string capability is the f 46 function key. KeyF47 The key_f47 [key_f47, kf47] string capability is the f 47 function key. KeyF48 The key_f48 [key_f48, kf48] string capability is the f 48 function key. KeyF49 The key_f49 [key_f49, kf49] string capability is the f 49 function key. KeyF5 The key_f5 [key_f5, kf5] string capability is the f 5 function key. KeyF50 The key_f50 [key_f50, kf50] string capability is the f 50 function key. KeyF51 The key_f51 [key_f51, kf51] string capability is the f 51 function key. KeyF52 The key_f52 [key_f52, kf52] string capability is the f 52 function key. KeyF53 The key_f53 [key_f53, kf53] string capability is the f 53 function key. KeyF54 The key_f54 [key_f54, kf54] string capability is the f 54 function key. KeyF55 The key_f55 [key_f55, kf55] string capability is the f 55 function key. KeyF56 The key_f56 [key_f56, kf56] string capability is the f 56 function key. KeyF57 The key_f57 [key_f57, kf57] string capability is the f 57 function key. KeyF58 The key_f58 [key_f58, kf58] string capability is the f 58 function key. KeyF59 The key_f59 [key_f59, kf59] string capability is the f 59 function key. KeyF6 The key_f6 [key_f6, kf6] string capability is the f 6 function key. KeyF60 The key_f60 [key_f60, kf60] string capability is the f 60 function key. KeyF61 The key_f61 [key_f61, kf61] string capability is the f 61 function key. KeyF62 The key_f62 [key_f62, kf62] string capability is the f 62 function key. KeyF63 The key_f63 [key_f63, kf63] string capability is the f 63 function key. KeyF7 The key_f7 [key_f7, kf7] string capability is the f 7 function key. KeyF8 The key_f8 [key_f8, kf8] string capability is the f 8 function key. KeyF9 The key_f9 [key_f9, kf9] string capability is the f 9 function key. KeyFind The key_find [key_find, kfnd] string capability is the find key. KeyHelp The key_help [key_help, khlp] string capability is the help key. KeyHome The key_home [key_home, khome] string capability is the home key. KeyIc The key_ic [key_ic, kich1] string capability is the insert character key. KeyIl The key_il [key_il, kil1] string capability is the insert line key. KeyLeft The key_left [key_left, kcub1] string capability is the left arrow key. KeyLl The key_ll [key_ll, kll] string capability is the lower left key (home down). KeyMark The key_mark [key_mark, kmrk] string capability is the mark key. KeyMessage The key_message [key_message, kmsg] string capability is the message key. KeyMouse The key_mouse [key_mouse, kmous] string capability is the mouse event has occurred. KeyMove The key_move [key_move, kmov] string capability is the move key. KeyNext The key_next [key_next, knxt] string capability is the next key. KeyNpage The key_npage [key_npage, knp] string capability is the next page key. KeyOpen The key_open [key_open, kopn] string capability is the open key. KeyOptions The key_options [key_options, kopt] string capability is the options key. KeyPpage The key_ppage [key_ppage, kpp] string capability is the previous page key. KeyPrevious The key_previous [key_previous, kprv] string capability is the previous key. KeyPrint The key_print [key_print, kprt] string capability is the print key. KeyRedo The key_redo [key_redo, krdo] string capability is the redo key. KeyReference The key_reference [key_reference, kref] string capability is the reference key. KeyRefresh The key_refresh [key_refresh, krfr] string capability is the refresh key. KeyReplace The key_replace [key_replace, krpl] string capability is the replace key. KeyRestart The key_restart [key_restart, krst] string capability is the restart key. KeyResume The key_resume [key_resume, kres] string capability is the resume key. KeyRight The key_right [key_right, kcuf1] string capability is the right arrow key. KeySave The key_save [key_save, ksav] string capability is the save key. KeySbeg The key_sbeg [key_sbeg, kBEG] string capability is the shifted begin key. KeyScancel The key_scancel [key_scancel, kCAN] string capability is the shifted cancel key. KeyScommand The key_scommand [key_scommand, kCMD] string capability is the shifted command key. KeyScopy The key_scopy [key_scopy, kCPY] string capability is the shifted copy key. KeyScreate The key_screate [key_screate, kCRT] string capability is the shifted create key. KeySdc The key_sdc [key_sdc, kDC] string capability is the shifted delete character key. KeySdl The key_sdl [key_sdl, kDL] string capability is the shifted delete line key. KeySelect The key_select [key_select, kslt] string capability is the select key. KeySend The key_send [key_send, kEND] string capability is the shifted end key. KeySeol The key_seol [key_seol, kEOL] string capability is the shifted clear to end of line key. KeySexit The key_sexit [key_sexit, kEXT] string capability is the shifted exit key. KeySf The key_sf [key_sf, kind] string capability is the scroll forward key. KeySfind The key_sfind [key_sfind, kFND] string capability is the shifted find key. KeyShelp The key_shelp [key_shelp, kHLP] string capability is the shifted help key. KeyShome The key_shome [key_shome, kHOM] string capability is the shifted home key. KeySic The key_sic [key_sic, kIC] string capability is the shifted insert character key. KeySleft The key_sleft [key_sleft, kLFT] string capability is the shifted left arrow key. KeySmessage The key_smessage [key_smessage, kMSG] string capability is the shifted message key. KeySmove The key_smove [key_smove, kMOV] string capability is the shifted move key. KeySnext The key_snext [key_snext, kNXT] string capability is the shifted next key. KeySoptions The key_soptions [key_soptions, kOPT] string capability is the shifted options key. KeySprevious The key_sprevious [key_sprevious, kPRV] string capability is the shifted previous key. KeySprint The key_sprint [key_sprint, kPRT] string capability is the shifted print key. KeySr The key_sr [key_sr, kri] string capability is the scroll backward key. KeySredo The key_sredo [key_sredo, kRDO] string capability is the shifted redo key. KeySreplace The key_sreplace [key_sreplace, kRPL] string capability is the shifted replace key. KeySright The key_sright [key_sright, kRIT] string capability is the shifted right arrow key. KeySrsume The key_srsume [key_srsume, kRES] string capability is the shifted resume key. KeySsave The key_ssave [key_ssave, kSAV] string capability is the shifted save key. KeySsuspend The key_ssuspend [key_ssuspend, kSPD] string capability is the shifted suspend key. KeyStab The key_stab [key_stab, khts] string capability is the set tab key. KeySundo The key_sundo [key_sundo, kUND] string capability is the shifted undo key. KeySuspend The key_suspend [key_suspend, kspd] string capability is the suspend key. KeyUndo The key_undo [key_undo, kund] string capability is the undo key. KeyUp The key_up [key_up, kcuu1] string capability is the up arrow key. KeypadLocal The keypad_local [keypad_local, rmkx] string capability is the leave 'keyboard transmit' mode. KeypadXmit The keypad_xmit [keypad_xmit, smkx] string capability is the enter 'keyboard transmit' mode. LabF0 The lab_f0 [lab_f0, lf0] string capability is the label on function key f 0 if not f 0. LabF1 The lab_f1 [lab_f1, lf1] string capability is the label on function key f 1 if not f 1. LabF10 The lab_f10 [lab_f10, lf10] string capability is the label on function key f 10 if not f 10. LabF2 The lab_f2 [lab_f2, lf2] string capability is the label on function key f 2 if not f 2. LabF3 The lab_f3 [lab_f3, lf3] string capability is the label on function key f 3 if not f 3. LabF4 The lab_f4 [lab_f4, lf4] string capability is the label on function key f 4 if not f 4. LabF5 The lab_f5 [lab_f5, lf5] string capability is the label on function key f 5 if not f 5. LabF6 The lab_f6 [lab_f6, lf6] string capability is the label on function key f 6 if not f 6. LabF7 The lab_f7 [lab_f7, lf7] string capability is the label on function key f 7 if not f 7. LabF8 The lab_f8 [lab_f8, lf8] string capability is the label on function key f 8 if not f 8. LabF9 The lab_f9 [lab_f9, lf9] string capability is the label on function key f 9 if not f 9. LabelFormat The label_format [label_format, fln] string capability is the label format. LabelOff The label_off [label_off, rmln] string capability is the turn off soft labels. LabelOn The label_on [label_on, smln] string capability is the turn on soft labels. LinefeedIfNotLf The linefeed_if_not_lf [linefeed_if_not_lf, OTnl] string capability is the use to move down. MemoryLock The memory_lock [memory_lock, meml] string capability is the lock memory above cursor. MemoryUnlock The memory_unlock [memory_unlock, memu] string capability is the unlock memory. MetaOff The meta_off [meta_off, rmm] string capability is the turn off meta mode. MetaOn The meta_on [meta_on, smm] string capability is the turn on meta mode (8th bit on). MicroColumnAddress The micro_column_address [micro_column_address, mhpa] string capability is the like column address in micro mode. MicroDown The micro_down [micro_down, mcud1] string capability is the like cursor down in micro mode. MicroLeft The micro_left [micro_left, mcub1] string capability is the like cursor left in micro mode. MicroRight The micro_right [micro_right, mcuf1] string capability is the like cursor right in micro mode. MicroRowAddress The micro_row_address [micro_row_address, mvpa] string capability is the like row address #1 in micro mode. MicroUp The micro_up [micro_up, mcuu1] string capability is the like cursor up in micro mode. MouseInfo The mouse_info [mouse_info, minfo] string capability is the mouse status information. Newline The newline [newline, nel] string capability is the newline behave like cr followed by lf. OrderOfPins The order_of_pins [order_of_pins, porder] string capability is the match software bits to print head pins. OrigColors The orig_colors [orig_colors, oc] string capability is the set all color pairs to the original ones. OrigPair The orig_pair [orig_pair, op] string capability is the set default pair to its original value. OtherNonFunctionKeys The other_non_function_keys [other_non_function_keys, OTko] string capability is the list of self mapped keycaps. PadChar The pad_char [pad_char, pad] string capability is the padding char instead of null. ParmDch The parm_dch [parm_dch, dch] string capability is the delete 1 characters p. ParmDeleteLine The parm_delete_line [parm_delete_line, dl] string capability is the delete 1 lines p. ParmDownCursor The parm_down_cursor [parm_down_cursor, cud] string capability is the down 1 lines p. ParmDownMicro The parm_down_micro [parm_down_micro, mcud] string capability is the like parm down cursor in micro mode. ParmIch The parm_ich [parm_ich, ich] string capability is the insert 1 characters p. ParmIndex The parm_index [parm_index, indn] string capability is the scroll forward 1 lines p. ParmInsertLine The parm_insert_line [parm_insert_line, il] string capability is the insert 1 lines p. ParmLeftCursor The parm_left_cursor [parm_left_cursor, cub] string capability is the move 1 characters to the left p. ParmLeftMicro The parm_left_micro [parm_left_micro, mcub] string capability is the like parm left cursor in micro mode. ParmRightCursor The parm_right_cursor [parm_right_cursor, cuf] string capability is the move 1 characters to the right p. ParmRightMicro The parm_right_micro [parm_right_micro, mcuf] string capability is the like parm right cursor in micro mode. ParmRindex The parm_rindex [parm_rindex, rin] string capability is the scroll back 1 lines p. ParmUpCursor The parm_up_cursor [parm_up_cursor, cuu] string capability is the up 1 lines p. ParmUpMicro The parm_up_micro [parm_up_micro, mcuu] string capability is the like parm up cursor in micro mode. PcTermOptions The pc_term_options [pc_term_options, pctrm] string capability is the pc terminal options. PkeyKey The pkey_key [pkey_key, pfkey] string capability is the program function key 1 to type string 2. PkeyLocal The pkey_local [pkey_local, pfloc] string capability is the program function key 1 to execute string 2. PkeyPlab The pkey_plab [pkey_plab, pfxl] string capability is the program function key 1 to type string 2 and show string 3. PkeyXmit The pkey_xmit [pkey_xmit, pfx] string capability is the program function key 1 to transmit string 2. PlabNorm The plab_norm [plab_norm, pln] string capability is the program label 1 to show string 2. PrintScreen The print_screen [print_screen, mc0] string capability is the print contents of screen. PrtrNon The prtr_non [prtr_non, mc5p] string capability is the turn on printer for 1 bytes. PrtrOff The prtr_off [prtr_off, mc4] string capability is the turn off printer. PrtrOn The prtr_on [prtr_on, mc5] string capability is the turn on printer. Pulse The pulse [pulse, pulse] string capability is the select pulse dialing. QuickDial The quick_dial [quick_dial, qdial] string capability is the dial number 1 without checking. RemoveClock The remove_clock [remove_clock, rmclk] string capability is the remove clock. RepeatChar The repeat_char [repeat_char, rep] string capability is the repeat char 1 2 times p. ReqForInput The req_for_input [req_for_input, rfi] string capability is the send next input char for ptys. ReqMousePos The req_mouse_pos [req_mouse_pos, reqmp] string capability is the request mouse position. Reset1string The reset_1string [reset_1string, rs1] string capability is the reset string. Reset2string The reset_2string [reset_2string, rs2] string capability is the reset string. Reset3string The reset_3string [reset_3string, rs3] string capability is the reset string. ResetFile The reset_file [reset_file, rf] string capability is the name of reset file. RestoreCursor The restore_cursor [restore_cursor, rc] string capability is the restore cursor to position of last save cursor. RowAddress The row_address [row_address, vpa] string capability is the vertical position 1 absolute p. SaveCursor The save_cursor [save_cursor, sc] string capability is the save current cursor position p. ScancodeEscape The scancode_escape [scancode_escape, scesc] string capability is the escape for scancode emulation. ScrollForward The scroll_forward [scroll_forward, ind] string capability is the scroll text up p. ScrollReverse The scroll_reverse [scroll_reverse, ri] string capability is the scroll text down p. SelectCharSet The select_char_set [select_char_set, scs] string capability is the select character set 1. Set0DesSeq The set0_des_seq [set0_des_seq, s0ds] string capability is the shift to codeset 0 euc set 0 ascii. Set1DesSeq The set1_des_seq [set1_des_seq, s1ds] string capability is the shift to codeset 1. Set2DesSeq The set2_des_seq [set2_des_seq, s2ds] string capability is the shift to codeset 2. Set3DesSeq The set3_des_seq [set3_des_seq, s3ds] string capability is the shift to codeset 3. SetAAttributes The set_a_attributes [set_a_attributes, sgr1] string capability is the define second set of video attributes #1 #6. SetABackground The set_a_background [set_a_background, setab] string capability is the set background color to 1 using ansi escape. SetAForeground The set_a_foreground [set_a_foreground, setaf] string capability is the set foreground color to 1 using ansi escape. SetAttributes The set_attributes [set_attributes, sgr] string capability is the define video attributes #1 #9 (pg9). SetBackground The set_background [set_background, setb] string capability is the set background color 1. SetBottomMargin The set_bottom_margin [set_bottom_margin, smgb] string capability is the set bottom margin at current line. SetBottomMarginParm The set_bottom_margin_parm [set_bottom_margin_parm, smgbp] string capability is the set bottom margin at line 1 or if smgtp is not given 2 lines from bottom. SetClock The set_clock [set_clock, sclk] string capability is the set clock 1 hrs 2 mins 3 secs. SetColorBand The set_color_band [set_color_band, setcolor] string capability is the change to ribbon color 1. SetColorPair The set_color_pair [set_color_pair, scp] string capability is the set current color pair to 1. SetForeground The set_foreground [set_foreground, setf] string capability is the set foreground color 1. SetLeftMargin The set_left_margin [set_left_margin, smgl] string capability is the set left soft margin at current column. SetLeftMarginParm The set_left_margin_parm [set_left_margin_parm, smglp] string capability is the set left right margin at column 1. SetLrMargin The set_lr_margin [set_lr_margin, smglr] string capability is the set both left and right margins to 1 2 ml is not in bsd termcap. SetPageLength The set_page_length [set_page_length, slines] string capability is the set page length to 1 lines. SetPglenInch The set_pglen_inch [set_pglen_inch, slength] string capability is the set page length to 1 hundredth of an inch some implementations use s l for termcap. SetRightMargin The set_right_margin [set_right_margin, smgr] string capability is the set right soft margin at current column. SetRightMarginParm The set_right_margin_parm [set_right_margin_parm, smgrp] string capability is the set right margin at column 1. SetTab The set_tab [set_tab, hts] string capability is the set a tab in every row current columns. SetTbMargin The set_tb_margin [set_tb_margin, smgtb] string capability is the sets both top and bottom margins to 1 2. SetTopMargin The set_top_margin [set_top_margin, smgt] string capability is the set top margin at current line. SetTopMarginParm The set_top_margin_parm [set_top_margin_parm, smgtp] string capability is the set top bottom margin at row 1. SetWindow The set_window [set_window, wind] string capability is the current window is lines #1 #2 cols #3 #4. StartBitImage The start_bit_image [start_bit_image, sbim] string capability is the start printing bit image graphics. StartCharSetDef The start_char_set_def [start_char_set_def, scsd] string capability is the start character set definition 1 with 2 characters in the set. StopBitImage The stop_bit_image [stop_bit_image, rbim] string capability is the stop printing bit image graphics. StopCharSetDef The stop_char_set_def [stop_char_set_def, rcsd] string capability is the end definition of character set 1. SubscriptCharacters The subscript_characters [subscript_characters, subcs] string capability is the list of subscriptable characters. SuperscriptCharacters The superscript_characters [superscript_characters, supcs] string capability is the list of superscriptable characters. Tab The tab [tab, ht] string capability is the tab to next 8 space hardware tab stop. TermcapInit2 The termcap_init2 [termcap_init2, OTi2] string capability is the secondary initialization string. TermcapReset The termcap_reset [termcap_reset, OTrs] string capability is the terminal reset string. TheseCauseCr The these_cause_cr [these_cause_cr, docr] string capability is the printing any of these characters causes cr. ToStatusLine The to_status_line [to_status_line, tsl] string capability is the move to status line column 1. Tone The tone [tone, tone] string capability is the select touch tone dialing. UnderlineChar The underline_char [underline_char, uc] string capability is the underline char and move past it. UpHalfLine The up_half_line [up_half_line, hu] string capability is the half a line up. User0 The user0 [user0, u0] string capability is the user string 0. User1 The user1 [user1, u1] string capability is the user string 1. User2 The user2 [user2, u2] string capability is the user string 2. User3 The user3 [user3, u3] string capability is the user string 3. User4 The user4 [user4, u4] string capability is the user string 4. User5 The user5 [user5, u5] string capability is the user string 5. User6 The user6 [user6, u6] string capability is the user string 6. User7 The user7 [user7, u7] string capability is the user string 7. User8 The user8 [user8, u8] string capability is the user string 8. User9 The user9 [user9, u9] string capability is the user string 9. WaitTone The wait_tone [wait_tone, wait] string capability is the wait for dial tone. XoffCharacter The xoff_character [xoff_character, xoffc] string capability is the xoff character. XonCharacter The xon_character [xon_character, xonc] string capability is the xon character. ZeroMotion The zero_motion [zero_motion, zerom] string capability is the no motion for subsequent character."
  },
  "api/Terminaux.Base.TermInfo.TermInfoCaps.html": {
    "href": "api/Terminaux.Base.TermInfo.TermInfoCaps.html",
    "title": "Class TermInfoCaps | Terminaux API - Aptivi",
    "keywords": "Class TermInfoCaps Represents known terminal information capabilities. Inheritance object TermInfoCaps Namespace: Terminaux.Base.TermInfo Assembly: Terminaux.dll Syntax public static class TermInfoCaps"
  },
  "api/Terminaux.Base.TermInfo.TermInfoCapsKind.html": {
    "href": "api/Terminaux.Base.TermInfo.TermInfoCapsKind.html",
    "title": "Enum TermInfoCapsKind | Terminaux API - Aptivi",
    "keywords": "Enum TermInfoCapsKind Represents the different terminfo capability variable types. Namespace: Terminaux.Base.TermInfo Assembly: Terminaux.dll Syntax public enum TermInfoCapsKind Fields Name Description Boolean Boolean capability variable type. Num Integer capability variable type. String String capability variable type."
  },
  "api/Terminaux.Base.TermInfo.TermInfoDesc.html": {
    "href": "api/Terminaux.Base.TermInfo.TermInfoDesc.html",
    "title": "Class TermInfoDesc | Terminaux API - Aptivi",
    "keywords": "Class TermInfoDesc Represents a parsed terminfo description. Inheritance object TermInfoDesc Namespace: Terminaux.Base.TermInfo Assembly: Terminaux.dll Syntax public sealed class TermInfoDesc Properties AcsBtee The acs_btee [acs_btee, OTGU] string capability is the tee pointing up. Declaration public string AcsBtee { get; } Property Value Type Description string AcsChars The acs_chars [acs_chars, acsc] string capability is the graphics charset pairs based on vt 100. Declaration public string AcsChars { get; } Property Value Type Description string AcsHline The acs_hline [acs_hline, OTGH] string capability is the single horizontal line. Declaration public string AcsHline { get; } Property Value Type Description string AcsLlcorner The acs_llcorner [acs_llcorner, OTG3] string capability is the single lower left. Declaration public string AcsLlcorner { get; } Property Value Type Description string AcsLrcorner The acs_lrcorner [acs_lrcorner, OTG4] string capability is the single lower right. Declaration public string AcsLrcorner { get; } Property Value Type Description string AcsLtee The acs_ltee [acs_ltee, OTGR] string capability is the tee pointing right. Declaration public string AcsLtee { get; } Property Value Type Description string AcsPlus The acs_plus [acs_plus, OTGC] string capability is the single intersection. Declaration public string AcsPlus { get; } Property Value Type Description string AcsRtee The acs_rtee [acs_rtee, OTGL] string capability is the tee pointing left. Declaration public string AcsRtee { get; } Property Value Type Description string AcsTtee The acs_ttee [acs_ttee, OTGD] string capability is the tee pointing down. Declaration public string AcsTtee { get; } Property Value Type Description string AcsUlcorner The acs_ulcorner [acs_ulcorner, OTG2] string capability is the single upper left. Declaration public string AcsUlcorner { get; } Property Value Type Description string AcsUrcorner The acs_urcorner [acs_urcorner, OTG1] string capability is the single upper right. Declaration public string AcsUrcorner { get; } Property Value Type Description string AcsVline The acs_vline [acs_vline, OTGV] string capability is the single vertical line. Declaration public string AcsVline { get; } Property Value Type Description string AltScancodeEsc The alt_scancode_esc [alt_scancode_esc, scesa] string capability is the alternate escape for scancode emulation. Declaration public string AltScancodeEsc { get; } Property Value Type Description string ArrowKeyMap The arrow_key_map [arrow_key_map, OTma] string capability is the map motion keys for vi version 2. Declaration public string ArrowKeyMap { get; } Property Value Type Description string AutoLeftMargin The auto_left_margin [auto_left_margin, bw] bool capability indicates cub 1 wraps from column 0 to last column. Declaration public bool? AutoLeftMargin { get; } Property Value Type Description bool? AutoRightMargin The auto_right_margin [auto_right_margin, am] bool capability indicates terminal has automatic margins. Declaration public bool? AutoRightMargin { get; } Property Value Type Description bool? BackColorErase The back_color_erase [back_color_erase, bce] bool capability indicates screen erased with background color. Declaration public bool? BackColorErase { get; } Property Value Type Description bool? BackTab The back_tab [back_tab, cbt] string capability is the back tab p. Declaration public string BackTab { get; } Property Value Type Description string BackspaceDelay The backspace_delay [backspace_delay, OTdB] num capability is padding required for h. Declaration public int? BackspaceDelay { get; } Property Value Type Description int? BackspaceIfNotBs The backspace_if_not_bs [backspace_if_not_bs, OTbc] string capability is the move left if not h. Declaration public string BackspaceIfNotBs { get; } Property Value Type Description string BackspacesWithBs The backspaces_with_bs [backspaces_with_bs, OTbs] bool capability indicates uses h to move left. Declaration public bool? BackspacesWithBs { get; } Property Value Type Description bool? Bell The bell [bell, bel] string capability is the audible signal bell p. Declaration public string Bell { get; } Property Value Type Description string BitImageCarriageReturn The bit_image_carriage_return [bit_image_carriage_return, bicr] string capability is the move to beginning of same row. Declaration public string BitImageCarriageReturn { get; } Property Value Type Description string BitImageEntwining The bit_image_entwining [bit_image_entwining, bitwin] num capability is number of passes for each bit image row. Declaration public int? BitImageEntwining { get; } Property Value Type Description int? BitImageNewline The bit_image_newline [bit_image_newline, binel] string capability is the move to next row of the bit image. Declaration public string BitImageNewline { get; } Property Value Type Description string BitImageRepeat The bit_image_repeat [bit_image_repeat, birep] string capability is the repeat bit image cell 1 2 times. Declaration public string BitImageRepeat { get; } Property Value Type Description string BitImageType The bit_image_type [bit_image_type, bitype] num capability is type of bit image device. Declaration public int? BitImageType { get; } Property Value Type Description int? BoxChars1 The box_chars_1 [box_chars_1, box1] string capability is the box characters primary set. Declaration public string BoxChars1 { get; } Property Value Type Description string BufferCapacity The buffer_capacity [buffer_capacity, bufsz] num capability is numbers of bytes buffered before printing. Declaration public int? BufferCapacity { get; } Property Value Type Description int? Buttons The buttons [buttons, btns] num capability is number of buttons on mouse. Declaration public int? Buttons { get; } Property Value Type Description int? CanChange The can_change [can_change, ccc] bool capability indicates terminal can re define existing colors. Declaration public bool? CanChange { get; } Property Value Type Description bool? CarriageReturn The carriage_return [carriage_return, cr] string capability is the carriage return p p. Declaration public string CarriageReturn { get; } Property Value Type Description string CarriageReturnDelay The carriage_return_delay [carriage_return_delay, OTdC] num capability is pad needed for cr. Declaration public int? CarriageReturnDelay { get; } Property Value Type Description int? CeolStandoutGlitch The ceol_standout_glitch [ceol_standout_glitch, xhp] bool capability indicates standout not erased by overwriting hp. Declaration public bool? CeolStandoutGlitch { get; } Property Value Type Description bool? ChangeCharPitch The change_char_pitch [change_char_pitch, cpi] string capability is the change number of characters per inch to 1. Declaration public string ChangeCharPitch { get; } Property Value Type Description string ChangeLinePitch The change_line_pitch [change_line_pitch, lpi] string capability is the change number of lines per inch to 1. Declaration public string ChangeLinePitch { get; } Property Value Type Description string ChangeResHorz The change_res_horz [change_res_horz, chr] string capability is the change horizontal resolution to 1. Declaration public string ChangeResHorz { get; } Property Value Type Description string ChangeResVert The change_res_vert [change_res_vert, cvr] string capability is the change vertical resolution to 1. Declaration public string ChangeResVert { get; } Property Value Type Description string ChangeScrollRegion The change_scroll_region [change_scroll_region, csr] string capability is the change region to line 1 to line 2 p. Declaration public string ChangeScrollRegion { get; } Property Value Type Description string CharPadding The char_padding [char_padding, rmp] string capability is the like ip but when in insert mode. Declaration public string CharPadding { get; } Property Value Type Description string CharSetNames The char_set_names [char_set_names, csnm] string capability is the produce 1 th item from list of character set names. Declaration public string CharSetNames { get; } Property Value Type Description string ClearAllTabs The clear_all_tabs [clear_all_tabs, tbc] string capability is the clear all tab stops p. Declaration public string ClearAllTabs { get; } Property Value Type Description string ClearMargins The clear_margins [clear_margins, mgc] string capability is the clear right and left soft margins. Declaration public string ClearMargins { get; } Property Value Type Description string ClearScreen The clear_screen [clear_screen, clear] string capability is the clear screen and home cursor p. Declaration public string ClearScreen { get; } Property Value Type Description string ClrBol The clr_bol [clr_bol, el1] string capability is the clear to beginning of line. Declaration public string ClrBol { get; } Property Value Type Description string ClrEol The clr_eol [clr_eol, el] string capability is the clear to end of line p. Declaration public string ClrEol { get; } Property Value Type Description string ClrEos The clr_eos [clr_eos, ed] string capability is the clear to end of screen p. Declaration public string ClrEos { get; } Property Value Type Description string CodeSetInit The code_set_init [code_set_init, csin] string capability is the init sequence for multiple codesets. Declaration public string CodeSetInit { get; } Property Value Type Description string ColAddrGlitch The col_addr_glitch [col_addr_glitch, xhpa] bool capability indicates only positive motion for hpa mhpa caps. Declaration public bool? ColAddrGlitch { get; } Property Value Type Description bool? ColorNames The color_names [color_names, colornm] string capability is the give name for color 1. Declaration public string ColorNames { get; } Property Value Type Description string ColumnAddress The column_address [column_address, hpa] string capability is the horizontal position 1 absolute p. Declaration public string ColumnAddress { get; } Property Value Type Description string Columns The columns [columns, cols] num capability is number of columns in a line. Declaration public int? Columns { get; } Property Value Type Description int? CommandCharacter The command_character [command_character, cmdch] string capability is the terminal settable cmd character in prototype. Declaration public string CommandCharacter { get; } Property Value Type Description string CpiChangesRes The cpi_changes_res [cpi_changes_res, cpix] bool capability indicates changing character pitch changes resolution. Declaration public bool? CpiChangesRes { get; } Property Value Type Description bool? CrCancelsMicroMode The cr_cancels_micro_mode [cr_cancels_micro_mode, crxm] bool capability indicates using cr turns off micro mode. Declaration public bool? CrCancelsMicroMode { get; } Property Value Type Description bool? CreateWindow The create_window [create_window, cwin] string capability is the define a window 1 from 2 3 to 4 5. Declaration public string CreateWindow { get; } Property Value Type Description string CrtNoScrolling The crt_no_scrolling [crt_no_scrolling, OTns] bool capability indicates crt cannot scroll. Declaration public bool? CrtNoScrolling { get; } Property Value Type Description bool? CursorAddress The cursor_address [cursor_address, cup] string capability is the move to row 1 columns 2. Declaration public string CursorAddress { get; } Property Value Type Description string CursorDown The cursor_down [cursor_down, cud1] string capability is the down one line. Declaration public string CursorDown { get; } Property Value Type Description string CursorHome The cursor_home [cursor_home, home] string capability is the home cursor if no cup. Declaration public string CursorHome { get; } Property Value Type Description string CursorInvisible The cursor_invisible [cursor_invisible, civis] string capability is the make cursor invisible. Declaration public string CursorInvisible { get; } Property Value Type Description string CursorLeft The cursor_left [cursor_left, cub1] string capability is the move left one space. Declaration public string CursorLeft { get; } Property Value Type Description string CursorMemAddress The cursor_mem_address [cursor_mem_address, mrcup] string capability is the memory relative cursor addressing move to row 1 columns 2. Declaration public string CursorMemAddress { get; } Property Value Type Description string CursorNormal The cursor_normal [cursor_normal, cnorm] string capability is the make cursor appear normal undo civis cvvis. Declaration public string CursorNormal { get; } Property Value Type Description string CursorRight The cursor_right [cursor_right, cuf1] string capability is the non destructive space (move right one space). Declaration public string CursorRight { get; } Property Value Type Description string CursorToLl The cursor_to_ll [cursor_to_ll, ll] string capability is the last line first column if no cup. Declaration public string CursorToLl { get; } Property Value Type Description string CursorUp The cursor_up [cursor_up, cuu1] string capability is the up one line. Declaration public string CursorUp { get; } Property Value Type Description string CursorVisible The cursor_visible [cursor_visible, cvvis] string capability is the make cursor very visible. Declaration public string CursorVisible { get; } Property Value Type Description string DefineBitImageRegion The define_bit_image_region [define_bit_image_region, defbi] string capability is the define rectangular bit image region. Declaration public string DefineBitImageRegion { get; } Property Value Type Description string DefineChar The define_char [define_char, defc] string capability is the define a character 1 2 dots wide descender 3. Declaration public string DefineChar { get; } Property Value Type Description string DeleteCharacter The delete_character [delete_character, dch1] string capability is the delete character p. Declaration public string DeleteCharacter { get; } Property Value Type Description string DeleteLine The delete_line [delete_line, dl1] string capability is the delete line p. Declaration public string DeleteLine { get; } Property Value Type Description string DestTabsMagicSmso The dest_tabs_magic_smso [dest_tabs_magic_smso, xt] bool capability indicates tabs destructive magic so char t 1061. Declaration public bool? DestTabsMagicSmso { get; } Property Value Type Description bool? DeviceType The device_type [device_type, devt] string capability is the indicate language codeset support. Declaration public string DeviceType { get; } Property Value Type Description string DialPhone The dial_phone [dial_phone, dial] string capability is the dial number 1. Declaration public string DialPhone { get; } Property Value Type Description string DisStatusLine The dis_status_line [dis_status_line, dsl] string capability is the disable status line. Declaration public string DisStatusLine { get; } Property Value Type Description string DisplayClock The display_clock [display_clock, dclk] string capability is the display clock. Declaration public string DisplayClock { get; } Property Value Type Description string DisplayPcChar The display_pc_char [display_pc_char, dispc] string capability is the display pc character 1. Declaration public string DisplayPcChar { get; } Property Value Type Description string DotHorzSpacing The dot_horz_spacing [dot_horz_spacing, spinh] num capability is spacing of dots horizontally in dots per inch. Declaration public int? DotHorzSpacing { get; } Property Value Type Description int? DotVertSpacing The dot_vert_spacing [dot_vert_spacing, spinv] num capability is spacing of pins vertically in pins per inch. Declaration public int? DotVertSpacing { get; } Property Value Type Description int? DownHalfLine The down_half_line [down_half_line, hd] string capability is the half a line down. Declaration public string DownHalfLine { get; } Property Value Type Description string EatNewlineGlitch The eat_newline_glitch [eat_newline_glitch, xenl] bool capability indicates newline ignored after 80 cols concept. Declaration public bool? EatNewlineGlitch { get; } Property Value Type Description bool? EnaAcs The ena_acs [ena_acs, enacs] string capability is the enable alternate char set. Declaration public string EnaAcs { get; } Property Value Type Description string EndBitImageRegion The end_bit_image_region [end_bit_image_region, endbi] string capability is the end a bit image region. Declaration public string EndBitImageRegion { get; } Property Value Type Description string EnterAltCharsetMode The enter_alt_charset_mode [enter_alt_charset_mode, smacs] string capability is the start alternate character set p. Declaration public string EnterAltCharsetMode { get; } Property Value Type Description string EnterAmMode The enter_am_mode [enter_am_mode, smam] string capability is the turn on automatic margins. Declaration public string EnterAmMode { get; } Property Value Type Description string EnterBlinkMode The enter_blink_mode [enter_blink_mode, blink] string capability is the turn on blinking. Declaration public string EnterBlinkMode { get; } Property Value Type Description string EnterBoldMode The enter_bold_mode [enter_bold_mode, bold] string capability is the turn on bold extra bright mode. Declaration public string EnterBoldMode { get; } Property Value Type Description string EnterCaMode The enter_ca_mode [enter_ca_mode, smcup] string capability is the string to start programs using cup. Declaration public string EnterCaMode { get; } Property Value Type Description string EnterDeleteMode The enter_delete_mode [enter_delete_mode, smdc] string capability is the enter delete mode. Declaration public string EnterDeleteMode { get; } Property Value Type Description string EnterDimMode The enter_dim_mode [enter_dim_mode, dim] string capability is the turn on half bright mode. Declaration public string EnterDimMode { get; } Property Value Type Description string EnterDoublewideMode The enter_doublewide_mode [enter_doublewide_mode, swidm] string capability is the enter double wide mode. Declaration public string EnterDoublewideMode { get; } Property Value Type Description string EnterDraftQuality The enter_draft_quality [enter_draft_quality, sdrfq] string capability is the enter draft quality mode. Declaration public string EnterDraftQuality { get; } Property Value Type Description string EnterHorizontalHlMode The enter_horizontal_hl_mode [enter_horizontal_hl_mode, ehhlm] string capability is the enter horizontal highlight mode. Declaration public string EnterHorizontalHlMode { get; } Property Value Type Description string EnterInsertMode The enter_insert_mode [enter_insert_mode, smir] string capability is the enter insert mode. Declaration public string EnterInsertMode { get; } Property Value Type Description string EnterItalicsMode The enter_italics_mode [enter_italics_mode, sitm] string capability is the enter italic mode. Declaration public string EnterItalicsMode { get; } Property Value Type Description string EnterLeftHlMode The enter_left_hl_mode [enter_left_hl_mode, elhlm] string capability is the enter left highlight mode. Declaration public string EnterLeftHlMode { get; } Property Value Type Description string EnterLeftwardMode The enter_leftward_mode [enter_leftward_mode, slm] string capability is the start leftward carriage motion. Declaration public string EnterLeftwardMode { get; } Property Value Type Description string EnterLowHlMode The enter_low_hl_mode [enter_low_hl_mode, elohlm] string capability is the enter low highlight mode. Declaration public string EnterLowHlMode { get; } Property Value Type Description string EnterMicroMode The enter_micro_mode [enter_micro_mode, smicm] string capability is the start micro motion mode. Declaration public string EnterMicroMode { get; } Property Value Type Description string EnterNearLetterQuality The enter_near_letter_quality [enter_near_letter_quality, snlq] string capability is the enter nlq mode. Declaration public string EnterNearLetterQuality { get; } Property Value Type Description string EnterNormalQuality The enter_normal_quality [enter_normal_quality, snrmq] string capability is the enter normal quality mode. Declaration public string EnterNormalQuality { get; } Property Value Type Description string EnterPcCharsetMode The enter_pc_charset_mode [enter_pc_charset_mode, smpch] string capability is the enter pc character display mode. Declaration public string EnterPcCharsetMode { get; } Property Value Type Description string EnterProtectedMode The enter_protected_mode [enter_protected_mode, prot] string capability is the turn on protected mode. Declaration public string EnterProtectedMode { get; } Property Value Type Description string EnterReverseMode The enter_reverse_mode [enter_reverse_mode, rev] string capability is the turn on reverse video mode. Declaration public string EnterReverseMode { get; } Property Value Type Description string EnterRightHlMode The enter_right_hl_mode [enter_right_hl_mode, erhlm] string capability is the enter right highlight mode. Declaration public string EnterRightHlMode { get; } Property Value Type Description string EnterScancodeMode The enter_scancode_mode [enter_scancode_mode, smsc] string capability is the enter pc scancode mode. Declaration public string EnterScancodeMode { get; } Property Value Type Description string EnterSecureMode The enter_secure_mode [enter_secure_mode, invis] string capability is the turn on blank mode characters invisible. Declaration public string EnterSecureMode { get; } Property Value Type Description string EnterShadowMode The enter_shadow_mode [enter_shadow_mode, sshm] string capability is the enter shadow print mode. Declaration public string EnterShadowMode { get; } Property Value Type Description string EnterStandoutMode The enter_standout_mode [enter_standout_mode, smso] string capability is the begin standout mode. Declaration public string EnterStandoutMode { get; } Property Value Type Description string EnterSubscriptMode The enter_subscript_mode [enter_subscript_mode, ssubm] string capability is the enter subscript mode. Declaration public string EnterSubscriptMode { get; } Property Value Type Description string EnterSuperscriptMode The enter_superscript_mode [enter_superscript_mode, ssupm] string capability is the enter superscript mode. Declaration public string EnterSuperscriptMode { get; } Property Value Type Description string EnterTopHlMode The enter_top_hl_mode [enter_top_hl_mode, ethlm] string capability is the enter top highlight mode. Declaration public string EnterTopHlMode { get; } Property Value Type Description string EnterUnderlineMode The enter_underline_mode [enter_underline_mode, smul] string capability is the begin underline mode. Declaration public string EnterUnderlineMode { get; } Property Value Type Description string EnterUpwardMode The enter_upward_mode [enter_upward_mode, sum] string capability is the start upward carriage motion. Declaration public string EnterUpwardMode { get; } Property Value Type Description string EnterVerticalHlMode The enter_vertical_hl_mode [enter_vertical_hl_mode, evhlm] string capability is the enter vertical highlight mode. Declaration public string EnterVerticalHlMode { get; } Property Value Type Description string EnterXonMode The enter_xon_mode [enter_xon_mode, smxon] string capability is the turn on xon xoff handshaking. Declaration public string EnterXonMode { get; } Property Value Type Description string EraseChars The erase_chars [erase_chars, ech] string capability is the erase 1 characters p. Declaration public string EraseChars { get; } Property Value Type Description string EraseOverstrike The erase_overstrike [erase_overstrike, eo] bool capability indicates can erase overstrikes with a blank. Declaration public bool? EraseOverstrike { get; } Property Value Type Description bool? ExitAltCharsetMode The exit_alt_charset_mode [exit_alt_charset_mode, rmacs] string capability is the end alternate character set p. Declaration public string ExitAltCharsetMode { get; } Property Value Type Description string ExitAmMode The exit_am_mode [exit_am_mode, rmam] string capability is the turn off automatic margins. Declaration public string ExitAmMode { get; } Property Value Type Description string ExitAttributeMode The exit_attribute_mode [exit_attribute_mode, sgr0] string capability is the turn off all attributes. Declaration public string ExitAttributeMode { get; } Property Value Type Description string ExitCaMode The exit_ca_mode [exit_ca_mode, rmcup] string capability is the strings to end programs using cup. Declaration public string ExitCaMode { get; } Property Value Type Description string ExitDeleteMode The exit_delete_mode [exit_delete_mode, rmdc] string capability is the end delete mode. Declaration public string ExitDeleteMode { get; } Property Value Type Description string ExitDoublewideMode The exit_doublewide_mode [exit_doublewide_mode, rwidm] string capability is the end double wide mode. Declaration public string ExitDoublewideMode { get; } Property Value Type Description string ExitInsertMode The exit_insert_mode [exit_insert_mode, rmir] string capability is the exit insert mode. Declaration public string ExitInsertMode { get; } Property Value Type Description string ExitItalicsMode The exit_italics_mode [exit_italics_mode, ritm] string capability is the end italic mode. Declaration public string ExitItalicsMode { get; } Property Value Type Description string ExitLeftwardMode The exit_leftward_mode [exit_leftward_mode, rlm] string capability is the end left motion mode. Declaration public string ExitLeftwardMode { get; } Property Value Type Description string ExitMicroMode The exit_micro_mode [exit_micro_mode, rmicm] string capability is the end micro motion mode. Declaration public string ExitMicroMode { get; } Property Value Type Description string ExitPcCharsetMode The exit_pc_charset_mode [exit_pc_charset_mode, rmpch] string capability is the exit pc character display mode. Declaration public string ExitPcCharsetMode { get; } Property Value Type Description string ExitScancodeMode The exit_scancode_mode [exit_scancode_mode, rmsc] string capability is the exit pc scancode mode. Declaration public string ExitScancodeMode { get; } Property Value Type Description string ExitShadowMode The exit_shadow_mode [exit_shadow_mode, rshm] string capability is the end shadow print mode. Declaration public string ExitShadowMode { get; } Property Value Type Description string ExitStandoutMode The exit_standout_mode [exit_standout_mode, rmso] string capability is the exit standout mode. Declaration public string ExitStandoutMode { get; } Property Value Type Description string ExitSubscriptMode The exit_subscript_mode [exit_subscript_mode, rsubm] string capability is the end subscript mode. Declaration public string ExitSubscriptMode { get; } Property Value Type Description string ExitSuperscriptMode The exit_superscript_mode [exit_superscript_mode, rsupm] string capability is the end superscript mode. Declaration public string ExitSuperscriptMode { get; } Property Value Type Description string ExitUnderlineMode The exit_underline_mode [exit_underline_mode, rmul] string capability is the exit underline mode. Declaration public string ExitUnderlineMode { get; } Property Value Type Description string ExitUpwardMode The exit_upward_mode [exit_upward_mode, rum] string capability is the end reverse character motion. Declaration public string ExitUpwardMode { get; } Property Value Type Description string ExitXonMode The exit_xon_mode [exit_xon_mode, rmxon] string capability is the turn off xon xoff handshaking. Declaration public string ExitXonMode { get; } Property Value Type Description string | Edit this page View Source Extended Gets the extended capabilities. Declaration public ExtendedCapabilities Extended { get; } Property Value Type Description ExtendedCapabilities FixedPause The fixed_pause [fixed_pause, pause] string capability is the pause for 2 3 seconds. Declaration public string FixedPause { get; } Property Value Type Description string FlashHook The flash_hook [flash_hook, hook] string capability is the flash switch hook. Declaration public string FlashHook { get; } Property Value Type Description string FlashScreen The flash_screen [flash_screen, flash] string capability is the visible bell may not move cursor. Declaration public string FlashScreen { get; } Property Value Type Description string FormFeed The form_feed [form_feed, ff] string capability is the hardcopy terminal page eject p. Declaration public string FormFeed { get; } Property Value Type Description string FromStatusLine The from_status_line [from_status_line, fsl] string capability is the return from status line. Declaration public string FromStatusLine { get; } Property Value Type Description string GenericType The generic_type [generic_type, gn] bool capability indicates generic line type. Declaration public bool? GenericType { get; } Property Value Type Description bool? GetMouse The get_mouse [get_mouse, getm] string capability is the curses should get button events parameter 1 not documented. Declaration public string GetMouse { get; } Property Value Type Description string GnuHasMetaKey The gnu_has_meta_key [gnu_has_meta_key, OTMT] bool capability indicates has meta key. Declaration public bool? GnuHasMetaKey { get; } Property Value Type Description bool? GotoWindow The goto_window [goto_window, wingo] string capability is the go to window 1. Declaration public string GotoWindow { get; } Property Value Type Description string Hangup The hangup [hangup, hup] string capability is the hang up phone. Declaration public string Hangup { get; } Property Value Type Description string HardCopy The hard_copy [hard_copy, hc] bool capability indicates hardcopy terminal. Declaration public bool? HardCopy { get; } Property Value Type Description bool? HardCursor The hard_cursor [hard_cursor, chts] bool capability indicates cursor is hard to see. Declaration public bool? HardCursor { get; } Property Value Type Description bool? HasHardwareTabs The has_hardware_tabs [has_hardware_tabs, OTpt] bool capability indicates has 8 char tabs invoked with ^i. Declaration public bool? HasHardwareTabs { get; } Property Value Type Description bool? HasMetaKey The has_meta_key [has_meta_key, km] bool capability indicates has a meta key (i.e., sets 8th bit). Declaration public bool? HasMetaKey { get; } Property Value Type Description bool? HasPrintWheel The has_print_wheel [has_print_wheel, daisy] bool capability indicates printer needs operator to change character set. Declaration public bool? HasPrintWheel { get; } Property Value Type Description bool? HasStatusLine The has_status_line [has_status_line, hs] bool capability indicates has extra status line. Declaration public bool? HasStatusLine { get; } Property Value Type Description bool? HorizontalTabDelay The horizontal_tab_delay [horizontal_tab_delay, OTdT] num capability is padding required for i. Declaration public int? HorizontalTabDelay { get; } Property Value Type Description int? HueLightnessSaturation The hue_lightness_saturation [hue_lightness_saturation, hls] bool capability indicates terminal uses only hls color notation tektronix. Declaration public bool? HueLightnessSaturation { get; } Property Value Type Description bool? Init1string The init_1string [init_1string, is1] string capability is the initialization string. Declaration public string Init1string { get; } Property Value Type Description string Init2string The init_2string [init_2string, is2] string capability is the initialization string. Declaration public string Init2string { get; } Property Value Type Description string Init3string The init_3string [init_3string, is3] string capability is the initialization string. Declaration public string Init3string { get; } Property Value Type Description string InitFile The init_file [init_file, if] string capability is the name of initialization file. Declaration public string InitFile { get; } Property Value Type Description string InitProg The init_prog [init_prog, iprog] string capability is the path name of program for initialization. Declaration public string InitProg { get; } Property Value Type Description string InitTabs The init_tabs [init_tabs, it] num capability is tabs initially every spaces. Declaration public int? InitTabs { get; } Property Value Type Description int? InitializeColor The initialize_color [initialize_color, initc] string capability is the initialize color 1 to 2 3 4. Declaration public string InitializeColor { get; } Property Value Type Description string InitializePair The initialize_pair [initialize_pair, initp] string capability is the initialize color pair 1 to fg 2 3 4 bg 5 6 7. Declaration public string InitializePair { get; } Property Value Type Description string InsertCharacter The insert_character [insert_character, ich1] string capability is the insert character p. Declaration public string InsertCharacter { get; } Property Value Type Description string InsertLine The insert_line [insert_line, il1] string capability is the insert line p. Declaration public string InsertLine { get; } Property Value Type Description string InsertNullGlitch The insert_null_glitch [insert_null_glitch, in] bool capability indicates insert mode distinguishes nulls. Declaration public bool? InsertNullGlitch { get; } Property Value Type Description bool? InsertPadding The insert_padding [insert_padding, ip] string capability is the insert padding after inserted character. Declaration public string InsertPadding { get; } Property Value Type Description string KeyA1 The key_a1 [key_a1, ka1] string capability is the upper left of keypad. Declaration public string KeyA1 { get; } Property Value Type Description string KeyA3 The key_a3 [key_a3, ka3] string capability is the upper right of keypad. Declaration public string KeyA3 { get; } Property Value Type Description string KeyB2 The key_b2 [key_b2, kb2] string capability is the center of keypad. Declaration public string KeyB2 { get; } Property Value Type Description string KeyBackspace The key_backspace [key_backspace, kbs] string capability is the backspace key. Declaration public string KeyBackspace { get; } Property Value Type Description string KeyBeg The key_beg [key_beg, kbeg] string capability is the begin key. Declaration public string KeyBeg { get; } Property Value Type Description string KeyBtab The key_btab [key_btab, kcbt] string capability is the back tab key. Declaration public string KeyBtab { get; } Property Value Type Description string KeyC1 The key_c1 [key_c1, kc1] string capability is the lower left of keypad. Declaration public string KeyC1 { get; } Property Value Type Description string KeyC3 The key_c3 [key_c3, kc3] string capability is the lower right of keypad. Declaration public string KeyC3 { get; } Property Value Type Description string KeyCancel The key_cancel [key_cancel, kcan] string capability is the cancel key. Declaration public string KeyCancel { get; } Property Value Type Description string KeyCatab The key_catab [key_catab, ktbc] string capability is the clear all tabs key. Declaration public string KeyCatab { get; } Property Value Type Description string KeyClear The key_clear [key_clear, kclr] string capability is the clear screen or erase key. Declaration public string KeyClear { get; } Property Value Type Description string KeyClose The key_close [key_close, kclo] string capability is the close key. Declaration public string KeyClose { get; } Property Value Type Description string KeyCommand The key_command [key_command, kcmd] string capability is the command key. Declaration public string KeyCommand { get; } Property Value Type Description string KeyCopy The key_copy [key_copy, kcpy] string capability is the copy key. Declaration public string KeyCopy { get; } Property Value Type Description string KeyCreate The key_create [key_create, kcrt] string capability is the create key. Declaration public string KeyCreate { get; } Property Value Type Description string KeyCtab The key_ctab [key_ctab, kctab] string capability is the clear tab key. Declaration public string KeyCtab { get; } Property Value Type Description string KeyDc The key_dc [key_dc, kdch1] string capability is the delete character key. Declaration public string KeyDc { get; } Property Value Type Description string KeyDl The key_dl [key_dl, kdl1] string capability is the delete line key. Declaration public string KeyDl { get; } Property Value Type Description string KeyDown The key_down [key_down, kcud1] string capability is the down arrow key. Declaration public string KeyDown { get; } Property Value Type Description string KeyEic The key_eic [key_eic, krmir] string capability is the sent by rmir or smir in insert mode. Declaration public string KeyEic { get; } Property Value Type Description string KeyEnd The key_end [key_end, kend] string capability is the end key. Declaration public string KeyEnd { get; } Property Value Type Description string KeyEnter The key_enter [key_enter, kent] string capability is the enter send key. Declaration public string KeyEnter { get; } Property Value Type Description string KeyEol The key_eol [key_eol, kel] string capability is the clear to end of line key. Declaration public string KeyEol { get; } Property Value Type Description string KeyEos The key_eos [key_eos, ked] string capability is the clear to end of screen key. Declaration public string KeyEos { get; } Property Value Type Description string KeyExit The key_exit [key_exit, kext] string capability is the exit key. Declaration public string KeyExit { get; } Property Value Type Description string KeyF0 The key_f0 [key_f0, kf0] string capability is the f 0 function key. Declaration public string KeyF0 { get; } Property Value Type Description string KeyF1 The key_f1 [key_f1, kf1] string capability is the f 1 function key. Declaration public string KeyF1 { get; } Property Value Type Description string KeyF10 The key_f10 [key_f10, kf10] string capability is the f 10 function key. Declaration public string KeyF10 { get; } Property Value Type Description string KeyF11 The key_f11 [key_f11, kf11] string capability is the f 11 function key. Declaration public string KeyF11 { get; } Property Value Type Description string KeyF12 The key_f12 [key_f12, kf12] string capability is the f 12 function key. Declaration public string KeyF12 { get; } Property Value Type Description string KeyF13 The key_f13 [key_f13, kf13] string capability is the f 13 function key. Declaration public string KeyF13 { get; } Property Value Type Description string KeyF14 The key_f14 [key_f14, kf14] string capability is the f 14 function key. Declaration public string KeyF14 { get; } Property Value Type Description string KeyF15 The key_f15 [key_f15, kf15] string capability is the f 15 function key. Declaration public string KeyF15 { get; } Property Value Type Description string KeyF16 The key_f16 [key_f16, kf16] string capability is the f 16 function key. Declaration public string KeyF16 { get; } Property Value Type Description string KeyF17 The key_f17 [key_f17, kf17] string capability is the f 17 function key. Declaration public string KeyF17 { get; } Property Value Type Description string KeyF18 The key_f18 [key_f18, kf18] string capability is the f 18 function key. Declaration public string KeyF18 { get; } Property Value Type Description string KeyF19 The key_f19 [key_f19, kf19] string capability is the f 19 function key. Declaration public string KeyF19 { get; } Property Value Type Description string KeyF2 The key_f2 [key_f2, kf2] string capability is the f 2 function key. Declaration public string KeyF2 { get; } Property Value Type Description string KeyF20 The key_f20 [key_f20, kf20] string capability is the f 20 function key. Declaration public string KeyF20 { get; } Property Value Type Description string KeyF21 The key_f21 [key_f21, kf21] string capability is the f 21 function key. Declaration public string KeyF21 { get; } Property Value Type Description string KeyF22 The key_f22 [key_f22, kf22] string capability is the f 22 function key. Declaration public string KeyF22 { get; } Property Value Type Description string KeyF23 The key_f23 [key_f23, kf23] string capability is the f 23 function key. Declaration public string KeyF23 { get; } Property Value Type Description string KeyF24 The key_f24 [key_f24, kf24] string capability is the f 24 function key. Declaration public string KeyF24 { get; } Property Value Type Description string KeyF25 The key_f25 [key_f25, kf25] string capability is the f 25 function key. Declaration public string KeyF25 { get; } Property Value Type Description string KeyF26 The key_f26 [key_f26, kf26] string capability is the f 26 function key. Declaration public string KeyF26 { get; } Property Value Type Description string KeyF27 The key_f27 [key_f27, kf27] string capability is the f 27 function key. Declaration public string KeyF27 { get; } Property Value Type Description string KeyF28 The key_f28 [key_f28, kf28] string capability is the f 28 function key. Declaration public string KeyF28 { get; } Property Value Type Description string KeyF29 The key_f29 [key_f29, kf29] string capability is the f 29 function key. Declaration public string KeyF29 { get; } Property Value Type Description string KeyF3 The key_f3 [key_f3, kf3] string capability is the f 3 function key. Declaration public string KeyF3 { get; } Property Value Type Description string KeyF30 The key_f30 [key_f30, kf30] string capability is the f 30 function key. Declaration public string KeyF30 { get; } Property Value Type Description string KeyF31 The key_f31 [key_f31, kf31] string capability is the f 31 function key. Declaration public string KeyF31 { get; } Property Value Type Description string KeyF32 The key_f32 [key_f32, kf32] string capability is the f 32 function key. Declaration public string KeyF32 { get; } Property Value Type Description string KeyF33 The key_f33 [key_f33, kf33] string capability is the f 33 function key. Declaration public string KeyF33 { get; } Property Value Type Description string KeyF34 The key_f34 [key_f34, kf34] string capability is the f 34 function key. Declaration public string KeyF34 { get; } Property Value Type Description string KeyF35 The key_f35 [key_f35, kf35] string capability is the f 35 function key. Declaration public string KeyF35 { get; } Property Value Type Description string KeyF36 The key_f36 [key_f36, kf36] string capability is the f 36 function key. Declaration public string KeyF36 { get; } Property Value Type Description string KeyF37 The key_f37 [key_f37, kf37] string capability is the f 37 function key. Declaration public string KeyF37 { get; } Property Value Type Description string KeyF38 The key_f38 [key_f38, kf38] string capability is the f 38 function key. Declaration public string KeyF38 { get; } Property Value Type Description string KeyF39 The key_f39 [key_f39, kf39] string capability is the f 39 function key. Declaration public string KeyF39 { get; } Property Value Type Description string KeyF4 The key_f4 [key_f4, kf4] string capability is the f 4 function key. Declaration public string KeyF4 { get; } Property Value Type Description string KeyF40 The key_f40 [key_f40, kf40] string capability is the f 40 function key. Declaration public string KeyF40 { get; } Property Value Type Description string KeyF41 The key_f41 [key_f41, kf41] string capability is the f 41 function key. Declaration public string KeyF41 { get; } Property Value Type Description string KeyF42 The key_f42 [key_f42, kf42] string capability is the f 42 function key. Declaration public string KeyF42 { get; } Property Value Type Description string KeyF43 The key_f43 [key_f43, kf43] string capability is the f 43 function key. Declaration public string KeyF43 { get; } Property Value Type Description string KeyF44 The key_f44 [key_f44, kf44] string capability is the f 44 function key. Declaration public string KeyF44 { get; } Property Value Type Description string KeyF45 The key_f45 [key_f45, kf45] string capability is the f 45 function key. Declaration public string KeyF45 { get; } Property Value Type Description string KeyF46 The key_f46 [key_f46, kf46] string capability is the f 46 function key. Declaration public string KeyF46 { get; } Property Value Type Description string KeyF47 The key_f47 [key_f47, kf47] string capability is the f 47 function key. Declaration public string KeyF47 { get; } Property Value Type Description string KeyF48 The key_f48 [key_f48, kf48] string capability is the f 48 function key. Declaration public string KeyF48 { get; } Property Value Type Description string KeyF49 The key_f49 [key_f49, kf49] string capability is the f 49 function key. Declaration public string KeyF49 { get; } Property Value Type Description string KeyF5 The key_f5 [key_f5, kf5] string capability is the f 5 function key. Declaration public string KeyF5 { get; } Property Value Type Description string KeyF50 The key_f50 [key_f50, kf50] string capability is the f 50 function key. Declaration public string KeyF50 { get; } Property Value Type Description string KeyF51 The key_f51 [key_f51, kf51] string capability is the f 51 function key. Declaration public string KeyF51 { get; } Property Value Type Description string KeyF52 The key_f52 [key_f52, kf52] string capability is the f 52 function key. Declaration public string KeyF52 { get; } Property Value Type Description string KeyF53 The key_f53 [key_f53, kf53] string capability is the f 53 function key. Declaration public string KeyF53 { get; } Property Value Type Description string KeyF54 The key_f54 [key_f54, kf54] string capability is the f 54 function key. Declaration public string KeyF54 { get; } Property Value Type Description string KeyF55 The key_f55 [key_f55, kf55] string capability is the f 55 function key. Declaration public string KeyF55 { get; } Property Value Type Description string KeyF56 The key_f56 [key_f56, kf56] string capability is the f 56 function key. Declaration public string KeyF56 { get; } Property Value Type Description string KeyF57 The key_f57 [key_f57, kf57] string capability is the f 57 function key. Declaration public string KeyF57 { get; } Property Value Type Description string KeyF58 The key_f58 [key_f58, kf58] string capability is the f 58 function key. Declaration public string KeyF58 { get; } Property Value Type Description string KeyF59 The key_f59 [key_f59, kf59] string capability is the f 59 function key. Declaration public string KeyF59 { get; } Property Value Type Description string KeyF6 The key_f6 [key_f6, kf6] string capability is the f 6 function key. Declaration public string KeyF6 { get; } Property Value Type Description string KeyF60 The key_f60 [key_f60, kf60] string capability is the f 60 function key. Declaration public string KeyF60 { get; } Property Value Type Description string KeyF61 The key_f61 [key_f61, kf61] string capability is the f 61 function key. Declaration public string KeyF61 { get; } Property Value Type Description string KeyF62 The key_f62 [key_f62, kf62] string capability is the f 62 function key. Declaration public string KeyF62 { get; } Property Value Type Description string KeyF63 The key_f63 [key_f63, kf63] string capability is the f 63 function key. Declaration public string KeyF63 { get; } Property Value Type Description string KeyF7 The key_f7 [key_f7, kf7] string capability is the f 7 function key. Declaration public string KeyF7 { get; } Property Value Type Description string KeyF8 The key_f8 [key_f8, kf8] string capability is the f 8 function key. Declaration public string KeyF8 { get; } Property Value Type Description string KeyF9 The key_f9 [key_f9, kf9] string capability is the f 9 function key. Declaration public string KeyF9 { get; } Property Value Type Description string KeyFind The key_find [key_find, kfnd] string capability is the find key. Declaration public string KeyFind { get; } Property Value Type Description string KeyHelp The key_help [key_help, khlp] string capability is the help key. Declaration public string KeyHelp { get; } Property Value Type Description string KeyHome The key_home [key_home, khome] string capability is the home key. Declaration public string KeyHome { get; } Property Value Type Description string KeyIc The key_ic [key_ic, kich1] string capability is the insert character key. Declaration public string KeyIc { get; } Property Value Type Description string KeyIl The key_il [key_il, kil1] string capability is the insert line key. Declaration public string KeyIl { get; } Property Value Type Description string KeyLeft The key_left [key_left, kcub1] string capability is the left arrow key. Declaration public string KeyLeft { get; } Property Value Type Description string KeyLl The key_ll [key_ll, kll] string capability is the lower left key (home down). Declaration public string KeyLl { get; } Property Value Type Description string KeyMark The key_mark [key_mark, kmrk] string capability is the mark key. Declaration public string KeyMark { get; } Property Value Type Description string KeyMessage The key_message [key_message, kmsg] string capability is the message key. Declaration public string KeyMessage { get; } Property Value Type Description string KeyMouse The key_mouse [key_mouse, kmous] string capability is the mouse event has occurred. Declaration public string KeyMouse { get; } Property Value Type Description string KeyMove The key_move [key_move, kmov] string capability is the move key. Declaration public string KeyMove { get; } Property Value Type Description string KeyNext The key_next [key_next, knxt] string capability is the next key. Declaration public string KeyNext { get; } Property Value Type Description string KeyNpage The key_npage [key_npage, knp] string capability is the next page key. Declaration public string KeyNpage { get; } Property Value Type Description string KeyOpen The key_open [key_open, kopn] string capability is the open key. Declaration public string KeyOpen { get; } Property Value Type Description string KeyOptions The key_options [key_options, kopt] string capability is the options key. Declaration public string KeyOptions { get; } Property Value Type Description string KeyPpage The key_ppage [key_ppage, kpp] string capability is the previous page key. Declaration public string KeyPpage { get; } Property Value Type Description string KeyPrevious The key_previous [key_previous, kprv] string capability is the previous key. Declaration public string KeyPrevious { get; } Property Value Type Description string KeyPrint The key_print [key_print, kprt] string capability is the print key. Declaration public string KeyPrint { get; } Property Value Type Description string KeyRedo The key_redo [key_redo, krdo] string capability is the redo key. Declaration public string KeyRedo { get; } Property Value Type Description string KeyReference The key_reference [key_reference, kref] string capability is the reference key. Declaration public string KeyReference { get; } Property Value Type Description string KeyRefresh The key_refresh [key_refresh, krfr] string capability is the refresh key. Declaration public string KeyRefresh { get; } Property Value Type Description string KeyReplace The key_replace [key_replace, krpl] string capability is the replace key. Declaration public string KeyReplace { get; } Property Value Type Description string KeyRestart The key_restart [key_restart, krst] string capability is the restart key. Declaration public string KeyRestart { get; } Property Value Type Description string KeyResume The key_resume [key_resume, kres] string capability is the resume key. Declaration public string KeyResume { get; } Property Value Type Description string KeyRight The key_right [key_right, kcuf1] string capability is the right arrow key. Declaration public string KeyRight { get; } Property Value Type Description string KeySave The key_save [key_save, ksav] string capability is the save key. Declaration public string KeySave { get; } Property Value Type Description string KeySbeg The key_sbeg [key_sbeg, kBEG] string capability is the shifted begin key. Declaration public string KeySbeg { get; } Property Value Type Description string KeyScancel The key_scancel [key_scancel, kCAN] string capability is the shifted cancel key. Declaration public string KeyScancel { get; } Property Value Type Description string KeyScommand The key_scommand [key_scommand, kCMD] string capability is the shifted command key. Declaration public string KeyScommand { get; } Property Value Type Description string KeyScopy The key_scopy [key_scopy, kCPY] string capability is the shifted copy key. Declaration public string KeyScopy { get; } Property Value Type Description string KeyScreate The key_screate [key_screate, kCRT] string capability is the shifted create key. Declaration public string KeyScreate { get; } Property Value Type Description string KeySdc The key_sdc [key_sdc, kDC] string capability is the shifted delete character key. Declaration public string KeySdc { get; } Property Value Type Description string KeySdl The key_sdl [key_sdl, kDL] string capability is the shifted delete line key. Declaration public string KeySdl { get; } Property Value Type Description string KeySelect The key_select [key_select, kslt] string capability is the select key. Declaration public string KeySelect { get; } Property Value Type Description string KeySend The key_send [key_send, kEND] string capability is the shifted end key. Declaration public string KeySend { get; } Property Value Type Description string KeySeol The key_seol [key_seol, kEOL] string capability is the shifted clear to end of line key. Declaration public string KeySeol { get; } Property Value Type Description string KeySexit The key_sexit [key_sexit, kEXT] string capability is the shifted exit key. Declaration public string KeySexit { get; } Property Value Type Description string KeySf The key_sf [key_sf, kind] string capability is the scroll forward key. Declaration public string KeySf { get; } Property Value Type Description string KeySfind The key_sfind [key_sfind, kFND] string capability is the shifted find key. Declaration public string KeySfind { get; } Property Value Type Description string KeyShelp The key_shelp [key_shelp, kHLP] string capability is the shifted help key. Declaration public string KeyShelp { get; } Property Value Type Description string KeyShome The key_shome [key_shome, kHOM] string capability is the shifted home key. Declaration public string KeyShome { get; } Property Value Type Description string KeySic The key_sic [key_sic, kIC] string capability is the shifted insert character key. Declaration public string KeySic { get; } Property Value Type Description string KeySleft The key_sleft [key_sleft, kLFT] string capability is the shifted left arrow key. Declaration public string KeySleft { get; } Property Value Type Description string KeySmessage The key_smessage [key_smessage, kMSG] string capability is the shifted message key. Declaration public string KeySmessage { get; } Property Value Type Description string KeySmove The key_smove [key_smove, kMOV] string capability is the shifted move key. Declaration public string KeySmove { get; } Property Value Type Description string KeySnext The key_snext [key_snext, kNXT] string capability is the shifted next key. Declaration public string KeySnext { get; } Property Value Type Description string KeySoptions The key_soptions [key_soptions, kOPT] string capability is the shifted options key. Declaration public string KeySoptions { get; } Property Value Type Description string KeySprevious The key_sprevious [key_sprevious, kPRV] string capability is the shifted previous key. Declaration public string KeySprevious { get; } Property Value Type Description string KeySprint The key_sprint [key_sprint, kPRT] string capability is the shifted print key. Declaration public string KeySprint { get; } Property Value Type Description string KeySr The key_sr [key_sr, kri] string capability is the scroll backward key. Declaration public string KeySr { get; } Property Value Type Description string KeySredo The key_sredo [key_sredo, kRDO] string capability is the shifted redo key. Declaration public string KeySredo { get; } Property Value Type Description string KeySreplace The key_sreplace [key_sreplace, kRPL] string capability is the shifted replace key. Declaration public string KeySreplace { get; } Property Value Type Description string KeySright The key_sright [key_sright, kRIT] string capability is the shifted right arrow key. Declaration public string KeySright { get; } Property Value Type Description string KeySrsume The key_srsume [key_srsume, kRES] string capability is the shifted resume key. Declaration public string KeySrsume { get; } Property Value Type Description string KeySsave The key_ssave [key_ssave, kSAV] string capability is the shifted save key. Declaration public string KeySsave { get; } Property Value Type Description string KeySsuspend The key_ssuspend [key_ssuspend, kSPD] string capability is the shifted suspend key. Declaration public string KeySsuspend { get; } Property Value Type Description string KeyStab The key_stab [key_stab, khts] string capability is the set tab key. Declaration public string KeyStab { get; } Property Value Type Description string KeySundo The key_sundo [key_sundo, kUND] string capability is the shifted undo key. Declaration public string KeySundo { get; } Property Value Type Description string KeySuspend The key_suspend [key_suspend, kspd] string capability is the suspend key. Declaration public string KeySuspend { get; } Property Value Type Description string KeyUndo The key_undo [key_undo, kund] string capability is the undo key. Declaration public string KeyUndo { get; } Property Value Type Description string KeyUp The key_up [key_up, kcuu1] string capability is the up arrow key. Declaration public string KeyUp { get; } Property Value Type Description string KeypadLocal The keypad_local [keypad_local, rmkx] string capability is the leave 'keyboard transmit' mode. Declaration public string KeypadLocal { get; } Property Value Type Description string KeypadXmit The keypad_xmit [keypad_xmit, smkx] string capability is the enter 'keyboard transmit' mode. Declaration public string KeypadXmit { get; } Property Value Type Description string LabF0 The lab_f0 [lab_f0, lf0] string capability is the label on function key f 0 if not f 0. Declaration public string LabF0 { get; } Property Value Type Description string LabF1 The lab_f1 [lab_f1, lf1] string capability is the label on function key f 1 if not f 1. Declaration public string LabF1 { get; } Property Value Type Description string LabF10 The lab_f10 [lab_f10, lf10] string capability is the label on function key f 10 if not f 10. Declaration public string LabF10 { get; } Property Value Type Description string LabF2 The lab_f2 [lab_f2, lf2] string capability is the label on function key f 2 if not f 2. Declaration public string LabF2 { get; } Property Value Type Description string LabF3 The lab_f3 [lab_f3, lf3] string capability is the label on function key f 3 if not f 3. Declaration public string LabF3 { get; } Property Value Type Description string LabF4 The lab_f4 [lab_f4, lf4] string capability is the label on function key f 4 if not f 4. Declaration public string LabF4 { get; } Property Value Type Description string LabF5 The lab_f5 [lab_f5, lf5] string capability is the label on function key f 5 if not f 5. Declaration public string LabF5 { get; } Property Value Type Description string LabF6 The lab_f6 [lab_f6, lf6] string capability is the label on function key f 6 if not f 6. Declaration public string LabF6 { get; } Property Value Type Description string LabF7 The lab_f7 [lab_f7, lf7] string capability is the label on function key f 7 if not f 7. Declaration public string LabF7 { get; } Property Value Type Description string LabF8 The lab_f8 [lab_f8, lf8] string capability is the label on function key f 8 if not f 8. Declaration public string LabF8 { get; } Property Value Type Description string LabF9 The lab_f9 [lab_f9, lf9] string capability is the label on function key f 9 if not f 9. Declaration public string LabF9 { get; } Property Value Type Description string LabelFormat The label_format [label_format, fln] string capability is the label format. Declaration public string LabelFormat { get; } Property Value Type Description string LabelHeight The label_height [label_height, lh] num capability is rows in each label. Declaration public int? LabelHeight { get; } Property Value Type Description int? LabelOff The label_off [label_off, rmln] string capability is the turn off soft labels. Declaration public string LabelOff { get; } Property Value Type Description string LabelOn The label_on [label_on, smln] string capability is the turn on soft labels. Declaration public string LabelOn { get; } Property Value Type Description string LabelWidth The label_width [label_width, lw] num capability is columns in each label. Declaration public int? LabelWidth { get; } Property Value Type Description int? LinefeedIfNotLf The linefeed_if_not_lf [linefeed_if_not_lf, OTnl] string capability is the use to move down. Declaration public string LinefeedIfNotLf { get; } Property Value Type Description string LinefeedIsNewline The linefeed_is_newline [linefeed_is_newline, OTNL] bool capability indicates move down with n. Declaration public bool? LinefeedIsNewline { get; } Property Value Type Description bool? Lines The lines [lines, lines] num capability is number of lines on screen or page. Declaration public int? Lines { get; } Property Value Type Description int? LinesOfMemory The lines_of_memory [lines_of_memory, lm] num capability is lines of memory if line 0 means varies. Declaration public int? LinesOfMemory { get; } Property Value Type Description int? LpiChangesRes The lpi_changes_res [lpi_changes_res, lpix] bool capability indicates changing line pitch changes resolution. Declaration public bool? LpiChangesRes { get; } Property Value Type Description bool? MagicCookieGlitch The magic_cookie_glitch [magic_cookie_glitch, xmc] num capability is number of blank characters left by smso or rmso. Declaration public int? MagicCookieGlitch { get; } Property Value Type Description int? MagicCookieGlitchUl The magic_cookie_glitch_ul [magic_cookie_glitch_ul, OTug] num capability is number of blanks left by ul. Declaration public int? MagicCookieGlitchUl { get; } Property Value Type Description int? MaxAttributes The max_attributes [max_attributes, ma] num capability is maximum combined attributes terminal can handle. Declaration public int? MaxAttributes { get; } Property Value Type Description int? MaxColors The max_colors [max_colors, colors] num capability is maximum number of colors on screen. Declaration public int? MaxColors { get; } Property Value Type Description int? MaxMicroAddress The max_micro_address [max_micro_address, maddr] num capability is maximum value in micro ... address. Declaration public int? MaxMicroAddress { get; } Property Value Type Description int? MaxMicroJump The max_micro_jump [max_micro_jump, mjump] num capability is maximum value in parm ... micro. Declaration public int? MaxMicroJump { get; } Property Value Type Description int? MaxPairs The max_pairs [max_pairs, pairs] num capability is maximum number of color pairs on the screen. Declaration public int? MaxPairs { get; } Property Value Type Description int? MaximumWindows The maximum_windows [maximum_windows, wnum] num capability is maximum number of definable windows. Declaration public int? MaximumWindows { get; } Property Value Type Description int? MemoryAbove The memory_above [memory_above, da] bool capability indicates display may be retained above the screen. Declaration public bool? MemoryAbove { get; } Property Value Type Description bool? MemoryBelow The memory_below [memory_below, db] bool capability indicates display may be retained below the screen. Declaration public bool? MemoryBelow { get; } Property Value Type Description bool? MemoryLock The memory_lock [memory_lock, meml] string capability is the lock memory above cursor. Declaration public string MemoryLock { get; } Property Value Type Description string MemoryUnlock The memory_unlock [memory_unlock, memu] string capability is the unlock memory. Declaration public string MemoryUnlock { get; } Property Value Type Description string MetaOff The meta_off [meta_off, rmm] string capability is the turn off meta mode. Declaration public string MetaOff { get; } Property Value Type Description string MetaOn The meta_on [meta_on, smm] string capability is the turn on meta mode (8th bit on). Declaration public string MetaOn { get; } Property Value Type Description string MicroColSize The micro_col_size [micro_col_size, mcs] num capability is character step size when in micro mode. Declaration public int? MicroColSize { get; } Property Value Type Description int? MicroColumnAddress The micro_column_address [micro_column_address, mhpa] string capability is the like column address in micro mode. Declaration public string MicroColumnAddress { get; } Property Value Type Description string MicroDown The micro_down [micro_down, mcud1] string capability is the like cursor down in micro mode. Declaration public string MicroDown { get; } Property Value Type Description string MicroLeft The micro_left [micro_left, mcub1] string capability is the like cursor left in micro mode. Declaration public string MicroLeft { get; } Property Value Type Description string MicroLineSize The micro_line_size [micro_line_size, mls] num capability is line step size when in micro mode. Declaration public int? MicroLineSize { get; } Property Value Type Description int? MicroRight The micro_right [micro_right, mcuf1] string capability is the like cursor right in micro mode. Declaration public string MicroRight { get; } Property Value Type Description string MicroRowAddress The micro_row_address [micro_row_address, mvpa] string capability is the like row address #1 in micro mode. Declaration public string MicroRowAddress { get; } Property Value Type Description string MicroUp The micro_up [micro_up, mcuu1] string capability is the like cursor up in micro mode. Declaration public string MicroUp { get; } Property Value Type Description string MouseInfo The mouse_info [mouse_info, minfo] string capability is the mouse status information. Declaration public string MouseInfo { get; } Property Value Type Description string MoveInsertMode The move_insert_mode [move_insert_mode, mir] bool capability indicates safe to move while in insert mode. Declaration public bool? MoveInsertMode { get; } Property Value Type Description bool? MoveStandoutMode The move_standout_mode [move_standout_mode, msgr] bool capability indicates safe to move while in standout mode. Declaration public bool? MoveStandoutMode { get; } Property Value Type Description bool? | Edit this page View Source Names Gets the names of the parsed terminfo description. Declaration public string[] Names { get; } Property Value Type Description string[] NeedsXonXoff The needs_xon_xoff [needs_xon_xoff, nxon] bool capability indicates padding will not work xon xoff required. Declaration public bool? NeedsXonXoff { get; } Property Value Type Description bool? NewLineDelay The new_line_delay [new_line_delay, OTdN] num capability is pad needed for lf. Declaration public int? NewLineDelay { get; } Property Value Type Description int? Newline The newline [newline, nel] string capability is the newline behave like cr followed by lf. Declaration public string Newline { get; } Property Value Type Description string NoColorVideo The no_color_video [no_color_video, ncv] num capability is video attributes that cannot be used with colors. Declaration public int? NoColorVideo { get; } Property Value Type Description int? NoCorrectlyWorkingCr The no_correctly_working_cr [no_correctly_working_cr, OTnc] bool capability indicates no way to go to start of line. Declaration public bool? NoCorrectlyWorkingCr { get; } Property Value Type Description bool? NoEscCtlc The no_esc_ctlc [no_esc_ctlc, xsb] bool capability indicates beehive f 1 escape f 2 ctrl c. Declaration public bool? NoEscCtlc { get; } Property Value Type Description bool? NoPadChar The no_pad_char [no_pad_char, npc] bool capability indicates pad character does not exist. Declaration public bool? NoPadChar { get; } Property Value Type Description bool? NonDestScrollRegion The non_dest_scroll_region [non_dest_scroll_region, ndscr] bool capability indicates scrolling region is non destructive. Declaration public bool? NonDestScrollRegion { get; } Property Value Type Description bool? NonRevRmcup The non_rev_rmcup [non_rev_rmcup, nrrmc] bool capability indicates smcup does not reverse rmcup. Declaration public bool? NonRevRmcup { get; } Property Value Type Description bool? NumLabels The num_labels [num_labels, nlab] num capability is number of labels on screen. Declaration public int? NumLabels { get; } Property Value Type Description int? NumberOfFunctionKeys The number_of_function_keys [number_of_function_keys, OTkn] num capability is count of function keys. Declaration public int? NumberOfFunctionKeys { get; } Property Value Type Description int? NumberOfPins The number_of_pins [number_of_pins, npins] num capability is numbers of pins in print head. Declaration public int? NumberOfPins { get; } Property Value Type Description int? OrderOfPins The order_of_pins [order_of_pins, porder] string capability is the match software bits to print head pins. Declaration public string OrderOfPins { get; } Property Value Type Description string OrigColors The orig_colors [orig_colors, oc] string capability is the set all color pairs to the original ones. Declaration public string OrigColors { get; } Property Value Type Description string OrigPair The orig_pair [orig_pair, op] string capability is the set default pair to its original value. Declaration public string OrigPair { get; } Property Value Type Description string OtherNonFunctionKeys The other_non_function_keys [other_non_function_keys, OTko] string capability is the list of self mapped keycaps. Declaration public string OtherNonFunctionKeys { get; } Property Value Type Description string OutputResChar The output_res_char [output_res_char, orc] num capability is horizontal resolution in units per line. Declaration public int? OutputResChar { get; } Property Value Type Description int? OutputResHorzInch The output_res_horz_inch [output_res_horz_inch, orhi] num capability is horizontal resolution in units per inch. Declaration public int? OutputResHorzInch { get; } Property Value Type Description int? OutputResLine The output_res_line [output_res_line, orl] num capability is vertical resolution in units per line. Declaration public int? OutputResLine { get; } Property Value Type Description int? OutputResVertInch The output_res_vert_inch [output_res_vert_inch, orvi] num capability is vertical resolution in units per inch. Declaration public int? OutputResVertInch { get; } Property Value Type Description int? OverStrike The over_strike [over_strike, os] bool capability indicates terminal can overstrike. Declaration public bool? OverStrike { get; } Property Value Type Description bool? PadChar The pad_char [pad_char, pad] string capability is the padding char instead of null. Declaration public string PadChar { get; } Property Value Type Description string PaddingBaudRate The padding_baud_rate [padding_baud_rate, pb] num capability is lowest baud rate where padding needed. Declaration public int? PaddingBaudRate { get; } Property Value Type Description int? ParmDch The parm_dch [parm_dch, dch] string capability is the delete 1 characters p. Declaration public string ParmDch { get; } Property Value Type Description string ParmDeleteLine The parm_delete_line [parm_delete_line, dl] string capability is the delete 1 lines p. Declaration public string ParmDeleteLine { get; } Property Value Type Description string ParmDownCursor The parm_down_cursor [parm_down_cursor, cud] string capability is the down 1 lines p. Declaration public string ParmDownCursor { get; } Property Value Type Description string ParmDownMicro The parm_down_micro [parm_down_micro, mcud] string capability is the like parm down cursor in micro mode. Declaration public string ParmDownMicro { get; } Property Value Type Description string ParmIch The parm_ich [parm_ich, ich] string capability is the insert 1 characters p. Declaration public string ParmIch { get; } Property Value Type Description string ParmIndex The parm_index [parm_index, indn] string capability is the scroll forward 1 lines p. Declaration public string ParmIndex { get; } Property Value Type Description string ParmInsertLine The parm_insert_line [parm_insert_line, il] string capability is the insert 1 lines p. Declaration public string ParmInsertLine { get; } Property Value Type Description string ParmLeftCursor The parm_left_cursor [parm_left_cursor, cub] string capability is the move 1 characters to the left p. Declaration public string ParmLeftCursor { get; } Property Value Type Description string ParmLeftMicro The parm_left_micro [parm_left_micro, mcub] string capability is the like parm left cursor in micro mode. Declaration public string ParmLeftMicro { get; } Property Value Type Description string ParmRightCursor The parm_right_cursor [parm_right_cursor, cuf] string capability is the move 1 characters to the right p. Declaration public string ParmRightCursor { get; } Property Value Type Description string ParmRightMicro The parm_right_micro [parm_right_micro, mcuf] string capability is the like parm right cursor in micro mode. Declaration public string ParmRightMicro { get; } Property Value Type Description string ParmRindex The parm_rindex [parm_rindex, rin] string capability is the scroll back 1 lines p. Declaration public string ParmRindex { get; } Property Value Type Description string ParmUpCursor The parm_up_cursor [parm_up_cursor, cuu] string capability is the up 1 lines p. Declaration public string ParmUpCursor { get; } Property Value Type Description string ParmUpMicro The parm_up_micro [parm_up_micro, mcuu] string capability is the like parm up cursor in micro mode. Declaration public string ParmUpMicro { get; } Property Value Type Description string PcTermOptions The pc_term_options [pc_term_options, pctrm] string capability is the pc terminal options. Declaration public string PcTermOptions { get; } Property Value Type Description string PkeyKey The pkey_key [pkey_key, pfkey] string capability is the program function key 1 to type string 2. Declaration public string PkeyKey { get; } Property Value Type Description string PkeyLocal The pkey_local [pkey_local, pfloc] string capability is the program function key 1 to execute string 2. Declaration public string PkeyLocal { get; } Property Value Type Description string PkeyPlab The pkey_plab [pkey_plab, pfxl] string capability is the program function key 1 to type string 2 and show string 3. Declaration public string PkeyPlab { get; } Property Value Type Description string PkeyXmit The pkey_xmit [pkey_xmit, pfx] string capability is the program function key 1 to transmit string 2. Declaration public string PkeyXmit { get; } Property Value Type Description string PlabNorm The plab_norm [plab_norm, pln] string capability is the program label 1 to show string 2. Declaration public string PlabNorm { get; } Property Value Type Description string PrintRate The print_rate [print_rate, cps] num capability is print rate in characters per second. Declaration public int? PrintRate { get; } Property Value Type Description int? PrintScreen The print_screen [print_screen, mc0] string capability is the print contents of screen. Declaration public string PrintScreen { get; } Property Value Type Description string PrtrNon The prtr_non [prtr_non, mc5p] string capability is the turn on printer for 1 bytes. Declaration public string PrtrNon { get; } Property Value Type Description string PrtrOff The prtr_off [prtr_off, mc4] string capability is the turn off printer. Declaration public string PrtrOff { get; } Property Value Type Description string PrtrOn The prtr_on [prtr_on, mc5] string capability is the turn on printer. Declaration public string PrtrOn { get; } Property Value Type Description string PrtrSilent The prtr_silent [prtr_silent, mc5i] bool capability indicates printer will not echo on screen. Declaration public bool? PrtrSilent { get; } Property Value Type Description bool? Pulse The pulse [pulse, pulse] string capability is the select pulse dialing. Declaration public string Pulse { get; } Property Value Type Description string QuickDial The quick_dial [quick_dial, qdial] string capability is the dial number 1 without checking. Declaration public string QuickDial { get; } Property Value Type Description string RemoveClock The remove_clock [remove_clock, rmclk] string capability is the remove clock. Declaration public string RemoveClock { get; } Property Value Type Description string RepeatChar The repeat_char [repeat_char, rep] string capability is the repeat char 1 2 times p. Declaration public string RepeatChar { get; } Property Value Type Description string ReqForInput The req_for_input [req_for_input, rfi] string capability is the send next input char for ptys. Declaration public string ReqForInput { get; } Property Value Type Description string ReqMousePos The req_mouse_pos [req_mouse_pos, reqmp] string capability is the request mouse position. Declaration public string ReqMousePos { get; } Property Value Type Description string Reset1string The reset_1string [reset_1string, rs1] string capability is the reset string. Declaration public string Reset1string { get; } Property Value Type Description string Reset2string The reset_2string [reset_2string, rs2] string capability is the reset string. Declaration public string Reset2string { get; } Property Value Type Description string Reset3string The reset_3string [reset_3string, rs3] string capability is the reset string. Declaration public string Reset3string { get; } Property Value Type Description string ResetFile The reset_file [reset_file, rf] string capability is the name of reset file. Declaration public string ResetFile { get; } Property Value Type Description string RestoreCursor The restore_cursor [restore_cursor, rc] string capability is the restore cursor to position of last save cursor. Declaration public string RestoreCursor { get; } Property Value Type Description string ReturnDoesClrEol The return_does_clr_eol [return_does_clr_eol, OTxr] bool capability indicates return clears the line. Declaration public bool? ReturnDoesClrEol { get; } Property Value Type Description bool? RowAddrGlitch The row_addr_glitch [row_addr_glitch, xvpa] bool capability indicates only positive motion for vpa mvpa caps. Declaration public bool? RowAddrGlitch { get; } Property Value Type Description bool? RowAddress The row_address [row_address, vpa] string capability is the vertical position 1 absolute p. Declaration public string RowAddress { get; } Property Value Type Description string SaveCursor The save_cursor [save_cursor, sc] string capability is the save current cursor position p. Declaration public string SaveCursor { get; } Property Value Type Description string ScancodeEscape The scancode_escape [scancode_escape, scesc] string capability is the escape for scancode emulation. Declaration public string ScancodeEscape { get; } Property Value Type Description string ScrollForward The scroll_forward [scroll_forward, ind] string capability is the scroll text up p. Declaration public string ScrollForward { get; } Property Value Type Description string ScrollReverse The scroll_reverse [scroll_reverse, ri] string capability is the scroll text down p. Declaration public string ScrollReverse { get; } Property Value Type Description string SelectCharSet The select_char_set [select_char_set, scs] string capability is the select character set 1. Declaration public string SelectCharSet { get; } Property Value Type Description string SemiAutoRightMargin The semi_auto_right_margin [semi_auto_right_margin, sam] bool capability indicates printing in last column causes cr. Declaration public bool? SemiAutoRightMargin { get; } Property Value Type Description bool? Set0DesSeq The set0_des_seq [set0_des_seq, s0ds] string capability is the shift to codeset 0 euc set 0 ascii. Declaration public string Set0DesSeq { get; } Property Value Type Description string Set1DesSeq The set1_des_seq [set1_des_seq, s1ds] string capability is the shift to codeset 1. Declaration public string Set1DesSeq { get; } Property Value Type Description string Set2DesSeq The set2_des_seq [set2_des_seq, s2ds] string capability is the shift to codeset 2. Declaration public string Set2DesSeq { get; } Property Value Type Description string Set3DesSeq The set3_des_seq [set3_des_seq, s3ds] string capability is the shift to codeset 3. Declaration public string Set3DesSeq { get; } Property Value Type Description string SetAAttributes The set_a_attributes [set_a_attributes, sgr1] string capability is the define second set of video attributes #1 #6. Declaration public string SetAAttributes { get; } Property Value Type Description string SetABackground The set_a_background [set_a_background, setab] string capability is the set background color to 1 using ansi escape. Declaration public string SetABackground { get; } Property Value Type Description string SetAForeground The set_a_foreground [set_a_foreground, setaf] string capability is the set foreground color to 1 using ansi escape. Declaration public string SetAForeground { get; } Property Value Type Description string SetAttributes The set_attributes [set_attributes, sgr] string capability is the define video attributes #1 #9 (pg9). Declaration public string SetAttributes { get; } Property Value Type Description string SetBackground The set_background [set_background, setb] string capability is the set background color 1. Declaration public string SetBackground { get; } Property Value Type Description string SetBottomMargin The set_bottom_margin [set_bottom_margin, smgb] string capability is the set bottom margin at current line. Declaration public string SetBottomMargin { get; } Property Value Type Description string SetBottomMarginParm The set_bottom_margin_parm [set_bottom_margin_parm, smgbp] string capability is the set bottom margin at line 1 or if smgtp is not given 2 lines from bottom. Declaration public string SetBottomMarginParm { get; } Property Value Type Description string SetClock The set_clock [set_clock, sclk] string capability is the set clock 1 hrs 2 mins 3 secs. Declaration public string SetClock { get; } Property Value Type Description string SetColorBand The set_color_band [set_color_band, setcolor] string capability is the change to ribbon color 1. Declaration public string SetColorBand { get; } Property Value Type Description string SetColorPair The set_color_pair [set_color_pair, scp] string capability is the set current color pair to 1. Declaration public string SetColorPair { get; } Property Value Type Description string SetForeground The set_foreground [set_foreground, setf] string capability is the set foreground color 1. Declaration public string SetForeground { get; } Property Value Type Description string SetLeftMargin The set_left_margin [set_left_margin, smgl] string capability is the set left soft margin at current column. Declaration public string SetLeftMargin { get; } Property Value Type Description string SetLeftMarginParm The set_left_margin_parm [set_left_margin_parm, smglp] string capability is the set left right margin at column 1. Declaration public string SetLeftMarginParm { get; } Property Value Type Description string SetLrMargin The set_lr_margin [set_lr_margin, smglr] string capability is the set both left and right margins to 1 2 ml is not in bsd termcap. Declaration public string SetLrMargin { get; } Property Value Type Description string SetPageLength The set_page_length [set_page_length, slines] string capability is the set page length to 1 lines. Declaration public string SetPageLength { get; } Property Value Type Description string SetPglenInch The set_pglen_inch [set_pglen_inch, slength] string capability is the set page length to 1 hundredth of an inch some implementations use s l for termcap. Declaration public string SetPglenInch { get; } Property Value Type Description string SetRightMargin The set_right_margin [set_right_margin, smgr] string capability is the set right soft margin at current column. Declaration public string SetRightMargin { get; } Property Value Type Description string SetRightMarginParm The set_right_margin_parm [set_right_margin_parm, smgrp] string capability is the set right margin at column 1. Declaration public string SetRightMarginParm { get; } Property Value Type Description string SetTab The set_tab [set_tab, hts] string capability is the set a tab in every row current columns. Declaration public string SetTab { get; } Property Value Type Description string SetTbMargin The set_tb_margin [set_tb_margin, smgtb] string capability is the sets both top and bottom margins to 1 2. Declaration public string SetTbMargin { get; } Property Value Type Description string SetTopMargin The set_top_margin [set_top_margin, smgt] string capability is the set top margin at current line. Declaration public string SetTopMargin { get; } Property Value Type Description string SetTopMarginParm The set_top_margin_parm [set_top_margin_parm, smgtp] string capability is the set top bottom margin at row 1. Declaration public string SetTopMarginParm { get; } Property Value Type Description string SetWindow The set_window [set_window, wind] string capability is the current window is lines #1 #2 cols #3 #4. Declaration public string SetWindow { get; } Property Value Type Description string StartBitImage The start_bit_image [start_bit_image, sbim] string capability is the start printing bit image graphics. Declaration public string StartBitImage { get; } Property Value Type Description string StartCharSetDef The start_char_set_def [start_char_set_def, scsd] string capability is the start character set definition 1 with 2 characters in the set. Declaration public string StartCharSetDef { get; } Property Value Type Description string StatusLineEscOk The status_line_esc_ok [status_line_esc_ok, eslok] bool capability indicates escape can be used on the status line. Declaration public bool? StatusLineEscOk { get; } Property Value Type Description bool? StopBitImage The stop_bit_image [stop_bit_image, rbim] string capability is the stop printing bit image graphics. Declaration public string StopBitImage { get; } Property Value Type Description string StopCharSetDef The stop_char_set_def [stop_char_set_def, rcsd] string capability is the end definition of character set 1. Declaration public string StopCharSetDef { get; } Property Value Type Description string SubscriptCharacters The subscript_characters [subscript_characters, subcs] string capability is the list of subscriptable characters. Declaration public string SubscriptCharacters { get; } Property Value Type Description string SuperscriptCharacters The superscript_characters [superscript_characters, supcs] string capability is the list of superscriptable characters. Declaration public string SuperscriptCharacters { get; } Property Value Type Description string Tab The tab [tab, ht] string capability is the tab to next 8 space hardware tab stop. Declaration public string Tab { get; } Property Value Type Description string TermcapInit2 The termcap_init2 [termcap_init2, OTi2] string capability is the secondary initialization string. Declaration public string TermcapInit2 { get; } Property Value Type Description string TermcapReset The termcap_reset [termcap_reset, OTrs] string capability is the terminal reset string. Declaration public string TermcapReset { get; } Property Value Type Description string TheseCauseCr The these_cause_cr [these_cause_cr, docr] string capability is the printing any of these characters causes cr. Declaration public string TheseCauseCr { get; } Property Value Type Description string TildeGlitch The tilde_glitch [tilde_glitch, hz] bool capability indicates cannot print s hazeltine. Declaration public bool? TildeGlitch { get; } Property Value Type Description bool? ToStatusLine The to_status_line [to_status_line, tsl] string capability is the move to status line column 1. Declaration public string ToStatusLine { get; } Property Value Type Description string Tone The tone [tone, tone] string capability is the select touch tone dialing. Declaration public string Tone { get; } Property Value Type Description string TransparentUnderline The transparent_underline [transparent_underline, ul] bool capability indicates underline character overstrikes. Declaration public bool? TransparentUnderline { get; } Property Value Type Description bool? UnderlineChar The underline_char [underline_char, uc] string capability is the underline char and move past it. Declaration public string UnderlineChar { get; } Property Value Type Description string UpHalfLine The up_half_line [up_half_line, hu] string capability is the half a line up. Declaration public string UpHalfLine { get; } Property Value Type Description string User0 The user0 [user0, u0] string capability is the user string 0. Declaration public string User0 { get; } Property Value Type Description string User1 The user1 [user1, u1] string capability is the user string 1. Declaration public string User1 { get; } Property Value Type Description string User2 The user2 [user2, u2] string capability is the user string 2. Declaration public string User2 { get; } Property Value Type Description string User3 The user3 [user3, u3] string capability is the user string 3. Declaration public string User3 { get; } Property Value Type Description string User4 The user4 [user4, u4] string capability is the user string 4. Declaration public string User4 { get; } Property Value Type Description string User5 The user5 [user5, u5] string capability is the user string 5. Declaration public string User5 { get; } Property Value Type Description string User6 The user6 [user6, u6] string capability is the user string 6. Declaration public string User6 { get; } Property Value Type Description string User7 The user7 [user7, u7] string capability is the user string 7. Declaration public string User7 { get; } Property Value Type Description string User8 The user8 [user8, u8] string capability is the user string 8. Declaration public string User8 { get; } Property Value Type Description string User9 The user9 [user9, u9] string capability is the user string 9. Declaration public string User9 { get; } Property Value Type Description string VirtualTerminal The virtual_terminal [virtual_terminal, vt] num capability is virtual terminal number cb unix. Declaration public int? VirtualTerminal { get; } Property Value Type Description int? WaitTone The wait_tone [wait_tone, wait] string capability is the wait for dial tone. Declaration public string WaitTone { get; } Property Value Type Description string WideCharSize The wide_char_size [wide_char_size, widcs] num capability is character step size when in double wide mode. Declaration public int? WideCharSize { get; } Property Value Type Description int? WidthStatusLine The width_status_line [width_status_line, wsl] num capability is number of columns in status line. Declaration public int? WidthStatusLine { get; } Property Value Type Description int? XoffCharacter The xoff_character [xoff_character, xoffc] string capability is the xoff character. Declaration public string XoffCharacter { get; } Property Value Type Description string XonCharacter The xon_character [xon_character, xonc] string capability is the xon character. Declaration public string XonCharacter { get; } Property Value Type Description string XonXoff The xon_xoff [xon_xoff, xon] bool capability indicates terminal uses xon xoff handshaking. Declaration public bool? XonXoff { get; } Property Value Type Description bool? ZeroMotion The zero_motion [zero_motion, zerom] string capability is the no motion for subsequent character. Declaration public string ZeroMotion { get; } Property Value Type Description string Methods | Edit this page View Source GetBoolean(Boolean) Gets a specific boolean terminfo capability value. Declaration public bool? GetBoolean(TermInfoCaps.Boolean value) Parameters Type Name Description TermInfoCaps.Boolean value The capability to get the value for. Returns Type Description bool? The terminfo capability value. | Edit this page View Source GetNum(Num) Gets a specific numeric terminfo capability value. Declaration public int? GetNum(TermInfoCaps.Num value) Parameters Type Name Description TermInfoCaps.Num value The capability to get the value for. Returns Type Description int? The terminfo capability value. | Edit this page View Source GetString(String) Gets a specific string terminfo capability value. Declaration public string? GetString(TermInfoCaps.String value) Parameters Type Name Description TermInfoCaps.String value The capability to get the value for. Returns Type Description string The terminfo capability value. | Edit this page View Source Load() Loads the default terminfo description for the current terminal. Declaration public static TermInfoDesc? Load() Returns Type Description TermInfoDesc The default terminfo description for the current terminal, or null if none could be resolved. | Edit this page View Source Load(Stream) Reads a terminfo description from a stream. Declaration public static TermInfoDesc Load(Stream stream) Parameters Type Name Description Stream stream The stream to read from. Returns Type Description TermInfoDesc The parsed terminfo description. | Edit this page View Source Load(string) Loads the specified terminfo description for the current terminal. Declaration public static TermInfoDesc? Load(string name) Parameters Type Name Description string name The name of the terminfo description to load. Returns Type Description TermInfoDesc The default terminfo description for the current terminal, or null if none could be resolved. | Edit this page View Source TryLoad(Stream, out TermInfoDesc?) Tries to read a terminfo description from a stream. Declaration public static bool TryLoad(Stream stream, out TermInfoDesc? result) Parameters Type Name Description Stream stream The stream to read from. TermInfoDesc result When this method returns, contains the terminfo description if the loading succeeded, or null if the loading failed. Returns Type Description bool true if the terminfo description was loaded successfully; otherwise, false. | Edit this page View Source TryLoad(string, out TermInfoDesc?) Tries to load the specified terminfo description for the current terminal. Declaration public static bool TryLoad(string name, out TermInfoDesc? result) Parameters Type Name Description string name The terminfo name to load. TermInfoDesc result When this method returns, contains the terminfo description if the loading succeeded, or null if the loading failed. Returns Type Description bool true if the terminfo description was loaded successfully; otherwise, false. | Edit this page View Source TryLoad(out TermInfoDesc?) Tries to load the default terminfo description for the current terminal. Declaration public static bool TryLoad(out TermInfoDesc? result) Parameters Type Name Description TermInfoDesc result When this method returns, contains the terminfo description, if the loading succeeded, or null if the loading failed. Returns Type Description bool true if the terminfo description was loaded successfully; otherwise, false."
  },
  "api/Terminaux.Base.TermInfo.html": {
    "href": "api/Terminaux.Base.TermInfo.html",
    "title": "Namespace Terminaux.Base.TermInfo | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.TermInfo Classes ExtendedCapabilities Represents extended capabilities. TermInfoCaps Represents known terminal information capabilities. TermInfoDesc Represents a parsed terminfo description. Enums TermInfoCaps.Boolean Represents known boolean terminfo capabilities. TermInfoCaps.Num Represents known numeric terminfo capabilities. TermInfoCaps.String Represents known string terminfo capabilities. TermInfoCapsKind Represents the different terminfo capability variable types."
  },
  "api/Terminaux.Base.TerminauxException.html": {
    "href": "api/Terminaux.Base.TerminauxException.html",
    "title": "Class TerminauxException | Terminaux API - Aptivi",
    "keywords": "Class TerminauxException Terminaux exception class Inheritance object Exception TerminauxException Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public class TerminauxException : Exception Constructors | Edit this page View Source TerminauxException() Makes an empty TerminauxException exception instance with the default message Declaration public TerminauxException() | Edit this page View Source TerminauxException(Exception) Makes an empty TerminauxException exception instance with the default message Declaration public TerminauxException(Exception innerException) Parameters Type Name Description Exception innerException An inner exception to specify | Edit this page View Source TerminauxException(string) Makes a TerminauxException exception instance Declaration public TerminauxException(string message) Parameters Type Name Description string message A message to specify | Edit this page View Source TerminauxException(string, Exception) Makes a TerminauxException exception instance Declaration public TerminauxException(string message, Exception innerException) Parameters Type Name Description string message A message to specify Exception innerException An inner exception to specify | Edit this page View Source TerminauxException(string, Exception, params object[]) Makes a TerminauxException exception instance Declaration public TerminauxException(string message, Exception innerException, params object[] vars) Parameters Type Name Description string message A message to specify Exception innerException An inner exception to specify object[] vars List of variables to format the message with | Edit this page View Source TerminauxException(string, params object[]) Makes a TerminauxException exception instance Declaration public TerminauxException(string message, params object[] vars) Parameters Type Name Description string message A message to specify object[] vars List of variables to format the message with"
  },
  "api/Terminaux.Base.TerminauxInternalException.html": {
    "href": "api/Terminaux.Base.TerminauxInternalException.html",
    "title": "Class TerminauxInternalException | Terminaux API - Aptivi",
    "keywords": "Class TerminauxInternalException Terminaux exception class Inheritance object Exception TerminauxInternalException Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public class TerminauxInternalException : Exception Constructors | Edit this page View Source TerminauxInternalException() Makes an empty TerminauxInternalException exception instance with the default message Declaration public TerminauxInternalException() | Edit this page View Source TerminauxInternalException(Exception) Makes an empty TerminauxInternalException exception instance with the default message Declaration public TerminauxInternalException(Exception innerException) Parameters Type Name Description Exception innerException An inner exception to specify | Edit this page View Source TerminauxInternalException(string) Makes a TerminauxInternalException exception instance Declaration public TerminauxInternalException(string message) Parameters Type Name Description string message A message to specify | Edit this page View Source TerminauxInternalException(string, Exception) Makes a TerminauxInternalException exception instance Declaration public TerminauxInternalException(string message, Exception innerException) Parameters Type Name Description string message A message to specify Exception innerException An inner exception to specify | Edit this page View Source TerminauxInternalException(string, Exception, params object[]) Makes a TerminauxInternalException exception instance Declaration public TerminauxInternalException(string message, Exception innerException, params object[] vars) Parameters Type Name Description string message A message to specify Exception innerException An inner exception to specify object[] vars List of variables to format the message with | Edit this page View Source TerminauxInternalException(string, params object[]) Makes a TerminauxInternalException exception instance Declaration public TerminauxInternalException(string message, params object[] vars) Parameters Type Name Description string message A message to specify object[] vars List of variables to format the message with"
  },
  "api/Terminaux.Base.html": {
    "href": "api/Terminaux.Base.html",
    "title": "Namespace Terminaux.Base | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base Classes ConsoleResizeHandler The console resize listener module ConsoleWrapper Wrapper for the Console class to ensure safety against dumb consoles. This connects to the console wrapper that Terminaux manages. ConsoleWrapperTools Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. TerminauxException Terminaux exception class TerminauxInternalException Terminaux exception class"
  },
  "api/Terminaux.Colors.Color.html": {
    "href": "api/Terminaux.Colors.Color.html",
    "title": "Class Color | Terminaux API - Aptivi",
    "keywords": "Class Color Color information class Inheritance object Color Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax [JsonConverter(typeof(ColorSerializer))] public class Color Constructors | Edit this page View Source Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColor, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef, ColorSettings settings) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(Color) Makes a new instance of color class from specifier. Declaration public Color(Color color) Parameters Type Name Description Color color The color from Drawing Exceptions Type Condition TerminauxException | Edit this page View Source Color(int) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum) Parameters Type Name Description int ColorNum The color number or a decimal number that specifies the RGB values up to 16777215 Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, int, int) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, int, int, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B, ColorSettings settings) Parameters Type Name Description int R The red level int G The green level int B The blue level ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum, ColorSettings settings) Parameters Type Name Description int ColorNum The color number or a decimal number that specifies the RGB values up to 16777215 ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(string) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Exceptions Type Condition TerminauxException | Edit this page View Source Color(string, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier, ColorSettings settings) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColors, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef, ColorSettings settings) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException Properties | Edit this page View Source Brightness Determines the color brightness whether it indicates dark or light mode Declaration public ColorBrightness Brightness { get; } Property Value Type Description ColorBrightness | Edit this page View Source ColorEnum16 The color value converted to ConsoleColor. Not applicable [-1] to non-4-bit colors. Declaration public ConsoleColor ColorEnum16 { get; } Property Value Type Description ConsoleColor | Edit this page View Source ColorEnum255 The color value converted to ConsoleColors. Declaration public ConsoleColors ColorEnum255 { get; } Property Value Type Description ConsoleColors | Edit this page View Source ColorId The color ID for 256- and 16-color modes. Declaration public ConsoleColorData ColorId { get; } Property Value Type Description ConsoleColorData | Edit this page View Source Empty Empty color singleton Declaration public static Color Empty { get; } Property Value Type Description Color | Edit this page View Source Hex Hexadecimal representation of the color Declaration public string Hex { get; } Property Value Type Description string | Edit this page View Source Name Color name representation Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source PlainSequence Either 0-255, or <R>;<G>;<B>, depending on the settings. Declaration public string PlainSequence { get; } Property Value Type Description string | Edit this page View Source PlainSequenceOriginal Either 0-255, or <R>;<G>;<B> in its original form. Declaration public string PlainSequenceOriginal { get; } Property Value Type Description string | Edit this page View Source PlainSequenceTrueColor <R>;<G>;<B> Declaration public string PlainSequenceTrueColor { get; } Property Value Type Description string | Edit this page View Source RGB An instance of RGB Declaration public RedGreenBlue RGB { get; } Property Value Type Description RedGreenBlue | Edit this page View Source Type Color type Declaration public ColorType Type { get; } Property Value Type Description ColorType | Edit this page View Source VTSequenceBackground Parsable VT sequence (Background) Declaration public string VTSequenceBackground { get; } Property Value Type Description string | Edit this page View Source VTSequenceBackgroundOriginal Parsable VT sequence (Background, original) Declaration public string VTSequenceBackgroundOriginal { get; } Property Value Type Description string | Edit this page View Source VTSequenceBackgroundTrueColor Parsable VT sequence (Background, true color) Declaration public string VTSequenceBackgroundTrueColor { get; } Property Value Type Description string | Edit this page View Source VTSequenceForeground Parsable VT sequence (Foreground) Declaration public string VTSequenceForeground { get; } Property Value Type Description string | Edit this page View Source VTSequenceForegroundOriginal Parsable VT sequence (Foreground, original) Declaration public string VTSequenceForegroundOriginal { get; } Property Value Type Description string | Edit this page View Source VTSequenceForegroundTrueColor Parsable VT sequence (Foreground, true color) Declaration public string VTSequenceForegroundTrueColor { get; } Property Value Type Description string Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(Color) Checks to see if this instance of the color is equal to another instance of the color Declaration public bool Equals(Color other) Parameters Type Name Description Color other Another instance of the color to compare with this color Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source Equals(Color, Color) Checks to see if the first instance of the color is equal to another instance of the color Declaration public bool Equals(Color other, Color other2) Parameters Type Name Description Color other Another instance of the color to compare with another Color other2 Another instance of the color to compare with another Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() Either 0-255, or <R>;<G>;<B>, depending on the usage of the terminal palette. Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(Color, Color) Declaration public static bool operator ==(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool | Edit this page View Source implicit operator Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(Color) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(Color color) Parameters Type Name Description Color color The color from Drawing Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(int) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(int ColorNum) Parameters Type Name Description int ColorNum The color number Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(string) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source operator !=(Color, Color) Declaration public static bool operator !=(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool Extension Methods ColorContrast.GetContrastColorHalf(Color) ColorContrast.GetContrastColorNtsc(Color)"
  },
  "api/Terminaux.Colors.ColorSerializer.html": {
    "href": "api/Terminaux.Colors.ColorSerializer.html",
    "title": "Class ColorSerializer | Terminaux API - Aptivi",
    "keywords": "Class ColorSerializer Color serializer Inheritance object JsonConverter ColorSerializer Inherited Members JsonConverter.CanRead JsonConverter.CanWrite Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class ColorSerializer : JsonConverter Methods | Edit this page View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description bool true if this instance can convert the specified object type; otherwise, false. Overrides JsonConverter.CanConvert(Type) | Edit this page View Source ReadJson(JsonReader, Type, object?, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object? existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. object existingValue The existing value of object being read. JsonSerializer serializer The calling serializer. Returns Type Description object The object value. Overrides JsonConverter.ReadJson(JsonReader, Type, object, JsonSerializer) | Edit this page View Source WriteJson(JsonWriter, object?, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. object value The value. JsonSerializer serializer The calling serializer. Overrides JsonConverter.WriteJson(JsonWriter, object, JsonSerializer)"
  },
  "api/Terminaux.Colors.ColorSettings.html": {
    "href": "api/Terminaux.Colors.ColorSettings.html",
    "title": "Class ColorSettings | Terminaux API - Aptivi",
    "keywords": "Class ColorSettings The color settings class Inheritance object ColorSettings Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class ColorSettings Constructors | Edit this page View Source ColorSettings() Makes a new instance of color settings Declaration public ColorSettings() | Edit this page View Source ColorSettings(ColorSettings) Makes a new instance of color settings Declaration public ColorSettings(ColorSettings settings) Parameters Type Name Description ColorSettings settings Settings instance to copy the color configuration from Properties | Edit this page View Source ColorBlindnessSeverity The color blindness severity (Only for color blindness formulas): Protan Deutan Tritan ProtanVienot DeutanVienot TritanVienot Declaration public double ColorBlindnessSeverity { get; set; } Property Value Type Description double | Edit this page View Source ColorTransformationFormula The color transformation formula to use when generating transformed colors, such as color blindness. Declaration public TransformationFormula ColorTransformationFormula { get; set; } Property Value Type Description TransformationFormula | Edit this page View Source EnableColorTransformation Enables the color transformation to adjust to color blindness upon making a new instance of color Declaration public bool EnableColorTransformation { get; set; } Property Value Type Description bool | Edit this page View Source Opacity The opacity at which the color will be calculated. Declaration public int Opacity { get; set; } Property Value Type Description int Remarks This fades the color to the current background color of the console currently set by SetConsoleColor(Color, bool, bool, bool). That color can be overridable by setting the OpacityColor property to any color you want. Set it to 0, and you'll get the color that is the same as the value of the OpacityColor property. Set it to 255, and you'll get the color that you've created using the Color(int, int, int, ColorSettings) constructor and its siblings. This is still fake transparency for GUI applications, but should behave like real transparency in console applications that use background colors. | Edit this page View Source OpacityColor The opacity color to fade the new instances of colors to using the opacity as the threshold. Declaration public Color OpacityColor { get; set; } Property Value Type Description Color Remarks See the Remarks section of Opacity for more info about how we use this color to calculate the transparency. | Edit this page View Source UseTerminalPalette If enabled, calls to PlainSequence and its siblings return color ID if said color is either a 256 color or a 16 color. Otherwise, calls to these properties are wrappers to PlainSequenceTrueColor and its siblings. By default, it's enabled. Declaration public bool UseTerminalPalette { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Colors.ColorTools.html": {
    "href": "api/Terminaux.Colors.ColorTools.html",
    "title": "Class ColorTools | Terminaux API - Aptivi",
    "keywords": "Class ColorTools Color tools and management Inheritance object ColorTools Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public static class ColorTools Properties | Edit this page View Source AllowBackground Whether applications are allowed to set the current background color or not Declaration public static bool AllowBackground { get; set; } Property Value Type Description bool | Edit this page View Source AllowForeground Whether applications are allowed to set the current foreground color or not Declaration public static bool AllowForeground { get; set; } Property Value Type Description bool | Edit this page View Source CurrentBackgroundColor Current background color Declaration public static Color CurrentBackgroundColor { get; } Property Value Type Description Color | Edit this page View Source CurrentForegroundColor Current foreground color Declaration public static Color CurrentForegroundColor { get; } Property Value Type Description Color | Edit this page View Source GlobalSettings Global color settings Declaration public static ColorSettings GlobalSettings { get; } Property Value Type Description ColorSettings Methods | Edit this page View Source GetGray(Color, ColorContrastType) Gets the gray color according to the brightness of the specified color Declaration public static Color GetGray(Color color, ColorContrastType contrastType = ColorContrastType.Light) Parameters Type Name Description Color color Target color to use when getting the gray color ColorContrastType contrastType Contrast type Returns Type Description Color | Edit this page View Source GetGray(ColorContrastType) Gets the gray color according to the brightness of the background color Declaration public static Color GetGray(ColorContrastType contrastType = ColorContrastType.Light) Parameters Type Name Description ColorContrastType contrastType Contrast type Returns Type Description Color | Edit this page View Source GetRandomColor(bool, ColorSettings?) Gets a random color instance (true color) Declaration public static Color GetRandomColor(bool selectBlack = true, ColorSettings? settings = null) Parameters Type Name Description bool selectBlack Whether to select the black color or not ColorSettings settings Settings to use Returns Type Description Color A color instance | Edit this page View Source GetRandomColor(ColorType, bool, ColorSettings?) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, bool selectBlack = true, ColorSettings? settings = null) Parameters Type Name Description ColorType type Color type to generate bool selectBlack Whether to select the black color or not ColorSettings settings Settings to use Returns Type Description Color A color instance | Edit this page View Source GetRandomColor(ColorType, int, int, int, int, int, int, int, int, ColorSettings?) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, int minColor, int maxColor, int minColorR, int maxColorR, int minColorG, int maxColorG, int minColorB, int maxColorB, ColorSettings? settings = null) Parameters Type Name Description ColorType type Color type to generate int minColor The minimum color level int maxColor The maximum color level int minColorR The minimum red color level int maxColorR The maximum red color level int minColorG The minimum green color level int maxColorG The maximum green color level int minColorB The minimum blue color level int maxColorB The maximum blue color level ColorSettings settings Settings to use Returns Type Description Color A color instance | Edit this page View Source GetRgbFromColorCode(int) Gets the RGB instance from the color code Declaration public static RedGreenBlue GetRgbFromColorCode(int colorCode) Parameters Type Name Description int colorCode The color code to get the RGB specifier from Returns Type Description RedGreenBlue The RGB specifier string | Edit this page View Source GetRgbIntFromColorCode(int) Gets the RGB numbers from the color code Declaration public static (int R, int G, int B) GetRgbIntFromColorCode(int colorCode) Parameters Type Name Description int colorCode The color code to get the RGB specifier from Returns Type Description (int R, int G, int B) The RGB specifier string | Edit this page View Source GetRgbSpecifierFromColorCode(int) Gets the RGB specifier from the color code Declaration public static string GetRgbSpecifierFromColorCode(int colorCode) Parameters Type Name Description int colorCode The color code to get the RGB specifier from Returns Type Description string The RGB specifier string | Edit this page View Source LoadBack() Loads the background Declaration public static void LoadBack() | Edit this page View Source LoadBack(Color, bool) Loads the background Declaration public static void LoadBack(Color ColorSequence, bool Force = false) Parameters Type Name Description Color ColorSequence Color sequence used to load background bool Force Force set background even if background setting is disabled | Edit this page View Source LoadBackDry() Loads the background dryly Declaration public static void LoadBackDry() | Edit this page View Source LoadBackDry(Color, bool) Loads the background dryly Declaration public static void LoadBackDry(Color ColorSequence, bool Force = false) Parameters Type Name Description Color ColorSequence Color sequence used to load background bool Force Force set background even if background setting is disabled | Edit this page View Source RenderResetBackground() Gets a sequence that resets the background color without clearing screen Declaration public static string RenderResetBackground() Returns Type Description string | Edit this page View Source RenderResetColors() Gets a sequence that resets the console colors without clearing screen Declaration public static string RenderResetColors() Returns Type Description string | Edit this page View Source RenderResetForeground() Gets a sequence that resets the foreground color without clearing screen Declaration public static string RenderResetForeground() Returns Type Description string | Edit this page View Source RenderSetConsoleColor(Color) Gets the console color setting sequence Declaration public static string RenderSetConsoleColor(Color ColorSequence) Parameters Type Name Description Color ColorSequence The color instance Returns Type Description string | Edit this page View Source RenderSetConsoleColor(Color, bool) Gets the console color setting sequence Declaration public static string RenderSetConsoleColor(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not Returns Type Description string | Edit this page View Source RenderSetConsoleColor(Color, bool, bool, bool) Gets the console color setting sequence Declaration public static string RenderSetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSet = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSet Can the console set this color? Returns Type Description string | Edit this page View Source ResetBackground() Resets the background color without clearing screen Declaration public static void ResetBackground() | Edit this page View Source ResetColors() Resets the console colors without clearing screen Declaration public static void ResetColors() | Edit this page View Source ResetForeground() Resets the foreground color without clearing screen Declaration public static void ResetForeground() | Edit this page View Source SetConsoleColor(Color, bool) Sets the console color Declaration public static void SetConsoleColor(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not | Edit this page View Source SetConsoleColor(Color, bool, bool, bool) Sets the console color Declaration public static void SetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSet = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSet Can the console set this color? | Edit this page View Source SetConsoleColorDry(Color, bool) Sets the console color dryly Declaration public static void SetConsoleColorDry(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not | Edit this page View Source SetConsoleColorDry(Color, bool, bool, bool) Sets the console color dryly Declaration public static void SetConsoleColorDry(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSet = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSet Can the console set this color? | Edit this page View Source TryParseColor(int, int, int, ColorSettings?) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int R, int G, int B, ColorSettings? settings = null) Parameters Type Name Description int R The red level int G The green level int B The blue level ColorSettings settings Settings to use Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(int, ColorSettings?) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int ColorNum, ColorSettings? settings = null) Parameters Type Name Description int ColorNum The color number ColorSettings settings Settings to use Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(string, ColorSettings?) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(string ColorSpecifier, ColorSettings? settings = null) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, or a VT sequence if using true color as follows: <R>;<G>;<B> ColorSettings settings Settings to use Returns Type Description bool True if successful; False if failed | Edit this page View Source TrySetConsoleColor(Color, bool, bool, bool) Sets the console color Declaration public static bool TrySetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSet = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSet Can the console set this color? Returns Type Description bool True if successful; False if unsuccessful | Edit this page View Source TrySetConsoleColorDry(Color, bool, bool, bool) Sets the console color dryly Declaration public static bool TrySetConsoleColorDry(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSet = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSet Can the console set this color? Returns Type Description bool True if successful; False if unsuccessful"
  },
  "api/Terminaux.Colors.ColorType.html": {
    "href": "api/Terminaux.Colors.ColorType.html",
    "title": "Enum ColorType | Terminaux API - Aptivi",
    "keywords": "Enum ColorType Color type enumeration Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public enum ColorType Fields Name Description EightBitColor Color is an 8-bit color FourBitColor Color is a 4-bit color TrueColor Color is a true color"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.html",
    "title": "Class ConsoleColorData | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorData Console color data Inheritance object ConsoleColorData Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax [JsonConverter(typeof(ConsoleColorDataSerializer))] public class ConsoleColorData Properties Aqua [#00ffff] Gets the console colors data for the Aqua color Declaration public static ConsoleColorData Aqua { get; } Property Value Type Description ConsoleColorData Aquamarine1 [#5fffd7] Gets the console colors data for the Aquamarine1 color Declaration public static ConsoleColorData Aquamarine1 { get; } Property Value Type Description ConsoleColorData Aquamarine1Alt [#87ffd7] Gets the console colors data for the Aquamarine1Alt color Declaration public static ConsoleColorData Aquamarine1Alt { get; } Property Value Type Description ConsoleColorData Aquamarine3 [#5fd7af] Gets the console colors data for the Aquamarine3 color Declaration public static ConsoleColorData Aquamarine3 { get; } Property Value Type Description ConsoleColorData Black [#000000] Gets the console colors data for the Black color Declaration public static ConsoleColorData Black { get; } Property Value Type Description ConsoleColorData Blue [#0000ff] Gets the console colors data for the Blue color Declaration public static ConsoleColorData Blue { get; } Property Value Type Description ConsoleColorData Blue1 [#0000ff] Gets the console colors data for the Blue1 color Declaration public static ConsoleColorData Blue1 { get; } Property Value Type Description ConsoleColorData Blue3 [#0000af] Gets the console colors data for the Blue3 color Declaration public static ConsoleColorData Blue3 { get; } Property Value Type Description ConsoleColorData Blue3Alt [#0000d7] Gets the console colors data for the Blue3Alt color Declaration public static ConsoleColorData Blue3Alt { get; } Property Value Type Description ConsoleColorData BlueViolet [#5f00ff] Gets the console colors data for the BlueViolet color Declaration public static ConsoleColorData BlueViolet { get; } Property Value Type Description ConsoleColorData CadetBlue [#5faf87] Gets the console colors data for the CadetBlue color Declaration public static ConsoleColorData CadetBlue { get; } Property Value Type Description ConsoleColorData CadetBlueAlt [#5fafaf] Gets the console colors data for the CadetBlueAlt color Declaration public static ConsoleColorData CadetBlueAlt { get; } Property Value Type Description ConsoleColorData Chartreuse1 [#87ff00] Gets the console colors data for the Chartreuse1 color Declaration public static ConsoleColorData Chartreuse1 { get; } Property Value Type Description ConsoleColorData Chartreuse2 [#5fff00] Gets the console colors data for the Chartreuse2 color Declaration public static ConsoleColorData Chartreuse2 { get; } Property Value Type Description ConsoleColorData Chartreuse2Alt [#87d700] Gets the console colors data for the Chartreuse2Alt color Declaration public static ConsoleColorData Chartreuse2Alt { get; } Property Value Type Description ConsoleColorData Chartreuse3 [#5faf00] Gets the console colors data for the Chartreuse3 color Declaration public static ConsoleColorData Chartreuse3 { get; } Property Value Type Description ConsoleColorData Chartreuse3Alt [#5fd700] Gets the console colors data for the Chartreuse3Alt color Declaration public static ConsoleColorData Chartreuse3Alt { get; } Property Value Type Description ConsoleColorData Chartreuse4 [#5f8700] Gets the console colors data for the Chartreuse4 color Declaration public static ConsoleColorData Chartreuse4 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source Color Gets a color instance generated by this class Declaration [JsonIgnore] public Color? Color { get; } Property Value Type Description Color | Edit this page View Source ColorId The color ID Declaration [JsonIgnore] public int ColorId { get; } Property Value Type Description int CornflowerBlue [#5f87ff] Gets the console colors data for the CornflowerBlue color Declaration public static ConsoleColorData CornflowerBlue { get; } Property Value Type Description ConsoleColorData Cornsilk1 [#ffffd7] Gets the console colors data for the Cornsilk1 color Declaration public static ConsoleColorData Cornsilk1 { get; } Property Value Type Description ConsoleColorData Cyan1 [#00ffff] Gets the console colors data for the Cyan1 color Declaration public static ConsoleColorData Cyan1 { get; } Property Value Type Description ConsoleColorData Cyan2 [#00ffd7] Gets the console colors data for the Cyan2 color Declaration public static ConsoleColorData Cyan2 { get; } Property Value Type Description ConsoleColorData Cyan3 [#00d7af] Gets the console colors data for the Cyan3 color Declaration public static ConsoleColorData Cyan3 { get; } Property Value Type Description ConsoleColorData DarkBlue [#000087] Gets the console colors data for the DarkBlue color Declaration public static ConsoleColorData DarkBlue { get; } Property Value Type Description ConsoleColorData DarkCyan [#00af87] Gets the console colors data for the DarkCyan color Declaration public static ConsoleColorData DarkCyan { get; } Property Value Type Description ConsoleColorData DarkGoldenrod [#af8700] Gets the console colors data for the DarkGoldenrod color Declaration public static ConsoleColorData DarkGoldenrod { get; } Property Value Type Description ConsoleColorData DarkGreen [#005f00] Gets the console colors data for the DarkGreen color Declaration public static ConsoleColorData DarkGreen { get; } Property Value Type Description ConsoleColorData DarkKhaki [#afaf5f] Gets the console colors data for the DarkKhaki color Declaration public static ConsoleColorData DarkKhaki { get; } Property Value Type Description ConsoleColorData DarkMagenta [#870087] Gets the console colors data for the DarkMagenta color Declaration public static ConsoleColorData DarkMagenta { get; } Property Value Type Description ConsoleColorData DarkMagentaAlt [#8700af] Gets the console colors data for the DarkMagentaAlt color Declaration public static ConsoleColorData DarkMagentaAlt { get; } Property Value Type Description ConsoleColorData DarkOliveGreen1 [#d7ff5f] Gets the console colors data for the DarkOliveGreen1 color Declaration public static ConsoleColorData DarkOliveGreen1 { get; } Property Value Type Description ConsoleColorData DarkOliveGreen1Alt [#d7ff87] Gets the console colors data for the DarkOliveGreen1Alt color Declaration public static ConsoleColorData DarkOliveGreen1Alt { get; } Property Value Type Description ConsoleColorData DarkOliveGreen2 [#afff5f] Gets the console colors data for the DarkOliveGreen2 color Declaration public static ConsoleColorData DarkOliveGreen2 { get; } Property Value Type Description ConsoleColorData DarkOliveGreen3 [#87af5f] Gets the console colors data for the DarkOliveGreen3 color Declaration public static ConsoleColorData DarkOliveGreen3 { get; } Property Value Type Description ConsoleColorData DarkOliveGreen3Alt [#87d75f] Gets the console colors data for the DarkOliveGreen3Alt color Declaration public static ConsoleColorData DarkOliveGreen3Alt { get; } Property Value Type Description ConsoleColorData DarkOliveGreen3Alt2 [#afd75f] Gets the console colors data for the DarkOliveGreen3Alt2 color Declaration public static ConsoleColorData DarkOliveGreen3Alt2 { get; } Property Value Type Description ConsoleColorData DarkOrange [#ff8700] Gets the console colors data for the DarkOrange color Declaration public static ConsoleColorData DarkOrange { get; } Property Value Type Description ConsoleColorData DarkOrange3 [#af5f00] Gets the console colors data for the DarkOrange3 color Declaration public static ConsoleColorData DarkOrange3 { get; } Property Value Type Description ConsoleColorData DarkOrange3Alt [#d75f00] Gets the console colors data for the DarkOrange3Alt color Declaration public static ConsoleColorData DarkOrange3Alt { get; } Property Value Type Description ConsoleColorData DarkRed [#5f0000] Gets the console colors data for the DarkRed color Declaration public static ConsoleColorData DarkRed { get; } Property Value Type Description ConsoleColorData DarkRedAlt [#870000] Gets the console colors data for the DarkRedAlt color Declaration public static ConsoleColorData DarkRedAlt { get; } Property Value Type Description ConsoleColorData DarkSeaGreen [#87af87] Gets the console colors data for the DarkSeaGreen color Declaration public static ConsoleColorData DarkSeaGreen { get; } Property Value Type Description ConsoleColorData DarkSeaGreen1 [#afffd7] Gets the console colors data for the DarkSeaGreen1 color Declaration public static ConsoleColorData DarkSeaGreen1 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen1Alt [#d7ffaf] Gets the console colors data for the DarkSeaGreen1Alt color Declaration public static ConsoleColorData DarkSeaGreen1Alt { get; } Property Value Type Description ConsoleColorData DarkSeaGreen2 [#afd7af] Gets the console colors data for the DarkSeaGreen2 color Declaration public static ConsoleColorData DarkSeaGreen2 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen2Alt [#afffaf] Gets the console colors data for the DarkSeaGreen2Alt color Declaration public static ConsoleColorData DarkSeaGreen2Alt { get; } Property Value Type Description ConsoleColorData DarkSeaGreen3 [#87d7af] Gets the console colors data for the DarkSeaGreen3 color Declaration public static ConsoleColorData DarkSeaGreen3 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen3Alt [#afd787] Gets the console colors data for the DarkSeaGreen3Alt color Declaration public static ConsoleColorData DarkSeaGreen3Alt { get; } Property Value Type Description ConsoleColorData DarkSeaGreen4 [#5f875f] Gets the console colors data for the DarkSeaGreen4 color Declaration public static ConsoleColorData DarkSeaGreen4 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen4Alt [#5faf5f] Gets the console colors data for the DarkSeaGreen4Alt color Declaration public static ConsoleColorData DarkSeaGreen4Alt { get; } Property Value Type Description ConsoleColorData DarkSlateGray1 [#87ffff] Gets the console colors data for the DarkSlateGray1 color Declaration public static ConsoleColorData DarkSlateGray1 { get; } Property Value Type Description ConsoleColorData DarkSlateGray2 [#5fffff] Gets the console colors data for the DarkSlateGray2 color Declaration public static ConsoleColorData DarkSlateGray2 { get; } Property Value Type Description ConsoleColorData DarkSlateGray3 [#87d7d7] Gets the console colors data for the DarkSlateGray3 color Declaration public static ConsoleColorData DarkSlateGray3 { get; } Property Value Type Description ConsoleColorData DarkTurquoise [#00d7d7] Gets the console colors data for the DarkTurquoise color Declaration public static ConsoleColorData DarkTurquoise { get; } Property Value Type Description ConsoleColorData DarkViolet [#8700d7] Gets the console colors data for the DarkViolet color Declaration public static ConsoleColorData DarkViolet { get; } Property Value Type Description ConsoleColorData DarkVioletAlt [#af00d7] Gets the console colors data for the DarkVioletAlt color Declaration public static ConsoleColorData DarkVioletAlt { get; } Property Value Type Description ConsoleColorData DeepPink1 [#ff0087] Gets the console colors data for the DeepPink1 color Declaration public static ConsoleColorData DeepPink1 { get; } Property Value Type Description ConsoleColorData DeepPink1Alt [#ff00af] Gets the console colors data for the DeepPink1Alt color Declaration public static ConsoleColorData DeepPink1Alt { get; } Property Value Type Description ConsoleColorData DeepPink2 [#ff005f] Gets the console colors data for the DeepPink2 color Declaration public static ConsoleColorData DeepPink2 { get; } Property Value Type Description ConsoleColorData DeepPink3 [#d7005f] Gets the console colors data for the DeepPink3 color Declaration public static ConsoleColorData DeepPink3 { get; } Property Value Type Description ConsoleColorData DeepPink3Alt [#d70087] Gets the console colors data for the DeepPink3Alt color Declaration public static ConsoleColorData DeepPink3Alt { get; } Property Value Type Description ConsoleColorData DeepPink4 [#5f005f] Gets the console colors data for the DeepPink4 color Declaration public static ConsoleColorData DeepPink4 { get; } Property Value Type Description ConsoleColorData DeepPink4Alt [#87005f] Gets the console colors data for the DeepPink4Alt color Declaration public static ConsoleColorData DeepPink4Alt { get; } Property Value Type Description ConsoleColorData DeepPink4Alt2 [#af005f] Gets the console colors data for the DeepPink4Alt2 color Declaration public static ConsoleColorData DeepPink4Alt2 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue1 [#00afff] Gets the console colors data for the DeepSkyBlue1 color Declaration public static ConsoleColorData DeepSkyBlue1 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue2 [#00afd7] Gets the console colors data for the DeepSkyBlue2 color Declaration public static ConsoleColorData DeepSkyBlue2 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue3 [#0087af] Gets the console colors data for the DeepSkyBlue3 color Declaration public static ConsoleColorData DeepSkyBlue3 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue3Alt [#0087d7] Gets the console colors data for the DeepSkyBlue3Alt color Declaration public static ConsoleColorData DeepSkyBlue3Alt { get; } Property Value Type Description ConsoleColorData DeepSkyBlue4 [#005f5f] Gets the console colors data for the DeepSkyBlue4 color Declaration public static ConsoleColorData DeepSkyBlue4 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue4Alt [#005f87] Gets the console colors data for the DeepSkyBlue4Alt color Declaration public static ConsoleColorData DeepSkyBlue4Alt { get; } Property Value Type Description ConsoleColorData DeepSkyBlue4Alt2 [#005faf] Gets the console colors data for the DeepSkyBlue4Alt2 color Declaration public static ConsoleColorData DeepSkyBlue4Alt2 { get; } Property Value Type Description ConsoleColorData DodgerBlue1 [#0087ff] Gets the console colors data for the DodgerBlue1 color Declaration public static ConsoleColorData DodgerBlue1 { get; } Property Value Type Description ConsoleColorData DodgerBlue2 [#005fff] Gets the console colors data for the DodgerBlue2 color Declaration public static ConsoleColorData DodgerBlue2 { get; } Property Value Type Description ConsoleColorData DodgerBlue3 [#005fd7] Gets the console colors data for the DodgerBlue3 color Declaration public static ConsoleColorData DodgerBlue3 { get; } Property Value Type Description ConsoleColorData Fuchsia [#ff00ff] Gets the console colors data for the Fuchsia color Declaration public static ConsoleColorData Fuchsia { get; } Property Value Type Description ConsoleColorData Gold1 [#ffd700] Gets the console colors data for the Gold1 color Declaration public static ConsoleColorData Gold1 { get; } Property Value Type Description ConsoleColorData Gold3 [#afaf00] Gets the console colors data for the Gold3 color Declaration public static ConsoleColorData Gold3 { get; } Property Value Type Description ConsoleColorData Gold3Alt [#d7af00] Gets the console colors data for the Gold3Alt color Declaration public static ConsoleColorData Gold3Alt { get; } Property Value Type Description ConsoleColorData Green [#008000] Gets the console colors data for the Green color Declaration public static ConsoleColorData Green { get; } Property Value Type Description ConsoleColorData Green1 [#00ff00] Gets the console colors data for the Green1 color Declaration public static ConsoleColorData Green1 { get; } Property Value Type Description ConsoleColorData Green3 [#00af00] Gets the console colors data for the Green3 color Declaration public static ConsoleColorData Green3 { get; } Property Value Type Description ConsoleColorData Green3Alt [#00d700] Gets the console colors data for the Green3Alt color Declaration public static ConsoleColorData Green3Alt { get; } Property Value Type Description ConsoleColorData Green4 [#008700] Gets the console colors data for the Green4 color Declaration public static ConsoleColorData Green4 { get; } Property Value Type Description ConsoleColorData GreenYellow [#afff00] Gets the console colors data for the GreenYellow color Declaration public static ConsoleColorData GreenYellow { get; } Property Value Type Description ConsoleColorData Grey [#808080] Gets the console colors data for the Grey color Declaration public static ConsoleColorData Grey { get; } Property Value Type Description ConsoleColorData Grey0 [#000000] Gets the console colors data for the Grey0 color Declaration public static ConsoleColorData Grey0 { get; } Property Value Type Description ConsoleColorData Grey100 [#ffffff] Gets the console colors data for the Grey100 color Declaration public static ConsoleColorData Grey100 { get; } Property Value Type Description ConsoleColorData Grey11 [#1c1c1c] Gets the console colors data for the Grey11 color Declaration public static ConsoleColorData Grey11 { get; } Property Value Type Description ConsoleColorData Grey15 [#262626] Gets the console colors data for the Grey15 color Declaration public static ConsoleColorData Grey15 { get; } Property Value Type Description ConsoleColorData Grey19 [#303030] Gets the console colors data for the Grey19 color Declaration public static ConsoleColorData Grey19 { get; } Property Value Type Description ConsoleColorData Grey23 [#3a3a3a] Gets the console colors data for the Grey23 color Declaration public static ConsoleColorData Grey23 { get; } Property Value Type Description ConsoleColorData Grey27 [#444444] Gets the console colors data for the Grey27 color Declaration public static ConsoleColorData Grey27 { get; } Property Value Type Description ConsoleColorData Grey3 [#080808] Gets the console colors data for the Grey3 color Declaration public static ConsoleColorData Grey3 { get; } Property Value Type Description ConsoleColorData Grey30 [#4e4e4e] Gets the console colors data for the Grey30 color Declaration public static ConsoleColorData Grey30 { get; } Property Value Type Description ConsoleColorData Grey35 [#585858] Gets the console colors data for the Grey35 color Declaration public static ConsoleColorData Grey35 { get; } Property Value Type Description ConsoleColorData Grey37 [#5f5f5f] Gets the console colors data for the Grey37 color Declaration public static ConsoleColorData Grey37 { get; } Property Value Type Description ConsoleColorData Grey39 [#626262] Gets the console colors data for the Grey39 color Declaration public static ConsoleColorData Grey39 { get; } Property Value Type Description ConsoleColorData Grey42 [#6c6c6c] Gets the console colors data for the Grey42 color Declaration public static ConsoleColorData Grey42 { get; } Property Value Type Description ConsoleColorData Grey46 [#767676] Gets the console colors data for the Grey46 color Declaration public static ConsoleColorData Grey46 { get; } Property Value Type Description ConsoleColorData Grey50 [#808080] Gets the console colors data for the Grey50 color Declaration public static ConsoleColorData Grey50 { get; } Property Value Type Description ConsoleColorData Grey53 [#878787] Gets the console colors data for the Grey53 color Declaration public static ConsoleColorData Grey53 { get; } Property Value Type Description ConsoleColorData Grey54 [#8a8a8a] Gets the console colors data for the Grey54 color Declaration public static ConsoleColorData Grey54 { get; } Property Value Type Description ConsoleColorData Grey58 [#949494] Gets the console colors data for the Grey58 color Declaration public static ConsoleColorData Grey58 { get; } Property Value Type Description ConsoleColorData Grey62 [#9e9e9e] Gets the console colors data for the Grey62 color Declaration public static ConsoleColorData Grey62 { get; } Property Value Type Description ConsoleColorData Grey63 [#af87af] Gets the console colors data for the Grey63 color Declaration public static ConsoleColorData Grey63 { get; } Property Value Type Description ConsoleColorData Grey66 [#a8a8a8] Gets the console colors data for the Grey66 color Declaration public static ConsoleColorData Grey66 { get; } Property Value Type Description ConsoleColorData Grey69 [#afafaf] Gets the console colors data for the Grey69 color Declaration public static ConsoleColorData Grey69 { get; } Property Value Type Description ConsoleColorData Grey7 [#121212] Gets the console colors data for the Grey7 color Declaration public static ConsoleColorData Grey7 { get; } Property Value Type Description ConsoleColorData Grey70 [#b2b2b2] Gets the console colors data for the Grey70 color Declaration public static ConsoleColorData Grey70 { get; } Property Value Type Description ConsoleColorData Grey74 [#bcbcbc] Gets the console colors data for the Grey74 color Declaration public static ConsoleColorData Grey74 { get; } Property Value Type Description ConsoleColorData Grey78 [#c6c6c6] Gets the console colors data for the Grey78 color Declaration public static ConsoleColorData Grey78 { get; } Property Value Type Description ConsoleColorData Grey82 [#d0d0d0] Gets the console colors data for the Grey82 color Declaration public static ConsoleColorData Grey82 { get; } Property Value Type Description ConsoleColorData Grey84 [#d7d7d7] Gets the console colors data for the Grey84 color Declaration public static ConsoleColorData Grey84 { get; } Property Value Type Description ConsoleColorData Grey85 [#dadada] Gets the console colors data for the Grey85 color Declaration public static ConsoleColorData Grey85 { get; } Property Value Type Description ConsoleColorData Grey89 [#e4e4e4] Gets the console colors data for the Grey89 color Declaration public static ConsoleColorData Grey89 { get; } Property Value Type Description ConsoleColorData Grey93 [#eeeeee] Gets the console colors data for the Grey93 color Declaration public static ConsoleColorData Grey93 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source HexString Hexadecimal representation of the color Declaration [JsonIgnore] public string HexString { get; } Property Value Type Description string Honeydew2 [#d7ffd7] Gets the console colors data for the Honeydew2 color Declaration public static ConsoleColorData Honeydew2 { get; } Property Value Type Description ConsoleColorData HotPink [#ff5faf] Gets the console colors data for the HotPink color Declaration public static ConsoleColorData HotPink { get; } Property Value Type Description ConsoleColorData HotPink2 [#d75faf] Gets the console colors data for the HotPink2 color Declaration public static ConsoleColorData HotPink2 { get; } Property Value Type Description ConsoleColorData HotPink3 [#af5f87] Gets the console colors data for the HotPink3 color Declaration public static ConsoleColorData HotPink3 { get; } Property Value Type Description ConsoleColorData HotPink3Alt [#d75f87] Gets the console colors data for the HotPink3Alt color Declaration public static ConsoleColorData HotPink3Alt { get; } Property Value Type Description ConsoleColorData HotPinkAlt [#ff5fd7] Gets the console colors data for the HotPinkAlt color Declaration public static ConsoleColorData HotPinkAlt { get; } Property Value Type Description ConsoleColorData IndianRed [#af5f5f] Gets the console colors data for the IndianRed color Declaration public static ConsoleColorData IndianRed { get; } Property Value Type Description ConsoleColorData IndianRed1 [#ff5f5f] Gets the console colors data for the IndianRed1 color Declaration public static ConsoleColorData IndianRed1 { get; } Property Value Type Description ConsoleColorData IndianRed1Alt [#ff5f87] Gets the console colors data for the IndianRed1Alt color Declaration public static ConsoleColorData IndianRed1Alt { get; } Property Value Type Description ConsoleColorData IndianRedAlt [#d75f5f] Gets the console colors data for the IndianRedAlt color Declaration public static ConsoleColorData IndianRedAlt { get; } Property Value Type Description ConsoleColorData Khaki1 [#ffff87] Gets the console colors data for the Khaki1 color Declaration public static ConsoleColorData Khaki1 { get; } Property Value Type Description ConsoleColorData Khaki3 [#d7d75f] Gets the console colors data for the Khaki3 color Declaration public static ConsoleColorData Khaki3 { get; } Property Value Type Description ConsoleColorData LightCoral [#ff8787] Gets the console colors data for the LightCoral color Declaration public static ConsoleColorData LightCoral { get; } Property Value Type Description ConsoleColorData LightCyan1 [#d7ffff] Gets the console colors data for the LightCyan1 color Declaration public static ConsoleColorData LightCyan1 { get; } Property Value Type Description ConsoleColorData LightCyan3 [#afd7d7] Gets the console colors data for the LightCyan3 color Declaration public static ConsoleColorData LightCyan3 { get; } Property Value Type Description ConsoleColorData LightGoldenrod1 [#ffff5f] Gets the console colors data for the LightGoldenrod1 color Declaration public static ConsoleColorData LightGoldenrod1 { get; } Property Value Type Description ConsoleColorData LightGoldenrod2 [#d7d787] Gets the console colors data for the LightGoldenrod2 color Declaration public static ConsoleColorData LightGoldenrod2 { get; } Property Value Type Description ConsoleColorData LightGoldenrod2Alt [#ffd75f] Gets the console colors data for the LightGoldenrod2Alt color Declaration public static ConsoleColorData LightGoldenrod2Alt { get; } Property Value Type Description ConsoleColorData LightGoldenrod2Alt2 [#ffd787] Gets the console colors data for the LightGoldenrod2Alt2 color Declaration public static ConsoleColorData LightGoldenrod2Alt2 { get; } Property Value Type Description ConsoleColorData LightGoldenrod3 [#d7af5f] Gets the console colors data for the LightGoldenrod3 color Declaration public static ConsoleColorData LightGoldenrod3 { get; } Property Value Type Description ConsoleColorData LightGreen [#87ff5f] Gets the console colors data for the LightGreen color Declaration public static ConsoleColorData LightGreen { get; } Property Value Type Description ConsoleColorData LightGreenAlt [#87ff87] Gets the console colors data for the LightGreenAlt color Declaration public static ConsoleColorData LightGreenAlt { get; } Property Value Type Description ConsoleColorData LightPink1 [#ffafaf] Gets the console colors data for the LightPink1 color Declaration public static ConsoleColorData LightPink1 { get; } Property Value Type Description ConsoleColorData LightPink3 [#d78787] Gets the console colors data for the LightPink3 color Declaration public static ConsoleColorData LightPink3 { get; } Property Value Type Description ConsoleColorData LightPink4 [#875f5f] Gets the console colors data for the LightPink4 color Declaration public static ConsoleColorData LightPink4 { get; } Property Value Type Description ConsoleColorData LightSalmon1 [#ffaf87] Gets the console colors data for the LightSalmon1 color Declaration public static ConsoleColorData LightSalmon1 { get; } Property Value Type Description ConsoleColorData LightSalmon3 [#af875f] Gets the console colors data for the LightSalmon3 color Declaration public static ConsoleColorData LightSalmon3 { get; } Property Value Type Description ConsoleColorData LightSalmon3Alt [#d7875f] Gets the console colors data for the LightSalmon3Alt color Declaration public static ConsoleColorData LightSalmon3Alt { get; } Property Value Type Description ConsoleColorData LightSeaGreen [#00afaf] Gets the console colors data for the LightSeaGreen color Declaration public static ConsoleColorData LightSeaGreen { get; } Property Value Type Description ConsoleColorData LightSkyBlue1 [#afd7ff] Gets the console colors data for the LightSkyBlue1 color Declaration public static ConsoleColorData LightSkyBlue1 { get; } Property Value Type Description ConsoleColorData LightSkyBlue3 [#87afaf] Gets the console colors data for the LightSkyBlue3 color Declaration public static ConsoleColorData LightSkyBlue3 { get; } Property Value Type Description ConsoleColorData LightSkyBlue3Alt [#87afd7] Gets the console colors data for the LightSkyBlue3Alt color Declaration public static ConsoleColorData LightSkyBlue3Alt { get; } Property Value Type Description ConsoleColorData LightSlateBlue [#8787ff] Gets the console colors data for the LightSlateBlue color Declaration public static ConsoleColorData LightSlateBlue { get; } Property Value Type Description ConsoleColorData LightSlateGrey [#8787af] Gets the console colors data for the LightSlateGrey color Declaration public static ConsoleColorData LightSlateGrey { get; } Property Value Type Description ConsoleColorData LightSteelBlue [#afafff] Gets the console colors data for the LightSteelBlue color Declaration public static ConsoleColorData LightSteelBlue { get; } Property Value Type Description ConsoleColorData LightSteelBlue1 [#d7d7ff] Gets the console colors data for the LightSteelBlue1 color Declaration public static ConsoleColorData LightSteelBlue1 { get; } Property Value Type Description ConsoleColorData LightSteelBlue3 [#afafd7] Gets the console colors data for the LightSteelBlue3 color Declaration public static ConsoleColorData LightSteelBlue3 { get; } Property Value Type Description ConsoleColorData LightYellow3 [#d7d7af] Gets the console colors data for the LightYellow3 color Declaration public static ConsoleColorData LightYellow3 { get; } Property Value Type Description ConsoleColorData Lime [#00ff00] Gets the console colors data for the Lime color Declaration public static ConsoleColorData Lime { get; } Property Value Type Description ConsoleColorData Magenta1 [#ff00ff] Gets the console colors data for the Magenta1 color Declaration public static ConsoleColorData Magenta1 { get; } Property Value Type Description ConsoleColorData Magenta2 [#d700ff] Gets the console colors data for the Magenta2 color Declaration public static ConsoleColorData Magenta2 { get; } Property Value Type Description ConsoleColorData Magenta2Alt [#ff00d7] Gets the console colors data for the Magenta2Alt color Declaration public static ConsoleColorData Magenta2Alt { get; } Property Value Type Description ConsoleColorData Magenta3 [#af00af] Gets the console colors data for the Magenta3 color Declaration public static ConsoleColorData Magenta3 { get; } Property Value Type Description ConsoleColorData Magenta3Alt [#d700af] Gets the console colors data for the Magenta3Alt color Declaration public static ConsoleColorData Magenta3Alt { get; } Property Value Type Description ConsoleColorData Magenta3Alt2 [#d700d7] Gets the console colors data for the Magenta3Alt2 color Declaration public static ConsoleColorData Magenta3Alt2 { get; } Property Value Type Description ConsoleColorData Maroon [#800000] Gets the console colors data for the Maroon color Declaration public static ConsoleColorData Maroon { get; } Property Value Type Description ConsoleColorData MediumOrchid [#af5fd7] Gets the console colors data for the MediumOrchid color Declaration public static ConsoleColorData MediumOrchid { get; } Property Value Type Description ConsoleColorData MediumOrchid1 [#d75fff] Gets the console colors data for the MediumOrchid1 color Declaration public static ConsoleColorData MediumOrchid1 { get; } Property Value Type Description ConsoleColorData MediumOrchid1Alt [#ff5fff] Gets the console colors data for the MediumOrchid1Alt color Declaration public static ConsoleColorData MediumOrchid1Alt { get; } Property Value Type Description ConsoleColorData MediumOrchid3 [#af5faf] Gets the console colors data for the MediumOrchid3 color Declaration public static ConsoleColorData MediumOrchid3 { get; } Property Value Type Description ConsoleColorData MediumPurple [#8787d7] Gets the console colors data for the MediumPurple color Declaration public static ConsoleColorData MediumPurple { get; } Property Value Type Description ConsoleColorData MediumPurple1 [#af87ff] Gets the console colors data for the MediumPurple1 color Declaration public static ConsoleColorData MediumPurple1 { get; } Property Value Type Description ConsoleColorData MediumPurple2 [#af5fff] Gets the console colors data for the MediumPurple2 color Declaration public static ConsoleColorData MediumPurple2 { get; } Property Value Type Description ConsoleColorData MediumPurple2Alt [#af87d7] Gets the console colors data for the MediumPurple2Alt color Declaration public static ConsoleColorData MediumPurple2Alt { get; } Property Value Type Description ConsoleColorData MediumPurple3 [#875faf] Gets the console colors data for the MediumPurple3 color Declaration public static ConsoleColorData MediumPurple3 { get; } Property Value Type Description ConsoleColorData MediumPurple3Alt [#875fd7] Gets the console colors data for the MediumPurple3Alt color Declaration public static ConsoleColorData MediumPurple3Alt { get; } Property Value Type Description ConsoleColorData MediumPurple4 [#5f5f87] Gets the console colors data for the MediumPurple4 color Declaration public static ConsoleColorData MediumPurple4 { get; } Property Value Type Description ConsoleColorData MediumSpringGreen [#00ffaf] Gets the console colors data for the MediumSpringGreen color Declaration public static ConsoleColorData MediumSpringGreen { get; } Property Value Type Description ConsoleColorData MediumTurquoise [#5fd7d7] Gets the console colors data for the MediumTurquoise color Declaration public static ConsoleColorData MediumTurquoise { get; } Property Value Type Description ConsoleColorData MediumVioletRed [#af0087] Gets the console colors data for the MediumVioletRed color Declaration public static ConsoleColorData MediumVioletRed { get; } Property Value Type Description ConsoleColorData MistyRose1 [#ffd7d7] Gets the console colors data for the MistyRose1 color Declaration public static ConsoleColorData MistyRose1 { get; } Property Value Type Description ConsoleColorData MistyRose3 [#d7afaf] Gets the console colors data for the MistyRose3 color Declaration public static ConsoleColorData MistyRose3 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source Name The color name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string NavajoWhite1 [#ffd7af] Gets the console colors data for the NavajoWhite1 color Declaration public static ConsoleColorData NavajoWhite1 { get; } Property Value Type Description ConsoleColorData NavajoWhite3 [#afaf87] Gets the console colors data for the NavajoWhite3 color Declaration public static ConsoleColorData NavajoWhite3 { get; } Property Value Type Description ConsoleColorData Navy [#000080] Gets the console colors data for the Navy color Declaration public static ConsoleColorData Navy { get; } Property Value Type Description ConsoleColorData NavyBlue [#00005f] Gets the console colors data for the NavyBlue color Declaration public static ConsoleColorData NavyBlue { get; } Property Value Type Description ConsoleColorData Olive [#808000] Gets the console colors data for the Olive color Declaration public static ConsoleColorData Olive { get; } Property Value Type Description ConsoleColorData Orange1 [#ffaf00] Gets the console colors data for the Orange1 color Declaration public static ConsoleColorData Orange1 { get; } Property Value Type Description ConsoleColorData Orange3 [#d78700] Gets the console colors data for the Orange3 color Declaration public static ConsoleColorData Orange3 { get; } Property Value Type Description ConsoleColorData Orange4 [#5f5f00] Gets the console colors data for the Orange4 color Declaration public static ConsoleColorData Orange4 { get; } Property Value Type Description ConsoleColorData Orange4Alt [#875f00] Gets the console colors data for the Orange4Alt color Declaration public static ConsoleColorData Orange4Alt { get; } Property Value Type Description ConsoleColorData OrangeRed1 [#ff5f00] Gets the console colors data for the OrangeRed1 color Declaration public static ConsoleColorData OrangeRed1 { get; } Property Value Type Description ConsoleColorData Orchid [#d75fd7] Gets the console colors data for the Orchid color Declaration public static ConsoleColorData Orchid { get; } Property Value Type Description ConsoleColorData Orchid1 [#ff87ff] Gets the console colors data for the Orchid1 color Declaration public static ConsoleColorData Orchid1 { get; } Property Value Type Description ConsoleColorData Orchid2 [#ff87d7] Gets the console colors data for the Orchid2 color Declaration public static ConsoleColorData Orchid2 { get; } Property Value Type Description ConsoleColorData PaleGreen1 [#87ffaf] Gets the console colors data for the PaleGreen1 color Declaration public static ConsoleColorData PaleGreen1 { get; } Property Value Type Description ConsoleColorData PaleGreen1Alt [#afff87] Gets the console colors data for the PaleGreen1Alt color Declaration public static ConsoleColorData PaleGreen1Alt { get; } Property Value Type Description ConsoleColorData PaleGreen3 [#5fd75f] Gets the console colors data for the PaleGreen3 color Declaration public static ConsoleColorData PaleGreen3 { get; } Property Value Type Description ConsoleColorData PaleGreen3Alt [#87d787] Gets the console colors data for the PaleGreen3Alt color Declaration public static ConsoleColorData PaleGreen3Alt { get; } Property Value Type Description ConsoleColorData PaleTurquoise1 [#afffff] Gets the console colors data for the PaleTurquoise1 color Declaration public static ConsoleColorData PaleTurquoise1 { get; } Property Value Type Description ConsoleColorData PaleTurquoise4 [#5f8787] Gets the console colors data for the PaleTurquoise4 color Declaration public static ConsoleColorData PaleTurquoise4 { get; } Property Value Type Description ConsoleColorData PaleVioletRed1 [#ff87af] Gets the console colors data for the PaleVioletRed1 color Declaration public static ConsoleColorData PaleVioletRed1 { get; } Property Value Type Description ConsoleColorData Pink1 [#ffafd7] Gets the console colors data for the Pink1 color Declaration public static ConsoleColorData Pink1 { get; } Property Value Type Description ConsoleColorData Pink3 [#d787af] Gets the console colors data for the Pink3 color Declaration public static ConsoleColorData Pink3 { get; } Property Value Type Description ConsoleColorData Plum1 [#ffafff] Gets the console colors data for the Plum1 color Declaration public static ConsoleColorData Plum1 { get; } Property Value Type Description ConsoleColorData Plum2 [#d7afff] Gets the console colors data for the Plum2 color Declaration public static ConsoleColorData Plum2 { get; } Property Value Type Description ConsoleColorData Plum3 [#d787d7] Gets the console colors data for the Plum3 color Declaration public static ConsoleColorData Plum3 { get; } Property Value Type Description ConsoleColorData Plum4 [#875f87] Gets the console colors data for the Plum4 color Declaration public static ConsoleColorData Plum4 { get; } Property Value Type Description ConsoleColorData Purple [#800080] Gets the console colors data for the Purple color Declaration public static ConsoleColorData Purple { get; } Property Value Type Description ConsoleColorData Purple3 [#5f00d7] Gets the console colors data for the Purple3 color Declaration public static ConsoleColorData Purple3 { get; } Property Value Type Description ConsoleColorData Purple4 [#5f0087] Gets the console colors data for the Purple4 color Declaration public static ConsoleColorData Purple4 { get; } Property Value Type Description ConsoleColorData Purple4Alt [#5f00af] Gets the console colors data for the Purple4Alt color Declaration public static ConsoleColorData Purple4Alt { get; } Property Value Type Description ConsoleColorData PurpleAlt [#8700ff] Gets the console colors data for the PurpleAlt color Declaration public static ConsoleColorData PurpleAlt { get; } Property Value Type Description ConsoleColorData PurpleAlt2 [#af00ff] Gets the console colors data for the PurpleAlt2 color Declaration public static ConsoleColorData PurpleAlt2 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source RGB The RGB values Declaration [JsonIgnore] public RedGreenBlue RGB { get; } Property Value Type Description RedGreenBlue Red [#ff0000] Gets the console colors data for the Red color Declaration public static ConsoleColorData Red { get; } Property Value Type Description ConsoleColorData Red1 [#ff0000] Gets the console colors data for the Red1 color Declaration public static ConsoleColorData Red1 { get; } Property Value Type Description ConsoleColorData Red3 [#af0000] Gets the console colors data for the Red3 color Declaration public static ConsoleColorData Red3 { get; } Property Value Type Description ConsoleColorData Red3Alt [#d70000] Gets the console colors data for the Red3Alt color Declaration public static ConsoleColorData Red3Alt { get; } Property Value Type Description ConsoleColorData RosyBrown [#af8787] Gets the console colors data for the RosyBrown color Declaration public static ConsoleColorData RosyBrown { get; } Property Value Type Description ConsoleColorData RoyalBlue1 [#5f5fff] Gets the console colors data for the RoyalBlue1 color Declaration public static ConsoleColorData RoyalBlue1 { get; } Property Value Type Description ConsoleColorData Salmon1 [#ff875f] Gets the console colors data for the Salmon1 color Declaration public static ConsoleColorData Salmon1 { get; } Property Value Type Description ConsoleColorData SandyBrown [#ffaf5f] Gets the console colors data for the SandyBrown color Declaration public static ConsoleColorData SandyBrown { get; } Property Value Type Description ConsoleColorData SeaGreen1 [#5fff87] Gets the console colors data for the SeaGreen1 color Declaration public static ConsoleColorData SeaGreen1 { get; } Property Value Type Description ConsoleColorData SeaGreen1Alt [#5fffaf] Gets the console colors data for the SeaGreen1Alt color Declaration public static ConsoleColorData SeaGreen1Alt { get; } Property Value Type Description ConsoleColorData SeaGreen2 [#5fff5f] Gets the console colors data for the SeaGreen2 color Declaration public static ConsoleColorData SeaGreen2 { get; } Property Value Type Description ConsoleColorData SeaGreen3 [#5fd787] Gets the console colors data for the SeaGreen3 color Declaration public static ConsoleColorData SeaGreen3 { get; } Property Value Type Description ConsoleColorData Silver [#c0c0c0] Gets the console colors data for the Silver color Declaration public static ConsoleColorData Silver { get; } Property Value Type Description ConsoleColorData SkyBlue1 [#87d7ff] Gets the console colors data for the SkyBlue1 color Declaration public static ConsoleColorData SkyBlue1 { get; } Property Value Type Description ConsoleColorData SkyBlue2 [#87afff] Gets the console colors data for the SkyBlue2 color Declaration public static ConsoleColorData SkyBlue2 { get; } Property Value Type Description ConsoleColorData SkyBlue3 [#5fafd7] Gets the console colors data for the SkyBlue3 color Declaration public static ConsoleColorData SkyBlue3 { get; } Property Value Type Description ConsoleColorData SlateBlue1 [#875fff] Gets the console colors data for the SlateBlue1 color Declaration public static ConsoleColorData SlateBlue1 { get; } Property Value Type Description ConsoleColorData SlateBlue3 [#5f5faf] Gets the console colors data for the SlateBlue3 color Declaration public static ConsoleColorData SlateBlue3 { get; } Property Value Type Description ConsoleColorData SlateBlue3Alt [#5f5fd7] Gets the console colors data for the SlateBlue3Alt color Declaration public static ConsoleColorData SlateBlue3Alt { get; } Property Value Type Description ConsoleColorData SpringGreen1 [#00ff87] Gets the console colors data for the SpringGreen1 color Declaration public static ConsoleColorData SpringGreen1 { get; } Property Value Type Description ConsoleColorData SpringGreen2 [#00d787] Gets the console colors data for the SpringGreen2 color Declaration public static ConsoleColorData SpringGreen2 { get; } Property Value Type Description ConsoleColorData SpringGreen2Alt [#00ff5f] Gets the console colors data for the SpringGreen2Alt color Declaration public static ConsoleColorData SpringGreen2Alt { get; } Property Value Type Description ConsoleColorData SpringGreen3 [#00af5f] Gets the console colors data for the SpringGreen3 color Declaration public static ConsoleColorData SpringGreen3 { get; } Property Value Type Description ConsoleColorData SpringGreen3Alt [#00d75f] Gets the console colors data for the SpringGreen3Alt color Declaration public static ConsoleColorData SpringGreen3Alt { get; } Property Value Type Description ConsoleColorData SpringGreen4 [#00875f] Gets the console colors data for the SpringGreen4 color Declaration public static ConsoleColorData SpringGreen4 { get; } Property Value Type Description ConsoleColorData SteelBlue [#5f87af] Gets the console colors data for the SteelBlue color Declaration public static ConsoleColorData SteelBlue { get; } Property Value Type Description ConsoleColorData SteelBlue1 [#5fafff] Gets the console colors data for the SteelBlue1 color Declaration public static ConsoleColorData SteelBlue1 { get; } Property Value Type Description ConsoleColorData SteelBlue1Alt [#5fd7ff] Gets the console colors data for the SteelBlue1Alt color Declaration public static ConsoleColorData SteelBlue1Alt { get; } Property Value Type Description ConsoleColorData SteelBlue3 [#5f87d7] Gets the console colors data for the SteelBlue3 color Declaration public static ConsoleColorData SteelBlue3 { get; } Property Value Type Description ConsoleColorData Tan [#d7af87] Gets the console colors data for the Tan color Declaration public static ConsoleColorData Tan { get; } Property Value Type Description ConsoleColorData Teal [#008080] Gets the console colors data for the Teal color Declaration public static ConsoleColorData Teal { get; } Property Value Type Description ConsoleColorData Thistle1 [#ffd7ff] Gets the console colors data for the Thistle1 color Declaration public static ConsoleColorData Thistle1 { get; } Property Value Type Description ConsoleColorData Thistle3 [#d7afd7] Gets the console colors data for the Thistle3 color Declaration public static ConsoleColorData Thistle3 { get; } Property Value Type Description ConsoleColorData Turquoise2 [#00d7ff] Gets the console colors data for the Turquoise2 color Declaration public static ConsoleColorData Turquoise2 { get; } Property Value Type Description ConsoleColorData Turquoise4 [#008787] Gets the console colors data for the Turquoise4 color Declaration public static ConsoleColorData Turquoise4 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source Vector Gets the three-dimension vector values from RGB color Declaration [JsonIgnore] public Vector3 Vector { get; } Property Value Type Description Vector3 Violet [#d787ff] Gets the console colors data for the Violet color Declaration public static ConsoleColorData Violet { get; } Property Value Type Description ConsoleColorData Wheat1 [#ffffaf] Gets the console colors data for the Wheat1 color Declaration public static ConsoleColorData Wheat1 { get; } Property Value Type Description ConsoleColorData Wheat4 [#87875f] Gets the console colors data for the Wheat4 color Declaration public static ConsoleColorData Wheat4 { get; } Property Value Type Description ConsoleColorData White [#ffffff] Gets the console colors data for the White color Declaration public static ConsoleColorData White { get; } Property Value Type Description ConsoleColorData Yellow [#ffff00] Gets the console colors data for the Yellow color Declaration public static ConsoleColorData Yellow { get; } Property Value Type Description ConsoleColorData Yellow1 [#ffff00] Gets the console colors data for the Yellow1 color Declaration public static ConsoleColorData Yellow1 { get; } Property Value Type Description ConsoleColorData Yellow2 [#d7ff00] Gets the console colors data for the Yellow2 color Declaration public static ConsoleColorData Yellow2 { get; } Property Value Type Description ConsoleColorData Yellow3 [#afd700] Gets the console colors data for the Yellow3 color Declaration public static ConsoleColorData Yellow3 { get; } Property Value Type Description ConsoleColorData Yellow3Alt [#d7d700] Gets the console colors data for the Yellow3Alt color Declaration public static ConsoleColorData Yellow3Alt { get; } Property Value Type Description ConsoleColorData Yellow4 [#878700] Gets the console colors data for the Yellow4 color Declaration public static ConsoleColorData Yellow4 { get; } Property Value Type Description ConsoleColorData Yellow4Alt [#87af00] Gets the console colors data for the Yellow4Alt color Declaration public static ConsoleColorData Yellow4Alt { get; } Property Value Type Description ConsoleColorData Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(ConsoleColorData) Declaration public bool Equals(ConsoleColorData other) Parameters Type Name Description ConsoleColorData other Returns Type Description bool | Edit this page View Source GetColorData() Gets the console colors data Declaration public static ConsoleColorData[] GetColorData() Returns Type Description ConsoleColorData[] | Edit this page View Source GetColorData(ConsoleColors) Gets the console color data Declaration public static ConsoleColorData GetColorData(ConsoleColors colors) Parameters Type Name Description ConsoleColors colors Console color to get the data from Returns Type Description ConsoleColorData A console color data instance | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source GetNearestColor(int, int, int) Gets the nearest color from the built-in X11 color palette Declaration public static ConsoleColorData GetNearestColor(int r, int g, int b) Parameters Type Name Description int r Red color value int g Green color value int b Blue color value Returns Type Description ConsoleColorData The nearest color for the indicated color, or null if it doesn't exist | Edit this page View Source GetNearestColor(Color) Gets the nearest color from the built-in X11 color palette Declaration public static ConsoleColorData GetNearestColor(Color color) Parameters Type Name Description Color color True color instance Returns Type Description ConsoleColorData The nearest color for the indicated color, or null if it doesn't exist | Edit this page View Source GetNearestColor(RedGreenBlue) Gets the nearest color from the built-in X11 color palette Declaration public static ConsoleColorData GetNearestColor(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb RGB instance Returns Type Description ConsoleColorData The nearest color for the indicated color, or null if it doesn't exist | Edit this page View Source GetOrderCode() Gets the RGB order code Declaration public int GetOrderCode() Returns Type Description int RGB order code in decimal RRRGGGBBB format | Edit this page View Source MatchColorData(int, int, int) Gets a color data instance that matches the available color instances Declaration public static ConsoleColorData MatchColorData(int r, int g, int b) Parameters Type Name Description int r Red color level to match int g Green color level to match int b Blue color level to match Returns Type Description ConsoleColorData Either an instance of ConsoleColorData if found, or null if not found | Edit this page View Source MatchColorData(Color) Gets a color data instance that matches the available color instances Declaration public static ConsoleColorData MatchColorData(Color color) Parameters Type Name Description Color color Color to match Returns Type Description ConsoleColorData Either an instance of ConsoleColorData if found, or null if not found | Edit this page View Source MatchColorData(RedGreenBlue) Gets a color data instance that matches the available color instances Declaration public static ConsoleColorData MatchColorData(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Color to match Returns Type Description ConsoleColorData Either an instance of ConsoleColorData if found, or null if not found | Edit this page View Source OrderColorData(bool) Orders color data instances by their RGB code Declaration public static ConsoleColorData[] OrderColorData(bool descending = false) Parameters Type Name Description bool descending Descending order Returns Type Description ConsoleColorData[] An array of ConsoleColorData ordered by ascending or descending RGB code that can be get by GetOrderCode() Operators | Edit this page View Source operator ==(ConsoleColorData?, ConsoleColorData?) Declaration public static bool operator ==(ConsoleColorData? left, ConsoleColorData? right) Parameters Type Name Description ConsoleColorData left ConsoleColorData right Returns Type Description bool | Edit this page View Source operator !=(ConsoleColorData?, ConsoleColorData?) Declaration public static bool operator !=(ConsoleColorData? left, ConsoleColorData? right) Parameters Type Name Description ConsoleColorData left ConsoleColorData right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Data.ConsoleColorDataSerializer.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorDataSerializer.html",
    "title": "Class ConsoleColorDataSerializer | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorDataSerializer Console color data serializer Inheritance object JsonConverter ConsoleColorDataSerializer Inherited Members JsonConverter.CanRead JsonConverter.CanWrite Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorDataSerializer : JsonConverter Methods | Edit this page View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description bool true if this instance can convert the specified object type; otherwise, false. Overrides JsonConverter.CanConvert(Type) | Edit this page View Source ReadJson(JsonReader, Type, object?, JsonSerializer) Reads the JSON representation of the object. Declaration public override object? ReadJson(JsonReader reader, Type objectType, object? existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. object existingValue The existing value of object being read. JsonSerializer serializer The calling serializer. Returns Type Description object The object value. Overrides JsonConverter.ReadJson(JsonReader, Type, object, JsonSerializer) | Edit this page View Source WriteJson(JsonWriter, object?, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. object value The value. JsonSerializer serializer The calling serializer. Overrides JsonConverter.WriteJson(JsonWriter, object, JsonSerializer)"
  },
  "api/Terminaux.Colors.Data.ConsoleColors.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColors.html",
    "title": "Enum ConsoleColors | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleColors All 255 console colors Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public enum ConsoleColors Fields Name Description Aqua [#00ffff] Represents the Aqua color with the RGB value of 0;255;255 Aquamarine1 [#5fffd7] Represents the Aquamarine1 color with the RGB value of 95;255;215 Aquamarine1Alt [#87ffd7] Represents the Aquamarine1Alt color with the RGB value of 135;255;215 Aquamarine3 [#5fd7af] Represents the Aquamarine3 color with the RGB value of 95;215;175 Black [#000000] Represents the Black color with the RGB value of 0;0;0 Blue [#0000ff] Represents the Blue color with the RGB value of 0;0;255 Blue1 [#0000ff] Represents the Blue1 color with the RGB value of 0;0;255 Blue3 [#0000af] Represents the Blue3 color with the RGB value of 0;0;175 Blue3Alt [#0000d7] Represents the Blue3Alt color with the RGB value of 0;0;215 BlueViolet [#5f00ff] Represents the BlueViolet color with the RGB value of 95;0;255 CadetBlue [#5faf87] Represents the CadetBlue color with the RGB value of 95;175;135 CadetBlueAlt [#5fafaf] Represents the CadetBlueAlt color with the RGB value of 95;175;175 Chartreuse1 [#87ff00] Represents the Chartreuse1 color with the RGB value of 135;255;0 Chartreuse2 [#5fff00] Represents the Chartreuse2 color with the RGB value of 95;255;0 Chartreuse2Alt [#87d700] Represents the Chartreuse2Alt color with the RGB value of 135;215;0 Chartreuse3 [#5faf00] Represents the Chartreuse3 color with the RGB value of 95;175;0 Chartreuse3Alt [#5fd700] Represents the Chartreuse3Alt color with the RGB value of 95;215;0 Chartreuse4 [#5f8700] Represents the Chartreuse4 color with the RGB value of 95;135;0 CornflowerBlue [#5f87ff] Represents the CornflowerBlue color with the RGB value of 95;135;255 Cornsilk1 [#ffffd7] Represents the Cornsilk1 color with the RGB value of 255;255;215 Cyan1 [#00ffff] Represents the Cyan1 color with the RGB value of 0;255;255 Cyan2 [#00ffd7] Represents the Cyan2 color with the RGB value of 0;255;215 Cyan3 [#00d7af] Represents the Cyan3 color with the RGB value of 0;215;175 DarkBlue [#000087] Represents the DarkBlue color with the RGB value of 0;0;135 DarkCyan [#00af87] Represents the DarkCyan color with the RGB value of 0;175;135 DarkGoldenrod [#af8700] Represents the DarkGoldenrod color with the RGB value of 175;135;0 DarkGreen [#005f00] Represents the DarkGreen color with the RGB value of 0;95;0 DarkKhaki [#afaf5f] Represents the DarkKhaki color with the RGB value of 175;175;95 DarkMagenta [#870087] Represents the DarkMagenta color with the RGB value of 135;0;135 DarkMagentaAlt [#8700af] Represents the DarkMagentaAlt color with the RGB value of 135;0;175 DarkOliveGreen1 [#d7ff5f] Represents the DarkOliveGreen1 color with the RGB value of 215;255;95 DarkOliveGreen1Alt [#d7ff87] Represents the DarkOliveGreen1Alt color with the RGB value of 215;255;135 DarkOliveGreen2 [#afff5f] Represents the DarkOliveGreen2 color with the RGB value of 175;255;95 DarkOliveGreen3 [#87af5f] Represents the DarkOliveGreen3 color with the RGB value of 135;175;95 DarkOliveGreen3Alt [#87d75f] Represents the DarkOliveGreen3Alt color with the RGB value of 135;215;95 DarkOliveGreen3Alt2 [#afd75f] Represents the DarkOliveGreen3Alt2 color with the RGB value of 175;215;95 DarkOrange [#ff8700] Represents the DarkOrange color with the RGB value of 255;135;0 DarkOrange3 [#af5f00] Represents the DarkOrange3 color with the RGB value of 175;95;0 DarkOrange3Alt [#d75f00] Represents the DarkOrange3Alt color with the RGB value of 215;95;0 DarkRed [#5f0000] Represents the DarkRed color with the RGB value of 95;0;0 DarkRedAlt [#870000] Represents the DarkRedAlt color with the RGB value of 135;0;0 DarkSeaGreen [#87af87] Represents the DarkSeaGreen color with the RGB value of 135;175;135 DarkSeaGreen1 [#afffd7] Represents the DarkSeaGreen1 color with the RGB value of 175;255;215 DarkSeaGreen1Alt [#d7ffaf] Represents the DarkSeaGreen1Alt color with the RGB value of 215;255;175 DarkSeaGreen2 [#afd7af] Represents the DarkSeaGreen2 color with the RGB value of 175;215;175 DarkSeaGreen2Alt [#afffaf] Represents the DarkSeaGreen2Alt color with the RGB value of 175;255;175 DarkSeaGreen3 [#87d7af] Represents the DarkSeaGreen3 color with the RGB value of 135;215;175 DarkSeaGreen3Alt [#afd787] Represents the DarkSeaGreen3Alt color with the RGB value of 175;215;135 DarkSeaGreen4 [#5f875f] Represents the DarkSeaGreen4 color with the RGB value of 95;135;95 DarkSeaGreen4Alt [#5faf5f] Represents the DarkSeaGreen4Alt color with the RGB value of 95;175;95 DarkSlateGray1 [#87ffff] Represents the DarkSlateGray1 color with the RGB value of 135;255;255 DarkSlateGray2 [#5fffff] Represents the DarkSlateGray2 color with the RGB value of 95;255;255 DarkSlateGray3 [#87d7d7] Represents the DarkSlateGray3 color with the RGB value of 135;215;215 DarkTurquoise [#00d7d7] Represents the DarkTurquoise color with the RGB value of 0;215;215 DarkViolet [#8700d7] Represents the DarkViolet color with the RGB value of 135;0;215 DarkVioletAlt [#af00d7] Represents the DarkVioletAlt color with the RGB value of 175;0;215 DeepPink1 [#ff0087] Represents the DeepPink1 color with the RGB value of 255;0;135 DeepPink1Alt [#ff00af] Represents the DeepPink1Alt color with the RGB value of 255;0;175 DeepPink2 [#ff005f] Represents the DeepPink2 color with the RGB value of 255;0;95 DeepPink3 [#d7005f] Represents the DeepPink3 color with the RGB value of 215;0;95 DeepPink3Alt [#d70087] Represents the DeepPink3Alt color with the RGB value of 215;0;135 DeepPink4 [#5f005f] Represents the DeepPink4 color with the RGB value of 95;0;95 DeepPink4Alt [#87005f] Represents the DeepPink4Alt color with the RGB value of 135;0;95 DeepPink4Alt2 [#af005f] Represents the DeepPink4Alt2 color with the RGB value of 175;0;95 DeepSkyBlue1 [#00afff] Represents the DeepSkyBlue1 color with the RGB value of 0;175;255 DeepSkyBlue2 [#00afd7] Represents the DeepSkyBlue2 color with the RGB value of 0;175;215 DeepSkyBlue3 [#0087af] Represents the DeepSkyBlue3 color with the RGB value of 0;135;175 DeepSkyBlue3Alt [#0087d7] Represents the DeepSkyBlue3Alt color with the RGB value of 0;135;215 DeepSkyBlue4 [#005f5f] Represents the DeepSkyBlue4 color with the RGB value of 0;95;95 DeepSkyBlue4Alt [#005f87] Represents the DeepSkyBlue4Alt color with the RGB value of 0;95;135 DeepSkyBlue4Alt2 [#005faf] Represents the DeepSkyBlue4Alt2 color with the RGB value of 0;95;175 DodgerBlue1 [#0087ff] Represents the DodgerBlue1 color with the RGB value of 0;135;255 DodgerBlue2 [#005fff] Represents the DodgerBlue2 color with the RGB value of 0;95;255 DodgerBlue3 [#005fd7] Represents the DodgerBlue3 color with the RGB value of 0;95;215 Fuchsia [#ff00ff] Represents the Fuchsia color with the RGB value of 255;0;255 Gold1 [#ffd700] Represents the Gold1 color with the RGB value of 255;215;0 Gold3 [#afaf00] Represents the Gold3 color with the RGB value of 175;175;0 Gold3Alt [#d7af00] Represents the Gold3Alt color with the RGB value of 215;175;0 Green [#008000] Represents the Green color with the RGB value of 0;128;0 Green1 [#00ff00] Represents the Green1 color with the RGB value of 0;255;0 Green3 [#00af00] Represents the Green3 color with the RGB value of 0;175;0 Green3Alt [#00d700] Represents the Green3Alt color with the RGB value of 0;215;0 Green4 [#008700] Represents the Green4 color with the RGB value of 0;135;0 GreenYellow [#afff00] Represents the GreenYellow color with the RGB value of 175;255;0 Grey [#808080] Represents the Grey color with the RGB value of 128;128;128 Grey0 [#000000] Represents the Grey0 color with the RGB value of 0;0;0 Grey100 [#ffffff] Represents the Grey100 color with the RGB value of 255;255;255 Grey11 [#1c1c1c] Represents the Grey11 color with the RGB value of 28;28;28 Grey15 [#262626] Represents the Grey15 color with the RGB value of 38;38;38 Grey19 [#303030] Represents the Grey19 color with the RGB value of 48;48;48 Grey23 [#3a3a3a] Represents the Grey23 color with the RGB value of 58;58;58 Grey27 [#444444] Represents the Grey27 color with the RGB value of 68;68;68 Grey3 [#080808] Represents the Grey3 color with the RGB value of 8;8;8 Grey30 [#4e4e4e] Represents the Grey30 color with the RGB value of 78;78;78 Grey35 [#585858] Represents the Grey35 color with the RGB value of 88;88;88 Grey37 [#5f5f5f] Represents the Grey37 color with the RGB value of 95;95;95 Grey39 [#626262] Represents the Grey39 color with the RGB value of 98;98;98 Grey42 [#6c6c6c] Represents the Grey42 color with the RGB value of 108;108;108 Grey46 [#767676] Represents the Grey46 color with the RGB value of 118;118;118 Grey50 [#808080] Represents the Grey50 color with the RGB value of 128;128;128 Grey53 [#878787] Represents the Grey53 color with the RGB value of 135;135;135 Grey54 [#8a8a8a] Represents the Grey54 color with the RGB value of 138;138;138 Grey58 [#949494] Represents the Grey58 color with the RGB value of 148;148;148 Grey62 [#9e9e9e] Represents the Grey62 color with the RGB value of 158;158;158 Grey63 [#af87af] Represents the Grey63 color with the RGB value of 175;135;175 Grey66 [#a8a8a8] Represents the Grey66 color with the RGB value of 168;168;168 Grey69 [#afafaf] Represents the Grey69 color with the RGB value of 175;175;175 Grey7 [#121212] Represents the Grey7 color with the RGB value of 18;18;18 Grey70 [#b2b2b2] Represents the Grey70 color with the RGB value of 178;178;178 Grey74 [#bcbcbc] Represents the Grey74 color with the RGB value of 188;188;188 Grey78 [#c6c6c6] Represents the Grey78 color with the RGB value of 198;198;198 Grey82 [#d0d0d0] Represents the Grey82 color with the RGB value of 208;208;208 Grey84 [#d7d7d7] Represents the Grey84 color with the RGB value of 215;215;215 Grey85 [#dadada] Represents the Grey85 color with the RGB value of 218;218;218 Grey89 [#e4e4e4] Represents the Grey89 color with the RGB value of 228;228;228 Grey93 [#eeeeee] Represents the Grey93 color with the RGB value of 238;238;238 Honeydew2 [#d7ffd7] Represents the Honeydew2 color with the RGB value of 215;255;215 HotPink [#ff5faf] Represents the HotPink color with the RGB value of 255;95;175 HotPink2 [#d75faf] Represents the HotPink2 color with the RGB value of 215;95;175 HotPink3 [#af5f87] Represents the HotPink3 color with the RGB value of 175;95;135 HotPink3Alt [#d75f87] Represents the HotPink3Alt color with the RGB value of 215;95;135 HotPinkAlt [#ff5fd7] Represents the HotPinkAlt color with the RGB value of 255;95;215 IndianRed [#af5f5f] Represents the IndianRed color with the RGB value of 175;95;95 IndianRed1 [#ff5f5f] Represents the IndianRed1 color with the RGB value of 255;95;95 IndianRed1Alt [#ff5f87] Represents the IndianRed1Alt color with the RGB value of 255;95;135 IndianRedAlt [#d75f5f] Represents the IndianRedAlt color with the RGB value of 215;95;95 Khaki1 [#ffff87] Represents the Khaki1 color with the RGB value of 255;255;135 Khaki3 [#d7d75f] Represents the Khaki3 color with the RGB value of 215;215;95 LightCoral [#ff8787] Represents the LightCoral color with the RGB value of 255;135;135 LightCyan1 [#d7ffff] Represents the LightCyan1 color with the RGB value of 215;255;255 LightCyan3 [#afd7d7] Represents the LightCyan3 color with the RGB value of 175;215;215 LightGoldenrod1 [#ffff5f] Represents the LightGoldenrod1 color with the RGB value of 255;255;95 LightGoldenrod2 [#d7d787] Represents the LightGoldenrod2 color with the RGB value of 215;215;135 LightGoldenrod2Alt [#ffd75f] Represents the LightGoldenrod2Alt color with the RGB value of 255;215;95 LightGoldenrod2Alt2 [#ffd787] Represents the LightGoldenrod2Alt2 color with the RGB value of 255;215;135 LightGoldenrod3 [#d7af5f] Represents the LightGoldenrod3 color with the RGB value of 215;175;95 LightGreen [#87ff5f] Represents the LightGreen color with the RGB value of 135;255;95 LightGreenAlt [#87ff87] Represents the LightGreenAlt color with the RGB value of 135;255;135 LightPink1 [#ffafaf] Represents the LightPink1 color with the RGB value of 255;175;175 LightPink3 [#d78787] Represents the LightPink3 color with the RGB value of 215;135;135 LightPink4 [#875f5f] Represents the LightPink4 color with the RGB value of 135;95;95 LightSalmon1 [#ffaf87] Represents the LightSalmon1 color with the RGB value of 255;175;135 LightSalmon3 [#af875f] Represents the LightSalmon3 color with the RGB value of 175;135;95 LightSalmon3Alt [#d7875f] Represents the LightSalmon3Alt color with the RGB value of 215;135;95 LightSeaGreen [#00afaf] Represents the LightSeaGreen color with the RGB value of 0;175;175 LightSkyBlue1 [#afd7ff] Represents the LightSkyBlue1 color with the RGB value of 175;215;255 LightSkyBlue3 [#87afaf] Represents the LightSkyBlue3 color with the RGB value of 135;175;175 LightSkyBlue3Alt [#87afd7] Represents the LightSkyBlue3Alt color with the RGB value of 135;175;215 LightSlateBlue [#8787ff] Represents the LightSlateBlue color with the RGB value of 135;135;255 LightSlateGrey [#8787af] Represents the LightSlateGrey color with the RGB value of 135;135;175 LightSteelBlue [#afafff] Represents the LightSteelBlue color with the RGB value of 175;175;255 LightSteelBlue1 [#d7d7ff] Represents the LightSteelBlue1 color with the RGB value of 215;215;255 LightSteelBlue3 [#afafd7] Represents the LightSteelBlue3 color with the RGB value of 175;175;215 LightYellow3 [#d7d7af] Represents the LightYellow3 color with the RGB value of 215;215;175 Lime [#00ff00] Represents the Lime color with the RGB value of 0;255;0 Magenta1 [#ff00ff] Represents the Magenta1 color with the RGB value of 255;0;255 Magenta2 [#d700ff] Represents the Magenta2 color with the RGB value of 215;0;255 Magenta2Alt [#ff00d7] Represents the Magenta2Alt color with the RGB value of 255;0;215 Magenta3 [#af00af] Represents the Magenta3 color with the RGB value of 175;0;175 Magenta3Alt [#d700af] Represents the Magenta3Alt color with the RGB value of 215;0;175 Magenta3Alt2 [#d700d7] Represents the Magenta3Alt2 color with the RGB value of 215;0;215 Maroon [#800000] Represents the Maroon color with the RGB value of 128;0;0 MediumOrchid [#af5fd7] Represents the MediumOrchid color with the RGB value of 175;95;215 MediumOrchid1 [#d75fff] Represents the MediumOrchid1 color with the RGB value of 215;95;255 MediumOrchid1Alt [#ff5fff] Represents the MediumOrchid1Alt color with the RGB value of 255;95;255 MediumOrchid3 [#af5faf] Represents the MediumOrchid3 color with the RGB value of 175;95;175 MediumPurple [#8787d7] Represents the MediumPurple color with the RGB value of 135;135;215 MediumPurple1 [#af87ff] Represents the MediumPurple1 color with the RGB value of 175;135;255 MediumPurple2 [#af5fff] Represents the MediumPurple2 color with the RGB value of 175;95;255 MediumPurple2Alt [#af87d7] Represents the MediumPurple2Alt color with the RGB value of 175;135;215 MediumPurple3 [#875faf] Represents the MediumPurple3 color with the RGB value of 135;95;175 MediumPurple3Alt [#875fd7] Represents the MediumPurple3Alt color with the RGB value of 135;95;215 MediumPurple4 [#5f5f87] Represents the MediumPurple4 color with the RGB value of 95;95;135 MediumSpringGreen [#00ffaf] Represents the MediumSpringGreen color with the RGB value of 0;255;175 MediumTurquoise [#5fd7d7] Represents the MediumTurquoise color with the RGB value of 95;215;215 MediumVioletRed [#af0087] Represents the MediumVioletRed color with the RGB value of 175;0;135 MistyRose1 [#ffd7d7] Represents the MistyRose1 color with the RGB value of 255;215;215 MistyRose3 [#d7afaf] Represents the MistyRose3 color with the RGB value of 215;175;175 NavajoWhite1 [#ffd7af] Represents the NavajoWhite1 color with the RGB value of 255;215;175 NavajoWhite3 [#afaf87] Represents the NavajoWhite3 color with the RGB value of 175;175;135 Navy [#000080] Represents the Navy color with the RGB value of 0;0;128 NavyBlue [#00005f] Represents the NavyBlue color with the RGB value of 0;0;95 Olive [#808000] Represents the Olive color with the RGB value of 128;128;0 Orange1 [#ffaf00] Represents the Orange1 color with the RGB value of 255;175;0 Orange3 [#d78700] Represents the Orange3 color with the RGB value of 215;135;0 Orange4 [#5f5f00] Represents the Orange4 color with the RGB value of 95;95;0 Orange4Alt [#875f00] Represents the Orange4Alt color with the RGB value of 135;95;0 OrangeRed1 [#ff5f00] Represents the OrangeRed1 color with the RGB value of 255;95;0 Orchid [#d75fd7] Represents the Orchid color with the RGB value of 215;95;215 Orchid1 [#ff87ff] Represents the Orchid1 color with the RGB value of 255;135;255 Orchid2 [#ff87d7] Represents the Orchid2 color with the RGB value of 255;135;215 PaleGreen1 [#87ffaf] Represents the PaleGreen1 color with the RGB value of 135;255;175 PaleGreen1Alt [#afff87] Represents the PaleGreen1Alt color with the RGB value of 175;255;135 PaleGreen3 [#5fd75f] Represents the PaleGreen3 color with the RGB value of 95;215;95 PaleGreen3Alt [#87d787] Represents the PaleGreen3Alt color with the RGB value of 135;215;135 PaleTurquoise1 [#afffff] Represents the PaleTurquoise1 color with the RGB value of 175;255;255 PaleTurquoise4 [#5f8787] Represents the PaleTurquoise4 color with the RGB value of 95;135;135 PaleVioletRed1 [#ff87af] Represents the PaleVioletRed1 color with the RGB value of 255;135;175 Pink1 [#ffafd7] Represents the Pink1 color with the RGB value of 255;175;215 Pink3 [#d787af] Represents the Pink3 color with the RGB value of 215;135;175 Plum1 [#ffafff] Represents the Plum1 color with the RGB value of 255;175;255 Plum2 [#d7afff] Represents the Plum2 color with the RGB value of 215;175;255 Plum3 [#d787d7] Represents the Plum3 color with the RGB value of 215;135;215 Plum4 [#875f87] Represents the Plum4 color with the RGB value of 135;95;135 Purple [#800080] Represents the Purple color with the RGB value of 128;0;128 Purple3 [#5f00d7] Represents the Purple3 color with the RGB value of 95;0;215 Purple4 [#5f0087] Represents the Purple4 color with the RGB value of 95;0;135 Purple4Alt [#5f00af] Represents the Purple4Alt color with the RGB value of 95;0;175 PurpleAlt [#8700ff] Represents the PurpleAlt color with the RGB value of 135;0;255 PurpleAlt2 [#af00ff] Represents the PurpleAlt2 color with the RGB value of 175;0;255 Red [#ff0000] Represents the Red color with the RGB value of 255;0;0 Red1 [#ff0000] Represents the Red1 color with the RGB value of 255;0;0 Red3 [#af0000] Represents the Red3 color with the RGB value of 175;0;0 Red3Alt [#d70000] Represents the Red3Alt color with the RGB value of 215;0;0 RosyBrown [#af8787] Represents the RosyBrown color with the RGB value of 175;135;135 RoyalBlue1 [#5f5fff] Represents the RoyalBlue1 color with the RGB value of 95;95;255 Salmon1 [#ff875f] Represents the Salmon1 color with the RGB value of 255;135;95 SandyBrown [#ffaf5f] Represents the SandyBrown color with the RGB value of 255;175;95 SeaGreen1 [#5fff87] Represents the SeaGreen1 color with the RGB value of 95;255;135 SeaGreen1Alt [#5fffaf] Represents the SeaGreen1Alt color with the RGB value of 95;255;175 SeaGreen2 [#5fff5f] Represents the SeaGreen2 color with the RGB value of 95;255;95 SeaGreen3 [#5fd787] Represents the SeaGreen3 color with the RGB value of 95;215;135 Silver [#c0c0c0] Represents the Silver color with the RGB value of 192;192;192 SkyBlue1 [#87d7ff] Represents the SkyBlue1 color with the RGB value of 135;215;255 SkyBlue2 [#87afff] Represents the SkyBlue2 color with the RGB value of 135;175;255 SkyBlue3 [#5fafd7] Represents the SkyBlue3 color with the RGB value of 95;175;215 SlateBlue1 [#875fff] Represents the SlateBlue1 color with the RGB value of 135;95;255 SlateBlue3 [#5f5faf] Represents the SlateBlue3 color with the RGB value of 95;95;175 SlateBlue3Alt [#5f5fd7] Represents the SlateBlue3Alt color with the RGB value of 95;95;215 SpringGreen1 [#00ff87] Represents the SpringGreen1 color with the RGB value of 0;255;135 SpringGreen2 [#00d787] Represents the SpringGreen2 color with the RGB value of 0;215;135 SpringGreen2Alt [#00ff5f] Represents the SpringGreen2Alt color with the RGB value of 0;255;95 SpringGreen3 [#00af5f] Represents the SpringGreen3 color with the RGB value of 0;175;95 SpringGreen3Alt [#00d75f] Represents the SpringGreen3Alt color with the RGB value of 0;215;95 SpringGreen4 [#00875f] Represents the SpringGreen4 color with the RGB value of 0;135;95 SteelBlue [#5f87af] Represents the SteelBlue color with the RGB value of 95;135;175 SteelBlue1 [#5fafff] Represents the SteelBlue1 color with the RGB value of 95;175;255 SteelBlue1Alt [#5fd7ff] Represents the SteelBlue1Alt color with the RGB value of 95;215;255 SteelBlue3 [#5f87d7] Represents the SteelBlue3 color with the RGB value of 95;135;215 Tan [#d7af87] Represents the Tan color with the RGB value of 215;175;135 Teal [#008080] Represents the Teal color with the RGB value of 0;128;128 Thistle1 [#ffd7ff] Represents the Thistle1 color with the RGB value of 255;215;255 Thistle3 [#d7afd7] Represents the Thistle3 color with the RGB value of 215;175;215 Turquoise2 [#00d7ff] Represents the Turquoise2 color with the RGB value of 0;215;255 Turquoise4 [#008787] Represents the Turquoise4 color with the RGB value of 0;135;135 Violet [#d787ff] Represents the Violet color with the RGB value of 215;135;255 Wheat1 [#ffffaf] Represents the Wheat1 color with the RGB value of 255;255;175 Wheat4 [#87875f] Represents the Wheat4 color with the RGB value of 135;135;95 White [#ffffff] Represents the White color with the RGB value of 255;255;255 Yellow [#ffff00] Represents the Yellow color with the RGB value of 255;255;0 Yellow1 [#ffff00] Represents the Yellow1 color with the RGB value of 255;255;0 Yellow2 [#d7ff00] Represents the Yellow2 color with the RGB value of 215;255;0 Yellow3 [#afd700] Represents the Yellow3 color with the RGB value of 175;215;0 Yellow3Alt [#d7d700] Represents the Yellow3Alt color with the RGB value of 215;215;0 Yellow4 [#878700] Represents the Yellow4 color with the RGB value of 135;135;0 Yellow4Alt [#87af00] Represents the Yellow4Alt color with the RGB value of 135;175;0"
  },
  "api/Terminaux.Colors.Data.html": {
    "href": "api/Terminaux.Colors.Data.html",
    "title": "Namespace Terminaux.Colors.Data | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Data Classes ConsoleColorData Console color data ConsoleColorDataSerializer Console color data serializer Enums ConsoleColors All 255 console colors"
  },
  "api/Terminaux.Colors.Gradients.ColorGradient.html": {
    "href": "api/Terminaux.Colors.Gradients.ColorGradient.html",
    "title": "Class ColorGradient | Terminaux API - Aptivi",
    "keywords": "Class ColorGradient A color gradient enumeration class Inheritance object ColorGradient Namespace: Terminaux.Colors.Gradients Assembly: Terminaux.dll Syntax public class ColorGradient Properties | Edit this page View Source IntermediateColor The intermediate color that transitions from the start to the finish Declaration public Color IntermediateColor { get; } Property Value Type Description Color | Edit this page View Source Step The step number for this intermediate color Declaration public int Step { get; } Property Value Type Description int Methods | Edit this page View Source ToString() Gets a color string of this gradient Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/Terminaux.Colors.Gradients.ColorGradientEnumerator.html": {
    "href": "api/Terminaux.Colors.Gradients.ColorGradientEnumerator.html",
    "title": "Class ColorGradientEnumerator | Terminaux API - Aptivi",
    "keywords": "Class ColorGradientEnumerator The color gradient enumerator Inheritance object ColorGradientEnumerator Namespace: Terminaux.Colors.Gradients Assembly: Terminaux.dll Syntax public class ColorGradientEnumerator Properties | Edit this page View Source Current Declaration public ColorGradient Current { get; } Property Value Type Description ColorGradient Methods | Edit this page View Source Dispose() Declaration public void Dispose() | Edit this page View Source MoveNext() Declaration public bool MoveNext() Returns Type Description bool | Edit this page View Source Reset() Declaration public void Reset()"
  },
  "api/Terminaux.Colors.Gradients.ColorGradients.html": {
    "href": "api/Terminaux.Colors.Gradients.ColorGradients.html",
    "title": "Class ColorGradients | Terminaux API - Aptivi",
    "keywords": "Class ColorGradients The color gradients class Inheritance object ColorGradients Namespace: Terminaux.Colors.Gradients Assembly: Terminaux.dll Syntax public class ColorGradients Properties | Edit this page View Source Count Gets the number of gradients Declaration public int Count { get; } Property Value Type Description int | Edit this page View Source this[int] Gets the gradient in the specified index Declaration public ColorGradient this[int index] { get; } Parameters Type Name Description int index Index of a gradient Property Value Type Description ColorGradient A gradient instance Methods | Edit this page View Source GetEnumerator() Declaration public IEnumerator<ColorGradient> GetEnumerator() Returns Type Description IEnumerator<ColorGradient> | Edit this page View Source GetGradients(Color, Color, int) Gets the collection of color gradients Declaration public static ColorGradients GetGradients(Color sourceColor, Color targetColor, int steps) Parameters Type Name Description Color sourceColor Source color to transtition from Color targetColor Target color to transition to int steps Number of steps to advance Returns Type Description ColorGradients An instance of ColorGradients that you can enumerate."
  },
  "api/Terminaux.Colors.Gradients.html": {
    "href": "api/Terminaux.Colors.Gradients.html",
    "title": "Namespace Terminaux.Colors.Gradients | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Gradients Classes ColorGradient A color gradient enumeration class ColorGradientEnumerator The color gradient enumerator ColorGradients The color gradients class"
  },
  "api/Terminaux.Colors.Interop.SystemColorConverter.html": {
    "href": "api/Terminaux.Colors.Interop.SystemColorConverter.html",
    "title": "Class SystemColorConverter | Terminaux API - Aptivi",
    "keywords": "Class SystemColorConverter Provides you with tools to convert System.Drawing's Color to and from Terminaux's Color Inheritance object SystemColorConverter Namespace: Terminaux.Colors.Interop Assembly: Terminaux.dll Syntax public static class SystemColorConverter Methods | Edit this page View Source FromDrawingColor(Color, ColorSettings?) Converts from System.Drawing's Color to Terminaux's Color Declaration public static Color FromDrawingColor(Color drawingColor, ColorSettings? settings = null) Parameters Type Name Description Color drawingColor System.Drawing's Color ColorSettings settings Settings to use Returns Type Description Color Terminaux's Color | Edit this page View Source ToDrawingColor(Color) Converts from Terminaux's Color to System.Drawing's Color Declaration public static Color ToDrawingColor(Color ourColor) Parameters Type Name Description Color ourColor Terminaux's Color Returns Type Description Color System.Drawing's Color"
  },
  "api/Terminaux.Colors.Interop.html": {
    "href": "api/Terminaux.Colors.Interop.html",
    "title": "Namespace Terminaux.Colors.Interop | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Interop Classes SystemColorConverter Provides you with tools to convert System.Drawing's Color to and from Terminaux's Color"
  },
  "api/Terminaux.Colors.Models.Conversion.CmyConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.CmyConversionTools.html",
    "title": "Class CmyConversionTools | Terminaux API - Aptivi",
    "keywords": "Class CmyConversionTools Color model conversion tools (to CMY) Inheritance object CmyConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class CmyConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.CmykConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.CmykConversionTools.html",
    "title": "Class CmykConversionTools | Terminaux API - Aptivi",
    "keywords": "Class CmykConversionTools Color model conversion tools (to CMYK) Inheritance object CmykConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class CmykConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.ConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.ConversionTools.html",
    "title": "Class ConversionTools | Terminaux API - Aptivi",
    "keywords": "Class ConversionTools Color conversion tools Inheritance object ConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class ConversionTools Methods | Edit this page View Source CorrectStandardColor(ConsoleColor) Corrects the color map for ConsoleColor according to the X11 specification Declaration public static ConsoleColor CorrectStandardColor(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to correct this color Returns Type Description ConsoleColor Corrected ConsoleColor | Edit this page View Source TranslateToStandardColorMap(ConsoleColors) Translates the color from X11's ConsoleColors to .NET's representation, ConsoleColor Declaration public static ConsoleColor TranslateToStandardColorMap(ConsoleColors color) Parameters Type Name Description ConsoleColors color X11's ConsoleColors to translate this color to Returns Type Description ConsoleColor .NET's representation of this color, ConsoleColor | Edit this page View Source TranslateToX11ColorMap(ConsoleColor) Translates the color from .NET's ConsoleColor to X11's representation, ConsoleColors Declaration public static ConsoleColors TranslateToX11ColorMap(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to translate this color to Returns Type Description ConsoleColors X11's representation of this color, ConsoleColors"
  },
  "api/Terminaux.Colors.Models.Conversion.HslConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.HslConversionTools.html",
    "title": "Class HslConversionTools | Terminaux API - Aptivi",
    "keywords": "Class HslConversionTools Color model conversion tools (to HSL) Inheritance object HslConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class HslConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to HSL Declaration public static HueSaturationLightness ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to HSL Declaration public static HueSaturationLightness ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to HSL Declaration public static HueSaturationLightness ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to HSL Declaration public static HueSaturationLightness ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to HSL Declaration public static HueSaturationLightness ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to HSL Declaration public static HueSaturationLightness ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to HSL Declaration public static HueSaturationLightness ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.HsvConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.HsvConversionTools.html",
    "title": "Class HsvConversionTools | Terminaux API - Aptivi",
    "keywords": "Class HsvConversionTools Color model conversion tools (to HSV) Inheritance object HsvConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class HsvConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to HSV Declaration public static HueSaturationValue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to HSV Declaration public static HueSaturationValue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to HSV Declaration public static HueSaturationValue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to HSV Declaration public static HueSaturationValue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to HSV Declaration public static HueSaturationValue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to HSV Declaration public static HueSaturationValue ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to HSV Declaration public static HueSaturationValue ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.RgbConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.RgbConversionTools.html",
    "title": "Class RgbConversionTools | Terminaux API - Aptivi",
    "keywords": "Class RgbConversionTools Color model conversion tools (to RGB) Inheritance object RgbConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class RgbConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to RGB Declaration public static RedGreenBlue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to RGB Declaration public static RedGreenBlue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to RGB Declaration public static RedGreenBlue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to RGB Declaration public static RedGreenBlue ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to RGB Declaration public static RedGreenBlue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to RGB Declaration public static RedGreenBlue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to RGB Declaration public static RedGreenBlue ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.RybConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.RybConversionTools.html",
    "title": "Class RybConversionTools | Terminaux API - Aptivi",
    "keywords": "Class RybConversionTools Color model conversion tools (to RYB) Inheritance object RybConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class RybConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to RYB Declaration public static RedYellowBlue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to RYB Declaration public static RedYellowBlue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to RYB Declaration public static RedYellowBlue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to RYB Declaration public static RedYellowBlue ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to RYB Declaration public static RedYellowBlue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to RYB Declaration public static RedYellowBlue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to RYB Declaration public static RedYellowBlue ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.YiqConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.YiqConversionTools.html",
    "title": "Class YiqConversionTools | Terminaux API - Aptivi",
    "keywords": "Class YiqConversionTools Color model conversion tools (to YIQ) Inheritance object YiqConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class YiqConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.YuvConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.YuvConversionTools.html",
    "title": "Class YuvConversionTools | Terminaux API - Aptivi",
    "keywords": "Class YuvConversionTools Color model conversion tools (to YUV) Inheritance object YuvConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class YuvConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to YUV Declaration public static LumaChromaUv ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to YUV Declaration public static LumaChromaUv ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to YUV Declaration public static LumaChromaUv ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to YUV Declaration public static LumaChromaUv ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to YUV Declaration public static LumaChromaUv ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to YUV Declaration public static LumaChromaUv ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to YUV Declaration public static LumaChromaUv ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.html",
    "title": "Namespace Terminaux.Colors.Models.Conversion | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models.Conversion Classes CmyConversionTools Color model conversion tools (to CMY) CmykConversionTools Color model conversion tools (to CMYK) ConversionTools Color conversion tools HslConversionTools Color model conversion tools (to HSL) HsvConversionTools Color model conversion tools (to HSV) RgbConversionTools Color model conversion tools (to RGB) RybConversionTools Color model conversion tools (to RYB) YiqConversionTools Color model conversion tools (to YIQ) YuvConversionTools Color model conversion tools (to YUV)"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellow.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellow.html",
    "title": "Class CyanMagentaYellow | Terminaux API - Aptivi",
    "keywords": "Class CyanMagentaYellow The CMY class instance Inheritance object CyanMagentaYellow Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellow Properties | Edit this page View Source C The cyan color value [0.0 -> 1.0] Declaration public double C { get; } Property Value Type Description double | Edit this page View Source CWhole The cyan color value [0 -> 100] Declaration public int CWhole { get; } Property Value Type Description int | Edit this page View Source M The magenta color value [0.0 -> 1.0] Declaration public double M { get; } Property Value Type Description double | Edit this page View Source MWhole The magenta color value [0 -> 100] Declaration public int MWhole { get; } Property Value Type Description int | Edit this page View Source Y The yellow color value [0.0 -> 1.0] Declaration public double Y { get; } Property Value Type Description double | Edit this page View Source YWhole The yellow color value [0 -> 100] Declaration public int YWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellow) Declaration public bool Equals(CyanMagentaYellow other) Parameters Type Name Description CyanMagentaYellow other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() cmy:<C>;<M>;<Y> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator ==(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator !=(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html",
    "title": "Class CyanMagentaYellowKey | Terminaux API - Aptivi",
    "keywords": "Class CyanMagentaYellowKey The CMYK class instance Inheritance object CyanMagentaYellowKey Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellowKey Properties | Edit this page View Source CMY The Cyan, Magenta, and Yellow color values Declaration public CyanMagentaYellow CMY { get; } Property Value Type Description CyanMagentaYellow | Edit this page View Source K The black key color value [0.0 -> 1.0] Declaration public double K { get; } Property Value Type Description double | Edit this page View Source KWhole The black key color value [0 -> 100] Declaration public int KWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellowKey) Declaration public bool Equals(CyanMagentaYellowKey other) Parameters Type Name Description CyanMagentaYellowKey other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() cmyk:<C>;<M>;<Y>;<K> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator ==(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator !=(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationLightness.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationLightness.html",
    "title": "Class HueSaturationLightness | Terminaux API - Aptivi",
    "keywords": "Class HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model Inheritance object HueSaturationLightness Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationLightness Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source Lightness The lightness of the color, indicating how light the color is [0.0 -> 1.0] Declaration public double Lightness { get; } Property Value Type Description double | Edit this page View Source LightnessWhole The lightness of the color, indicating how light the color is [0 -> 100] Declaration public int LightnessWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationLightness) Declaration public bool Equals(HueSaturationLightness other) Parameters Type Name Description HueSaturationLightness other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() hsl:<H>;<S>;<L> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator ==(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator !=(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationValue.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationValue.html",
    "title": "Class HueSaturationValue | Terminaux API - Aptivi",
    "keywords": "Class HueSaturationValue The Hue, Saturation, and Value (HSV) model Inheritance object HueSaturationValue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationValue Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int | Edit this page View Source Value The value of the color [0.0 -> 1.0] Declaration public double Value { get; } Property Value Type Description double | Edit this page View Source ValueWhole The value of the color [0 -> 100] Declaration public int ValueWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationValue) Declaration public bool Equals(HueSaturationValue other) Parameters Type Name Description HueSaturationValue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() hsv:<H>;<S>;<V> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(HueSaturationValue, HueSaturationValue) Declaration public static bool operator ==(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationValue, HueSaturationValue) Declaration public static bool operator !=(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.LumaChromaUv.html": {
    "href": "api/Terminaux.Colors.Models.LumaChromaUv.html",
    "title": "Class LumaChromaUv | Terminaux API - Aptivi",
    "keywords": "Class LumaChromaUv The Luma chroma (YUV, PAL, SDTV with BT.470) model Inheritance object LumaChromaUv Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class LumaChromaUv Properties | Edit this page View Source ChromaU The U component, known as chroma [0 -> 255] Declaration public int ChromaU { get; } Property Value Type Description int | Edit this page View Source ChromaUNormalized The U component, known as chrominance information [-0.5019 -> 0.5019] Declaration public double ChromaUNormalized { get; } Property Value Type Description double | Edit this page View Source ChromaV The V component, known as chroma [0 -> 255] Declaration public int ChromaV { get; } Property Value Type Description int | Edit this page View Source ChromaVNormalized The V component, known as chrominance information [-0.5019 -> 0.5019] Declaration public double ChromaVNormalized { get; } Property Value Type Description double | Edit this page View Source Luma The Y component, known as luma information [0 -> 255] Declaration public int Luma { get; } Property Value Type Description int | Edit this page View Source LumaNormalized The Y component, known as luma information [0.0 -> 1.0] Declaration public double LumaNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(LumaChromaUv) Declaration public bool Equals(LumaChromaUv other) Parameters Type Name Description LumaChromaUv other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() yuv:<Y>;<I>;<Q> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(LumaChromaUv, LumaChromaUv) Declaration public static bool operator ==(LumaChromaUv left, LumaChromaUv right) Parameters Type Name Description LumaChromaUv left LumaChromaUv right Returns Type Description bool | Edit this page View Source operator !=(LumaChromaUv, LumaChromaUv) Declaration public static bool operator !=(LumaChromaUv left, LumaChromaUv right) Parameters Type Name Description LumaChromaUv left LumaChromaUv right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.LumaInPhaseQuadrature.html": {
    "href": "api/Terminaux.Colors.Models.LumaInPhaseQuadrature.html",
    "title": "Class LumaInPhaseQuadrature | Terminaux API - Aptivi",
    "keywords": "Class LumaInPhaseQuadrature The Luma, In-phase, and Quadrature (YIQ, NTSC 1953) model Inheritance object LumaInPhaseQuadrature Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class LumaInPhaseQuadrature Properties | Edit this page View Source InPhase The I component, known as chrominance information [0 -> 255] Declaration public int InPhase { get; } Property Value Type Description int | Edit this page View Source InPhaseNormalized The I component, known as chrominance information [-0.5957 -> 0.5957] Declaration public double InPhaseNormalized { get; } Property Value Type Description double | Edit this page View Source Luma The Y component, known as luma information [0 -> 255] Declaration public int Luma { get; } Property Value Type Description int | Edit this page View Source LumaNormalized The Y component, known as luma information [0.0 -> 1.0] Declaration public double LumaNormalized { get; } Property Value Type Description double | Edit this page View Source Quadrature The Q component, known as chrominance information [0 -> 255] Declaration public int Quadrature { get; } Property Value Type Description int | Edit this page View Source QuadratureNormalized The Q component, known as chrominance information [-0.5226 -> 0.5226] Declaration public double QuadratureNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(LumaInPhaseQuadrature) Declaration public bool Equals(LumaInPhaseQuadrature other) Parameters Type Name Description LumaInPhaseQuadrature other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() yiq:<Y>;<I>;<Q> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(LumaInPhaseQuadrature, LumaInPhaseQuadrature) Declaration public static bool operator ==(LumaInPhaseQuadrature left, LumaInPhaseQuadrature right) Parameters Type Name Description LumaInPhaseQuadrature left LumaInPhaseQuadrature right Returns Type Description bool | Edit this page View Source operator !=(LumaInPhaseQuadrature, LumaInPhaseQuadrature) Declaration public static bool operator !=(LumaInPhaseQuadrature left, LumaInPhaseQuadrature right) Parameters Type Name Description LumaInPhaseQuadrature left LumaInPhaseQuadrature right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.Parsing.CmyParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.CmyParsingTools.html",
    "title": "Class CmyParsingTools | Terminaux API - Aptivi",
    "keywords": "Class CmyParsingTools Tools to parse CMY specifiers Inheritance object CmyParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class CmyParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid CMY specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid CMY specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid CMY specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid CMY specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of CyanMagentaYellow Declaration public static CyanMagentaYellow ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of CMY Returns Type Description CyanMagentaYellow An instance of CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of CyanMagentaYellow converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of CMY ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.CmykParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.CmykParsingTools.html",
    "title": "Class CmykParsingTools | Terminaux API - Aptivi",
    "keywords": "Class CmykParsingTools Tools to parse CMYK specifiers Inheritance object CmykParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class CmykParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid CMYK specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid CMYK specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid CMYK specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid CMYK specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of CyanMagentaYellowKey Declaration public static CyanMagentaYellowKey ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of CMYK Returns Type Description CyanMagentaYellowKey An instance of CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of CyanMagentaYellowKey converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of CMYK ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.HslParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.HslParsingTools.html",
    "title": "Class HslParsingTools | Terminaux API - Aptivi",
    "keywords": "Class HslParsingTools Tools to parse HSL specifiers Inheritance object HslParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class HslParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid HSL specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid HSL specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid HSL specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid HSL specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of HueSaturationLightness Declaration public static HueSaturationLightness ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of HSL Returns Type Description HueSaturationLightness An instance of HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of HueSaturationLightness converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of HSL ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.HsvParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.HsvParsingTools.html",
    "title": "Class HsvParsingTools | Terminaux API - Aptivi",
    "keywords": "Class HsvParsingTools Tools to parse HSV specifiers Inheritance object HsvParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class HsvParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid HSV specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid HSV specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid HSV specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid HSV specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of HueSaturationValue Declaration public static HueSaturationValue ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of HSV Returns Type Description HueSaturationValue An instance of HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of HueSaturationValue converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of HSV ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.ParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.ParsingTools.html",
    "title": "Class ParsingTools | Terminaux API - Aptivi",
    "keywords": "Class ParsingTools Tools to parse RGB specifiers for general use Inheritance object ParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class ParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid model-agnostic specifier and contain valid values? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid model-agnostic specifier and contains valid values Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierAndValueValidRgbHash(string) Does the string specifier represent a valid RGB hash (#RGB or #RRGGBB) as in HTML? Declaration public static bool IsSpecifierAndValueValidRgbHash(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB hash (#RGB or #RRGGBB) as in HTML Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierConsoleColors(string) Does the string specifier represent either a color name taken from ConsoleColors, a color number from 0 to 255, or a color code? Declaration public static bool IsSpecifierConsoleColors(string specifier) Parameters Type Name Description string specifier Specifier that represents either a color name taken from ConsoleColors, a color number from 0 to 255, or a color code Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string) Does the string specifier represent a valid model-agnostic specifier? Declaration public static bool IsSpecifierValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid model-agnostic specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValidRgbHash(string) Does the string specifier represent a valid RGB hash (#RGB or #RRGGBB) as in HTML? Declaration public static bool IsSpecifierValidRgbHash(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB hash (#RGB or #RRGGBB) as in HTML Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string, ColorSettings?) Parses the specifier and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifier(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierRgbHash(string, ColorSettings?) Parses the hex representation of RGB and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierRgbHash(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of RGB in hex representation ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierRgbName(string, ColorSettings?) Parses the specifier that holds the color name and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierRgbName(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Color name defined in ConsoleColors ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifier(string, out RedGreenBlue?) Parses the specifier and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifier(string specifier, out RedGreenBlue? rgb) Parameters Type Name Description string specifier Specifier of RGB RedGreenBlue rgb Output for the RGB component for 256- and 16-color modes Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifierRgbHash(string, out RedGreenBlue?) Parses the hex representation of RGB and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifierRgbHash(string specifier, out RedGreenBlue? output) Parameters Type Name Description string specifier Specifier of RGB in hex representation RedGreenBlue output Output for the RGB component Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.RgbParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.RgbParsingTools.html",
    "title": "Class RgbParsingTools | Terminaux API - Aptivi",
    "keywords": "Class RgbParsingTools Tools to parse RGB specifiers Inheritance object RgbParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class RgbParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid RGB specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid RGB specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid RGB specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.RybParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.RybParsingTools.html",
    "title": "Class RybParsingTools | Terminaux API - Aptivi",
    "keywords": "Class RybParsingTools Tools to parse RYB specifiers Inheritance object RybParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class RybParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid RYB specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RYB specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid RYB specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid RYB specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of RedYellowBlue Declaration public static RedYellowBlue ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of RYB Returns Type Description RedYellowBlue An instance of RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of RedYellowBlue converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.YiqParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.YiqParsingTools.html",
    "title": "Class YiqParsingTools | Terminaux API - Aptivi",
    "keywords": "Class YiqParsingTools Tools to parse YIQ specifiers Inheritance object YiqParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class YiqParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid YIQ specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid YIQ specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid YIQ specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid YIQ specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of LumaInPhaseQuadrature Declaration public static LumaInPhaseQuadrature ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of YIQ Returns Type Description LumaInPhaseQuadrature An instance of LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of LumaInPhaseQuadrature converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.YuvParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.YuvParsingTools.html",
    "title": "Class YuvParsingTools | Terminaux API - Aptivi",
    "keywords": "Class YuvParsingTools Tools to parse YUV specifiers Inheritance object YuvParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class YuvParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid YUV specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid YUV specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid YUV specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid YUV specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of LumaChromaUv Declaration public static LumaChromaUv ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of YUV Returns Type Description LumaChromaUv An instance of LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings?) Parses the specifier and returns an instance of LumaChromaUv converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings? settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.html",
    "title": "Namespace Terminaux.Colors.Models.Parsing | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models.Parsing Classes CmyParsingTools Tools to parse CMY specifiers CmykParsingTools Tools to parse CMYK specifiers HslParsingTools Tools to parse HSL specifiers HsvParsingTools Tools to parse HSV specifiers ParsingTools Tools to parse RGB specifiers for general use RgbParsingTools Tools to parse RGB specifiers RybParsingTools Tools to parse RYB specifiers YiqParsingTools Tools to parse YIQ specifiers YuvParsingTools Tools to parse YUV specifiers"
  },
  "api/Terminaux.Colors.Models.RedGreenBlue.html": {
    "href": "api/Terminaux.Colors.Models.RedGreenBlue.html",
    "title": "Class RedGreenBlue | Terminaux API - Aptivi",
    "keywords": "Class RedGreenBlue The RGB class instance Inheritance object RedGreenBlue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class RedGreenBlue Properties | Edit this page View Source A The alpha value indicating transparency applied to the OriginalRgb value. Declaration public int A { get; } Property Value Type Description int | Edit this page View Source B The blue color value [0 -> 255] Declaration public int B { get; } Property Value Type Description int | Edit this page View Source BNormalized The blue color value [0.0 -> 0.1] Declaration public double BNormalized { get; } Property Value Type Description double | Edit this page View Source G The green color value [0 -> 255] Declaration public int G { get; } Property Value Type Description int | Edit this page View Source GNormalized The green color value [0.0 -> 0.1] Declaration public double GNormalized { get; } Property Value Type Description double | Edit this page View Source OriginalRgb The original RGB values (always opaque) Declaration public RedGreenBlue OriginalRgb { get; } Property Value Type Description RedGreenBlue | Edit this page View Source R The red color value [0 -> 255] Declaration public int R { get; } Property Value Type Description int | Edit this page View Source RNormalized The red color value [0.0 -> 0.1] Declaration public double RNormalized { get; } Property Value Type Description double | Edit this page View Source Vector Gets the three-dimension vector values from RGB color Declaration public Vector3 Vector { get; } Property Value Type Description Vector3 Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(RedGreenBlue) Declaration public bool Equals(RedGreenBlue other) Parameters Type Name Description RedGreenBlue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source GetOrderCode() Gets the RGB order code Declaration public int GetOrderCode() Returns Type Description int RGB order code in decimal RRRGGGBBB format | Edit this page View Source ToString() <R>;<G>;<B> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(RedGreenBlue, RedGreenBlue) Declaration public static bool operator ==(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool | Edit this page View Source operator !=(RedGreenBlue, RedGreenBlue) Declaration public static bool operator !=(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.RedYellowBlue.html": {
    "href": "api/Terminaux.Colors.Models.RedYellowBlue.html",
    "title": "Class RedYellowBlue | Terminaux API - Aptivi",
    "keywords": "Class RedYellowBlue The RYB class instance Inheritance object RedYellowBlue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class RedYellowBlue Properties | Edit this page View Source B The blue color value [0 -> 255] Declaration public int B { get; } Property Value Type Description int | Edit this page View Source BNormalized The blue color value [0.0 -> 0.1] Declaration public double BNormalized { get; } Property Value Type Description double | Edit this page View Source R The red color value [0 -> 255] Declaration public int R { get; } Property Value Type Description int | Edit this page View Source RNormalized The red color value [0.0 -> 0.1] Declaration public double RNormalized { get; } Property Value Type Description double | Edit this page View Source Y The yellow color value [0 -> 255] Declaration public int Y { get; } Property Value Type Description int | Edit this page View Source YNormalized The yellow color value [0.0 -> 0.1] Declaration public double YNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(RedYellowBlue) Declaration public bool Equals(RedYellowBlue other) Parameters Type Name Description RedYellowBlue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() ryb:<R>;<Y>;<B> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(RedYellowBlue, RedYellowBlue) Declaration public static bool operator ==(RedYellowBlue left, RedYellowBlue right) Parameters Type Name Description RedYellowBlue left RedYellowBlue right Returns Type Description bool | Edit this page View Source operator !=(RedYellowBlue, RedYellowBlue) Declaration public static bool operator !=(RedYellowBlue left, RedYellowBlue right) Parameters Type Name Description RedYellowBlue left RedYellowBlue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.html": {
    "href": "api/Terminaux.Colors.Models.html",
    "title": "Namespace Terminaux.Colors.Models | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models Classes CyanMagentaYellow The CMY class instance CyanMagentaYellowKey The CMYK class instance HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model HueSaturationValue The Hue, Saturation, and Value (HSV) model LumaChromaUv The Luma chroma (YUV, PAL, SDTV with BT.470) model LumaInPhaseQuadrature The Luma, In-phase, and Quadrature (YIQ, NTSC 1953) model RedGreenBlue The RGB class instance RedYellowBlue The RYB class instance"
  },
  "api/Terminaux.Colors.Templates.PredefinedComponentType.html": {
    "href": "api/Terminaux.Colors.Templates.PredefinedComponentType.html",
    "title": "Enum PredefinedComponentType | Terminaux API - Aptivi",
    "keywords": "Enum PredefinedComponentType Specifies all the predefined component types required in all the templates Namespace: Terminaux.Colors.Templates Assembly: Terminaux.dll Syntax public enum PredefinedComponentType Fields Name Description Text Neutral text color"
  },
  "api/Terminaux.Colors.Templates.TemplateInfo.html": {
    "href": "api/Terminaux.Colors.Templates.TemplateInfo.html",
    "title": "Class TemplateInfo | Terminaux API - Aptivi",
    "keywords": "Class TemplateInfo Template information containing colors set to each component of the template Inheritance object TemplateInfo Namespace: Terminaux.Colors.Templates Assembly: Terminaux.dll Syntax public class TemplateInfo Properties | Edit this page View Source Components Template components Declaration [JsonIgnore] public ReadOnlyDictionary<string, Color> Components { get; } Property Value Type Description ReadOnlyDictionary<string, Color> | Edit this page View Source Name Template name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string Methods | Edit this page View Source AddComponent(string, Color) Adds a component to the list of components Declaration public void AddComponent(string componentName, Color color) Parameters Type Name Description string componentName Component name to add Color color Color to associate this component with | Edit this page View Source ComponentExists(string) Checks to see if a component exists Declaration public bool ComponentExists(string componentName) Parameters Type Name Description string componentName A component name Returns Type Description bool True if a component exists. Otherwise, false. | Edit this page View Source ComponentPredefined(string) Checks to see if a component is predefined Declaration public bool ComponentPredefined(string componentName) Parameters Type Name Description string componentName A component name Returns Type Description bool True if a component is predefined. Otherwise, false. | Edit this page View Source EditComponent(string, Color) Edits a component Declaration public void EditComponent(string componentName, Color color) Parameters Type Name Description string componentName Component name to edit Color color Color to associate this component with | Edit this page View Source RemoveComponent(string) Removes a component from the list of components Declaration public void RemoveComponent(string componentName) Parameters Type Name Description string componentName Component name to remove"
  },
  "api/Terminaux.Colors.Templates.TemplateTools.html": {
    "href": "api/Terminaux.Colors.Templates.TemplateTools.html",
    "title": "Class TemplateTools | Terminaux API - Aptivi",
    "keywords": "Class TemplateTools Template tools class to manage templates Inheritance object TemplateTools Namespace: Terminaux.Colors.Templates Assembly: Terminaux.dll Syntax public static class TemplateTools Properties | Edit this page View Source TemplateNames All installed template names Declaration public static string[] TemplateNames { get; } Property Value Type Description string[] | Edit this page View Source Templates All installed templates Declaration public static TemplateInfo[] Templates { get; } Property Value Type Description TemplateInfo[] Methods | Edit this page View Source Exists(string) Checks to see if a template exists or not Declaration public static bool Exists(string template) Parameters Type Name Description string template A specific template to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source ExistsBuiltin(string) Checks to see if a template is a built-in or not Declaration public static bool ExistsBuiltin(string template) Parameters Type Name Description string template A specific template to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source GetColor(string) Gets the default template Declaration public static Color GetColor(string componentName) Parameters Type Name Description string componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetColor(string, string) Gets the template Declaration public static Color GetColor(string template, string componentName) Parameters Type Name Description string template Template name string componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetColor(string, PredefinedComponentType) Gets the template Declaration public static Color GetColor(string template, PredefinedComponentType componentName) Parameters Type Name Description string template Template name PredefinedComponentType componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetColor(PredefinedComponentType) Gets the default template Declaration public static Color GetColor(PredefinedComponentType componentName) Parameters Type Name Description PredefinedComponentType componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplate() Gets the default template Declaration public static TemplateInfo GetTemplate() Returns Type Description TemplateInfo Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplate(string) Gets the template Declaration public static TemplateInfo GetTemplate(string template) Parameters Type Name Description string template Template name Returns Type Description TemplateInfo Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplateFromJson(string) Gets a template from its JSON representation Declaration public static TemplateInfo? GetTemplateFromJson(string json) Parameters Type Name Description string json Template JSON contents Returns Type Description TemplateInfo A template info containing JSON representation Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplateToJson() Gets a JSON representation of the template Declaration public static string GetTemplateToJson() Returns Type Description string A string containing the JSON representation of a template Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplateToJson(string) Gets a JSON representation of the template Declaration public static string GetTemplateToJson(string template) Parameters Type Name Description string template Template name to save to JSON Returns Type Description string A string containing the JSON representation of a template Exceptions Type Condition TerminauxException | Edit this page View Source RegisterTemplate(TemplateInfo) Registers a template Declaration public static void RegisterTemplate(TemplateInfo template) Parameters Type Name Description TemplateInfo template Template information | Edit this page View Source ResetDefaultTemplate() Resets the default template Declaration public static void ResetDefaultTemplate() Exceptions Type Condition TerminauxException | Edit this page View Source SetColor(string, string, Color) Sets the template Declaration public static void SetColor(string template, string componentName, Color color) Parameters Type Name Description string template Template name string componentName Component name Color color Color to set Exceptions Type Condition TerminauxException | Edit this page View Source SetColor(string, Color) Sets the default template Declaration public static void SetColor(string componentName, Color color) Parameters Type Name Description string componentName Component name Color color Color to set Exceptions Type Condition TerminauxException | Edit this page View Source SetColor(string, PredefinedComponentType, Color) Sets the template Declaration public static void SetColor(string template, PredefinedComponentType componentName, Color color) Parameters Type Name Description string template Template name PredefinedComponentType componentName Component name Color color Color to set Exceptions Type Condition TerminauxException | Edit this page View Source SetColor(PredefinedComponentType, Color) Sets the default template Declaration public static void SetColor(PredefinedComponentType componentName, Color color) Parameters Type Name Description PredefinedComponentType componentName Component name Color color Color to set Exceptions Type Condition TerminauxException | Edit this page View Source SetDefaultTemplate(string) Sets the default template Declaration public static void SetDefaultTemplate(string template) Parameters Type Name Description string template Template name to set the default template to Exceptions Type Condition TerminauxException | Edit this page View Source UnregisterTemplate(string) Unregisters a template Declaration public static void UnregisterTemplate(string template) Parameters Type Name Description string template Template information"
  },
  "api/Terminaux.Colors.Templates.html": {
    "href": "api/Terminaux.Colors.Templates.html",
    "title": "Namespace Terminaux.Colors.Templates | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Templates Classes TemplateInfo Template information containing colors set to each component of the template TemplateTools Template tools class to manage templates Enums PredefinedComponentType Specifies all the predefined component types required in all the templates"
  },
  "api/Terminaux.Colors.Transformation.Contrast.ColorBrightness.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.ColorBrightness.html",
    "title": "Enum ColorBrightness | Terminaux API - Aptivi",
    "keywords": "Enum ColorBrightness Color brightness enumeration Namespace: Terminaux.Colors.Transformation.Contrast Assembly: Terminaux.dll Syntax public enum ColorBrightness Fields Name Description Dark Dark color Light Light color"
  },
  "api/Terminaux.Colors.Transformation.Contrast.ColorContrast.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.ColorContrast.html",
    "title": "Class ColorContrast | Terminaux API - Aptivi",
    "keywords": "Class ColorContrast Color contrast tools Inheritance object ColorContrast Namespace: Terminaux.Colors.Transformation.Contrast Assembly: Terminaux.dll Syntax public static class ColorContrast Methods | Edit this page View Source GetContrastColorHalf(Color) Gets the color contrast appropriate for the specified color using the half white integer Declaration public static Color GetContrastColorHalf(this Color color) Parameters Type Name Description Color color Target color to work on Returns Type Description Color Black if the color is greater than half white; otherwise, false. | Edit this page View Source GetContrastColorNtsc(Color) Gets the color contrast appropriate for the specified color using the luma part of the YIQ color space (NTSC 1953) Declaration public static Color GetContrastColorNtsc(this Color color) Parameters Type Name Description Color color Target color to work on Returns Type Description Color Black if the luma info is less than or equal to 128, or white if greater than 128 | Edit this page View Source IsSeeable(Color) Checks to see if the specified color is considered seeable Declaration public static bool IsSeeable(Color color) Parameters Type Name Description Color color The color to use Returns Type Description bool True if the specified color is considered \"seeable.\" False otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source IsSeeable(ColorType, int, int, int, int, ColorSettings?) Checks to see if the specified color is considered seeable Declaration public static bool IsSeeable(ColorType type, int colorLevel, int colorR, int colorG, int colorB, ColorSettings? settings = null) Parameters Type Name Description ColorType type The color type to use int colorLevel The color level that is in the range of 0-255 int colorR The red color level int colorG The green color level int colorB The blue color level ColorSettings settings Settings to use Returns Type Description bool True if the specified color is considered \"seeable.\" False otherwise. Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Transformation.Contrast.ColorContrastType.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.ColorContrastType.html",
    "title": "Enum ColorContrastType | Terminaux API - Aptivi",
    "keywords": "Enum ColorContrastType The color contrast type Namespace: Terminaux.Colors.Transformation.Contrast Assembly: Terminaux.dll Syntax public enum ColorContrastType Fields Name Description Half Uses the half-white contrast method to determine the color contrast used for mixing (black or white) Light Uses the light vs. dark contrast method to determine the color contrast used for mixing (black or white) Ntsc Uses the NTSC contrast method (see LumaInPhaseQuadrature for more info) to determine the color contrast used for mixing (black or white)"
  },
  "api/Terminaux.Colors.Transformation.Contrast.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.html",
    "title": "Namespace Terminaux.Colors.Transformation.Contrast | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Transformation.Contrast Classes ColorContrast Color contrast tools Enums ColorBrightness Color brightness enumeration ColorContrastType The color contrast type"
  },
  "api/Terminaux.Colors.Transformation.TransformationFormula.html": {
    "href": "api/Terminaux.Colors.Transformation.TransformationFormula.html",
    "title": "Enum TransformationFormula | Terminaux API - Aptivi",
    "keywords": "Enum TransformationFormula Color transformation formula Namespace: Terminaux.Colors.Transformation Assembly: Terminaux.dll Syntax public enum TransformationFormula Fields Name Description BlueScale Blue tinted monochromacy Deutan Red/green color blindness. It makes green look more red DeutanVienot Red/green color blindness. It makes green look more red (Vienot, simple formula) GreenScale Green tinted monochromacy Inverse Inverse colors Monochromacy Full color blindness, can only see grayscale. Protan Red/green color blindness. It makes red look more green ProtanVienot Red/green color blindness. It makes red look more green (Vienot, simple formula) RedScale Red tinted monochromacy Tritan Blue/yellow color blindness. TritanVienot Blue/yellow color blindness. (Vienot, simple formula)"
  },
  "api/Terminaux.Colors.Transformation.TransformationTools.html": {
    "href": "api/Terminaux.Colors.Transformation.TransformationTools.html",
    "title": "Class TransformationTools | Terminaux API - Aptivi",
    "keywords": "Class TransformationTools Color transformation tools Inheritance object TransformationTools Namespace: Terminaux.Colors.Transformation Assembly: Terminaux.dll Syntax public static class TransformationTools Methods | Edit this page View Source LinearRGBTosRGB(double) Converts from Linear RGB to sRGB using a linear RGB number Declaration public static int LinearRGBTosRGB(double linear) Parameters Type Name Description double linear Linear RGB number from 0 to 1 Returns Type Description int sRGB value from 0 to 255 | Edit this page View Source RenderColorBlindnessAware(Color, TransformationFormula, double) Provides you an easy way to generate new Color instances with color blindness applied Declaration public static Color RenderColorBlindnessAware(Color color, TransformationFormula formula, double severity) Parameters Type Name Description Color color Color to use TransformationFormula formula Selected formula for color blindness double severity Severity of the color blindness Returns Type Description Color An instance of Color with adjusted color values for color-blindness | Edit this page View Source SRGBToLinearRGB(int) Converts from sRGB to Linear RGB using a color number Declaration public static double SRGBToLinearRGB(int colorNum) Parameters Type Name Description int colorNum Color number from 0 to 255 Returns Type Description double Linear RGB number ranging from 0 to 1"
  },
  "api/Terminaux.Colors.Transformation.html": {
    "href": "api/Terminaux.Colors.Transformation.html",
    "title": "Namespace Terminaux.Colors.Transformation | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Transformation Classes TransformationTools Color transformation tools Enums TransformationFormula Color transformation formula"
  },
  "api/Terminaux.Colors.html": {
    "href": "api/Terminaux.Colors.html",
    "title": "Namespace Terminaux.Colors | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors Classes Color Color information class ColorSerializer Color serializer ColorSettings The color settings class ColorTools Color tools and management Enums ColorType Color type enumeration"
  },
  "api/Terminaux.Graphics.GraphicsTools.html": {
    "href": "api/Terminaux.Graphics.GraphicsTools.html",
    "title": "Class GraphicsTools | Terminaux API - Aptivi",
    "keywords": "Class GraphicsTools Graphics tools Inheritance object GraphicsTools Namespace: Terminaux.Graphics Assembly: Terminaux.dll Syntax public static class GraphicsTools Methods | Edit this page View Source RenderLine(int, int, int, int) Renders a line using the Bresenham's line algorithm Declaration public static string RenderLine(int startX, int startY, int endX, int endY) Parameters Type Name Description int startX Line start position (zero-based X position) int startY Line start position (zero-based Y position) int endX Line end position (zero-based X position) int endY Line end position (zero-based Y position) Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[]) | Edit this page View Source RenderLine(int, int, int, int, Color) Renders a line using the Bresenham's line algorithm Declaration public static string RenderLine(int startX, int startY, int endX, int endY, Color lineColor) Parameters Type Name Description int startX Line start position (zero-based X position) int startY Line start position (zero-based Y position) int endX Line end position (zero-based X position) int endY Line end position (zero-based Y position) Color lineColor Line color Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[]) | Edit this page View Source RenderLine((int startX, int startY), (int endX, int endY)) Renders a line using the Bresenham's line algorithm Declaration public static string RenderLine((int startX, int startY) firstPoint, (int endX, int endY) secondPoint) Parameters Type Name Description (int Width, int Height) firstPoint Line start positions (zero-based X and Y positions) (int Width, int Height) secondPoint Line end position (zero-based X and Y positions) Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[]) | Edit this page View Source RenderLine((int startX, int startY), (int endX, int endY), Color) Renders a line using the Bresenham's line algorithm Declaration public static string RenderLine((int startX, int startY) firstPoint, (int endX, int endY) secondPoint, Color lineColor) Parameters Type Name Description (int Width, int Height) firstPoint Line start positions (zero-based X and Y positions) (int Width, int Height) secondPoint Line end position (zero-based X and Y positions) Color lineColor Line color Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[]) | Edit this page View Source RenderLineSmooth(int, int, int, int) Renders a line using the Xiaolin Wu's line algorithm Declaration public static string RenderLineSmooth(int startX, int startY, int endX, int endY) Parameters Type Name Description int startX Line start position (zero-based X position) int startY Line start position (zero-based Y position) int endX Line end position (zero-based X position) int endY Line end position (zero-based Y position) Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[]) | Edit this page View Source RenderLineSmooth(int, int, int, int, Color) Renders a line using the Xiaolin Wu's line algorithm Declaration public static string RenderLineSmooth(int startX, int startY, int endX, int endY, Color lineColor) Parameters Type Name Description int startX Line start position (zero-based X position) int startY Line start position (zero-based Y position) int endX Line end position (zero-based X position) int endY Line end position (zero-based Y position) Color lineColor Line color Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[]) | Edit this page View Source RenderLineSmooth((int startX, int startY), (int endX, int endY)) Renders a line using the Xiaolin Wu's line algorithm Declaration public static string RenderLineSmooth((int startX, int startY) firstPoint, (int endX, int endY) secondPoint) Parameters Type Name Description (int Width, int Height) firstPoint Line start positions (zero-based X and Y positions) (int Width, int Height) secondPoint Line end position (zero-based X and Y positions) Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[]) | Edit this page View Source RenderLineSmooth((int startX, int startY), (int endX, int endY), Color) Renders a line using the Xiaolin Wu's line algorithm Declaration public static string RenderLineSmooth((int startX, int startY) firstPoint, (int endX, int endY) secondPoint, Color lineColor) Parameters Type Name Description (int Width, int Height) firstPoint Line start positions (zero-based X and Y positions) (int Width, int Height) secondPoint Line end position (zero-based X and Y positions) Color lineColor Line color Returns Type Description string A rendered line that you can print with WriteRaw(string, params object[])"
  },
  "api/Terminaux.Graphics.IGeometricShape.html": {
    "href": "api/Terminaux.Graphics.IGeometricShape.html",
    "title": "Interface IGeometricShape | Terminaux API - Aptivi",
    "keywords": "Interface IGeometricShape Geometric shape interface Namespace: Terminaux.Graphics Assembly: Terminaux.dll Syntax public interface IGeometricShape Properties | Edit this page View Source Filled A rendered geometric shape using a string that you can print to the terminal using WriteRaw(string, params object[]) Declaration bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Geometric shape height Declaration int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this shape to Declaration int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this shape to Declaration int Top { get; } Property Value Type Description int | Edit this page View Source Width Geometric shape width Declaration int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders this geometric shape Declaration string Render() Returns Type Description string A rendered geometric shape using a string that you can print to the terminal using WriteRaw(string, params object[])"
  },
  "api/Terminaux.Graphics.Shapes.Circle.html": {
    "href": "api/Terminaux.Graphics.Shapes.Circle.html",
    "title": "Class Circle | Terminaux API - Aptivi",
    "keywords": "Class Circle A circle Inheritance object Circle Implements IGeometricShape Namespace: Terminaux.Graphics.Shapes Assembly: Terminaux.dll Syntax public class Circle : IGeometricShape Constructors | Edit this page View Source Circle(int, int, int, bool, Color?) Makes a new circle Declaration public Circle(int height, int left, int top, bool filled = false, Color? shapeColor = null) Parameters Type Name Description int height Circle height int left Zero-based left position of the terminal to write this circle to int top Zero-based top position of the terminal to write this circle to bool filled Whether to print this filled circle or just the outline Color shapeColor Shape color. Null equals the current foreground color. Properties | Edit this page View Source Filled Whether to print this filled circle or just the outline Declaration public bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Circle height Declaration public int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this circle to Declaration public int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration public Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this circle to Declaration public int Top { get; } Property Value Type Description int | Edit this page View Source Width Circle width Declaration public int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders a circle Declaration public string Render() Returns Type Description string A rendered circle using a string that you can print to the terminal using WriteRaw(string, params object[]) Implements IGeometricShape"
  },
  "api/Terminaux.Graphics.Shapes.Ellipsis.html": {
    "href": "api/Terminaux.Graphics.Shapes.Ellipsis.html",
    "title": "Class Ellipsis | Terminaux API - Aptivi",
    "keywords": "Class Ellipsis An ellipsis Inheritance object Ellipsis Implements IGeometricShape Namespace: Terminaux.Graphics.Shapes Assembly: Terminaux.dll Syntax public class Ellipsis : IGeometricShape Constructors | Edit this page View Source Ellipsis(int, int, int, int, bool, Color?) Makes a new ellipsis Declaration public Ellipsis(int width, int height, int left, int top, bool filled = false, Color? shapeColor = null) Parameters Type Name Description int width Ellipsis width int height Ellipsis height int left Zero-based left position of the terminal to write this ellipsis to int top Zero-based top position of the terminal to write this ellipsis to bool filled Whether to print this filled ellipsis or just the outline Color shapeColor Shape color. Null equals the current foreground color. Properties | Edit this page View Source Filled Whether to print this filled ellipsis or just the outline Declaration public bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Ellipsis height Declaration public int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this ellipsis to Declaration public int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration public Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this ellipsis to Declaration public int Top { get; } Property Value Type Description int | Edit this page View Source Width Ellipsis width Declaration public int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders an ellipsis Declaration public string Render() Returns Type Description string A rendered ellipsis using a string that you can print to the terminal using WriteRaw(string, params object[]) Implements IGeometricShape"
  },
  "api/Terminaux.Graphics.Shapes.Parallelogram.html": {
    "href": "api/Terminaux.Graphics.Shapes.Parallelogram.html",
    "title": "Class Parallelogram | Terminaux API - Aptivi",
    "keywords": "Class Parallelogram A parallelogram Inheritance object Parallelogram Implements IGeometricShape Namespace: Terminaux.Graphics.Shapes Assembly: Terminaux.dll Syntax public class Parallelogram : IGeometricShape Constructors | Edit this page View Source Parallelogram(int, int, int, int, bool, Color?) Makes a new parallelogram Declaration public Parallelogram(int width, int height, int left, int top, bool filled = false, Color? shapeColor = null) Parameters Type Name Description int width Parallelogram width int height Parallelogram height int left Zero-based left position of the terminal to write this parallelogram to int top Zero-based top position of the terminal to write this parallelogram to bool filled Whether to print this filled parallelogram or just the outline Color shapeColor Shape color. Null equals the current foreground color. Properties | Edit this page View Source Filled Whether to print this filled parallelogram or just the outline Declaration public bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Parallelogram height Declaration public int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this parallelogram to Declaration public int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration public Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this parallelogram to Declaration public int Top { get; } Property Value Type Description int | Edit this page View Source Width Parallelogram width Declaration public int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders a parallelogram Declaration public string Render() Returns Type Description string A rendered parallelogram using a string that you can print to the terminal using WriteRaw(string, params object[]) Implements IGeometricShape"
  },
  "api/Terminaux.Graphics.Shapes.Rectangle.html": {
    "href": "api/Terminaux.Graphics.Shapes.Rectangle.html",
    "title": "Class Rectangle | Terminaux API - Aptivi",
    "keywords": "Class Rectangle A rectangle Inheritance object Rectangle Implements IGeometricShape Namespace: Terminaux.Graphics.Shapes Assembly: Terminaux.dll Syntax public class Rectangle : IGeometricShape Constructors | Edit this page View Source Rectangle(int, int, int, int, bool, Color?) Makes a new rectangle Declaration public Rectangle(int width, int height, int left, int top, bool filled = false, Color? shapeColor = null) Parameters Type Name Description int width Rectangle width int height Rectangle height int left Zero-based left position of the terminal to write this rectangle to int top Zero-based top position of the terminal to write this rectangle to bool filled Whether to print this filled rectangle or just the outline Color shapeColor Shape color. Null equals the current foreground color. Properties | Edit this page View Source Filled Whether to print this filled rectangle or just the outline Declaration public bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Rectangle height Declaration public int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this rectangle to Declaration public int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration public Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this rectangle to Declaration public int Top { get; } Property Value Type Description int | Edit this page View Source Width Rectangle width Declaration public int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders a rectangle Declaration public string Render() Returns Type Description string A rendered rectangle using a string that you can print to the terminal using WriteRaw(string, params object[]) Implements IGeometricShape"
  },
  "api/Terminaux.Graphics.Shapes.Square.html": {
    "href": "api/Terminaux.Graphics.Shapes.Square.html",
    "title": "Class Square | Terminaux API - Aptivi",
    "keywords": "Class Square A square Inheritance object Square Implements IGeometricShape Namespace: Terminaux.Graphics.Shapes Assembly: Terminaux.dll Syntax public class Square : IGeometricShape Constructors | Edit this page View Source Square(int, int, int, bool, Color?) Makes a new square Declaration public Square(int height, int left, int top, bool filled = false, Color? shapeColor = null) Parameters Type Name Description int height Square height int left Zero-based left position of the terminal to write this square to int top Zero-based top position of the terminal to write this square to bool filled Whether to print this filled square or just the outline Color shapeColor Shape color. Null equals the current foreground color. Properties | Edit this page View Source Filled Whether to print this filled square or just the outline Declaration public bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Square height Declaration public int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this square to Declaration public int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration public Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this square to Declaration public int Top { get; } Property Value Type Description int | Edit this page View Source Width Square width Declaration public int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders a square Declaration public string Render() Returns Type Description string A rendered square using a string that you can print to the terminal using WriteRaw(string, params object[]) Implements IGeometricShape"
  },
  "api/Terminaux.Graphics.Shapes.Trapezoid.html": {
    "href": "api/Terminaux.Graphics.Shapes.Trapezoid.html",
    "title": "Class Trapezoid | Terminaux API - Aptivi",
    "keywords": "Class Trapezoid A trapezoid Inheritance object Trapezoid Implements IGeometricShape Namespace: Terminaux.Graphics.Shapes Assembly: Terminaux.dll Syntax public class Trapezoid : IGeometricShape Constructors | Edit this page View Source Trapezoid(int, int, int, int, int, bool, Color?) Makes a new trapezoid Declaration public Trapezoid(int topWidth, int bottomWidth, int height, int left, int top, bool filled = false, Color? shapeColor = null) Parameters Type Name Description int topWidth Trapezoid top width int bottomWidth Trapezoid bottom width int height Trapezoid height int left Zero-based left position of the terminal to write this trapezoid to int top Zero-based top position of the terminal to write this trapezoid to bool filled Whether to print this filled trapezoid or just the outline Color shapeColor Shape color. Null equals the current foreground color. Properties | Edit this page View Source BottomWidth Trapezoid bottom width Declaration public int BottomWidth { get; } Property Value Type Description int | Edit this page View Source Filled Whether to print this filled trapezoid or just the outline Declaration public bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Trapezoid height Declaration public int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this trapezoid to Declaration public int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration public Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this trapezoid to Declaration public int Top { get; } Property Value Type Description int | Edit this page View Source TopWidth Trapezoid top width Declaration public int TopWidth { get; } Property Value Type Description int | Edit this page View Source Width Trapezoid width Declaration public int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders a trapezoid Declaration public string Render() Returns Type Description string A rendered trapezoid using a string that you can print to the terminal using WriteRaw(string, params object[]) Implements IGeometricShape"
  },
  "api/Terminaux.Graphics.Shapes.Triangle.html": {
    "href": "api/Terminaux.Graphics.Shapes.Triangle.html",
    "title": "Class Triangle | Terminaux API - Aptivi",
    "keywords": "Class Triangle A triangle Inheritance object Triangle Implements IGeometricShape Namespace: Terminaux.Graphics.Shapes Assembly: Terminaux.dll Syntax public class Triangle : IGeometricShape Constructors | Edit this page View Source Triangle(int, int, int, int, bool, Color?) Makes a new triangle Declaration public Triangle(int width, int height, int left, int top, bool filled = false, Color? shapeColor = null) Parameters Type Name Description int width Triangle width int height Triangle height int left Zero-based left position of the terminal to write this triangle to int top Zero-based top position of the terminal to write this triangle to bool filled Whether to print this filled triangle or just the outline Color shapeColor Shape color. Null equals the current foreground color. Properties | Edit this page View Source Filled Whether to print this filled triangle or just the outline Declaration public bool Filled { get; } Property Value Type Description bool | Edit this page View Source Height Triangle height Declaration public int Height { get; } Property Value Type Description int | Edit this page View Source Left Zero-based left position of the terminal to write this triangle to Declaration public int Left { get; } Property Value Type Description int | Edit this page View Source ShapeColor Shape color. Null equals the current foreground color. Declaration public Color ShapeColor { get; } Property Value Type Description Color | Edit this page View Source Top Zero-based top position of the terminal to write this triangle to Declaration public int Top { get; } Property Value Type Description int | Edit this page View Source Width Triangle width Declaration public int Width { get; } Property Value Type Description int Methods | Edit this page View Source Render() Renders a triangle Declaration public string Render() Returns Type Description string A rendered triangle using a string that you can print to the terminal using WriteRaw(string, params object[]) Implements IGeometricShape"
  },
  "api/Terminaux.Graphics.Shapes.html": {
    "href": "api/Terminaux.Graphics.Shapes.html",
    "title": "Namespace Terminaux.Graphics.Shapes | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Graphics.Shapes Classes Circle A circle Ellipsis An ellipsis Parallelogram A parallelogram Rectangle A rectangle Square A square Trapezoid A trapezoid Triangle A triangle"
  },
  "api/Terminaux.Graphics.html": {
    "href": "api/Terminaux.Graphics.html",
    "title": "Namespace Terminaux.Graphics | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Graphics Classes GraphicsTools Graphics tools Interfaces IGeometricShape Geometric shape interface"
  },
  "api/Terminaux.Inputs.InputChoiceInfo.html": {
    "href": "api/Terminaux.Inputs.InputChoiceInfo.html",
    "title": "Class InputChoiceInfo | Terminaux API - Aptivi",
    "keywords": "Class InputChoiceInfo Choice information for input Inheritance object InputChoiceInfo Namespace: Terminaux.Inputs Assembly: Terminaux.dll Syntax public class InputChoiceInfo Constructors | Edit this page View Source InputChoiceInfo(string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title | Edit this page View Source InputChoiceInfo(string, string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description | Edit this page View Source InputChoiceInfo(string, string, string, bool) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription, bool choiceDefault) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description bool choiceDefault Whether this choice is the default choice or not | Edit this page View Source InputChoiceInfo(string, string, string, bool, bool) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription, bool choiceDefault, bool choiceDefaultSelected) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description bool choiceDefault Whether this choice is the default choice or not bool choiceDefaultSelected Whether this choice is the selected choice by default | Edit this page View Source InputChoiceInfo(string, string, string, bool, bool, bool) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription, bool choiceDefault, bool choiceDefaultSelected, bool choiceDisabled) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description bool choiceDefault Whether this choice is the default choice or not bool choiceDefaultSelected Whether this choice is the selected choice by default bool choiceDisabled Whether this choice is disabled or not Properties | Edit this page View Source ChoiceDefault Whether this choice is the default choice or not. If multiple choices in the same choice list have ChoiceDefault set to true, most of the tools will automatically select the first default, ignoring the rest. Declaration public bool ChoiceDefault { get; } Property Value Type Description bool | Edit this page View Source ChoiceDefaultSelected Whether this choice is the selected choice by default or not. Declaration public bool ChoiceDefaultSelected { get; } Property Value Type Description bool | Edit this page View Source ChoiceDescription Choice description Declaration public string ChoiceDescription { get; } Property Value Type Description string | Edit this page View Source ChoiceDisabled Whether this choice is disabled or not. Declaration public bool ChoiceDisabled { get; } Property Value Type Description bool | Edit this page View Source ChoiceName Choice name Declaration public string ChoiceName { get; } Property Value Type Description string | Edit this page View Source ChoiceTitle Choice title Declaration public string ChoiceTitle { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.InputChoiceTools.html": {
    "href": "api/Terminaux.Inputs.InputChoiceTools.html",
    "title": "Class InputChoiceTools | Terminaux API - Aptivi",
    "keywords": "Class InputChoiceTools Input choice tools Inheritance object InputChoiceTools Namespace: Terminaux.Inputs Assembly: Terminaux.dll Syntax public static class InputChoiceTools Methods | Edit this page View Source GetInputChoices((string, string)[]) Gets the input choices Declaration public static InputChoiceInfo[] GetInputChoices((string, string)[] Answers) Parameters Type Name Description (string, string)[] Answers Set of answers and working titles for each answer in one tuple. Returns Type Description InputChoiceInfo[]"
  },
  "api/Terminaux.Inputs.Interactive.BaseInteractiveTui-1.html": {
    "href": "api/Terminaux.Inputs.Interactive.BaseInteractiveTui-1.html",
    "title": "Class BaseInteractiveTui<T> | Terminaux API - Aptivi",
    "keywords": "Class BaseInteractiveTui<T> A base class for your interactive user interface for terminal apps Inheritance object BaseInteractiveTui<T> Implements IInteractiveTui<T> Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public class BaseInteractiveTui<T> : IInteractiveTui<T> Type Parameters Name Description T Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration public virtual bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration public virtual InteractiveTuiBinding[] Bindings { get; } Property Value Type Description InteractiveTuiBinding[] | Edit this page View Source Instance The interactive TUI instance Declaration public static BaseInteractiveTui<T>? Instance { get; } Property Value Type Description BaseInteractiveTui<T> | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration public virtual IEnumerable<T> PrimaryDataSource { get; } Property Value Type Description IEnumerable<T> | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration public virtual int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source Screen The screen instance for this interactive TUI Declaration public Screen? Screen { get; } Property Value Type Description Screen | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration public virtual bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration public virtual IEnumerable<T> SecondaryDataSource { get; } Property Value Type Description IEnumerable<T> Methods | Edit this page View Source FirstOnUnderflow() Goes up to the first element upon underflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration public void FirstOnUnderflow() | Edit this page View Source GetEntryFromItem(T) Gets an entry string from a specified item for listing Declaration public virtual string GetEntryFromItem(T item) Parameters Type Name Description T item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(T) Gets the info from the item Declaration public virtual string GetInfoFromItem(T item) Parameters Type Name Description T item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source GetStatusFromItem(T) Gets the status from the item Declaration public virtual string GetStatusFromItem(T item) Parameters Type Name Description T item Target item Returns Type Description string | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration public virtual void HandleExit() | Edit this page View Source LastOnOverflow() Goes down to the last element upon overflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration public void LastOnOverflow() Implements IInteractiveTui<T>"
  },
  "api/Terminaux.Inputs.Interactive.IInteractiveTui-1.html": {
    "href": "api/Terminaux.Inputs.Interactive.IInteractiveTui-1.html",
    "title": "Interface IInteractiveTui<T> | Terminaux API - Aptivi",
    "keywords": "Interface IInteractiveTui<T> An interface for your interactive user interface for terminal apps Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public interface IInteractiveTui<T> Type Parameters Name Description T Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration InteractiveTuiBinding[] Bindings { get; } Property Value Type Description InteractiveTuiBinding[] | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration IEnumerable<T> PrimaryDataSource { get; } Property Value Type Description IEnumerable<T> | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration IEnumerable<T> SecondaryDataSource { get; } Property Value Type Description IEnumerable<T> Methods | Edit this page View Source GetEntryFromItem(T) Gets an entry string from a specified item for listing Declaration string GetEntryFromItem(T item) Parameters Type Name Description T item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(T) Gets the info from the item Declaration string GetInfoFromItem(T item) Parameters Type Name Description T item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source GetStatusFromItem(T) Gets the status from the item Declaration string GetStatusFromItem(T item) Parameters Type Name Description T item Target item Returns Type Description string | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration void HandleExit()"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiBinding.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiBinding.html",
    "title": "Class InteractiveTuiBinding | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiBinding Interactive TUI binding information class Inheritance object InteractiveTuiBinding Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public class InteractiveTuiBinding Constructors | Edit this page View Source InteractiveTuiBinding(string, ConsoleKey, Action<object, int>?) Makes a new instance of an interactive TUI key binding Declaration public InteractiveTuiBinding(string bindingName, ConsoleKey bindingKeyName, Action<object, int>? bindingAction) Parameters Type Name Description string bindingName Key binding name ConsoleKey bindingKeyName Which key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data | Edit this page View Source InteractiveTuiBinding(string, ConsoleKey, ConsoleModifiers, Action<object, int>?) Makes a new instance of an interactive TUI key binding Declaration public InteractiveTuiBinding(string bindingName, ConsoleKey bindingKeyName, ConsoleModifiers bindingKeyModifiers, Action<object, int>? bindingAction) Parameters Type Name Description string bindingName Key binding name ConsoleKey bindingKeyName Which key is bound to the action? ConsoleModifiers bindingKeyModifiers Which modifiers of the key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data | Edit this page View Source InteractiveTuiBinding(string, PointerButton, Action<object, int>?) Makes a new instance of an interactive TUI mouse pointer binding Declaration public InteractiveTuiBinding(string bindingName, PointerButton bindingPointerButton, Action<object, int>? bindingAction) Parameters Type Name Description string bindingName Key binding name PointerButton bindingPointerButton Which key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data | Edit this page View Source InteractiveTuiBinding(string, PointerButton, PointerButtonPress, Action<object, int>?) Makes a new instance of an interactive TUI mouse pointer binding Declaration public InteractiveTuiBinding(string bindingName, PointerButton bindingPointerButton, PointerButtonPress bindingPointerButtonPress, Action<object, int>? bindingAction) Parameters Type Name Description string bindingName Key binding name PointerButton bindingPointerButton Which button is bound to the action? PointerButtonPress bindingPointerButtonPress Which press mode of the button is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data | Edit this page View Source InteractiveTuiBinding(string, PointerButton, PointerButtonPress, PointerModifiers, Action<object, int>?) Makes a new instance of an interactive TUI mouse pointer binding Declaration public InteractiveTuiBinding(string bindingName, PointerButton bindingPointerButton, PointerButtonPress bindingPointerButtonPress, PointerModifiers bindingButtonModifiers, Action<object, int>? bindingAction) Parameters Type Name Description string bindingName Key binding name PointerButton bindingPointerButton Which button is bound to the action? PointerButtonPress bindingPointerButtonPress Which press mode of the button is bound to the action? PointerModifiers bindingButtonModifiers Which modifiers of the button is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data Properties | Edit this page View Source BindingAction The action to execute. The integer argument denotes the currently selected data Declaration public Action<object, int>? BindingAction { get; } Property Value Type Description Action<object, int> | Edit this page View Source BindingKeyModifiers Which key is bound to the action? Declaration public ConsoleModifiers BindingKeyModifiers { get; } Property Value Type Description ConsoleModifiers | Edit this page View Source BindingKeyName Which key is bound to the action? Declaration public ConsoleKey BindingKeyName { get; } Property Value Type Description ConsoleKey | Edit this page View Source BindingName Key binding name Declaration public string BindingName { get; } Property Value Type Description string | Edit this page View Source BindingPointerButton Which pointer button is bound to the action? Declaration public PointerButton BindingPointerButton { get; } Property Value Type Description PointerButton | Edit this page View Source BindingPointerButtonPress Which pointer button press mode is bound to the action? Declaration public PointerButtonPress BindingPointerButtonPress { get; } Property Value Type Description PointerButtonPress | Edit this page View Source BindingPointerModifiers Which pointer modifier is bound to the action? Declaration public PointerModifiers BindingPointerModifiers { get; } Property Value Type Description PointerModifiers | Edit this page View Source BindingUsesMouse Whether the binding uses the mouse or the keyboard Declaration public bool BindingUsesMouse { get; } Property Value Type Description bool"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiStatus.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiStatus.html",
    "title": "Class InteractiveTuiStatus | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiStatus Interactive TUI status Inheritance object InteractiveTuiStatus Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public static class InteractiveTuiStatus Properties | Edit this page View Source BackgroundColor Interactive TUI background color Declaration public static Color BackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source BoxBackgroundColor Interactive TUI box background color Declaration public static Color BoxBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source BoxForegroundColor Interactive TUI box foreground color Declaration public static Color BoxForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source CurrentInfoLine Current info line index Declaration public static int CurrentInfoLine { get; } Property Value Type Description int | Edit this page View Source CurrentPane Current pane Declaration public static int CurrentPane { get; } Property Value Type Description int | Edit this page View Source FirstPaneCurrentSelection Current selection for the first pane Declaration public static int FirstPaneCurrentSelection { get; } Property Value Type Description int | Edit this page View Source ForegroundColor Interactive TUI foreground color Declaration public static Color ForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source KeyBindingOptionColor Interactive TUI key binding in option color Declaration public static Color KeyBindingOptionColor { get; set; } Property Value Type Description Color | Edit this page View Source OptionBackgroundColor Interactive TUI option background color Declaration public static Color OptionBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source OptionForegroundColor Interactive TUI option foreground color Declaration public static Color OptionForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneBackgroundColor Interactive TUI pane background color Declaration public static Color PaneBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneItemBackColor Interactive TUI pane item color (background) Declaration public static Color PaneItemBackColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneItemForeColor Interactive TUI pane item color (foreground) Declaration public static Color PaneItemForeColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedItemBackColor Interactive TUI pane selected item color (background) Declaration public static Color PaneSelectedItemBackColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedItemForeColor Interactive TUI pane selected item color (foreground) Declaration public static Color PaneSelectedItemForeColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedSeparatorColor Interactive TUI pane selected separator color Declaration public static Color PaneSelectedSeparatorColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSeparatorColor Interactive TUI pane separator color Declaration public static Color PaneSeparatorColor { get; set; } Property Value Type Description Color | Edit this page View Source SecondPaneCurrentSelection Current selection for the second pane Declaration public static int SecondPaneCurrentSelection { get; } Property Value Type Description int | Edit this page View Source Status Current status Declaration public static string Status { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiTools.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiTools.html",
    "title": "Class InteractiveTuiTools | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiTools Tools for the interactive TUI implementation Inheritance object InteractiveTuiTools Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public static class InteractiveTuiTools Methods | Edit this page View Source OpenInteractiveTui<T>(BaseInteractiveTui<T>) Opens the interactive TUI Declaration public static void OpenInteractiveTui<T>(BaseInteractiveTui<T> interactiveTui) Parameters Type Name Description BaseInteractiveTui<T> interactiveTui The inherited class instance of the interactive TUI Type Parameters Name Description T Exceptions Type Condition TerminauxException | Edit this page View Source SelectionMovement<T>(BaseInteractiveTui<T>, int) Initiates the selection movement Declaration public static void SelectionMovement<T>(BaseInteractiveTui<T> interactiveTui, int pos) Parameters Type Name Description BaseInteractiveTui<T> interactiveTui Interactive TUI to deal with int pos Position to move the pane selection to Type Parameters Name Description T | Edit this page View Source SwitchSides<T>(BaseInteractiveTui<T>) Switches between two panes Declaration public static void SwitchSides<T>(BaseInteractiveTui<T> interactiveTui) Parameters Type Name Description BaseInteractiveTui<T> interactiveTui Interactive TUI to deal with Type Parameters Name Description T"
  },
  "api/Terminaux.Inputs.Interactive.html": {
    "href": "api/Terminaux.Inputs.Interactive.html",
    "title": "Namespace Terminaux.Inputs.Interactive | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Interactive Classes BaseInteractiveTui<T> A base class for your interactive user interface for terminal apps InteractiveTuiBinding Interactive TUI binding information class InteractiveTuiStatus Interactive TUI status InteractiveTuiTools Tools for the interactive TUI implementation Interfaces IInteractiveTui<T> An interface for your interactive user interface for terminal apps"
  },
  "api/Terminaux.Inputs.Pointer.PointerButton.html": {
    "href": "api/Terminaux.Inputs.Pointer.PointerButton.html",
    "title": "Enum PointerButton | Terminaux API - Aptivi",
    "keywords": "Enum PointerButton Pointer button Namespace: Terminaux.Inputs.Pointer Assembly: Terminaux.dll Syntax public enum PointerButton Fields Name Description Left Left mouse button Middle Middle mouse button None No button Right Right mouse button WheelDown Wheel scrolling down WheelUp Wheel scrolling up"
  },
  "api/Terminaux.Inputs.Pointer.PointerButtonPress.html": {
    "href": "api/Terminaux.Inputs.Pointer.PointerButtonPress.html",
    "title": "Enum PointerButtonPress | Terminaux API - Aptivi",
    "keywords": "Enum PointerButtonPress Pointer button press Namespace: Terminaux.Inputs.Pointer Assembly: Terminaux.dll Syntax public enum PointerButtonPress Fields Name Description Clicked Just clicked on the mouse Moved Just moved the mouse Released Just released the button click on the mouse Scrolled Just scrolled the mouse wheel"
  },
  "api/Terminaux.Inputs.Pointer.PointerEventContext.html": {
    "href": "api/Terminaux.Inputs.Pointer.PointerEventContext.html",
    "title": "Class PointerEventContext | Terminaux API - Aptivi",
    "keywords": "Class PointerEventContext Pointer event context Inheritance object PointerEventContext Namespace: Terminaux.Inputs.Pointer Assembly: Terminaux.dll Syntax public class PointerEventContext Properties | Edit this page View Source Button Gets the button or the scrolling direction Declaration public PointerButton Button { get; } Property Value Type Description PointerButton | Edit this page View Source ButtonPress Gets the button press state Declaration public PointerButtonPress ButtonPress { get; } Property Value Type Description PointerButtonPress | Edit this page View Source ClickTier Specifies whether this is a single-click (1), double-click (2), or more. Only populated in the Released event. Declaration public int ClickTier { get; } Property Value Type Description int | Edit this page View Source Coordinates Gets the coordinates in character cells where the mouse cursor was placed starting from zero. Declaration public (int x, int y) Coordinates { get; } Property Value Type Description (int Width, int Height) | Edit this page View Source Dragging Whether the pointer is being dragged or not Declaration public bool Dragging { get; } Property Value Type Description bool | Edit this page View Source Modifiers Gets the modifiers pressed at the time of the event Declaration public PointerModifiers Modifiers { get; } Property Value Type Description PointerModifiers"
  },
  "api/Terminaux.Inputs.Pointer.PointerListener.html": {
    "href": "api/Terminaux.Inputs.Pointer.PointerListener.html",
    "title": "Class PointerListener | Terminaux API - Aptivi",
    "keywords": "Class PointerListener Pointer listener for handling mouse events Inheritance object PointerListener Namespace: Terminaux.Inputs.Pointer Assembly: Terminaux.dll Syntax public static class PointerListener Properties | Edit this page View Source DoubleClickTimeout Specifies the time in milliseconds whether the double click times out Declaration public static TimeSpan DoubleClickTimeout { get; set; } Property Value Type Description TimeSpan | Edit this page View Source EnableMovementEvents Checks to see whether the movement events are enabled or not Declaration public static bool EnableMovementEvents { get; set; } Property Value Type Description bool | Edit this page View Source InputAvailable Checks to see whether any pending mouse or keyboard events are here Declaration public static bool InputAvailable { get; } Property Value Type Description bool | Edit this page View Source InvertScrollYAxis Whether to invert the Y axis for scrolling or not. Declaration public static bool InvertScrollYAxis { get; set; } Property Value Type Description bool Remarks If this option is enabled, scrolling up emits the scroll down event, and scrolling down emits the scroll up event. Otherwise, scrolling up emits the scroll up event, and scrolling down emits the scroll down event. | Edit this page View Source Listening Checks whether the pointer listener is listening to mouse events or not Declaration public static bool Listening { get; } Property Value Type Description bool | Edit this page View Source PointerActive Checks to see whether the pointer is active or not Declaration public static bool PointerActive { get; } Property Value Type Description bool | Edit this page View Source PointerAvailable Checks to see whether any pending mouse events are here Declaration public static bool PointerAvailable { get; } Property Value Type Description bool Methods | Edit this page View Source ReadPointerNow() Reads a pointer event and removes it from the context buffer Declaration public static PointerEventContext? ReadPointerNow() Returns Type Description PointerEventContext A PointerEventContext instance that describes the last mouse event, or null if there are no more events to read. | Edit this page View Source StartListening() Starts listening to mouse events Declaration public static void StartListening() | Edit this page View Source StopListening() Stops listening to mouse events Declaration public static void StopListening() Events | Edit this page View Source MouseEvent Raised when console mouse event occurs Declaration public static event EventHandler<PointerEventContext> MouseEvent Event Type Type Description EventHandler<PointerEventContext>"
  },
  "api/Terminaux.Inputs.Pointer.PointerModifiers.html": {
    "href": "api/Terminaux.Inputs.Pointer.PointerModifiers.html",
    "title": "Enum PointerModifiers | Terminaux API - Aptivi",
    "keywords": "Enum PointerModifiers Pointer modifiers Namespace: Terminaux.Inputs.Pointer Assembly: Terminaux.dll Syntax public enum PointerModifiers Fields Name Description Alt ALT key was pressed at the time of the event Ctrl CTRL key was pressed at the time of the event None No key was pressed at the time of the event Shift SHIFT key was pressed at the time of the event"
  },
  "api/Terminaux.Inputs.Pointer.html": {
    "href": "api/Terminaux.Inputs.Pointer.html",
    "title": "Namespace Terminaux.Inputs.Pointer | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Pointer Classes PointerEventContext Pointer event context PointerListener Pointer listener for handling mouse events Enums PointerButton Pointer button PointerButtonPress Pointer button press PointerModifiers Pointer modifiers"
  },
  "api/Terminaux.Inputs.Presentation.Elements.DynamicTextElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.DynamicTextElement.html",
    "title": "Class DynamicTextElement | Terminaux API - Aptivi",
    "keywords": "Class DynamicTextElement Dynamic text element Inheritance object DynamicTextElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class DynamicTextElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the action which invokes the text, and the rest for the parameters to be formatted Declaration public object[]? Arguments { get; set; } Property Value Type Description object[] Methods | Edit this page View Source RenderToString() Renders the text Declaration public string RenderToString() Returns Type Description string Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.IElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.IElement.html",
    "title": "Interface IElement | Terminaux API - Aptivi",
    "keywords": "Interface IElement A presentation element Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public interface IElement Properties | Edit this page View Source Arguments Arguments Declaration object[]? Arguments { get; set; } Property Value Type Description object[] Methods | Edit this page View Source RenderToString() Renders an element to the string Declaration string RenderToString() Returns Type Description string"
  },
  "api/Terminaux.Inputs.Presentation.Elements.TextElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.TextElement.html",
    "title": "Class TextElement | Terminaux API - Aptivi",
    "keywords": "Class TextElement Text element Inheritance object TextElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class TextElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the text to be written, and the rest for the parameters to be formatted Declaration public object[]? Arguments { get; set; } Property Value Type Description object[] Methods | Edit this page View Source RenderToString() Renders the text Declaration public string RenderToString() Returns Type Description string Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.html",
    "title": "Namespace Terminaux.Inputs.Presentation.Elements | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Presentation.Elements Classes DynamicTextElement Dynamic text element TextElement Text element Interfaces IElement A presentation element"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.BaseInputMethod-1.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.BaseInputMethod-1.html",
    "title": "Class BaseInputMethod<T> | Terminaux API - Aptivi",
    "keywords": "Class BaseInputMethod<T> Base input method Inheritance object BaseInputMethod<T> MaskedTextInputMethod SelectionInputMethod SelectionMultipleInputMethod TextInputMethod Implements IInputMethod<T> Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public class BaseInputMethod<T> : IInputMethod<T> Type Parameters Name Description T Properties | Edit this page View Source Choices Declaration public virtual InputChoiceInfo[]? Choices { get; set; } Property Value Type Description InputChoiceInfo[] | Edit this page View Source DisplayInput The display name for the input Declaration public virtual string DisplayInput { get; } Property Value Type Description string | Edit this page View Source Input The input Declaration public virtual T? Input { get; } Property Value Type Description T | Edit this page View Source Provided Declaration public virtual bool Provided { get; set; } Property Value Type Description bool | Edit this page View Source Question Declaration public virtual string? Question { get; set; } Property Value Type Description string Methods | Edit this page View Source Process() Declaration public virtual bool Process() Returns Type Description bool | Edit this page View Source PromptInput() Prompts the user using the masked text input style Declaration public virtual void PromptInput() Exceptions Type Condition TerminauxException Implements IInputMethod<TInput>"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.IInputMethod-1.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.IInputMethod-1.html",
    "title": "Interface IInputMethod<TInput> | Terminaux API - Aptivi",
    "keywords": "Interface IInputMethod<TInput> Presentation input method element Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public interface IInputMethod<TInput> Type Parameters Name Description TInput Properties | Edit this page View Source Input Resulting input entered by the user Declaration TInput? Input { get; } Property Value Type Description TInput"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.IInputMethod.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.IInputMethod.html",
    "title": "Interface IInputMethod | Terminaux API - Aptivi",
    "keywords": "Interface IInputMethod Presentation input method element Inherited Members IInputMethod<object>.Input Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public interface IInputMethod : IInputMethod<object> Properties | Edit this page View Source Choices The choices Declaration InputChoiceInfo[]? Choices { get; } Property Value Type Description InputChoiceInfo[] | Edit this page View Source DisplayInput Input display for input list Declaration string DisplayInput { get; } Property Value Type Description string | Edit this page View Source Provided Whether the input has been provided Declaration bool Provided { get; } Property Value Type Description bool | Edit this page View Source Question The question to ask the user Declaration string? Question { get; } Property Value Type Description string Methods | Edit this page View Source Process() Processes the input after prompt Declaration bool Process() Returns Type Description bool True if the input is provided and processed correctly; false otherwise | Edit this page View Source PromptInput() Prompts the user to enter the input Declaration void PromptInput()"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.InputInfo.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.InputInfo.html",
    "title": "Class InputInfo | Terminaux API - Aptivi",
    "keywords": "Class InputInfo Input information for the presentation Inheritance object InputInfo Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public class InputInfo Constructors | Edit this page View Source InputInfo(string, string, IInputMethod, bool) Makes a new input info instance Declaration public InputInfo(string inputName, string inputDescription, IInputMethod inputMethod, bool required = false) Parameters Type Name Description string inputName Input name for the input list string inputDescription Input description for the input list IInputMethod inputMethod Input method for the resulting input bool required Whether this input is required or not Exceptions Type Condition TerminauxException Properties | Edit this page View Source InputDescription Input description for the input list Declaration public string InputDescription { get; } Property Value Type Description string | Edit this page View Source InputMethod Input method for the resulting input Declaration public IInputMethod InputMethod { get; } Property Value Type Description IInputMethod | Edit this page View Source InputName Input name for the input list Declaration public string InputName { get; } Property Value Type Description string | Edit this page View Source InputRequired Whether this input is required or not Declaration public bool InputRequired { get; } Property Value Type Description bool Methods | Edit this page View Source GetInputMethodInterface<T>() Input method for the resulting input (interface) Declaration public IInputMethod<T> GetInputMethodInterface<T>() Returns Type Description IInputMethod<T> Type Parameters Name Description T Target type for this input method | Edit this page View Source GetInputMethod<T>() Input method for the resulting input (generic) Declaration public T GetInputMethod<T>() where T : IInputMethod Returns Type Description T Type Parameters Name Description T Type of the available input methods"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.MaskedTextInputMethod.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.MaskedTextInputMethod.html",
    "title": "Class MaskedTextInputMethod | Terminaux API - Aptivi",
    "keywords": "Class MaskedTextInputMethod Masked text input method Inheritance object BaseInputMethod<string> MaskedTextInputMethod Implements IInputMethod<string> IInputMethod IInputMethod<object> Inherited Members BaseInputMethod<string>.Choices BaseInputMethod<string>.Provided BaseInputMethod<string>.Question Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public class MaskedTextInputMethod : BaseInputMethod<string>, IInputMethod<string>, IInputMethod, IInputMethod<object> Properties | Edit this page View Source DisplayInput The display name for the input Declaration public override string DisplayInput { get; } Property Value Type Description string Overrides BaseInputMethod<string>.DisplayInput | Edit this page View Source Input The input Declaration public override string Input { get; } Property Value Type Description string Overrides BaseInputMethod<string>.Input Methods | Edit this page View Source Process() Declaration public override bool Process() Returns Type Description bool Overrides BaseInputMethod<string>.Process() | Edit this page View Source PromptInput() Prompts the user using the masked text input style Declaration public override void PromptInput() Overrides BaseInputMethod<string>.PromptInput() Exceptions Type Condition TerminauxException Implements IInputMethod<TInput> IInputMethod IInputMethod<TInput>"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.SelectionInputMethod.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.SelectionInputMethod.html",
    "title": "Class SelectionInputMethod | Terminaux API - Aptivi",
    "keywords": "Class SelectionInputMethod Selection input method (single selection, uses informational box) Inheritance object BaseInputMethod<int> SelectionInputMethod Implements IInputMethod<int> IInputMethod IInputMethod<object> Inherited Members BaseInputMethod<int>.Choices BaseInputMethod<int>.Provided BaseInputMethod<int>.Question Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public class SelectionInputMethod : BaseInputMethod<int>, IInputMethod<int>, IInputMethod, IInputMethod<object> Properties | Edit this page View Source DisplayInput The display name for the input Declaration public override string DisplayInput { get; } Property Value Type Description string Overrides BaseInputMethod<int>.DisplayInput | Edit this page View Source Input The input Declaration public override int Input { get; } Property Value Type Description int Overrides BaseInputMethod<int>.Input Methods | Edit this page View Source Process() Declaration public override bool Process() Returns Type Description bool Overrides BaseInputMethod<int>.Process() | Edit this page View Source PromptInput() Prompts the user using the masked text input style Declaration public override void PromptInput() Overrides BaseInputMethod<int>.PromptInput() Exceptions Type Condition TerminauxException Implements IInputMethod<TInput> IInputMethod IInputMethod<TInput>"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.SelectionMultipleInputMethod.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.SelectionMultipleInputMethod.html",
    "title": "Class SelectionMultipleInputMethod | Terminaux API - Aptivi",
    "keywords": "Class SelectionMultipleInputMethod Selection multiple input method (multiple selection, uses informational box) Inheritance object BaseInputMethod<int[]> SelectionMultipleInputMethod Implements IInputMethod<int[]> IInputMethod IInputMethod<object> Inherited Members BaseInputMethod<int[]>.Choices BaseInputMethod<int[]>.DisplayInput BaseInputMethod<int[]>.Input BaseInputMethod<int[]>.Provided BaseInputMethod<int[]>.Question BaseInputMethod<int[]>.Process() BaseInputMethod<int[]>.PromptInput() Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public class SelectionMultipleInputMethod : BaseInputMethod<int[]>, IInputMethod<int[]>, IInputMethod, IInputMethod<object> Properties | Edit this page View Source DisplayInput The display name for the input Declaration public override string DisplayInput { get; } Property Value Type Description string Overrides BaseInputMethod<int[]>.DisplayInput | Edit this page View Source Input The input Declaration public override int[] Input { get; } Property Value Type Description int[] Overrides BaseInputMethod<int[]>.Input Methods | Edit this page View Source Process() Declaration public override bool Process() Returns Type Description bool Overrides BaseInputMethod<int[]>.Process() | Edit this page View Source PromptInput() Prompts the user using the masked text input style Declaration public override void PromptInput() Overrides BaseInputMethod<int[]>.PromptInput() Exceptions Type Condition TerminauxException Implements IInputMethod<TInput> IInputMethod IInputMethod<TInput>"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.TextInputMethod.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.TextInputMethod.html",
    "title": "Class TextInputMethod | Terminaux API - Aptivi",
    "keywords": "Class TextInputMethod Text input method Inheritance object BaseInputMethod<string> TextInputMethod Implements IInputMethod<string> IInputMethod IInputMethod<object> Inherited Members BaseInputMethod<string>.Choices BaseInputMethod<string>.Provided BaseInputMethod<string>.Question Namespace: Terminaux.Inputs.Presentation.Inputs Assembly: Terminaux.dll Syntax public class TextInputMethod : BaseInputMethod<string>, IInputMethod<string>, IInputMethod, IInputMethod<object> Properties | Edit this page View Source DisplayInput The display name for the input Declaration public override string DisplayInput { get; } Property Value Type Description string Overrides BaseInputMethod<string>.DisplayInput | Edit this page View Source Input The input Declaration public override string Input { get; } Property Value Type Description string Overrides BaseInputMethod<string>.Input Methods | Edit this page View Source Process() Declaration public override bool Process() Returns Type Description bool Overrides BaseInputMethod<string>.Process() | Edit this page View Source PromptInput() Prompts the user using the masked text input style Declaration public override void PromptInput() Overrides BaseInputMethod<string>.PromptInput() Exceptions Type Condition TerminauxException Implements IInputMethod<TInput> IInputMethod IInputMethod<TInput>"
  },
  "api/Terminaux.Inputs.Presentation.Inputs.html": {
    "href": "api/Terminaux.Inputs.Presentation.Inputs.html",
    "title": "Namespace Terminaux.Inputs.Presentation.Inputs | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Presentation.Inputs Classes BaseInputMethod<T> Base input method InputInfo Input information for the presentation MaskedTextInputMethod Masked text input method SelectionInputMethod Selection input method (single selection, uses informational box) SelectionMultipleInputMethod Selection multiple input method (multiple selection, uses informational box) TextInputMethod Text input method Interfaces IInputMethod Presentation input method element IInputMethod<TInput> Presentation input method element"
  },
  "api/Terminaux.Inputs.Presentation.PresentationPage.html": {
    "href": "api/Terminaux.Inputs.Presentation.PresentationPage.html",
    "title": "Class PresentationPage | Terminaux API - Aptivi",
    "keywords": "Class PresentationPage Presentation page Inheritance object PresentationPage Namespace: Terminaux.Inputs.Presentation Assembly: Terminaux.dll Syntax public class PresentationPage Constructors | Edit this page View Source PresentationPage(string, IElement[], InputInfo[]?) Makes a new presentation page Declaration public PresentationPage(string name, IElement[] elements, InputInfo[]? inputs = null) Parameters Type Name Description string name Page name IElement[] elements List of elements InputInfo[] inputs List of inputs Properties | Edit this page View Source Elements Presentation page elements Declaration public IElement[] Elements { get; } Property Value Type Description IElement[] | Edit this page View Source Inputs Presentation page inputs Declaration public InputInfo[] Inputs { get; } Property Value Type Description InputInfo[] | Edit this page View Source Name Presentation page name Declaration public string Name { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.Presentation.PresentationTools.html": {
    "href": "api/Terminaux.Inputs.Presentation.PresentationTools.html",
    "title": "Class PresentationTools | Terminaux API - Aptivi",
    "keywords": "Class PresentationTools Presentation tools Inheritance object PresentationTools Namespace: Terminaux.Inputs.Presentation Assembly: Terminaux.dll Syntax public static class PresentationTools Methods | Edit this page View Source Present(Slideshow) Present the presentation Declaration public static void Present(Slideshow presentation) Parameters Type Name Description Slideshow presentation Presentation instance | Edit this page View Source Present(Slideshow, bool, bool) Present the presentation Declaration public static void Present(Slideshow presentation, bool kiosk, bool required) Parameters Type Name Description Slideshow presentation Presentation instance bool kiosk Prevent any key other than ENTER from being pressed bool required Prevents exiting the presentation"
  },
  "api/Terminaux.Inputs.Presentation.Slideshow.html": {
    "href": "api/Terminaux.Inputs.Presentation.Slideshow.html",
    "title": "Class Slideshow | Terminaux API - Aptivi",
    "keywords": "Class Slideshow The presentation containing all the pages Inheritance object Slideshow Namespace: Terminaux.Inputs.Presentation Assembly: Terminaux.dll Syntax public class Slideshow Constructors | Edit this page View Source Slideshow(string, List<PresentationPage>) Makes a new presentation Declaration public Slideshow(string name, List<PresentationPage> pages) Parameters Type Name Description string name Presentation name List<PresentationPage> pages Presentation pages Properties | Edit this page View Source Name Presentation name Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source Pages Presentation pages Declaration public List<PresentationPage> Pages { get; } Property Value Type Description List<PresentationPage>"
  },
  "api/Terminaux.Inputs.Presentation.html": {
    "href": "api/Terminaux.Inputs.Presentation.html",
    "title": "Namespace Terminaux.Inputs.Presentation | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Presentation Classes PresentationPage Presentation page PresentationTools Presentation tools Slideshow The presentation containing all the pages"
  },
  "api/Terminaux.Inputs.Styles.Choice.ChoiceOutputType.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.ChoiceOutputType.html",
    "title": "Enum ChoiceOutputType | Terminaux API - Aptivi",
    "keywords": "Enum ChoiceOutputType The enumeration for the choice command output type Namespace: Terminaux.Inputs.Styles.Choice Assembly: Terminaux.dll Syntax public enum ChoiceOutputType Fields Name Description Modern The modern way of listing choices OneLine A question and a set of answers in one line Table The table of choices TwoLines A question in a line and a set of answers in another line"
  },
  "api/Terminaux.Inputs.Styles.Choice.ChoiceStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.ChoiceStyle.html",
    "title": "Class ChoiceStyle | Terminaux API - Aptivi",
    "keywords": "Class ChoiceStyle Choice style for input module Inheritance object ChoiceStyle Namespace: Terminaux.Inputs.Styles.Choice Assembly: Terminaux.dll Syntax public static class ChoiceStyle Methods | Edit this page View Source PromptChoice(string, (string, string)[], (string, string)[], Color, Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, Color disabledOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. (string, string)[] AlternateAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color Color disabledOptionColor The disabled option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], (string, string)[], Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. (string, string)[] AlternateAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], (string, string)[], Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, Color questionColor, Color inputColor, Color optionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. (string, string)[] AlternateAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], (string, string)[], Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, Color questionColor, Color inputColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. (string, string)[] AlternateAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], (string, string)[], Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, Color questionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. (string, string)[] AlternateAnswers Set of alternate answers. Color questionColor The question color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], (string, string)[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers and working titles for each answer in one tuple. (string, string)[] AlternateAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], Color, Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, Color disabledOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color Color disabledOptionColor The disabled option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, Color questionColor, Color inputColor, Color optionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, Color questionColor, Color inputColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. Color questionColor The question color Color inputColor The input color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, Color questionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. Color questionColor The question color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, (string, string)[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, (string, string)[] Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers and working titles for each answer in one tuple. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], Color, Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, Color disabledOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color Color disabledOptionColor The disabled option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, Color questionColor, Color inputColor, Color optionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, Color questionColor, Color inputColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. Color questionColor The question color Color inputColor The input color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, Color questionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. Color questionColor The question color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], InputChoiceInfo[], Color, Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, Color disabledOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color Color disabledOptionColor The disabled option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], InputChoiceInfo[], Color, Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, Color questionColor, Color inputColor, Color optionColor, Color altOptionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color Color altOptionColor The alt option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], InputChoiceInfo[], Color, Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, Color questionColor, Color inputColor, Color optionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color Color optionColor The option color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], InputChoiceInfo[], Color, Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, Color questionColor, Color inputColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. Color questionColor The question color Color inputColor The input color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], InputChoiceInfo[], Color, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, Color questionColor, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. Color questionColor The question color ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], InputChoiceInfo[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, InputChoiceInfo[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, InputChoiceInfo[] Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Choice.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.html",
    "title": "Namespace Terminaux.Inputs.Styles.Choice | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Choice Classes ChoiceStyle Choice style for input module Enums ChoiceOutputType The enumeration for the choice command output type"
  },
  "api/Terminaux.Inputs.Styles.ColorSelector.html": {
    "href": "api/Terminaux.Inputs.Styles.ColorSelector.html",
    "title": "Class ColorSelector | Terminaux API - Aptivi",
    "keywords": "Class ColorSelector Color selection application Inheritance object ColorSelector Namespace: Terminaux.Inputs.Styles Assembly: Terminaux.dll Syntax public static class ColorSelector Methods | Edit this page View Source OpenColorSelector(Color, ColorSettings?) Opens the color selector Declaration public static Color OpenColorSelector(Color initialColor, ColorSettings? settings = null) Parameters Type Name Description Color initialColor Initial color to use ColorSettings settings Settings to use Returns Type Description Color An instance of Color to get the resulting color | Edit this page View Source OpenColorSelector(ColorSettings?) Opens the color selector Declaration public static Color OpenColorSelector(ColorSettings? settings = null) Parameters Type Name Description ColorSettings settings Settings to use Returns Type Description Color An instance of Color to get the resulting color"
  },
  "api/Terminaux.Inputs.Styles.FigletSelector.html": {
    "href": "api/Terminaux.Inputs.Styles.FigletSelector.html",
    "title": "Class FigletSelector | Terminaux API - Aptivi",
    "keywords": "Class FigletSelector Figlet selector Inheritance object FigletSelector Namespace: Terminaux.Inputs.Styles Assembly: Terminaux.dll Syntax public static class FigletSelector Methods | Edit this page View Source PromptForFiglet() Prompts the user for a figlet font Declaration public static string PromptForFiglet() Returns Type Description string Selected figlet font | Edit this page View Source PromptForFiglet(string) Prompts the user for a figlet font Declaration public static string PromptForFiglet(string font) Parameters Type Name Description string font Initial font to select Returns Type Description string Selected figlet font"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxButtonsColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxButtonsColor.html",
    "title": "Class InfoBoxButtonsColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxButtonsColor Info box writer with buttons and color support Inheritance object InfoBoxButtonsColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxButtonsColor Methods | Edit this page View Source WriteInfoBoxButtons(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string title, InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, InputChoiceInfo[] buttons, string text, Color InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(InputChoiceInfo[] buttons, string text, Color InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color Color BackgroundColor InfoBoxTitledButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, InputChoiceInfo[] buttons, string text, Color InfoBoxTitledButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxButtonsColor InfoBoxButtons color Color BackgroundColor InfoBoxButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(InputChoiceInfo[] buttons, string text, Color InfoBoxButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxButtonsColor InfoBoxButtons color from Nitrocid KS's Color Color BackgroundColor InfoBoxButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string title, InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxColor.html",
    "title": "Class InfoBoxColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxColor Info box writer with color support Inheritance object InfoBoxColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxColor Methods | Edit this page View Source WriteInfoBox(string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, char, char, char, char, char, char, char, char, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, char, char, char, char, char, char, char, char, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputColor.html",
    "title": "Class InfoBoxInputColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxInputColor Info box writer with input and color support Inheritance object InfoBoxInputColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxInputColor Methods | Edit this page View Source WriteInfoBoxInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputPasswordColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputPasswordColor.html",
    "title": "Class InfoBoxInputPasswordColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxInputPasswordColor Info box writer with password input and color support Inheritance object InfoBoxInputPasswordColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxInputPasswordColor Methods | Edit this page View Source WriteInfoBoxInputPassword(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPassword(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPassword(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPassword(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPassword(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPassword(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPassword(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPassword(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColor(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColor(string, string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColor(string title, string text, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColor(string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColorBack(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColorBack(string, string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColorBack(string title, string text, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputPasswordColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputPasswordColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxProgressColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxProgressColor.html",
    "title": "Class InfoBoxProgressColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxProgressColor Info box writer with progress and color support Inheritance object InfoBoxProgressColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxProgressColor Methods | Edit this page View Source WriteInfoBoxProgress(double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color Color BackgroundColor InfoBoxProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxProgressColor InfoBoxProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color Color BackgroundColor InfoBoxTitledProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxTitledProgressColor InfoBoxTitledProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(double progress, string text, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(string, double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(string title, double progress, string text, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionColor.html",
    "title": "Class InfoBoxSelectionColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxSelectionColor Info box writer with selection and color support Inheritance object InfoBoxSelectionColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxSelectionColor Methods | Edit this page View Source WriteInfoBoxSelection(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionColor InfoBoxSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color Color BackgroundColor InfoBoxTitledSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxSelectionColor InfoBoxSelection color Color BackgroundColor InfoBoxSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionColor InfoBoxSelection color from Nitrocid KS's Color Color BackgroundColor InfoBoxSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionMultipleColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionMultipleColor.html",
    "title": "Class InfoBoxSelectionMultipleColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxSelectionMultipleColor Info box writer with selection and color support Inheritance object InfoBoxSelectionMultipleColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxSelectionMultipleColor Methods | Edit this page View Source WriteInfoBoxSelectionMultiple(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionMultipleColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionMultipleColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color Color BackgroundColor InfoBoxTitledSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color Color BackgroundColor InfoBoxSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color from Nitrocid KS's Color Color BackgroundColor InfoBoxSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.html",
    "title": "Namespace Terminaux.Inputs.Styles.Infobox | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Infobox Classes InfoBoxButtonsColor Info box writer with buttons and color support InfoBoxColor Info box writer with color support InfoBoxInputColor Info box writer with input and color support InfoBoxInputPasswordColor Info box writer with password input and color support InfoBoxProgressColor Info box writer with progress and color support InfoBoxSelectionColor Info box writer with selection and color support InfoBoxSelectionMultipleColor Info box writer with selection and color support"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionInputTools.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionInputTools.html",
    "title": "Class SelectionInputTools | Terminaux API - Aptivi",
    "keywords": "Class SelectionInputTools Selection style input tools Inheritance object SelectionInputTools Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionInputTools Methods | Edit this page View Source RenderSelections(InputChoiceInfo[], int, int, int, int, int, bool, int, bool, Color?, Color?, Color?, Color?, Color?, Color?, Color?, Color?, Color?, Color?) Renders the selections to the console Declaration public static string RenderSelections(InputChoiceInfo[] selections, int left, int top, int currentSelection, int selectionChoices, int width, bool sliderInside = false, int altChoicePos = 0, bool swapSelectedColors = true, Color? foregroundColor = null, Color? backgroundColor = null, Color? selectedForegroundColor = null, Color? selectedBackgroundColor = null, Color? altForegroundColor = null, Color? altBackgroundColor = null, Color? altSelectedForegroundColor = null, Color? altSelectedBackgroundColor = null, Color? disabledForegroundColor = null, Color? disabledBackgroundColor = null) Parameters Type Name Description InputChoiceInfo[] selections The selection choices int left Left position of the selection box (upper left corner, zero-based) int top Top position of the selection box (upper left corner, zero-based) int currentSelection Zero-based current choice selection int selectionChoices How many choices to render to the selection box? One-based. int width Width of the selection box (zero-based) bool sliderInside Whether to render the slider inside the box or outside the box int altChoicePos Alternate choice position (zero-based) bool swapSelectedColors Whether to swap the selected choice colors or not Color foregroundColor Foreground color of the unselected item Color backgroundColor Background color of the unselected item Color selectedForegroundColor Foreground color of the selected item Color selectedBackgroundColor Background color of the selected item Color altForegroundColor Foreground color of the unselected alternate item Color altBackgroundColor Background color of the unselected alternate item Color altSelectedForegroundColor Foreground color of the selected alternate item Color altSelectedBackgroundColor Background color of the selected alternate item Color disabledForegroundColor Foreground color of the disabled item Color disabledBackgroundColor Background color of the disabled item Returns Type Description string A string that you can use with the raw console writer or with the screen part renderer Exceptions Type Condition TerminauxException | Edit this page View Source RenderSelections(InputChoiceInfo[], int, int, int, int[]?, int, int, bool, int, bool, Color?, Color?, Color?, Color?, Color?, Color?, Color?, Color?, Color?, Color?) Renders the selections to the console Declaration public static string RenderSelections(InputChoiceInfo[] selections, int left, int top, int currentSelection, int[]? currentSelections, int selectionChoices, int width, bool sliderInside = false, int altChoicePos = 0, bool swapSelectedColors = true, Color? foregroundColor = null, Color? backgroundColor = null, Color? selectedForegroundColor = null, Color? selectedBackgroundColor = null, Color? altForegroundColor = null, Color? altBackgroundColor = null, Color? altSelectedForegroundColor = null, Color? altSelectedBackgroundColor = null, Color? disabledForegroundColor = null, Color? disabledBackgroundColor = null) Parameters Type Name Description InputChoiceInfo[] selections The selection choices int left Left position of the selection box (upper left corner, zero-based) int top Top position of the selection box (upper left corner, zero-based) int currentSelection Zero-based current choice selection int[] currentSelections List of zero-based current selection numbers (for multiple choice selection) int selectionChoices How many choices to render to the selection box? One-based. int width Width of the selection box (zero-based) bool sliderInside Whether to render the slider inside the box or outside the box int altChoicePos Alternate choice position (zero-based) bool swapSelectedColors Whether to swap the selected choice colors or not Color foregroundColor Foreground color of the unselected item Color backgroundColor Background color of the unselected item Color selectedForegroundColor Foreground color of the selected item Color selectedBackgroundColor Background color of the selected item Color altForegroundColor Foreground color of the unselected alternate item Color altBackgroundColor Background color of the unselected alternate item Color altSelectedForegroundColor Foreground color of the selected alternate item Color altSelectedBackgroundColor Background color of the selected alternate item Color disabledForegroundColor Foreground color of the disabled item Color disabledBackgroundColor Background color of the disabled item Returns Type Description string A string that you can use with the raw console writer or with the screen part renderer Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionMultipleStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionMultipleStyle.html",
    "title": "Class SelectionMultipleStyle | Terminaux API - Aptivi",
    "keywords": "Class SelectionMultipleStyle Multiple selection style for input module Inheritance object SelectionMultipleStyle Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionMultipleStyle Methods | Edit this page View Source PromptMultipleSelection(string, (string, string)[], bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, (string, string)[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, (string, string)[], (string, string)[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. (string, string)[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, (string, string)[], (string, string)[], SelectionStyleSettings, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. (string, string)[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, (string, string)[], SelectionStyleSettings, bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, (string, string)[] Answers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, InputChoiceInfo[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, InputChoiceInfo[], InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, InputChoiceInfo[], InputChoiceInfo[], SelectionStyleSettings, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, InputChoiceInfo[], SelectionStyleSettings, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, InputChoiceInfo[] Answers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int[]"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionStyle.html",
    "title": "Class SelectionStyle | Terminaux API - Aptivi",
    "keywords": "Class SelectionStyle Selection style for input module Inheritance object SelectionStyle Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionStyle Methods | Edit this page View Source PromptSelection(string, (string, string)[], bool) Prompts user for selection Declaration public static int PromptSelection(string Question, (string, string)[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, (string, string)[], (string, string)[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. (string, string)[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, (string, string)[], (string, string)[], SelectionStyleSettings, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, (string, string)[] Answers, (string, string)[] AlternateAnswers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. (string, string)[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, (string, string)[], SelectionStyleSettings, bool) Prompts user for selection Declaration public static int PromptSelection(string Question, (string, string)[] Answers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question (string, string)[] Answers Set of answers. They can be written like this: Y/N/C. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], InputChoiceInfo[], SelectionStyleSettings, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], SelectionStyleSettings, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, SelectionStyleSettings settings, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. SelectionStyleSettings settings Selection settings bool kiosk Whether to prevent exiting or not Returns Type Description int"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionStyleSettings.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionStyleSettings.html",
    "title": "Class SelectionStyleSettings | Terminaux API - Aptivi",
    "keywords": "Class SelectionStyleSettings Settings for the selection style Inheritance object SelectionStyleSettings Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public class SelectionStyleSettings Properties | Edit this page View Source AltOptionColor Alternative option color Declaration public Color AltOptionColor { get; set; } Property Value Type Description Color | Edit this page View Source DisabledOptionColor Disabled option color Declaration public Color DisabledOptionColor { get; set; } Property Value Type Description Color | Edit this page View Source GlobalSettings Global selection style settings Declaration public static SelectionStyleSettings GlobalSettings { get; } Property Value Type Description SelectionStyleSettings | Edit this page View Source InputColor Input color Declaration public Color InputColor { get; set; } Property Value Type Description Color | Edit this page View Source OptionColor Option color Declaration public Color OptionColor { get; set; } Property Value Type Description Color | Edit this page View Source QuestionColor Question color Declaration public Color QuestionColor { get; set; } Property Value Type Description Color | Edit this page View Source SelectedOptionColor Selected option color Declaration public Color SelectedOptionColor { get; set; } Property Value Type Description Color | Edit this page View Source SeparatorColor Separator color Declaration public Color SeparatorColor { get; set; } Property Value Type Description Color | Edit this page View Source SliderColor Slider color Declaration public Color SliderColor { get; set; } Property Value Type Description Color | Edit this page View Source TextColor Text color Declaration public Color TextColor { get; set; } Property Value Type Description Color"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionStyleSwitches.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionStyleSwitches.html",
    "title": "Class SelectionStyleSwitches | Terminaux API - Aptivi",
    "keywords": "Class SelectionStyleSwitches Switches for the selection style Inheritance object SelectionStyleSwitches Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionStyleSwitches Properties | Edit this page View Source ShowPageCount Shows the page count Declaration public static bool ShowPageCount { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Inputs.Styles.Selection.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.html",
    "title": "Namespace Terminaux.Inputs.Styles.Selection | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Selection Classes SelectionInputTools Selection style input tools SelectionMultipleStyle Multiple selection style for input module SelectionStyle Selection style for input module SelectionStyleSettings Settings for the selection style SelectionStyleSwitches Switches for the selection style"
  },
  "api/Terminaux.Inputs.Styles.html": {
    "href": "api/Terminaux.Inputs.Styles.html",
    "title": "Namespace Terminaux.Inputs.Styles | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles Classes ColorSelector Color selection application FigletSelector Figlet selector"
  },
  "api/Terminaux.Inputs.html": {
    "href": "api/Terminaux.Inputs.html",
    "title": "Namespace Terminaux.Inputs | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs Classes InputChoiceInfo Choice information for input InputChoiceTools Input choice tools"
  },
  "api/Terminaux.Reader.Bindings.BaseBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.BaseBinding.html",
    "title": "Class BaseBinding | Terminaux API - Aptivi",
    "keywords": "Class BaseBinding Base key binding Inheritance object BaseBinding Implements IBinding Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public abstract class BaseBinding : IBinding Properties | Edit this page View Source BoundKeys Key to bind to Declaration public virtual ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] | Edit this page View Source IsExit Does this binding cause the input to exit? Declaration public virtual bool IsExit { get; } Property Value Type Description bool | Edit this page View Source ResetSuggestionsTextPos Resets the suggestions text position Declaration public virtual bool ResetSuggestionsTextPos { get; } Property Value Type Description bool Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the binding matched Declaration public virtual bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Input key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration public virtual void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader Implements IBinding"
  },
  "api/Terminaux.Reader.Bindings.CustomBindings.html": {
    "href": "api/Terminaux.Reader.Bindings.CustomBindings.html",
    "title": "Class CustomBindings | Terminaux API - Aptivi",
    "keywords": "Class CustomBindings Custom binding handler Inheritance object CustomBindings Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public static class CustomBindings Methods | Edit this page View Source Bind(BaseBinding) Binds the key to the custom bindings list to be executed on press Declaration public static void Bind(BaseBinding binding) Parameters Type Name Description BaseBinding binding Base containing information about key binding | Edit this page View Source Unbind(ConsoleKeyInfo) Unbinds the key from the custom bindings list Declaration public static void Unbind(ConsoleKeyInfo cki) Parameters Type Name Description ConsoleKeyInfo cki Key information to remove the binding"
  },
  "api/Terminaux.Reader.Bindings.IBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.IBinding.html",
    "title": "Interface IBinding | Terminaux API - Aptivi",
    "keywords": "Interface IBinding Key binding interface Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public interface IBinding Properties | Edit this page View Source BoundKeys Keys to bind to Declaration ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] | Edit this page View Source ResetSuggestionsTextPos Resets the suggestions text position Declaration bool ResetSuggestionsTextPos { get; } Property Value Type Description bool Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the bind matched Declaration bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader"
  },
  "api/Terminaux.Reader.Bindings.html": {
    "href": "api/Terminaux.Reader.Bindings.html",
    "title": "Namespace Terminaux.Reader.Bindings | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Bindings Classes BaseBinding Base key binding CustomBindings Custom binding handler Interfaces IBinding Key binding interface"
  },
  "api/Terminaux.Reader.Highlighting.SyntaxHighlighting.html": {
    "href": "api/Terminaux.Reader.Highlighting.SyntaxHighlighting.html",
    "title": "Class SyntaxHighlighting | Terminaux API - Aptivi",
    "keywords": "Class SyntaxHighlighting Syntax highlighting class that contains components Inheritance object SyntaxHighlighting Namespace: Terminaux.Reader.Highlighting Assembly: Terminaux.dll Syntax public class SyntaxHighlighting Properties | Edit this page View Source Components Template name Declaration [JsonIgnore] public ReadOnlyDictionary<string, SyntaxHighlightingComponent> Components { get; } Property Value Type Description ReadOnlyDictionary<string, SyntaxHighlightingComponent> | Edit this page View Source Name Template name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string"
  },
  "api/Terminaux.Reader.Highlighting.SyntaxHighlightingComponent.html": {
    "href": "api/Terminaux.Reader.Highlighting.SyntaxHighlightingComponent.html",
    "title": "Class SyntaxHighlightingComponent | Terminaux API - Aptivi",
    "keywords": "Class SyntaxHighlightingComponent Syntax highlighting tools Inheritance object SyntaxHighlightingComponent Namespace: Terminaux.Reader.Highlighting Assembly: Terminaux.dll Syntax public class SyntaxHighlightingComponent Constructors | Edit this page View Source SyntaxHighlightingComponent(string, Color, Color, bool, bool) Makes an instance of the syntax highlighter component class Declaration public SyntaxHighlightingComponent(string componentMatch, Color componentForegroundColor, Color componentBackgroundColor, bool useBackgroundColor, bool useForegroundColor) Parameters Type Name Description string componentMatch Regular expression to match in input Color componentForegroundColor Foreground color of the component Color componentBackgroundColor Background color of the component bool useBackgroundColor Whether the syntax highlighter can use the background color or not bool useForegroundColor Whether the syntax highlighter can use the foreground color or not Exceptions Type Condition TerminauxException Properties | Edit this page View Source ComponentBackgroundColor Component background color Declaration [JsonIgnore] public Color? ComponentBackgroundColor { get; } Property Value Type Description Color | Edit this page View Source ComponentForegroundColor Component foreground color Declaration [JsonIgnore] public Color? ComponentForegroundColor { get; } Property Value Type Description Color | Edit this page View Source ComponentMatch Regular expression to match a component Declaration [JsonIgnore] public Regex? ComponentMatch { get; } Property Value Type Description Regex | Edit this page View Source UseBackgroundColor Component background color Declaration [JsonIgnore] public bool UseBackgroundColor { get; } Property Value Type Description bool | Edit this page View Source UseForegroundColor Component background color Declaration [JsonIgnore] public bool UseForegroundColor { get; } Property Value Type Description bool"
  },
  "api/Terminaux.Reader.Highlighting.SyntaxHighlightingTools.html": {
    "href": "api/Terminaux.Reader.Highlighting.SyntaxHighlightingTools.html",
    "title": "Class SyntaxHighlightingTools | Terminaux API - Aptivi",
    "keywords": "Class SyntaxHighlightingTools Syntax highlighting tools Inheritance object SyntaxHighlightingTools Namespace: Terminaux.Reader.Highlighting Assembly: Terminaux.dll Syntax public static class SyntaxHighlightingTools Properties | Edit this page View Source HighlighterNames All installed highlighter names Declaration public static string[] HighlighterNames { get; } Property Value Type Description string[] | Edit this page View Source Highlighters All installed highlighters Declaration public static SyntaxHighlighting[] Highlighters { get; } Property Value Type Description SyntaxHighlighting[] Methods | Edit this page View Source Exists(string) Checks to see if a highlighter exists or not Declaration public static bool Exists(string highlighter) Parameters Type Name Description string highlighter A specific highlighter to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source ExistsBuiltin(string) Checks to see if a highlighter is a built-in or not Declaration public static bool ExistsBuiltin(string highlighter) Parameters Type Name Description string highlighter A specific highlighter to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source GetComponent(string) Gets the default highlighter Declaration public static SyntaxHighlightingComponent GetComponent(string componentName) Parameters Type Name Description string componentName Component name Returns Type Description SyntaxHighlightingComponent Exceptions Type Condition TerminauxException | Edit this page View Source GetComponent(string, string) Gets the default highlighter Declaration public static SyntaxHighlightingComponent GetComponent(string highlighter, string componentName) Parameters Type Name Description string highlighter Highlighter name string componentName Component name Returns Type Description SyntaxHighlightingComponent Exceptions Type Condition TerminauxException | Edit this page View Source GetComponent(SyntaxHighlighting?, string) Gets the highlighter Declaration public static SyntaxHighlightingComponent GetComponent(SyntaxHighlighting? highlighter, string componentName) Parameters Type Name Description SyntaxHighlighting highlighter Highlighter string componentName Component name Returns Type Description SyntaxHighlightingComponent Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighter() Gets the default highlighter for the current read. Returns null if no reader is present. Declaration public static SyntaxHighlighting? GetHighlighter() Returns Type Description SyntaxHighlighting Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighter(string) Gets the highlighter Declaration public static SyntaxHighlighting GetHighlighter(string highlighter) Parameters Type Name Description string highlighter Highlighter name Returns Type Description SyntaxHighlighting Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterFromJson(string) Gets a highlighter from its JSON representation Declaration public static SyntaxHighlighting? GetHighlighterFromJson(string json) Parameters Type Name Description string json Highlighter JSON contents Returns Type Description SyntaxHighlighting A highlighter info containing JSON representation Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterToJson() Gets a JSON representation of the highlighter Declaration public static string GetHighlighterToJson() Returns Type Description string A string containing the JSON representation of a highlighter Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterToJson(string) Gets a JSON representation of the highlighter Declaration public static string GetHighlighterToJson(string highlighter) Parameters Type Name Description string highlighter Highlighter name to save to JSON Returns Type Description string A string containing the JSON representation of a highlighter Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterToJson(SyntaxHighlighting?) Gets a JSON representation of the highlighter Declaration public static string GetHighlighterToJson(SyntaxHighlighting? highlighter) Parameters Type Name Description SyntaxHighlighting highlighter Highlighter to save to JSON Returns Type Description string A string containing the JSON representation of a highlighter Exceptions Type Condition TerminauxException | Edit this page View Source RegisterHighlighter(SyntaxHighlighting) Registers a highlighter Declaration public static void RegisterHighlighter(SyntaxHighlighting highlighter) Parameters Type Name Description SyntaxHighlighting highlighter Highlighter information | Edit this page View Source UnregisterHighlighter(string) Unregisters a highlighter Declaration public static void UnregisterHighlighter(string highlighter) Parameters Type Name Description string highlighter Highlighter information"
  },
  "api/Terminaux.Reader.Highlighting.html": {
    "href": "api/Terminaux.Reader.Highlighting.html",
    "title": "Namespace Terminaux.Reader.Highlighting | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Highlighting Classes SyntaxHighlighting Syntax highlighting class that contains components SyntaxHighlightingComponent Syntax highlighting tools SyntaxHighlightingTools Syntax highlighting tools"
  },
  "api/Terminaux.Reader.TermReader.html": {
    "href": "api/Terminaux.Reader.TermReader.html",
    "title": "Class TermReader | Terminaux API - Aptivi",
    "keywords": "Class TermReader Terminal input reader module Inheritance object TermReader Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReader Properties | Edit this page View Source GlobalReaderSettings The global reader settings Declaration public static TermReaderSettings GlobalReaderSettings { get; } Property Value Type Description TermReaderSettings Methods | Edit this page View Source Read(bool) Reads the input Declaration public static string Read(bool interruptible = true) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(Func<string>, bool) Reads the input Declaration public static string Read(Func<string> inputPrompt, bool interruptible = true) Parameters Type Name Description Func<string> inputPrompt The dynamic input function to prompt the user bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(Func<string>, string, bool, bool, bool) Reads the input Declaration public static string Read(Func<string> inputPrompt, string defaultValue, bool password = false, bool oneLineWrap = false, bool interruptible = true) Parameters Type Name Description Func<string> inputPrompt The dynamic input function to prompt the user string defaultValue Default value to use if no input is provided bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(Func<string>, string, TermReaderSettings, bool, bool, bool) Reads the input Declaration public static string Read(Func<string> inputPrompt, string defaultValue, TermReaderSettings settings, bool password = false, bool oneLineWrap = false, bool interruptible = true) Parameters Type Name Description Func<string> inputPrompt The dynamic input function to prompt the user string defaultValue Default value to use if no input is provided TermReaderSettings settings Settings containing reader-related settings bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(Func<string>, TermReaderSettings, bool) Reads the input Declaration public static string Read(Func<string> inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description Func<string> inputPrompt The dynamic input function to prompt the user TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, bool) Reads the input Declaration public static string Read(string inputPrompt, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, string, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, bool password = false, bool oneLineWrap = false, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read string defaultValue Default value to use if no input is provided bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, string, TermReaderSettings, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, TermReaderSettings settings, bool password = false, bool oneLineWrap = false, bool interruptible = true) Parameters Type Name Description string inputPrompt The dynamic input function to prompt the user string defaultValue Default value to use if no input is provided TermReaderSettings settings Settings containing reader-related settings bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, TermReaderSettings, bool) Reads the input Declaration public static string Read(string inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(TermReaderSettings, bool) Reads the input Declaration public static string Read(TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadKey() Reads the next key from the console input stream Declaration public static ConsoleKeyInfo ReadKey() Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadKey(bool) Reads the next key from the console input stream Declaration public static ConsoleKeyInfo ReadKey(bool intercept) Parameters Type Name Description bool intercept Whether to intercept the key pressed or to just show the actual key to the console Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadKeyTimeout(bool, TimeSpan) Reads the next key from the console input stream with the timeout Declaration public static (ConsoleKeyInfo result, bool provided) ReadKeyTimeout(bool Intercept, TimeSpan Timeout) Parameters Type Name Description bool Intercept Whether to intercept an input TimeSpan Timeout Timeout Returns Type Description (ConsoleKeyInfo result, bool provided) | Edit this page View Source ReadPassword(bool) Reads the input with password character masking Declaration public static string ReadPassword(bool interruptible = true) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, bool interruptible = true) Parameters Type Name Description char mask Password mask character bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, Func<string>, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, Func<string> inputPrompt, bool interruptible = true) Parameters Type Name Description char mask Password mask character Func<string> inputPrompt The dynamic input function to prompt the user bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, Func<string>, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, Func<string> inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description char mask Password mask character Func<string> inputPrompt The dynamic input function to prompt the user TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, string, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, string inputPrompt, bool interruptible = true) Parameters Type Name Description char mask Password mask character string inputPrompt The input to be read bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, string, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, string inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description char mask Password mask character string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description char mask Password mask character TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(Func<string>, bool) Reads the input with password character masking Declaration public static string ReadPassword(Func<string> inputPrompt, bool interruptible = true) Parameters Type Name Description Func<string> inputPrompt The dynamic input function to prompt the user bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(Func<string>, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(Func<string> inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description Func<string> inputPrompt The dynamic input function to prompt the user TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(string, bool) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(string, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPointer() Reads a pointer (blocking) Declaration public static PointerEventContext ReadPointer() Returns Type Description PointerEventContext A PointerEventContext instance that describes the last mouse event. | Edit this page View Source ReadPointerOrKey() Reads either a pointer or a key (blocking) Declaration public static (PointerEventContext?, ConsoleKeyInfo) ReadPointerOrKey() Returns Type Description (PointerEventContext, ConsoleKeyInfo)"
  },
  "api/Terminaux.Reader.TermReaderSettings.html": {
    "href": "api/Terminaux.Reader.TermReaderSettings.html",
    "title": "Class TermReaderSettings | Terminaux API - Aptivi",
    "keywords": "Class TermReaderSettings Settings for the reader Inheritance object TermReaderSettings Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderSettings Constructors | Edit this page View Source TermReaderSettings() Initializes an empty reader settings instance Declaration public TermReaderSettings() | Edit this page View Source TermReaderSettings(TermReaderSettings) Initializes a reader settings instance Declaration public TermReaderSettings(TermReaderSettings settings) Parameters Type Name Description TermReaderSettings settings Settings to copy from Properties | Edit this page View Source HistoryEnabled Input history enabled Declaration public bool HistoryEnabled { get; set; } Property Value Type Description bool | Edit this page View Source InputBackgroundColor Input background color Declaration public Color InputBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source InputForegroundColor Input foreground color Declaration public Color InputForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source LeftMargin Left margin Declaration public int LeftMargin { get; set; } Property Value Type Description int | Edit this page View Source PasswordMaskChar Password mask character Declaration public char PasswordMaskChar { get; set; } Property Value Type Description char | Edit this page View Source PlaceholderText Show placeholder hint text Declaration public string PlaceholderText { get; set; } Property Value Type Description string | Edit this page View Source RightMargin Right margin Declaration public int RightMargin { get; set; } Property Value Type Description int | Edit this page View Source Suggestions Suggestion entries Declaration public Func<string, int, char[], string[]> Suggestions { set; } Property Value Type Description Func<string, int, char[], string[]> | Edit this page View Source SuggestionsDelimiters Suggestion delimiters Declaration public char[] SuggestionsDelimiters { set; } Property Value Type Description char[] | Edit this page View Source SyntaxHighlighter Syntax highlighter to use. It must be registered. Declaration public SyntaxHighlighting? SyntaxHighlighter { get; set; } Property Value Type Description SyntaxHighlighting | Edit this page View Source SyntaxHighlighterEnabled Syntax highlighter is enabled Declaration public bool SyntaxHighlighterEnabled { get; set; } Property Value Type Description bool | Edit this page View Source TreatCtrlCAsInput Treat Ctrl + C as input Declaration public bool TreatCtrlCAsInput { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Reader.TermReaderState.html": {
    "href": "api/Terminaux.Reader.TermReaderState.html",
    "title": "Class TermReaderState | Terminaux API - Aptivi",
    "keywords": "Class TermReaderState State of the reader Inheritance object TermReaderState Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderState Properties | Edit this page View Source CanInsert Can insert a new character? Declaration public bool CanInsert { get; } Property Value Type Description bool | Edit this page View Source Commentized Whether the current input character is commentized by the hashtag (#) character or not. Declaration public bool Commentized { get; } Property Value Type Description bool | Edit this page View Source CurrentCursorPosLeft Current cursor left position Declaration public int CurrentCursorPosLeft { get; } Property Value Type Description int | Edit this page View Source CurrentCursorPosTop Current cursor top position Declaration public int CurrentCursorPosTop { get; } Property Value Type Description int | Edit this page View Source CurrentHistoryPos Current history number Declaration public int CurrentHistoryPos { get; } Property Value Type Description int | Edit this page View Source CurrentState Gets the current state Declaration public static TermReaderState? CurrentState { get; } Property Value Type Description TermReaderState | Edit this page View Source CurrentSuggestionsPos Current suggestion number Declaration public int CurrentSuggestionsPos { get; } Property Value Type Description int | Edit this page View Source CurrentSuggestionsTextPos Current suggestions text position Declaration public int CurrentSuggestionsTextPos { get; } Property Value Type Description int | Edit this page View Source CurrentText Current text Declaration public StringBuilder CurrentText { get; } Property Value Type Description StringBuilder | Edit this page View Source CurrentTextPos Current text character number Declaration public int CurrentTextPos { get; } Property Value Type Description int | Edit this page View Source History History entries Declaration public List<string> History { get; } Property Value Type Description List<string> | Edit this page View Source InputPromptHeight Input prompt text Declaration public int InputPromptHeight { get; } Property Value Type Description int | Edit this page View Source InputPromptLastLine Input prompt last line Declaration public string InputPromptLastLine { get; } Property Value Type Description string | Edit this page View Source InputPromptLastLineLength Input prompt last line length Declaration public int InputPromptLastLineLength { get; } Property Value Type Description int | Edit this page View Source InputPromptLeft Left position of the input prompt (with the left margin) Declaration public int InputPromptLeft { get; } Property Value Type Description int | Edit this page View Source InputPromptLeftBegin Left position of the input prompt (where the first letter of the input prompt is located) Declaration public int InputPromptLeftBegin { get; } Property Value Type Description int | Edit this page View Source InputPromptText Input prompt text Declaration public string InputPromptText { get; } Property Value Type Description string | Edit this page View Source InputPromptTop Top position of the input prompt Declaration public int InputPromptTop { get; } Property Value Type Description int | Edit this page View Source InputPromptTopBegin Top position of the input prompt (where the first letter of the input prompt is located) Declaration public int InputPromptTopBegin { get; } Property Value Type Description int | Edit this page View Source KillBuffer Text to be pasted Declaration public StringBuilder KillBuffer { get; } Property Value Type Description StringBuilder | Edit this page View Source LeftMargin Left margin Declaration public int LeftMargin { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeft Longest sentence length (from the leftmost position, without offset created by the last line in the prompt) Declaration public int LongestSentenceLengthFromLeft { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeftForFirstLine Longest sentence length (from the leftmost position, with the length of the last line in the prompt plus the left margin) Declaration public int LongestSentenceLengthFromLeftForFirstLine { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeftForGeneralLine Longest sentence length (from the leftmost position, with the left margin) Declaration public int LongestSentenceLengthFromLeftForGeneralLine { get; } Property Value Type Description int | Edit this page View Source MaximumInputPositionLeft Maximum input left position Declaration public int MaximumInputPositionLeft { get; } Property Value Type Description int | Edit this page View Source OneLineWrap Whether one line wrapping is enabled Declaration public bool OneLineWrap { get; } Property Value Type Description bool | Edit this page View Source OperationWasInvalid Whether an invalid key was pressed, or an invalid operation was performed, or not. Declaration public bool OperationWasInvalid { get; } Property Value Type Description bool | Edit this page View Source PasswordMode Password Mode Declaration public bool PasswordMode { get; } Property Value Type Description bool | Edit this page View Source PressedKey Currently pressed key Declaration public ConsoleKeyInfo PressedKey { get; } Property Value Type Description ConsoleKeyInfo | Edit this page View Source RightMargin Right margin Declaration public int RightMargin { get; } Property Value Type Description int | Edit this page View Source Settings Reader settings (general or overridden) Declaration public TermReaderSettings Settings { get; } Property Value Type Description TermReaderSettings"
  },
  "api/Terminaux.Reader.TermReaderTools.html": {
    "href": "api/Terminaux.Reader.TermReaderTools.html",
    "title": "Class TermReaderTools | Terminaux API - Aptivi",
    "keywords": "Class TermReaderTools Terminal reader tools Inheritance object TermReaderTools Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReaderTools Properties | Edit this page View Source Busy Specifies whether the terminal reader is busy waiting for input or not Declaration public static bool Busy { get; } Property Value Type Description bool Methods | Edit this page View Source ClearHistory() Clears the history Declaration public static void ClearHistory() | Edit this page View Source GetMaximumInputLength() Gets the maximum input length for the current reader session Declaration public static int GetMaximumInputLength() Returns Type Description int The maximum input length of an input. -1 if there is no reader. | Edit this page View Source InsertNewText(string, bool, bool) Inserts new text to the current reader Declaration public static void InsertNewText(string newText, bool append = false, bool step = true) Parameters Type Name Description string newText New text to insert or append bool append Whether to append the new text to the end of the input or to insert text to the current position bool step Whether to move the cursor forward after inserting or not | Edit this page View Source Interrupt() Interrupts the reading process Declaration public static void Interrupt() | Edit this page View Source Refresh() Refreshes the reader prompt Declaration public static void Refresh() | Edit this page View Source RemoveText(int, bool) Removes text from the current position Declaration public static void RemoveText(int length, bool step = false) Parameters Type Name Description int length Length of characters to remove bool step Whether to step backwards after removing characters | Edit this page View Source RemoveText(int, int, bool) Removes text from the current position Declaration public static void RemoveText(int startIndex, int length, bool step = false) Parameters Type Name Description int startIndex Zero-based index of where to start removing length characters int length Length of characters to remove bool step Whether to step backwards after removing characters | Edit this page View Source SetHistory(List<string>) Sets the history Declaration public static void SetHistory(List<string> History) Parameters Type Name Description List<string> History List of history entries | Edit this page View Source WaitForInput() Waits indefinitely for an input. Returns immediately if not busy. Declaration public static void WaitForInput() | Edit this page View Source WipeAll() Wipes the entire input Declaration public static void WipeAll()"
  },
  "api/Terminaux.Reader.Tools.ConditionalTools.html": {
    "href": "api/Terminaux.Reader.Tools.ConditionalTools.html",
    "title": "Class ConditionalTools | Terminaux API - Aptivi",
    "keywords": "Class ConditionalTools Conditional tools for reader Inheritance object ConditionalTools Namespace: Terminaux.Reader.Tools Assembly: Terminaux.dll Syntax public static class ConditionalTools Methods | Edit this page View Source Should(bool, TermReaderState) Specifies that this condition should be met Declaration public static bool Should(bool condition, TermReaderState state) Parameters Type Name Description bool condition Condition to evaluate TermReaderState state Reader state Returns Type Description bool True if the condition is met; false otherwise and a system beep. | Edit this page View Source ShouldNot(bool, TermReaderState) Specifies that this condition should not be met Declaration public static bool ShouldNot(bool condition, TermReaderState state) Parameters Type Name Description bool condition Condition to evaluate TermReaderState state Reader state Returns Type Description bool True if the condition is not met; false otherwise and a system beep."
  },
  "api/Terminaux.Reader.Tools.PositioningTools.html": {
    "href": "api/Terminaux.Reader.Tools.PositioningTools.html",
    "title": "Class PositioningTools | Terminaux API - Aptivi",
    "keywords": "Class PositioningTools Positioning tools for the console input reader Inheritance object PositioningTools Namespace: Terminaux.Reader.Tools Assembly: Terminaux.dll Syntax public static class PositioningTools Methods | Edit this page View Source Commit(TermReaderState) Commits the positional changes by changing the cursor dimensions to the current position according to the reader state Declaration public static void Commit(TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state Remarks You don't need to call this function most of the time, except if you want to show the cursor changes or if you want to write directly to that position. | Edit this page View Source GoBack(int, ref TermReaderState) Goes to the number of steps closer to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoBack(int steps, ref TermReaderState state) Parameters Type Name Description int steps The number of steps to go closer to the beginning of the text TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoBack(ref TermReaderState) Goes one step closer to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoBack(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoForward(int, ref TermReaderState) Goes to the number of steps closer to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoForward(int steps, ref TermReaderState state) Parameters Type Name Description int steps The number of steps to go closer to the end of the text TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoForward(ref TermReaderState) Goes one step closer to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoForward(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoLeftmost(ref TermReaderState) Goes to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoLeftmost(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoRightmost(ref TermReaderState) Goes to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoRightmost(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source SeekTo(int, int, ref TermReaderState) Seeks to the selected text position number, pos (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void SeekTo(int fromPos, int pos, ref TermReaderState state) Parameters Type Name Description int fromPos The text position number offset (zero-based) int pos The text position number (zero-based) TermReaderState state State of the terminal reader in its present state | Edit this page View Source SeekTo(int, ref TermReaderState) Seeks to the selected text position number, pos (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void SeekTo(int pos, ref TermReaderState state) Parameters Type Name Description int pos The text position number (zero-based) TermReaderState state State of the terminal reader in its present state"
  },
  "api/Terminaux.Reader.Tools.html": {
    "href": "api/Terminaux.Reader.Tools.html",
    "title": "Namespace Terminaux.Reader.Tools | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Tools Classes ConditionalTools Conditional tools for reader PositioningTools Positioning tools for the console input reader"
  },
  "api/Terminaux.Reader.html": {
    "href": "api/Terminaux.Reader.html",
    "title": "Namespace Terminaux.Reader | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader Classes TermReader Terminal input reader module TermReaderSettings Settings for the reader TermReaderState State of the reader TermReaderTools Terminal reader tools"
  },
  "api/Terminaux.Sequences.Builder.Types.ApcSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.ApcSequences.html",
    "title": "Class ApcSequences | Terminaux API - Aptivi",
    "keywords": "Class ApcSequences List of APC sequences and their regular expressions Inheritance object ApcSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class ApcSequences Properties ApcApplicationProgramCommandSequenceRegex A regular expression that matches all the VT sequences that are of type ApcApplicationProgramCommand Declaration public static Regex ApcApplicationProgramCommandSequenceRegex { get; } Property Value Type Description Regex Methods GenerateApcApplicationProgramCommand(string) Generates an escape sequence of type APC with action ApcApplicationProgramCommand Declaration public static string GenerateApcApplicationProgramCommand(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.C1Sequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.C1Sequences.html",
    "title": "Class C1Sequences | Terminaux API - Aptivi",
    "keywords": "Class C1Sequences List of C1 sequences and their regular expressions Inheritance object C1Sequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class C1Sequences Properties C1ApplicationProgramCommandSequenceRegex A regular expression that matches all the VT sequences that are of type C1ApplicationProgramCommand Declaration public static Regex C1ApplicationProgramCommandSequenceRegex { get; } Property Value Type Description Regex C1ControlSequenceIndicatorSequenceRegex A regular expression that matches all the VT sequences that are of type C1ControlSequenceIndicator Declaration public static Regex C1ControlSequenceIndicatorSequenceRegex { get; } Property Value Type Description Regex C1DeviceControlStringSequenceRegex A regular expression that matches all the VT sequences that are of type C1DeviceControlString Declaration public static Regex C1DeviceControlStringSequenceRegex { get; } Property Value Type Description Regex C1EndOfGuardedAreaSequenceRegex A regular expression that matches all the VT sequences that are of type C1EndOfGuardedArea Declaration public static Regex C1EndOfGuardedAreaSequenceRegex { get; } Property Value Type Description Regex C1IndexSequenceRegex A regular expression that matches all the VT sequences that are of type C1Index Declaration public static Regex C1IndexSequenceRegex { get; } Property Value Type Description Regex C1NextLineSequenceRegex A regular expression that matches all the VT sequences that are of type C1NextLine Declaration public static Regex C1NextLineSequenceRegex { get; } Property Value Type Description Regex C1OperatingSystemCommandSequenceRegex A regular expression that matches all the VT sequences that are of type C1OperatingSystemCommand Declaration public static Regex C1OperatingSystemCommandSequenceRegex { get; } Property Value Type Description Regex C1PrivacyMessageSequenceRegex A regular expression that matches all the VT sequences that are of type C1PrivacyMessage Declaration public static Regex C1PrivacyMessageSequenceRegex { get; } Property Value Type Description Regex C1ReturnTerminalIdSequenceRegex A regular expression that matches all the VT sequences that are of type C1ReturnTerminalId Declaration public static Regex C1ReturnTerminalIdSequenceRegex { get; } Property Value Type Description Regex C1ReverseIndexSequenceRegex A regular expression that matches all the VT sequences that are of type C1ReverseIndex Declaration public static Regex C1ReverseIndexSequenceRegex { get; } Property Value Type Description Regex C1SingleShiftSelectG2CharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type C1SingleShiftSelectG2CharacterSet Declaration public static Regex C1SingleShiftSelectG2CharacterSetSequenceRegex { get; } Property Value Type Description Regex C1SingleShiftSelectG3CharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type C1SingleShiftSelectG3CharacterSet Declaration public static Regex C1SingleShiftSelectG3CharacterSetSequenceRegex { get; } Property Value Type Description Regex C1StartOfGuardedAreaSequenceRegex A regular expression that matches all the VT sequences that are of type C1StartOfGuardedArea Declaration public static Regex C1StartOfGuardedAreaSequenceRegex { get; } Property Value Type Description Regex C1StartOfStringSequenceRegex A regular expression that matches all the VT sequences that are of type C1StartOfString Declaration public static Regex C1StartOfStringSequenceRegex { get; } Property Value Type Description Regex C1StringTerminatorSequenceRegex A regular expression that matches all the VT sequences that are of type C1StringTerminator Declaration public static Regex C1StringTerminatorSequenceRegex { get; } Property Value Type Description Regex C1TabSetSequenceRegex A regular expression that matches all the VT sequences that are of type C1TabSet Declaration public static Regex C1TabSetSequenceRegex { get; } Property Value Type Description Regex Methods GenerateC1ApplicationProgramCommand() Generates an escape sequence of type C1 with action C1ApplicationProgramCommand Declaration public static string GenerateC1ApplicationProgramCommand() Returns Type Description string GenerateC1ControlSequenceIndicator() Generates an escape sequence of type C1 with action C1ControlSequenceIndicator Declaration public static string GenerateC1ControlSequenceIndicator() Returns Type Description string GenerateC1DeviceControlString() Generates an escape sequence of type C1 with action C1DeviceControlString Declaration public static string GenerateC1DeviceControlString() Returns Type Description string GenerateC1EndOfGuardedArea() Generates an escape sequence of type C1 with action C1EndOfGuardedArea Declaration public static string GenerateC1EndOfGuardedArea() Returns Type Description string GenerateC1Index() Generates an escape sequence of type C1 with action C1Index Declaration public static string GenerateC1Index() Returns Type Description string GenerateC1NextLine() Generates an escape sequence of type C1 with action C1NextLine Declaration public static string GenerateC1NextLine() Returns Type Description string GenerateC1OperatingSystemCommand() Generates an escape sequence of type C1 with action C1OperatingSystemCommand Declaration public static string GenerateC1OperatingSystemCommand() Returns Type Description string GenerateC1PrivacyMessage() Generates an escape sequence of type C1 with action C1PrivacyMessage Declaration public static string GenerateC1PrivacyMessage() Returns Type Description string GenerateC1ReturnTerminalId() Generates an escape sequence of type C1 with action C1ReturnTerminalId Declaration public static string GenerateC1ReturnTerminalId() Returns Type Description string GenerateC1ReverseIndex() Generates an escape sequence of type C1 with action C1ReverseIndex Declaration public static string GenerateC1ReverseIndex() Returns Type Description string GenerateC1SingleShiftSelectG2CharacterSet() Generates an escape sequence of type C1 with action C1SingleShiftSelectG2CharacterSet Declaration public static string GenerateC1SingleShiftSelectG2CharacterSet() Returns Type Description string GenerateC1SingleShiftSelectG3CharacterSet() Generates an escape sequence of type C1 with action C1SingleShiftSelectG3CharacterSet Declaration public static string GenerateC1SingleShiftSelectG3CharacterSet() Returns Type Description string GenerateC1StartOfGuardedArea() Generates an escape sequence of type C1 with action C1StartOfGuardedArea Declaration public static string GenerateC1StartOfGuardedArea() Returns Type Description string GenerateC1StartOfString() Generates an escape sequence of type C1 with action C1StartOfString Declaration public static string GenerateC1StartOfString() Returns Type Description string GenerateC1StringTerminator() Generates an escape sequence of type C1 with action C1StringTerminator Declaration public static string GenerateC1StringTerminator() Returns Type Description string GenerateC1TabSet() Generates an escape sequence of type C1 with action C1TabSet Declaration public static string GenerateC1TabSet() Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.CsiSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.CsiSequences.html",
    "title": "Class CsiSequences | Terminaux API - Aptivi",
    "keywords": "Class CsiSequences List of CSI sequences and their regular expressions Inheritance object CsiSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class CsiSequences Properties CsiChangeAttributesInRectangularAreaSequenceRegex A regular expression that matches all the VT sequences that are of type CsiChangeAttributesInRectangularArea Declaration public static Regex CsiChangeAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description Regex CsiCharacterAttributesSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCharacterAttributes Declaration public static Regex CsiCharacterAttributesSequenceRegex { get; } Property Value Type Description Regex CsiCopyRectangularAreaSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCopyRectangularArea Declaration public static Regex CsiCopyRectangularAreaSequenceRegex { get; } Property Value Type Description Regex CsiCursorBackwardTabulationSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCursorBackwardTabulation Declaration public static Regex CsiCursorBackwardTabulationSequenceRegex { get; } Property Value Type Description Regex CsiCursorCharacterAbsoluteLineSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCursorCharacterAbsoluteLine Declaration public static Regex CsiCursorCharacterAbsoluteLineSequenceRegex { get; } Property Value Type Description Regex CsiCursorForwardTabulationSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCursorForwardTabulation Declaration public static Regex CsiCursorForwardTabulationSequenceRegex { get; } Property Value Type Description Regex CsiCursorPositionAbsoluteSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCursorPositionAbsolute Declaration public static Regex CsiCursorPositionAbsoluteSequenceRegex { get; } Property Value Type Description Regex CsiCursorPositionRelativeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCursorPositionRelative Declaration public static Regex CsiCursorPositionRelativeSequenceRegex { get; } Property Value Type Description Regex CsiCursorPositionSequenceRegex A regular expression that matches all the VT sequences that are of type CsiCursorPosition Declaration public static Regex CsiCursorPositionSequenceRegex { get; } Property Value Type Description Regex CsiDecPrivateModeValuesSequenceRegex A regular expression that matches all the VT sequences that are of type CsiDecPrivateModeValues Declaration public static Regex CsiDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description Regex CsiDeleteCharsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiDeleteChars Declaration public static Regex CsiDeleteCharsSequenceRegex { get; } Property Value Type Description Regex CsiDeleteColumnsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiDeleteColumns Declaration public static Regex CsiDeleteColumnsSequenceRegex { get; } Property Value Type Description Regex CsiDeleteLineSequenceRegex A regular expression that matches all the VT sequences that are of type CsiDeleteLine Declaration public static Regex CsiDeleteLineSequenceRegex { get; } Property Value Type Description Regex CsiDeviceStatusReportDecSequenceRegex A regular expression that matches all the VT sequences that are of type CsiDeviceStatusReportDec Declaration public static Regex CsiDeviceStatusReportDecSequenceRegex { get; } Property Value Type Description Regex CsiDeviceStatusReportSequenceRegex A regular expression that matches all the VT sequences that are of type CsiDeviceStatusReport Declaration public static Regex CsiDeviceStatusReportSequenceRegex { get; } Property Value Type Description Regex CsiDisableKeyModifierOptionsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiDisableKeyModifierOptions Declaration public static Regex CsiDisableKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex CsiEnableFilterRectangleSequenceRegex A regular expression that matches all the VT sequences that are of type CsiEnableFilterRectangle Declaration public static Regex CsiEnableFilterRectangleSequenceRegex { get; } Property Value Type Description Regex CsiEraseCharactersSequenceRegex A regular expression that matches all the VT sequences that are of type CsiEraseCharacters Declaration public static Regex CsiEraseCharactersSequenceRegex { get; } Property Value Type Description Regex CsiEraseInDisplayDecsedSequenceRegex A regular expression that matches all the VT sequences that are of type CsiEraseInDisplayDecsed Declaration public static Regex CsiEraseInDisplayDecsedSequenceRegex { get; } Property Value Type Description Regex CsiEraseInDisplaySequenceRegex A regular expression that matches all the VT sequences that are of type CsiEraseInDisplay Declaration public static Regex CsiEraseInDisplaySequenceRegex { get; } Property Value Type Description Regex CsiEraseInLineDecselSequenceRegex A regular expression that matches all the VT sequences that are of type CsiEraseInLineDecsel Declaration public static Regex CsiEraseInLineDecselSequenceRegex { get; } Property Value Type Description Regex CsiEraseInLineSequenceRegex A regular expression that matches all the VT sequences that are of type CsiEraseInLine Declaration public static Regex CsiEraseInLineSequenceRegex { get; } Property Value Type Description Regex CsiEraseRectangularAreaSequenceRegex A regular expression that matches all the VT sequences that are of type CsiEraseRectangularArea Declaration public static Regex CsiEraseRectangularAreaSequenceRegex { get; } Property Value Type Description Regex CsiFillRectangularAreaSequenceRegex A regular expression that matches all the VT sequences that are of type CsiFillRectangularArea Declaration public static Regex CsiFillRectangularAreaSequenceRegex { get; } Property Value Type Description Regex CsiInitiateHighlightMouseTrackingSequenceRegex A regular expression that matches all the VT sequences that are of type CsiInitiateHighlightMouseTracking Declaration public static Regex CsiInitiateHighlightMouseTrackingSequenceRegex { get; } Property Value Type Description Regex CsiInsertBlankCharactersSequenceRegex A regular expression that matches all the VT sequences that are of type CsiInsertBlankCharacters Declaration public static Regex CsiInsertBlankCharactersSequenceRegex { get; } Property Value Type Description Regex CsiInsertColumnsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiInsertColumns Declaration public static Regex CsiInsertColumnsSequenceRegex { get; } Property Value Type Description Regex CsiInsertLineSequenceRegex A regular expression that matches all the VT sequences that are of type CsiInsertLine Declaration public static Regex CsiInsertLineSequenceRegex { get; } Property Value Type Description Regex CsiLeftTopPositionSequenceRegex A regular expression that matches all the VT sequences that are of type CsiLeftTopPosition Declaration public static Regex CsiLeftTopPositionSequenceRegex { get; } Property Value Type Description Regex CsiLinePositionAbsoluteSequenceRegex A regular expression that matches all the VT sequences that are of type CsiLinePositionAbsolute Declaration public static Regex CsiLinePositionAbsoluteSequenceRegex { get; } Property Value Type Description Regex CsiLinePositionRelativeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiLinePositionRelative Declaration public static Regex CsiLinePositionRelativeSequenceRegex { get; } Property Value Type Description Regex CsiLoadLedsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiLoadLeds Declaration public static Regex CsiLoadLedsSequenceRegex { get; } Property Value Type Description Regex CsiLocatorReportingSequenceRegex A regular expression that matches all the VT sequences that are of type CsiLocatorReporting Declaration public static Regex CsiLocatorReportingSequenceRegex { get; } Property Value Type Description Regex CsiMediaCopyPrivateSequenceRegex A regular expression that matches all the VT sequences that are of type CsiMediaCopyPrivate Declaration public static Regex CsiMediaCopyPrivateSequenceRegex { get; } Property Value Type Description Regex CsiMediaCopySequenceRegex A regular expression that matches all the VT sequences that are of type CsiMediaCopy Declaration public static Regex CsiMediaCopySequenceRegex { get; } Property Value Type Description Regex CsiMoveCursorDownSequenceRegex A regular expression that matches all the VT sequences that are of type CsiMoveCursorDown Declaration public static Regex CsiMoveCursorDownSequenceRegex { get; } Property Value Type Description Regex CsiMoveCursorLeftSequenceRegex A regular expression that matches all the VT sequences that are of type CsiMoveCursorLeft Declaration public static Regex CsiMoveCursorLeftSequenceRegex { get; } Property Value Type Description Regex CsiMoveCursorNextLineSequenceRegex A regular expression that matches all the VT sequences that are of type CsiMoveCursorNextLine Declaration public static Regex CsiMoveCursorNextLineSequenceRegex { get; } Property Value Type Description Regex CsiMoveCursorPreviousLineSequenceRegex A regular expression that matches all the VT sequences that are of type CsiMoveCursorPreviousLine Declaration public static Regex CsiMoveCursorPreviousLineSequenceRegex { get; } Property Value Type Description Regex CsiMoveCursorRightSequenceRegex A regular expression that matches all the VT sequences that are of type CsiMoveCursorRight Declaration public static Regex CsiMoveCursorRightSequenceRegex { get; } Property Value Type Description Regex CsiMoveCursorUpSequenceRegex A regular expression that matches all the VT sequences that are of type CsiMoveCursorUp Declaration public static Regex CsiMoveCursorUpSequenceRegex { get; } Property Value Type Description Regex CsiPopColorFromStackSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPopColorFromStack Declaration public static Regex CsiPopColorFromStackSequenceRegex { get; } Property Value Type Description Regex CsiPopColorFromStackWithArgsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPopColorFromStackWithArgs Declaration public static Regex CsiPopColorFromStackWithArgsSequenceRegex { get; } Property Value Type Description Regex CsiPopVideoAttributesFromStackSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPopVideoAttributesFromStack Declaration public static Regex CsiPopVideoAttributesFromStackSequenceRegex { get; } Property Value Type Description Regex CsiPopVideoAttributesFromStackXtermSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPopVideoAttributesFromStackXterm Declaration public static Regex CsiPopVideoAttributesFromStackXtermSequenceRegex { get; } Property Value Type Description Regex CsiPushColorToStackSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPushColorToStack Declaration public static Regex CsiPushColorToStackSequenceRegex { get; } Property Value Type Description Regex CsiPushColorToStackWithArgsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPushColorToStackWithArgs Declaration public static Regex CsiPushColorToStackWithArgsSequenceRegex { get; } Property Value Type Description Regex CsiPushVideoAttributesToStackSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPushVideoAttributesToStack Declaration public static Regex CsiPushVideoAttributesToStackSequenceRegex { get; } Property Value Type Description Regex CsiPushVideoAttributesToStackWithArgsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPushVideoAttributesToStackWithArgs Declaration public static Regex CsiPushVideoAttributesToStackWithArgsSequenceRegex { get; } Property Value Type Description Regex CsiPushVideoAttributesToStackXtermSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPushVideoAttributesToStackXterm Declaration public static Regex CsiPushVideoAttributesToStackXtermSequenceRegex { get; } Property Value Type Description Regex CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiPushVideoAttributesToStackXtermWithArgs Declaration public static Regex CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex { get; } Property Value Type Description Regex CsiQueryKeyModifierOptionsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiQueryKeyModifierOptions Declaration public static Regex CsiQueryKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex CsiRectangularAreaChecksumSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRectangularAreaChecksum Declaration public static Regex CsiRectangularAreaChecksumSequenceRegex { get; } Property Value Type Description Regex CsiRepeatGraphicCharacterSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRepeatGraphicCharacter Declaration public static Regex CsiRepeatGraphicCharacterSequenceRegex { get; } Property Value Type Description Regex CsiReportGraphicsRenditionRectangularAreaSequenceRegex A regular expression that matches all the VT sequences that are of type CsiReportGraphicsRenditionRectangularArea Declaration public static Regex CsiReportGraphicsRenditionRectangularAreaSequenceRegex { get; } Property Value Type Description Regex CsiReportPaletteStackSequenceRegex A regular expression that matches all the VT sequences that are of type CsiReportPaletteStack Declaration public static Regex CsiReportPaletteStackSequenceRegex { get; } Property Value Type Description Regex CsiReportXtermVersionSequenceRegex A regular expression that matches all the VT sequences that are of type CsiReportXtermVersion Declaration public static Regex CsiReportXtermVersionSequenceRegex { get; } Property Value Type Description Regex CsiRequestAnsiModeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRequestAnsiMode Declaration public static Regex CsiRequestAnsiModeSequenceRegex { get; } Property Value Type Description Regex CsiRequestDecPrivateModeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRequestDecPrivateMode Declaration public static Regex CsiRequestDecPrivateModeSequenceRegex { get; } Property Value Type Description Regex CsiRequestLocatorPositionSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRequestLocatorPosition Declaration public static Regex CsiRequestLocatorPositionSequenceRegex { get; } Property Value Type Description Regex CsiRequestPresentationStateReportSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRequestPresentationStateReport Declaration public static Regex CsiRequestPresentationStateReportSequenceRegex { get; } Property Value Type Description Regex CsiRequestTerminalParametersSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRequestTerminalParameters Declaration public static Regex CsiRequestTerminalParametersSequenceRegex { get; } Property Value Type Description Regex CsiResetKeyModifierOptionsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiResetKeyModifierOptions Declaration public static Regex CsiResetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex CsiResetModeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiResetMode Declaration public static Regex CsiResetModeSequenceRegex { get; } Property Value Type Description Regex CsiResetPrivateModeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiResetPrivateMode Declaration public static Regex CsiResetPrivateModeSequenceRegex { get; } Property Value Type Description Regex CsiResetTitleModeFeaturesSequenceRegex A regular expression that matches all the VT sequences that are of type CsiResetTitleModeFeatures Declaration public static Regex CsiResetTitleModeFeaturesSequenceRegex { get; } Property Value Type Description Regex CsiRestoreCursorSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRestoreCursor Declaration public static Regex CsiRestoreCursorSequenceRegex { get; } Property Value Type Description Regex CsiRestoreDecPrivateModeValuesSequenceRegex A regular expression that matches all the VT sequences that are of type CsiRestoreDecPrivateModeValues Declaration public static Regex CsiRestoreDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description Regex CsiReverseAttributesInRectangularAreaSequenceRegex A regular expression that matches all the VT sequences that are of type CsiReverseAttributesInRectangularArea Declaration public static Regex CsiReverseAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description Regex CsiSaveCursorSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSaveCursor Declaration public static Regex CsiSaveCursorSequenceRegex { get; } Property Value Type Description Regex CsiScrollDownOriginalSequenceRegex A regular expression that matches all the VT sequences that are of type CsiScrollDownOriginal Declaration public static Regex CsiScrollDownOriginalSequenceRegex { get; } Property Value Type Description Regex CsiScrollDownSequenceRegex A regular expression that matches all the VT sequences that are of type CsiScrollDown Declaration public static Regex CsiScrollDownSequenceRegex { get; } Property Value Type Description Regex CsiScrollUpSequenceRegex A regular expression that matches all the VT sequences that are of type CsiScrollUp Declaration public static Regex CsiScrollUpSequenceRegex { get; } Property Value Type Description Regex CsiSelectActiveStatusDisplaySequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectActiveStatusDisplay Declaration public static Regex CsiSelectActiveStatusDisplaySequenceRegex { get; } Property Value Type Description Regex CsiSelectAttributeChangeExtentSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectAttributeChangeExtent Declaration public static Regex CsiSelectAttributeChangeExtentSequenceRegex { get; } Property Value Type Description Regex CsiSelectCharacterProtectionAttributeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectCharacterProtectionAttribute Declaration public static Regex CsiSelectCharacterProtectionAttributeSequenceRegex { get; } Property Value Type Description Regex CsiSelectChecksumExtensionSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectChecksumExtension Declaration public static Regex CsiSelectChecksumExtensionSequenceRegex { get; } Property Value Type Description Regex CsiSelectColumnsPerPageSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectColumnsPerPage Declaration public static Regex CsiSelectColumnsPerPageSequenceRegex { get; } Property Value Type Description Regex CsiSelectLocatorEventsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectLocatorEvents Declaration public static Regex CsiSelectLocatorEventsSequenceRegex { get; } Property Value Type Description Regex CsiSelectNumberOfLinesPerScreenSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectNumberOfLinesPerScreen Declaration public static Regex CsiSelectNumberOfLinesPerScreenSequenceRegex { get; } Property Value Type Description Regex CsiSelectStatusLineTypeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectStatusLineType Declaration public static Regex CsiSelectStatusLineTypeSequenceRegex { get; } Property Value Type Description Regex CsiSelectiveEraseRectangularAreaSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSelectiveEraseRectangularArea Declaration public static Regex CsiSelectiveEraseRectangularAreaSequenceRegex { get; } Property Value Type Description Regex CsiSendDeviceAttributesPrimarySequenceRegex A regular expression that matches all the VT sequences that are of type CsiSendDeviceAttributesPrimary Declaration public static Regex CsiSendDeviceAttributesPrimarySequenceRegex { get; } Property Value Type Description Regex CsiSendDeviceAttributesSecondarySequenceRegex A regular expression that matches all the VT sequences that are of type CsiSendDeviceAttributesSecondary Declaration public static Regex CsiSendDeviceAttributesSecondarySequenceRegex { get; } Property Value Type Description Regex CsiSendDeviceAttributesTertiarySequenceRegex A regular expression that matches all the VT sequences that are of type CsiSendDeviceAttributesTertiary Declaration public static Regex CsiSendDeviceAttributesTertiarySequenceRegex { get; } Property Value Type Description Regex CsiSetConformanceLevelSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetConformanceLevel Declaration public static Regex CsiSetConformanceLevelSequenceRegex { get; } Property Value Type Description Regex CsiSetCursorStyleSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetCursorStyle Declaration public static Regex CsiSetCursorStyleSequenceRegex { get; } Property Value Type Description Regex CsiSetGraphicsAttributeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetGraphicsAttribute Declaration public static Regex CsiSetGraphicsAttributeSequenceRegex { get; } Property Value Type Description Regex CsiSetKeyModifierOptionsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetKeyModifierOptions Declaration public static Regex CsiSetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex CsiSetLeftRightMarginsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetLeftRightMargins Declaration public static Regex CsiSetLeftRightMarginsSequenceRegex { get; } Property Value Type Description Regex CsiSetMarginBellVolumeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetMarginBellVolume Declaration public static Regex CsiSetMarginBellVolumeSequenceRegex { get; } Property Value Type Description Regex CsiSetModeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetMode Declaration public static Regex CsiSetModeSequenceRegex { get; } Property Value Type Description Regex CsiSetPointerModeXtermSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetPointerModeXterm Declaration public static Regex CsiSetPointerModeXtermSequenceRegex { get; } Property Value Type Description Regex CsiSetPrivateModeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetPrivateMode Declaration public static Regex CsiSetPrivateModeSequenceRegex { get; } Property Value Type Description Regex CsiSetScrollingRegionSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetScrollingRegion Declaration public static Regex CsiSetScrollingRegionSequenceRegex { get; } Property Value Type Description Regex CsiSetShiftEscapeOptionsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetShiftEscapeOptions Declaration public static Regex CsiSetShiftEscapeOptionsSequenceRegex { get; } Property Value Type Description Regex CsiSetTitleModeXtermSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetTitleModeXterm Declaration public static Regex CsiSetTitleModeXtermSequenceRegex { get; } Property Value Type Description Regex CsiSetWarningBellVolumeSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSetWarningBellVolume Declaration public static Regex CsiSetWarningBellVolumeSequenceRegex { get; } Property Value Type Description Regex CsiShiftLeftColumnsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiShiftLeftColumns Declaration public static Regex CsiShiftLeftColumnsSequenceRegex { get; } Property Value Type Description Regex CsiShiftRightColumnsSequenceRegex A regular expression that matches all the VT sequences that are of type CsiShiftRightColumns Declaration public static Regex CsiShiftRightColumnsSequenceRegex { get; } Property Value Type Description Regex CsiSoftTerminalResetSequenceRegex A regular expression that matches all the VT sequences that are of type CsiSoftTerminalReset Declaration public static Regex CsiSoftTerminalResetSequenceRegex { get; } Property Value Type Description Regex CsiTabClearSequenceRegex A regular expression that matches all the VT sequences that are of type CsiTabClear Declaration public static Regex CsiTabClearSequenceRegex { get; } Property Value Type Description Regex CsiWindowManipulationSequenceRegex A regular expression that matches all the VT sequences that are of type CsiWindowManipulation Declaration public static Regex CsiWindowManipulationSequenceRegex { get; } Property Value Type Description Regex Methods GenerateCsiChangeAttributesInRectangularArea(int, int, int, int, string) Generates an escape sequence of type CSI with action CsiChangeAttributesInRectangularArea Declaration public static string GenerateCsiChangeAttributesInRectangularArea(int pt, int pl, int pb, int pr, string attributes) Parameters Type Name Description int pt int pl int pb int pr string attributes Returns Type Description string GenerateCsiCharacterAttributes(string) Generates an escape sequence of type CSI with action CsiCharacterAttributes Declaration public static string GenerateCsiCharacterAttributes(string mode) Parameters Type Name Description string mode Returns Type Description string GenerateCsiCopyRectangularArea(int, int, int, int, int, int, int, int) Generates an escape sequence of type CSI with action CsiCopyRectangularArea Declaration public static string GenerateCsiCopyRectangularArea(int ptSrc, int plSrc, int pbSrc, int prSrc, int sourcePage, int ptTarget, int plTarget, int targetPage) Parameters Type Name Description int ptSrc int plSrc int pbSrc int prSrc int sourcePage int ptTarget int plTarget int targetPage Returns Type Description string GenerateCsiCursorBackwardTabulation(int) Generates an escape sequence of type CSI with action CsiCursorBackwardTabulation Declaration public static string GenerateCsiCursorBackwardTabulation(int stops) Parameters Type Name Description int stops Returns Type Description string GenerateCsiCursorCharacterAbsoluteLine(int) Generates an escape sequence of type CSI with action CsiCursorCharacterAbsoluteLine Declaration public static string GenerateCsiCursorCharacterAbsoluteLine(int column) Parameters Type Name Description int column Returns Type Description string GenerateCsiCursorForwardTabulation(int) Generates an escape sequence of type CSI with action CsiCursorForwardTabulation Declaration public static string GenerateCsiCursorForwardTabulation(int stops) Parameters Type Name Description int stops Returns Type Description string GenerateCsiCursorPosition(int, int) Generates an escape sequence of type CSI with action CsiCursorPosition Declaration public static string GenerateCsiCursorPosition(int column, int row) Parameters Type Name Description int column int row Returns Type Description string GenerateCsiCursorPositionAbsolute(int) Generates an escape sequence of type CSI with action CsiCursorPositionAbsolute Declaration public static string GenerateCsiCursorPositionAbsolute(int column) Parameters Type Name Description int column Returns Type Description string GenerateCsiCursorPositionRelative(int) Generates an escape sequence of type CSI with action CsiCursorPositionRelative Declaration public static string GenerateCsiCursorPositionRelative(int column) Parameters Type Name Description int column Returns Type Description string GenerateCsiDecPrivateModeValues(string) Generates an escape sequence of type CSI with action CsiDecPrivateModeValues Declaration public static string GenerateCsiDecPrivateModeValues(string values) Parameters Type Name Description string values Returns Type Description string GenerateCsiDeleteChars(int) Generates an escape sequence of type CSI with action CsiDeleteChars Declaration public static string GenerateCsiDeleteChars(int chars) Parameters Type Name Description int chars Returns Type Description string GenerateCsiDeleteColumns(int) Generates an escape sequence of type CSI with action CsiDeleteColumns Declaration public static string GenerateCsiDeleteColumns(int columns) Parameters Type Name Description int columns Returns Type Description string GenerateCsiDeleteLine(int) Generates an escape sequence of type CSI with action CsiDeleteLine Declaration public static string GenerateCsiDeleteLine(int lines) Parameters Type Name Description int lines Returns Type Description string GenerateCsiDeviceStatusReport(int) Generates an escape sequence of type CSI with action CsiDeviceStatusReport Declaration public static string GenerateCsiDeviceStatusReport(int report) Parameters Type Name Description int report Returns Type Description string GenerateCsiDeviceStatusReportDec(int) Generates an escape sequence of type CSI with action CsiDeviceStatusReportDec Declaration public static string GenerateCsiDeviceStatusReportDec(int report) Parameters Type Name Description int report Returns Type Description string GenerateCsiDisableKeyModifierOptions(int) Generates an escape sequence of type CSI with action CsiDisableKeyModifierOptions Declaration public static string GenerateCsiDisableKeyModifierOptions(int report) Parameters Type Name Description int report Returns Type Description string GenerateCsiEnableFilterRectangle(int, int, int, int) Generates an escape sequence of type CSI with action CsiEnableFilterRectangle Declaration public static string GenerateCsiEnableFilterRectangle(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string GenerateCsiEraseCharacters(int) Generates an escape sequence of type CSI with action CsiEraseCharacters Declaration public static string GenerateCsiEraseCharacters(int chars) Parameters Type Name Description int chars Returns Type Description string GenerateCsiEraseInDisplay(int) Generates an escape sequence of type CSI with action CsiEraseInDisplay Declaration public static string GenerateCsiEraseInDisplay(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiEraseInDisplayDecsed(int) Generates an escape sequence of type CSI with action CsiEraseInDisplayDecsed Declaration public static string GenerateCsiEraseInDisplayDecsed(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiEraseInLine(int) Generates an escape sequence of type CSI with action CsiEraseInLine Declaration public static string GenerateCsiEraseInLine(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiEraseInLineDecsel(int) Generates an escape sequence of type CSI with action CsiEraseInLineDecsel Declaration public static string GenerateCsiEraseInLineDecsel(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiEraseRectangularArea(int, int, int, int) Generates an escape sequence of type CSI with action CsiEraseRectangularArea Declaration public static string GenerateCsiEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string GenerateCsiFillRectangularArea(char, int, int, int, int) Generates an escape sequence of type CSI with action CsiFillRectangularArea Declaration public static string GenerateCsiFillRectangularArea(char character, int pt, int pl, int pb, int pr) Parameters Type Name Description char character int pt int pl int pb int pr Returns Type Description string GenerateCsiInitiateHighlightMouseTracking(int, int, int, int, int) Generates an escape sequence of type CSI with action CsiInitiateHighlightMouseTracking Declaration public static string GenerateCsiInitiateHighlightMouseTracking(int func, int startX, int startY, int firstRow, int lastRow) Parameters Type Name Description int func int startX int startY int firstRow int lastRow Returns Type Description string GenerateCsiInsertBlankCharacters(int) Generates an escape sequence of type CSI with action CsiInsertBlankCharacters Declaration public static string GenerateCsiInsertBlankCharacters(int blanks) Parameters Type Name Description int blanks Returns Type Description string GenerateCsiInsertColumns(int) Generates an escape sequence of type CSI with action CsiInsertColumns Declaration public static string GenerateCsiInsertColumns(int columns) Parameters Type Name Description int columns Returns Type Description string GenerateCsiInsertLine(int) Generates an escape sequence of type CSI with action CsiInsertLine Declaration public static string GenerateCsiInsertLine(int lines) Parameters Type Name Description int lines Returns Type Description string GenerateCsiLeftTopPosition(int, int) Generates an escape sequence of type CSI with action CsiLeftTopPosition Declaration public static string GenerateCsiLeftTopPosition(int column, int row) Parameters Type Name Description int column int row Returns Type Description string GenerateCsiLinePositionAbsolute(int) Generates an escape sequence of type CSI with action CsiLinePositionAbsolute Declaration public static string GenerateCsiLinePositionAbsolute(int row) Parameters Type Name Description int row Returns Type Description string GenerateCsiLinePositionRelative(int) Generates an escape sequence of type CSI with action CsiLinePositionRelative Declaration public static string GenerateCsiLinePositionRelative(int row) Parameters Type Name Description int row Returns Type Description string GenerateCsiLoadLeds(int) Generates an escape sequence of type CSI with action CsiLoadLeds Declaration public static string GenerateCsiLoadLeds(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiLocatorReporting(int, int) Generates an escape sequence of type CSI with action CsiLocatorReporting Declaration public static string GenerateCsiLocatorReporting(int locatorMode, int measurement) Parameters Type Name Description int locatorMode int measurement Returns Type Description string GenerateCsiMediaCopy(int) Generates an escape sequence of type CSI with action CsiMediaCopy Declaration public static string GenerateCsiMediaCopy(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiMediaCopyPrivate(int) Generates an escape sequence of type CSI with action CsiMediaCopyPrivate Declaration public static string GenerateCsiMediaCopyPrivate(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiMoveCursorDown(int) Generates an escape sequence of type CSI with action CsiMoveCursorDown Declaration public static string GenerateCsiMoveCursorDown(int times) Parameters Type Name Description int times Returns Type Description string GenerateCsiMoveCursorLeft(int) Generates an escape sequence of type CSI with action CsiMoveCursorLeft Declaration public static string GenerateCsiMoveCursorLeft(int times) Parameters Type Name Description int times Returns Type Description string GenerateCsiMoveCursorNextLine(int) Generates an escape sequence of type CSI with action CsiMoveCursorNextLine Declaration public static string GenerateCsiMoveCursorNextLine(int times) Parameters Type Name Description int times Returns Type Description string GenerateCsiMoveCursorPreviousLine(int) Generates an escape sequence of type CSI with action CsiMoveCursorPreviousLine Declaration public static string GenerateCsiMoveCursorPreviousLine(int times) Parameters Type Name Description int times Returns Type Description string GenerateCsiMoveCursorRight(int) Generates an escape sequence of type CSI with action CsiMoveCursorRight Declaration public static string GenerateCsiMoveCursorRight(int times) Parameters Type Name Description int times Returns Type Description string GenerateCsiMoveCursorUp(int) Generates an escape sequence of type CSI with action CsiMoveCursorUp Declaration public static string GenerateCsiMoveCursorUp(int times) Parameters Type Name Description int times Returns Type Description string GenerateCsiPopColorFromStack() Generates an escape sequence of type CSI with action CsiPopColorFromStack Declaration public static string GenerateCsiPopColorFromStack() Returns Type Description string GenerateCsiPopColorFromStackWithArgs(string) Generates an escape sequence of type CSI with action CsiPopColorFromStackWithArgs Declaration public static string GenerateCsiPopColorFromStackWithArgs(string parameters) Parameters Type Name Description string parameters Returns Type Description string GenerateCsiPopVideoAttributesFromStack() Generates an escape sequence of type CSI with action CsiPopVideoAttributesFromStack Declaration public static string GenerateCsiPopVideoAttributesFromStack() Returns Type Description string GenerateCsiPopVideoAttributesFromStackXterm() Generates an escape sequence of type CSI with action CsiPopVideoAttributesFromStackXterm Declaration public static string GenerateCsiPopVideoAttributesFromStackXterm() Returns Type Description string GenerateCsiPushColorToStack() Generates an escape sequence of type CSI with action CsiPushColorToStack Declaration public static string GenerateCsiPushColorToStack() Returns Type Description string GenerateCsiPushColorToStackWithArgs(string) Generates an escape sequence of type CSI with action CsiPushColorToStackWithArgs Declaration public static string GenerateCsiPushColorToStackWithArgs(string parameters) Parameters Type Name Description string parameters Returns Type Description string GenerateCsiPushVideoAttributesToStack() Generates an escape sequence of type CSI with action CsiPushVideoAttributesToStack Declaration public static string GenerateCsiPushVideoAttributesToStack() Returns Type Description string GenerateCsiPushVideoAttributesToStackWithArgs(string) Generates an escape sequence of type CSI with action CsiPushVideoAttributesToStackWithArgs Declaration public static string GenerateCsiPushVideoAttributesToStackWithArgs(string args) Parameters Type Name Description string args Returns Type Description string GenerateCsiPushVideoAttributesToStackXterm() Generates an escape sequence of type CSI with action CsiPushVideoAttributesToStackXterm Declaration public static string GenerateCsiPushVideoAttributesToStackXterm() Returns Type Description string GenerateCsiPushVideoAttributesToStackXtermWithArgs(string) Generates an escape sequence of type CSI with action CsiPushVideoAttributesToStackXtermWithArgs Declaration public static string GenerateCsiPushVideoAttributesToStackXtermWithArgs(string parameters) Parameters Type Name Description string parameters Returns Type Description string GenerateCsiQueryKeyModifierOptions(int) Generates an escape sequence of type CSI with action CsiQueryKeyModifierOptions Declaration public static string GenerateCsiQueryKeyModifierOptions(int resource) Parameters Type Name Description int resource Returns Type Description string GenerateCsiRectangularAreaChecksum(int, int, int, int, int, int) Generates an escape sequence of type CSI with action CsiRectangularAreaChecksum Declaration public static string GenerateCsiRectangularAreaChecksum(int requestId, int pageNumber, int pt, int pl, int pb, int pr) Parameters Type Name Description int requestId int pageNumber int pt int pl int pb int pr Returns Type Description string GenerateCsiRepeatGraphicCharacter(int) Generates an escape sequence of type CSI with action CsiRepeatGraphicCharacter Declaration public static string GenerateCsiRepeatGraphicCharacter(int times) Parameters Type Name Description int times Returns Type Description string GenerateCsiReportGraphicsRenditionRectangularArea(int, int, int, int) Generates an escape sequence of type CSI with action CsiReportGraphicsRenditionRectangularArea Declaration public static string GenerateCsiReportGraphicsRenditionRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string GenerateCsiReportPaletteStack() Generates an escape sequence of type CSI with action CsiReportPaletteStack Declaration public static string GenerateCsiReportPaletteStack() Returns Type Description string GenerateCsiReportXtermVersion(int) Generates an escape sequence of type CSI with action CsiReportXtermVersion Declaration public static string GenerateCsiReportXtermVersion(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiRequestAnsiMode(int) Generates an escape sequence of type CSI with action CsiRequestAnsiMode Declaration public static string GenerateCsiRequestAnsiMode(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiRequestDecPrivateMode(int) Generates an escape sequence of type CSI with action CsiRequestDecPrivateMode Declaration public static string GenerateCsiRequestDecPrivateMode(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiRequestLocatorPosition(int) Generates an escape sequence of type CSI with action CsiRequestLocatorPosition Declaration public static string GenerateCsiRequestLocatorPosition(int transmit) Parameters Type Name Description int transmit Returns Type Description string GenerateCsiRequestPresentationStateReport(int) Generates an escape sequence of type CSI with action CsiRequestPresentationStateReport Declaration public static string GenerateCsiRequestPresentationStateReport(int state) Parameters Type Name Description int state Returns Type Description string GenerateCsiRequestTerminalParameters(int) Generates an escape sequence of type CSI with action CsiRequestTerminalParameters Declaration public static string GenerateCsiRequestTerminalParameters(int parameter) Parameters Type Name Description int parameter Returns Type Description string GenerateCsiResetKeyModifierOptions(int) Generates an escape sequence of type CSI with action CsiResetKeyModifierOptions Declaration public static string GenerateCsiResetKeyModifierOptions(int resource) Parameters Type Name Description int resource Returns Type Description string GenerateCsiResetMode(string) Generates an escape sequence of type CSI with action CsiResetMode Declaration public static string GenerateCsiResetMode(string mode) Parameters Type Name Description string mode Returns Type Description string GenerateCsiResetPrivateMode(string) Generates an escape sequence of type CSI with action CsiResetPrivateMode Declaration public static string GenerateCsiResetPrivateMode(string mode) Parameters Type Name Description string mode Returns Type Description string GenerateCsiResetTitleModeFeatures(int) Generates an escape sequence of type CSI with action CsiResetTitleModeFeatures Declaration public static string GenerateCsiResetTitleModeFeatures(int resetOptions) Parameters Type Name Description int resetOptions Returns Type Description string GenerateCsiRestoreCursor() Generates an escape sequence of type CSI with action CsiRestoreCursor Declaration public static string GenerateCsiRestoreCursor() Returns Type Description string GenerateCsiRestoreDecPrivateModeValues(string) Generates an escape sequence of type CSI with action CsiRestoreDecPrivateModeValues Declaration public static string GenerateCsiRestoreDecPrivateModeValues(string values) Parameters Type Name Description string values Returns Type Description string GenerateCsiReverseAttributesInRectangularArea(int, int, int, int, string) Generates an escape sequence of type CSI with action CsiReverseAttributesInRectangularArea Declaration public static string GenerateCsiReverseAttributesInRectangularArea(int pt, int pl, int pb, int pr, string attributes) Parameters Type Name Description int pt int pl int pb int pr string attributes Returns Type Description string GenerateCsiSaveCursor() Generates an escape sequence of type CSI with action CsiSaveCursor Declaration public static string GenerateCsiSaveCursor() Returns Type Description string GenerateCsiScrollDown(int) Generates an escape sequence of type CSI with action CsiScrollDown Declaration public static string GenerateCsiScrollDown(int lines) Parameters Type Name Description int lines Returns Type Description string GenerateCsiScrollDownOriginal(int) Generates an escape sequence of type CSI with action CsiScrollDownOriginal Declaration public static string GenerateCsiScrollDownOriginal(int lines) Parameters Type Name Description int lines Returns Type Description string GenerateCsiScrollUp(int) Generates an escape sequence of type CSI with action CsiScrollUp Declaration public static string GenerateCsiScrollUp(int lines) Parameters Type Name Description int lines Returns Type Description string GenerateCsiSelectActiveStatusDisplay(int) Generates an escape sequence of type CSI with action CsiSelectActiveStatusDisplay Declaration public static string GenerateCsiSelectActiveStatusDisplay(int displayMode) Parameters Type Name Description int displayMode Returns Type Description string GenerateCsiSelectAttributeChangeExtent(int) Generates an escape sequence of type CSI with action CsiSelectAttributeChangeExtent Declaration public static string GenerateCsiSelectAttributeChangeExtent(int extent) Parameters Type Name Description int extent Returns Type Description string GenerateCsiSelectCharacterProtectionAttribute(int) Generates an escape sequence of type CSI with action CsiSelectCharacterProtectionAttribute Declaration public static string GenerateCsiSelectCharacterProtectionAttribute(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiSelectChecksumExtension(int) Generates an escape sequence of type CSI with action CsiSelectChecksumExtension Declaration public static string GenerateCsiSelectChecksumExtension(int modifier) Parameters Type Name Description int modifier Returns Type Description string GenerateCsiSelectColumnsPerPage(int) Generates an escape sequence of type CSI with action CsiSelectColumnsPerPage Declaration public static string GenerateCsiSelectColumnsPerPage(int columnMode) Parameters Type Name Description int columnMode Returns Type Description string GenerateCsiSelectLocatorEvents(string) Generates an escape sequence of type CSI with action CsiSelectLocatorEvents Declaration public static string GenerateCsiSelectLocatorEvents(string parameters) Parameters Type Name Description string parameters Returns Type Description string GenerateCsiSelectNumberOfLinesPerScreen(int) Generates an escape sequence of type CSI with action CsiSelectNumberOfLinesPerScreen Declaration public static string GenerateCsiSelectNumberOfLinesPerScreen(int lines) Parameters Type Name Description int lines Returns Type Description string GenerateCsiSelectStatusLineType(int) Generates an escape sequence of type CSI with action CsiSelectStatusLineType Declaration public static string GenerateCsiSelectStatusLineType(int type) Parameters Type Name Description int type Returns Type Description string GenerateCsiSelectiveEraseRectangularArea(int, int, int, int) Generates an escape sequence of type CSI with action CsiSelectiveEraseRectangularArea Declaration public static string GenerateCsiSelectiveEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string GenerateCsiSendDeviceAttributesPrimary(int) Generates an escape sequence of type CSI with action CsiSendDeviceAttributesPrimary Declaration public static string GenerateCsiSendDeviceAttributesPrimary(int attributes) Parameters Type Name Description int attributes Returns Type Description string GenerateCsiSendDeviceAttributesSecondary(int) Generates an escape sequence of type CSI with action CsiSendDeviceAttributesSecondary Declaration public static string GenerateCsiSendDeviceAttributesSecondary(int attributes) Parameters Type Name Description int attributes Returns Type Description string GenerateCsiSendDeviceAttributesTertiary(int) Generates an escape sequence of type CSI with action CsiSendDeviceAttributesTertiary Declaration public static string GenerateCsiSendDeviceAttributesTertiary(int attributes) Parameters Type Name Description int attributes Returns Type Description string GenerateCsiSetConformanceLevel(int, int) Generates an escape sequence of type CSI with action CsiSetConformanceLevel Declaration public static string GenerateCsiSetConformanceLevel(int level, int conformance) Parameters Type Name Description int level int conformance Returns Type Description string GenerateCsiSetCursorStyle(int) Generates an escape sequence of type CSI with action CsiSetCursorStyle Declaration public static string GenerateCsiSetCursorStyle(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiSetGraphicsAttribute(int, int, string) Generates an escape sequence of type CSI with action CsiSetGraphicsAttribute Declaration public static string GenerateCsiSetGraphicsAttribute(int itemType, int attributeManager, string geometry) Parameters Type Name Description int itemType int attributeManager string geometry Returns Type Description string GenerateCsiSetKeyModifierOptions(int, int) Generates an escape sequence of type CSI with action CsiSetKeyModifierOptions Declaration public static string GenerateCsiSetKeyModifierOptions(int resource, int modify) Parameters Type Name Description int resource int modify Returns Type Description string GenerateCsiSetLeftRightMargins(int, int) Generates an escape sequence of type CSI with action CsiSetLeftRightMargins Declaration public static string GenerateCsiSetLeftRightMargins(int left, int right) Parameters Type Name Description int left int right Returns Type Description string GenerateCsiSetMarginBellVolume(int) Generates an escape sequence of type CSI with action CsiSetMarginBellVolume Declaration public static string GenerateCsiSetMarginBellVolume(int level) Parameters Type Name Description int level Returns Type Description string GenerateCsiSetMode(string) Generates an escape sequence of type CSI with action CsiSetMode Declaration public static string GenerateCsiSetMode(string mode) Parameters Type Name Description string mode Returns Type Description string GenerateCsiSetPointerModeXterm(int) Generates an escape sequence of type CSI with action CsiSetPointerModeXterm Declaration public static string GenerateCsiSetPointerModeXterm(int hideMode) Parameters Type Name Description int hideMode Returns Type Description string GenerateCsiSetPrivateMode(string) Generates an escape sequence of type CSI with action CsiSetPrivateMode Declaration public static string GenerateCsiSetPrivateMode(string mode) Parameters Type Name Description string mode Returns Type Description string GenerateCsiSetScrollingRegion(int, int) Generates an escape sequence of type CSI with action CsiSetScrollingRegion Declaration public static string GenerateCsiSetScrollingRegion(int top, int bottom) Parameters Type Name Description int top int bottom Returns Type Description string GenerateCsiSetShiftEscapeOptions(int) Generates an escape sequence of type CSI with action CsiSetShiftEscapeOptions Declaration public static string GenerateCsiSetShiftEscapeOptions(int option) Parameters Type Name Description int option Returns Type Description string GenerateCsiSetTitleModeXterm(string) Generates an escape sequence of type CSI with action CsiSetTitleModeXterm Declaration public static string GenerateCsiSetTitleModeXterm(string modes) Parameters Type Name Description string modes Returns Type Description string GenerateCsiSetWarningBellVolume(int) Generates an escape sequence of type CSI with action CsiSetWarningBellVolume Declaration public static string GenerateCsiSetWarningBellVolume(int level) Parameters Type Name Description int level Returns Type Description string GenerateCsiShiftLeftColumns(int) Generates an escape sequence of type CSI with action CsiShiftLeftColumns Declaration public static string GenerateCsiShiftLeftColumns(int columns) Parameters Type Name Description int columns Returns Type Description string GenerateCsiShiftRightColumns(int) Generates an escape sequence of type CSI with action CsiShiftRightColumns Declaration public static string GenerateCsiShiftRightColumns(int columns) Parameters Type Name Description int columns Returns Type Description string GenerateCsiSoftTerminalReset() Generates an escape sequence of type CSI with action CsiSoftTerminalReset Declaration public static string GenerateCsiSoftTerminalReset() Returns Type Description string GenerateCsiTabClear(int) Generates an escape sequence of type CSI with action CsiTabClear Declaration public static string GenerateCsiTabClear(int mode) Parameters Type Name Description int mode Returns Type Description string GenerateCsiWindowManipulation(int, int, int) Generates an escape sequence of type CSI with action CsiWindowManipulation Declaration public static string GenerateCsiWindowManipulation(int windowAction, int windowAction2, int windowAction3) Parameters Type Name Description int windowAction int windowAction2 int windowAction3 Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.DcsSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.DcsSequences.html",
    "title": "Class DcsSequences | Terminaux API - Aptivi",
    "keywords": "Class DcsSequences List of DCS sequences and their regular expressions Inheritance object DcsSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class DcsSequences Properties DcsRequestResourceValuesSequenceRegex A regular expression that matches all the VT sequences that are of type DcsRequestResourceValues Declaration public static Regex DcsRequestResourceValuesSequenceRegex { get; } Property Value Type Description Regex DcsRequestStatusStringSequenceRegex A regular expression that matches all the VT sequences that are of type DcsRequestStatusString Declaration public static Regex DcsRequestStatusStringSequenceRegex { get; } Property Value Type Description Regex DcsRequestTermInfoDataSequenceRegex A regular expression that matches all the VT sequences that are of type DcsRequestTermInfoData Declaration public static Regex DcsRequestTermInfoDataSequenceRegex { get; } Property Value Type Description Regex DcsRestorePresentationStatusSequenceRegex A regular expression that matches all the VT sequences that are of type DcsRestorePresentationStatus Declaration public static Regex DcsRestorePresentationStatusSequenceRegex { get; } Property Value Type Description Regex DcsSetTermInfoDataSequenceRegex A regular expression that matches all the VT sequences that are of type DcsSetTermInfoData Declaration public static Regex DcsSetTermInfoDataSequenceRegex { get; } Property Value Type Description Regex DcsUserDefinedKeysSequenceRegex A regular expression that matches all the VT sequences that are of type DcsUserDefinedKeys Declaration public static Regex DcsUserDefinedKeysSequenceRegex { get; } Property Value Type Description Regex Methods GenerateDcsRequestResourceValues(string) Generates an escape sequence of type DCS with action DcsRequestResourceValues Declaration public static string GenerateDcsRequestResourceValues(string xtermResourceNames) Parameters Type Name Description string xtermResourceNames Returns Type Description string GenerateDcsRequestStatusString(string) Generates an escape sequence of type DCS with action DcsRequestStatusString Declaration public static string GenerateDcsRequestStatusString(string status) Parameters Type Name Description string status Returns Type Description string GenerateDcsRequestTermInfoData(string) Generates an escape sequence of type DCS with action DcsRequestTermInfoData Declaration public static string GenerateDcsRequestTermInfoData(string termName) Parameters Type Name Description string termName Returns Type Description string GenerateDcsRestorePresentationStatus(int, string) Generates an escape sequence of type DCS with action DcsRestorePresentationStatus Declaration public static string GenerateDcsRestorePresentationStatus(int controlConvert, string status) Parameters Type Name Description int controlConvert string status Returns Type Description string GenerateDcsSetTermInfoData(string) Generates an escape sequence of type DCS with action DcsSetTermInfoData Declaration public static string GenerateDcsSetTermInfoData(string termName) Parameters Type Name Description string termName Returns Type Description string GenerateDcsUserDefinedKeys(int, int, string) Generates an escape sequence of type DCS with action DcsUserDefinedKeys Declaration public static string GenerateDcsUserDefinedKeys(int clearUdkDefinitions, int dontLockKeys, string keybindings) Parameters Type Name Description int clearUdkDefinitions int dontLockKeys string keybindings Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.EscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.EscSequences.html",
    "title": "Class EscSequences | Terminaux API - Aptivi",
    "keywords": "Class EscSequences List of ESC sequences and their regular expressions Inheritance object EscSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class EscSequences Properties Esc7BitControlsSequenceRegex A regular expression that matches all the VT sequences that are of type Esc7BitControls Declaration public static Regex Esc7BitControlsSequenceRegex { get; } Property Value Type Description Regex Esc8BitControlsSequenceRegex A regular expression that matches all the VT sequences that are of type Esc8BitControls Declaration public static Regex Esc8BitControlsSequenceRegex { get; } Property Value Type Description Regex EscAnsiConformanceLevel1SequenceRegex A regular expression that matches all the VT sequences that are of type EscAnsiConformanceLevel1 Declaration public static Regex EscAnsiConformanceLevel1SequenceRegex { get; } Property Value Type Description Regex EscAnsiConformanceLevel2SequenceRegex A regular expression that matches all the VT sequences that are of type EscAnsiConformanceLevel2 Declaration public static Regex EscAnsiConformanceLevel2SequenceRegex { get; } Property Value Type Description Regex EscAnsiConformanceLevel3SequenceRegex A regular expression that matches all the VT sequences that are of type EscAnsiConformanceLevel3 Declaration public static Regex EscAnsiConformanceLevel3SequenceRegex { get; } Property Value Type Description Regex EscApplicationKeypadSequenceRegex A regular expression that matches all the VT sequences that are of type EscApplicationKeypad Declaration public static Regex EscApplicationKeypadSequenceRegex { get; } Property Value Type Description Regex EscBackIndexSequenceRegex A regular expression that matches all the VT sequences that are of type EscBackIndex Declaration public static Regex EscBackIndexSequenceRegex { get; } Property Value Type Description Regex EscCursorToLowerLeftCornerSequenceRegex A regular expression that matches all the VT sequences that are of type EscCursorToLowerLeftCorner Declaration public static Regex EscCursorToLowerLeftCornerSequenceRegex { get; } Property Value Type Description Regex EscDecDoubleHeightLineBottomHalfSequenceRegex A regular expression that matches all the VT sequences that are of type EscDecDoubleHeightLineBottomHalf Declaration public static Regex EscDecDoubleHeightLineBottomHalfSequenceRegex { get; } Property Value Type Description Regex EscDecDoubleHeightLineTopHalfSequenceRegex A regular expression that matches all the VT sequences that are of type EscDecDoubleHeightLineTopHalf Declaration public static Regex EscDecDoubleHeightLineTopHalfSequenceRegex { get; } Property Value Type Description Regex EscDecDoubleWidthLineSequenceRegex A regular expression that matches all the VT sequences that are of type EscDecDoubleWidthLine Declaration public static Regex EscDecDoubleWidthLineSequenceRegex { get; } Property Value Type Description Regex EscDecScreenAlignmentTestSequenceRegex A regular expression that matches all the VT sequences that are of type EscDecScreenAlignmentTest Declaration public static Regex EscDecScreenAlignmentTestSequenceRegex { get; } Property Value Type Description Regex EscDecSingleWidthLineSequenceRegex A regular expression that matches all the VT sequences that are of type EscDecSingleWidthLine Declaration public static Regex EscDecSingleWidthLineSequenceRegex { get; } Property Value Type Description Regex EscDesignateG0CharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type EscDesignateG0CharacterSet Declaration public static Regex EscDesignateG0CharacterSetSequenceRegex { get; } Property Value Type Description Regex EscDesignateG1CharacterSetAltSequenceRegex A regular expression that matches all the VT sequences that are of type EscDesignateG1CharacterSetAlt Declaration public static Regex EscDesignateG1CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex EscDesignateG1CharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type EscDesignateG1CharacterSet Declaration public static Regex EscDesignateG1CharacterSetSequenceRegex { get; } Property Value Type Description Regex EscDesignateG2CharacterSetAltSequenceRegex A regular expression that matches all the VT sequences that are of type EscDesignateG2CharacterSetAlt Declaration public static Regex EscDesignateG2CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex EscDesignateG2CharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type EscDesignateG2CharacterSet Declaration public static Regex EscDesignateG2CharacterSetSequenceRegex { get; } Property Value Type Description Regex EscDesignateG3CharacterSetAltSequenceRegex A regular expression that matches all the VT sequences that are of type EscDesignateG3CharacterSetAlt Declaration public static Regex EscDesignateG3CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex EscDesignateG3CharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type EscDesignateG3CharacterSet Declaration public static Regex EscDesignateG3CharacterSetSequenceRegex { get; } Property Value Type Description Regex EscForwardIndexSequenceRegex A regular expression that matches all the VT sequences that are of type EscForwardIndex Declaration public static Regex EscForwardIndexSequenceRegex { get; } Property Value Type Description Regex EscFullResetSequenceRegex A regular expression that matches all the VT sequences that are of type EscFullReset Declaration public static Regex EscFullResetSequenceRegex { get; } Property Value Type Description Regex EscInvokeG1CharacterSetGrSequenceRegex A regular expression that matches all the VT sequences that are of type EscInvokeG1CharacterSetGr Declaration public static Regex EscInvokeG1CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex EscInvokeG2CharacterSetGlSequenceRegex A regular expression that matches all the VT sequences that are of type EscInvokeG2CharacterSetGl Declaration public static Regex EscInvokeG2CharacterSetGlSequenceRegex { get; } Property Value Type Description Regex EscInvokeG2CharacterSetGrSequenceRegex A regular expression that matches all the VT sequences that are of type EscInvokeG2CharacterSetGr Declaration public static Regex EscInvokeG2CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex EscInvokeG3CharacterSetGlSequenceRegex A regular expression that matches all the VT sequences that are of type EscInvokeG3CharacterSetGl Declaration public static Regex EscInvokeG3CharacterSetGlSequenceRegex { get; } Property Value Type Description Regex EscInvokeG3CharacterSetGrSequenceRegex A regular expression that matches all the VT sequences that are of type EscInvokeG3CharacterSetGr Declaration public static Regex EscInvokeG3CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex EscMemoryLockSequenceRegex A regular expression that matches all the VT sequences that are of type EscMemoryLock Declaration public static Regex EscMemoryLockSequenceRegex { get; } Property Value Type Description Regex EscMemoryUnlockSequenceRegex A regular expression that matches all the VT sequences that are of type EscMemoryUnlock Declaration public static Regex EscMemoryUnlockSequenceRegex { get; } Property Value Type Description Regex EscNormalKeypadSequenceRegex A regular expression that matches all the VT sequences that are of type EscNormalKeypad Declaration public static Regex EscNormalKeypadSequenceRegex { get; } Property Value Type Description Regex EscRestoreCursorSequenceRegex A regular expression that matches all the VT sequences that are of type EscRestoreCursor Declaration public static Regex EscRestoreCursorSequenceRegex { get; } Property Value Type Description Regex EscSaveCursorSequenceRegex A regular expression that matches all the VT sequences that are of type EscSaveCursor Declaration public static Regex EscSaveCursorSequenceRegex { get; } Property Value Type Description Regex EscSelectDefaultCharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type EscSelectDefaultCharacterSet Declaration public static Regex EscSelectDefaultCharacterSetSequenceRegex { get; } Property Value Type Description Regex EscSelectUtf8CharacterSetSequenceRegex A regular expression that matches all the VT sequences that are of type EscSelectUtf8CharacterSet Declaration public static Regex EscSelectUtf8CharacterSetSequenceRegex { get; } Property Value Type Description Regex Methods GenerateEsc7BitControls() Generates an escape sequence of type ESC with action Esc7BitControls Declaration public static string GenerateEsc7BitControls() Returns Type Description string GenerateEsc8BitControls() Generates an escape sequence of type ESC with action Esc8BitControls Declaration public static string GenerateEsc8BitControls() Returns Type Description string GenerateEscAnsiConformanceLevel1() Generates an escape sequence of type ESC with action EscAnsiConformanceLevel1 Declaration public static string GenerateEscAnsiConformanceLevel1() Returns Type Description string GenerateEscAnsiConformanceLevel2() Generates an escape sequence of type ESC with action EscAnsiConformanceLevel2 Declaration public static string GenerateEscAnsiConformanceLevel2() Returns Type Description string GenerateEscAnsiConformanceLevel3() Generates an escape sequence of type ESC with action EscAnsiConformanceLevel3 Declaration public static string GenerateEscAnsiConformanceLevel3() Returns Type Description string GenerateEscApplicationKeypad() Generates an escape sequence of type ESC with action EscApplicationKeypad Declaration public static string GenerateEscApplicationKeypad() Returns Type Description string GenerateEscBackIndex() Generates an escape sequence of type ESC with action EscBackIndex Declaration public static string GenerateEscBackIndex() Returns Type Description string GenerateEscCursorToLowerLeftCorner() Generates an escape sequence of type ESC with action EscCursorToLowerLeftCorner Declaration public static string GenerateEscCursorToLowerLeftCorner() Returns Type Description string GenerateEscDecDoubleHeightLineBottomHalf() Generates an escape sequence of type ESC with action EscDecDoubleHeightLineBottomHalf Declaration public static string GenerateEscDecDoubleHeightLineBottomHalf() Returns Type Description string GenerateEscDecDoubleHeightLineTopHalf() Generates an escape sequence of type ESC with action EscDecDoubleHeightLineTopHalf Declaration public static string GenerateEscDecDoubleHeightLineTopHalf() Returns Type Description string GenerateEscDecDoubleWidthLine() Generates an escape sequence of type ESC with action EscDecDoubleWidthLine Declaration public static string GenerateEscDecDoubleWidthLine() Returns Type Description string GenerateEscDecScreenAlignmentTest() Generates an escape sequence of type ESC with action EscDecScreenAlignmentTest Declaration public static string GenerateEscDecScreenAlignmentTest() Returns Type Description string GenerateEscDecSingleWidthLine() Generates an escape sequence of type ESC with action EscDecSingleWidthLine Declaration public static string GenerateEscDecSingleWidthLine() Returns Type Description string GenerateEscDesignateG0CharacterSet(string) Generates an escape sequence of type ESC with action EscDesignateG0CharacterSet Declaration public static string GenerateEscDesignateG0CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string GenerateEscDesignateG1CharacterSet(string) Generates an escape sequence of type ESC with action EscDesignateG1CharacterSet Declaration public static string GenerateEscDesignateG1CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string GenerateEscDesignateG1CharacterSetAlt(string) Generates an escape sequence of type ESC with action EscDesignateG1CharacterSetAlt Declaration public static string GenerateEscDesignateG1CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string GenerateEscDesignateG2CharacterSet(string) Generates an escape sequence of type ESC with action EscDesignateG2CharacterSet Declaration public static string GenerateEscDesignateG2CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string GenerateEscDesignateG2CharacterSetAlt(string) Generates an escape sequence of type ESC with action EscDesignateG2CharacterSetAlt Declaration public static string GenerateEscDesignateG2CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string GenerateEscDesignateG3CharacterSet(string) Generates an escape sequence of type ESC with action EscDesignateG3CharacterSet Declaration public static string GenerateEscDesignateG3CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string GenerateEscDesignateG3CharacterSetAlt(string) Generates an escape sequence of type ESC with action EscDesignateG3CharacterSetAlt Declaration public static string GenerateEscDesignateG3CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string GenerateEscForwardIndex() Generates an escape sequence of type ESC with action EscForwardIndex Declaration public static string GenerateEscForwardIndex() Returns Type Description string GenerateEscFullReset() Generates an escape sequence of type ESC with action EscFullReset Declaration public static string GenerateEscFullReset() Returns Type Description string GenerateEscInvokeG1CharacterSetGr() Generates an escape sequence of type ESC with action EscInvokeG1CharacterSetGr Declaration public static string GenerateEscInvokeG1CharacterSetGr() Returns Type Description string GenerateEscInvokeG2CharacterSetGl() Generates an escape sequence of type ESC with action EscInvokeG2CharacterSetGl Declaration public static string GenerateEscInvokeG2CharacterSetGl() Returns Type Description string GenerateEscInvokeG2CharacterSetGr() Generates an escape sequence of type ESC with action EscInvokeG2CharacterSetGr Declaration public static string GenerateEscInvokeG2CharacterSetGr() Returns Type Description string GenerateEscInvokeG3CharacterSetGl() Generates an escape sequence of type ESC with action EscInvokeG3CharacterSetGl Declaration public static string GenerateEscInvokeG3CharacterSetGl() Returns Type Description string GenerateEscInvokeG3CharacterSetGr() Generates an escape sequence of type ESC with action EscInvokeG3CharacterSetGr Declaration public static string GenerateEscInvokeG3CharacterSetGr() Returns Type Description string GenerateEscMemoryLock() Generates an escape sequence of type ESC with action EscMemoryLock Declaration public static string GenerateEscMemoryLock() Returns Type Description string GenerateEscMemoryUnlock() Generates an escape sequence of type ESC with action EscMemoryUnlock Declaration public static string GenerateEscMemoryUnlock() Returns Type Description string GenerateEscNormalKeypad() Generates an escape sequence of type ESC with action EscNormalKeypad Declaration public static string GenerateEscNormalKeypad() Returns Type Description string GenerateEscRestoreCursor() Generates an escape sequence of type ESC with action EscRestoreCursor Declaration public static string GenerateEscRestoreCursor() Returns Type Description string GenerateEscSaveCursor() Generates an escape sequence of type ESC with action EscSaveCursor Declaration public static string GenerateEscSaveCursor() Returns Type Description string GenerateEscSelectDefaultCharacterSet() Generates an escape sequence of type ESC with action EscSelectDefaultCharacterSet Declaration public static string GenerateEscSelectDefaultCharacterSet() Returns Type Description string GenerateEscSelectUtf8CharacterSet() Generates an escape sequence of type ESC with action EscSelectUtf8CharacterSet Declaration public static string GenerateEscSelectUtf8CharacterSet() Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.OscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.OscSequences.html",
    "title": "Class OscSequences | Terminaux API - Aptivi",
    "keywords": "Class OscSequences List of OSC sequences and their regular expressions Inheritance object OscSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class OscSequences Properties OscOperatingSystemCommandAltSequenceRegex A regular expression that matches all the VT sequences that are of type OscOperatingSystemCommandAlt Declaration public static Regex OscOperatingSystemCommandAltSequenceRegex { get; } Property Value Type Description Regex OscOperatingSystemCommandSequenceRegex A regular expression that matches all the VT sequences that are of type OscOperatingSystemCommand Declaration public static Regex OscOperatingSystemCommandSequenceRegex { get; } Property Value Type Description Regex Methods GenerateOscOperatingSystemCommand(string) Generates an escape sequence of type OSC with action OscOperatingSystemCommand Declaration public static string GenerateOscOperatingSystemCommand(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string GenerateOscOperatingSystemCommandAlt(string) Generates an escape sequence of type OSC with action OscOperatingSystemCommandAlt Declaration public static string GenerateOscOperatingSystemCommandAlt(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.PmSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.PmSequences.html",
    "title": "Class PmSequences | Terminaux API - Aptivi",
    "keywords": "Class PmSequences List of PM sequences and their regular expressions Inheritance object PmSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class PmSequences Properties PmPrivacyMessageSequenceRegex A regular expression that matches all the VT sequences that are of type PmPrivacyMessage Declaration public static Regex PmPrivacyMessageSequenceRegex { get; } Property Value Type Description Regex Methods GeneratePmPrivacyMessage(string) Generates an escape sequence of type PM with action PmPrivacyMessage Declaration public static string GeneratePmPrivacyMessage(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.html",
    "title": "Namespace Terminaux.Sequences.Builder.Types | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Sequences.Builder.Types Classes ApcSequences List of APC sequences and their regular expressions C1Sequences List of C1 sequences and their regular expressions CsiSequences List of CSI sequences and their regular expressions DcsSequences List of DCS sequences and their regular expressions EscSequences List of ESC sequences and their regular expressions OscSequences List of OSC sequences and their regular expressions PmSequences List of PM sequences and their regular expressions"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html",
    "title": "Class VtSequenceBasicChars | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceBasicChars VT sequence basic characters for forming VT sequences Inheritance object VtSequenceBasicChars Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public static class VtSequenceBasicChars Fields | Edit this page View Source AlternateCharacterSetChar Gets the alternate character set character Declaration public const char AlternateCharacterSetChar = '\\u000e' Field Value Type Description char | Edit this page View Source BackspaceChar Gets the backspace character Declaration public const char BackspaceChar = '\\b' Field Value Type Description char | Edit this page View Source BellChar Gets the bell character Declaration public const char BellChar = '\\a' Field Value Type Description char | Edit this page View Source CarriageReturnChar Gets the carriage return character Declaration public const char CarriageReturnChar = '\\r' Field Value Type Description char | Edit this page View Source EscapeChar Gets the escape character Declaration public const char EscapeChar = '\\u001b' Field Value Type Description char | Edit this page View Source FormFeedChar Gets the form feed character Declaration public const char FormFeedChar = '\\f' Field Value Type Description char | Edit this page View Source HorizontalTabChar Gets the horizontal tab character Declaration public const char HorizontalTabChar = '\\t' Field Value Type Description char | Edit this page View Source LineFeedChar Gets the line feed character Declaration public const char LineFeedChar = '\\n' Field Value Type Description char | Edit this page View Source ReturnTerminalStatusChar Gets the return terminal status character Declaration public const char ReturnTerminalStatusChar = '\\u0005' Field Value Type Description char | Edit this page View Source SpaceChar Gets the space character Declaration public const char SpaceChar = ' ' Field Value Type Description char | Edit this page View Source StChar Gets the St character Declaration public const char StChar = '\\u009c' Field Value Type Description char | Edit this page View Source StandardCharacterSetChar Gets the standard character set character Declaration public const char StandardCharacterSetChar = '\\u000f' Field Value Type Description char | Edit this page View Source VerticalTabChar Gets the vertical tab character Declaration public const char VerticalTabChar = '\\v' Field Value Type Description char"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html",
    "title": "Class VtSequenceBuilderTools | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceBuilderTools VT sequence builder tools Inheritance object VtSequenceBuilderTools Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public static class VtSequenceBuilderTools Methods | Edit this page View Source BuildVtSequence(VtSequenceSpecificTypes, params object[]) Builds a VT sequence using specific types Declaration public static string BuildVtSequence(VtSequenceSpecificTypes specificType, params object[] arguments) Parameters Type Name Description VtSequenceSpecificTypes specificType object[] arguments Returns Type Description string Exceptions Type Condition Exception | Edit this page View Source DetermineTypeFromSequence(string) Determines the VT sequence type from the given sequence Declaration public static (VtSequenceType, VtSequenceSpecificTypes) DetermineTypeFromSequence(string sequence) Parameters Type Name Description string sequence The sequence to query Returns Type Description (VtSequenceType, VtSequenceSpecificTypes) A tuple of (VtSequenceType, VtSequenceSpecificTypes) containing information about a sequence type and a sequence command type Exceptions Type Condition Exception"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html",
    "title": "Enum VtSequenceSpecificTypes | Terminaux API - Aptivi",
    "keywords": "Enum VtSequenceSpecificTypes Specific VT sequences sorted by type Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public enum VtSequenceSpecificTypes Fields Name Description ApcApplicationProgramCommand APC VT sequence (ApcApplicationProgramCommand) C1ApplicationProgramCommand C1 VT sequence (C1ApplicationProgramCommand) C1ControlSequenceIndicator C1 VT sequence (C1ControlSequenceIndicator) C1DeviceControlString C1 VT sequence (C1DeviceControlString) C1EndOfGuardedArea C1 VT sequence (C1EndOfGuardedArea) C1Index C1 VT sequence (C1Index) C1NextLine C1 VT sequence (C1NextLine) C1OperatingSystemCommand C1 VT sequence (C1OperatingSystemCommand) C1PrivacyMessage C1 VT sequence (C1PrivacyMessage) C1ReturnTerminalId C1 VT sequence (C1ReturnTerminalId) C1ReverseIndex C1 VT sequence (C1ReverseIndex) C1SingleShiftSelectG2CharacterSet C1 VT sequence (C1SingleShiftSelectG2CharacterSet) C1SingleShiftSelectG3CharacterSet C1 VT sequence (C1SingleShiftSelectG3CharacterSet) C1StartOfGuardedArea C1 VT sequence (C1StartOfGuardedArea) C1StartOfString C1 VT sequence (C1StartOfString) C1StringTerminator C1 VT sequence (C1StringTerminator) C1TabSet C1 VT sequence (C1TabSet) CsiChangeAttributesInRectangularArea CSI VT sequence (CsiChangeAttributesInRectangularArea) CsiCharacterAttributes CSI VT sequence (CsiCharacterAttributes) CsiCopyRectangularArea CSI VT sequence (CsiCopyRectangularArea) CsiCursorBackwardTabulation CSI VT sequence (CsiCursorBackwardTabulation) CsiCursorCharacterAbsoluteLine CSI VT sequence (CsiCursorCharacterAbsoluteLine) CsiCursorForwardTabulation CSI VT sequence (CsiCursorForwardTabulation) CsiCursorPosition CSI VT sequence (CsiCursorPosition) CsiCursorPositionAbsolute CSI VT sequence (CsiCursorPositionAbsolute) CsiCursorPositionRelative CSI VT sequence (CsiCursorPositionRelative) CsiDecPrivateModeValues CSI VT sequence (CsiDecPrivateModeValues) CsiDeleteChars CSI VT sequence (CsiDeleteChars) CsiDeleteColumns CSI VT sequence (CsiDeleteColumns) CsiDeleteLine CSI VT sequence (CsiDeleteLine) CsiDeviceStatusReport CSI VT sequence (CsiDeviceStatusReport) CsiDeviceStatusReportDec CSI VT sequence (CsiDeviceStatusReportDec) CsiDisableKeyModifierOptions CSI VT sequence (CsiDisableKeyModifierOptions) CsiEnableFilterRectangle CSI VT sequence (CsiEnableFilterRectangle) CsiEraseCharacters CSI VT sequence (CsiEraseCharacters) CsiEraseInDisplay CSI VT sequence (CsiEraseInDisplay) CsiEraseInDisplayDecsed CSI VT sequence (CsiEraseInDisplayDecsed) CsiEraseInLine CSI VT sequence (CsiEraseInLine) CsiEraseInLineDecsel CSI VT sequence (CsiEraseInLineDecsel) CsiEraseRectangularArea CSI VT sequence (CsiEraseRectangularArea) CsiFillRectangularArea CSI VT sequence (CsiFillRectangularArea) CsiInitiateHighlightMouseTracking CSI VT sequence (CsiInitiateHighlightMouseTracking) CsiInsertBlankCharacters CSI VT sequence (CsiInsertBlankCharacters) CsiInsertColumns CSI VT sequence (CsiInsertColumns) CsiInsertLine CSI VT sequence (CsiInsertLine) CsiLeftTopPosition CSI VT sequence (CsiLeftTopPosition) CsiLinePositionAbsolute CSI VT sequence (CsiLinePositionAbsolute) CsiLinePositionRelative CSI VT sequence (CsiLinePositionRelative) CsiLoadLeds CSI VT sequence (CsiLoadLeds) CsiLocatorReporting CSI VT sequence (CsiLocatorReporting) CsiMediaCopy CSI VT sequence (CsiMediaCopy) CsiMediaCopyPrivate CSI VT sequence (CsiMediaCopyPrivate) CsiMoveCursorDown CSI VT sequence (CsiMoveCursorDown) CsiMoveCursorLeft CSI VT sequence (CsiMoveCursorLeft) CsiMoveCursorNextLine CSI VT sequence (CsiMoveCursorNextLine) CsiMoveCursorPreviousLine CSI VT sequence (CsiMoveCursorPreviousLine) CsiMoveCursorRight CSI VT sequence (CsiMoveCursorRight) CsiMoveCursorUp CSI VT sequence (CsiMoveCursorUp) CsiPopColorFromStack CSI VT sequence (CsiPopColorFromStack) CsiPopColorFromStackWithArgs CSI VT sequence (CsiPopColorFromStackWithArgs) CsiPopVideoAttributesFromStack CSI VT sequence (CsiPopVideoAttributesFromStack) CsiPopVideoAttributesFromStackXterm CSI VT sequence (CsiPopVideoAttributesFromStackXterm) CsiPushColorToStack CSI VT sequence (CsiPushColorToStack) CsiPushColorToStackWithArgs CSI VT sequence (CsiPushColorToStackWithArgs) CsiPushVideoAttributesToStack CSI VT sequence (CsiPushVideoAttributesToStack) CsiPushVideoAttributesToStackWithArgs CSI VT sequence (CsiPushVideoAttributesToStackWithArgs) CsiPushVideoAttributesToStackXterm CSI VT sequence (CsiPushVideoAttributesToStackXterm) CsiPushVideoAttributesToStackXtermWithArgs CSI VT sequence (CsiPushVideoAttributesToStackXtermWithArgs) CsiQueryKeyModifierOptions CSI VT sequence (CsiQueryKeyModifierOptions) CsiRectangularAreaChecksum CSI VT sequence (CsiRectangularAreaChecksum) CsiRepeatGraphicCharacter CSI VT sequence (CsiRepeatGraphicCharacter) CsiReportGraphicsRenditionRectangularArea CSI VT sequence (CsiReportGraphicsRenditionRectangularArea) CsiReportPaletteStack CSI VT sequence (CsiReportPaletteStack) CsiReportXtermVersion CSI VT sequence (CsiReportXtermVersion) CsiRequestAnsiMode CSI VT sequence (CsiRequestAnsiMode) CsiRequestDecPrivateMode CSI VT sequence (CsiRequestDecPrivateMode) CsiRequestLocatorPosition CSI VT sequence (CsiRequestLocatorPosition) CsiRequestPresentationStateReport CSI VT sequence (CsiRequestPresentationStateReport) CsiRequestTerminalParameters CSI VT sequence (CsiRequestTerminalParameters) CsiResetKeyModifierOptions CSI VT sequence (CsiResetKeyModifierOptions) CsiResetMode CSI VT sequence (CsiResetMode) CsiResetPrivateMode CSI VT sequence (CsiResetPrivateMode) CsiResetTitleModeFeatures CSI VT sequence (CsiResetTitleModeFeatures) CsiRestoreCursor CSI VT sequence (CsiRestoreCursor) CsiRestoreDecPrivateModeValues CSI VT sequence (CsiRestoreDecPrivateModeValues) CsiReverseAttributesInRectangularArea CSI VT sequence (CsiReverseAttributesInRectangularArea) CsiSaveCursor CSI VT sequence (CsiSaveCursor) CsiScrollDown CSI VT sequence (CsiScrollDown) CsiScrollDownOriginal CSI VT sequence (CsiScrollDownOriginal) CsiScrollUp CSI VT sequence (CsiScrollUp) CsiSelectActiveStatusDisplay CSI VT sequence (CsiSelectActiveStatusDisplay) CsiSelectAttributeChangeExtent CSI VT sequence (CsiSelectAttributeChangeExtent) CsiSelectCharacterProtectionAttribute CSI VT sequence (CsiSelectCharacterProtectionAttribute) CsiSelectChecksumExtension CSI VT sequence (CsiSelectChecksumExtension) CsiSelectColumnsPerPage CSI VT sequence (CsiSelectColumnsPerPage) CsiSelectLocatorEvents CSI VT sequence (CsiSelectLocatorEvents) CsiSelectNumberOfLinesPerScreen CSI VT sequence (CsiSelectNumberOfLinesPerScreen) CsiSelectStatusLineType CSI VT sequence (CsiSelectStatusLineType) CsiSelectiveEraseRectangularArea CSI VT sequence (CsiSelectiveEraseRectangularArea) CsiSendDeviceAttributesPrimary CSI VT sequence (CsiSendDeviceAttributesPrimary) CsiSendDeviceAttributesSecondary CSI VT sequence (CsiSendDeviceAttributesSecondary) CsiSendDeviceAttributesTertiary CSI VT sequence (CsiSendDeviceAttributesTertiary) CsiSetConformanceLevel CSI VT sequence (CsiSetConformanceLevel) CsiSetCursorStyle CSI VT sequence (CsiSetCursorStyle) CsiSetGraphicsAttribute CSI VT sequence (CsiSetGraphicsAttribute) CsiSetKeyModifierOptions CSI VT sequence (CsiSetKeyModifierOptions) CsiSetLeftRightMargins CSI VT sequence (CsiSetLeftRightMargins) CsiSetMarginBellVolume CSI VT sequence (CsiSetMarginBellVolume) CsiSetMode CSI VT sequence (CsiSetMode) CsiSetPointerModeXterm CSI VT sequence (CsiSetPointerModeXterm) CsiSetPrivateMode CSI VT sequence (CsiSetPrivateMode) CsiSetScrollingRegion CSI VT sequence (CsiSetScrollingRegion) CsiSetShiftEscapeOptions CSI VT sequence (CsiSetShiftEscapeOptions) CsiSetTitleModeXterm CSI VT sequence (CsiSetTitleModeXterm) CsiSetWarningBellVolume CSI VT sequence (CsiSetWarningBellVolume) CsiShiftLeftColumns CSI VT sequence (CsiShiftLeftColumns) CsiShiftRightColumns CSI VT sequence (CsiShiftRightColumns) CsiSoftTerminalReset CSI VT sequence (CsiSoftTerminalReset) CsiTabClear CSI VT sequence (CsiTabClear) CsiWindowManipulation CSI VT sequence (CsiWindowManipulation) DcsRequestResourceValues DCS VT sequence (DcsRequestResourceValues) DcsRequestStatusString DCS VT sequence (DcsRequestStatusString) DcsRequestTermInfoData DCS VT sequence (DcsRequestTermInfoData) DcsRestorePresentationStatus DCS VT sequence (DcsRestorePresentationStatus) DcsSetTermInfoData DCS VT sequence (DcsSetTermInfoData) DcsUserDefinedKeys DCS VT sequence (DcsUserDefinedKeys) Esc7BitControls ESC VT sequence (Esc7BitControls) Esc8BitControls ESC VT sequence (Esc8BitControls) EscAnsiConformanceLevel1 ESC VT sequence (EscAnsiConformanceLevel1) EscAnsiConformanceLevel2 ESC VT sequence (EscAnsiConformanceLevel2) EscAnsiConformanceLevel3 ESC VT sequence (EscAnsiConformanceLevel3) EscApplicationKeypad ESC VT sequence (EscApplicationKeypad) EscBackIndex ESC VT sequence (EscBackIndex) EscCursorToLowerLeftCorner ESC VT sequence (EscCursorToLowerLeftCorner) EscDecDoubleHeightLineBottomHalf ESC VT sequence (EscDecDoubleHeightLineBottomHalf) EscDecDoubleHeightLineTopHalf ESC VT sequence (EscDecDoubleHeightLineTopHalf) EscDecDoubleWidthLine ESC VT sequence (EscDecDoubleWidthLine) EscDecScreenAlignmentTest ESC VT sequence (EscDecScreenAlignmentTest) EscDecSingleWidthLine ESC VT sequence (EscDecSingleWidthLine) EscDesignateG0CharacterSet ESC VT sequence (EscDesignateG0CharacterSet) EscDesignateG1CharacterSet ESC VT sequence (EscDesignateG1CharacterSet) EscDesignateG1CharacterSetAlt ESC VT sequence (EscDesignateG1CharacterSetAlt) EscDesignateG2CharacterSet ESC VT sequence (EscDesignateG2CharacterSet) EscDesignateG2CharacterSetAlt ESC VT sequence (EscDesignateG2CharacterSetAlt) EscDesignateG3CharacterSet ESC VT sequence (EscDesignateG3CharacterSet) EscDesignateG3CharacterSetAlt ESC VT sequence (EscDesignateG3CharacterSetAlt) EscForwardIndex ESC VT sequence (EscForwardIndex) EscFullReset ESC VT sequence (EscFullReset) EscInvokeG1CharacterSetGr ESC VT sequence (EscInvokeG1CharacterSetGr) EscInvokeG2CharacterSetGl ESC VT sequence (EscInvokeG2CharacterSetGl) EscInvokeG2CharacterSetGr ESC VT sequence (EscInvokeG2CharacterSetGr) EscInvokeG3CharacterSetGl ESC VT sequence (EscInvokeG3CharacterSetGl) EscInvokeG3CharacterSetGr ESC VT sequence (EscInvokeG3CharacterSetGr) EscMemoryLock ESC VT sequence (EscMemoryLock) EscMemoryUnlock ESC VT sequence (EscMemoryUnlock) EscNormalKeypad ESC VT sequence (EscNormalKeypad) EscRestoreCursor ESC VT sequence (EscRestoreCursor) EscSaveCursor ESC VT sequence (EscSaveCursor) EscSelectDefaultCharacterSet ESC VT sequence (EscSelectDefaultCharacterSet) EscSelectUtf8CharacterSet ESC VT sequence (EscSelectUtf8CharacterSet) OscOperatingSystemCommand OSC VT sequence (OscOperatingSystemCommand) OscOperatingSystemCommandAlt OSC VT sequence (OscOperatingSystemCommandAlt) PmPrivacyMessage PM VT sequence (PmPrivacyMessage)"
  },
  "api/Terminaux.Sequences.Builder.html": {
    "href": "api/Terminaux.Sequences.Builder.html",
    "title": "Namespace Terminaux.Sequences.Builder | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Sequences.Builder Classes VtSequenceBasicChars VT sequence basic characters for forming VT sequences VtSequenceBuilderTools VT sequence builder tools Enums VtSequenceSpecificTypes Specific VT sequences sorted by type"
  },
  "api/Terminaux.Sequences.VtSequenceRegexes.html": {
    "href": "api/Terminaux.Sequences.VtSequenceRegexes.html",
    "title": "Class VtSequenceRegexes | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceRegexes VT sequence regular expressions Inheritance object VtSequenceRegexes Namespace: Terminaux.Sequences Assembly: Terminaux.dll Syntax public static class VtSequenceRegexes Properties APCSequences APC sequences Declaration public static Regex APCSequences { get; } Property Value Type Description Regex AllVTSequences All VT sequences Declaration public static Regex AllVTSequences { get; } Property Value Type Description Regex C1Sequences C1 sequences Declaration public static Regex C1Sequences { get; } Property Value Type Description Regex CSISequences CSI sequences Declaration public static Regex CSISequences { get; } Property Value Type Description Regex DCSSequences DCS sequences Declaration public static Regex DCSSequences { get; } Property Value Type Description Regex ESCSequences ESC sequences Declaration public static Regex ESCSequences { get; } Property Value Type Description Regex Nothing Match nothing Declaration public static Regex Nothing { get; } Property Value Type Description Regex OSCSequences OSC sequences Declaration public static Regex OSCSequences { get; } Property Value Type Description Regex PMSequences PM sequences Declaration public static Regex PMSequences { get; } Property Value Type Description Regex"
  },
  "api/Terminaux.Sequences.VtSequenceTools.html": {
    "href": "api/Terminaux.Sequences.VtSequenceTools.html",
    "title": "Class VtSequenceTools | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceTools Provides all the tools for manipulating with the VT sequences Inheritance object VtSequenceTools Namespace: Terminaux.Sequences Assembly: Terminaux.dll Syntax public static class VtSequenceTools Methods | Edit this page View Source DetermineTypeFromText(string) Determines the VT sequence type from the given text Declaration public static VtSequenceType DetermineTypeFromText(string Text) Parameters Type Name Description string Text Text that contains escape sequences Returns Type Description VtSequenceType The type that contains all the VT escape sequence types found in the Text | Edit this page View Source FilterVTSequences(string, string, VtSequenceType) Filters all of the VT sequences with support for multiple types Declaration public static string FilterVTSequences(string Text, string replace = \"\", VtSequenceType types = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences string replace Replace the sequences with this text VtSequenceType types VT sequence types Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source GetSequenceFilterRegexFromType() Gets the sequence filter regular expression from all the VT sequences (VtSequenceType) Declaration public static Regex GetSequenceFilterRegexFromType() Returns Type Description Regex Regular expression from all the VT sequences | Edit this page View Source GetSequenceFilterRegexFromType(VtSequenceType) Gets the sequence filter regular expression from the provided VT sequence type (VtSequenceType) Declaration public static Regex GetSequenceFilterRegexFromType(VtSequenceType type) Parameters Type Name Description VtSequenceType type VT sequence type Returns Type Description Regex Regular expression from the provided VT sequence type | Edit this page View Source GetSequenceFilterRegexFromTypes(VtSequenceType) Gets the sequence filter regular expression from the provided VT sequence types (VtSequenceType) Declaration public static Regex GetSequenceFilterRegexFromTypes(VtSequenceType types = VtSequenceType.All) Parameters Type Name Description VtSequenceType types VT sequence types Returns Type Description Regex Regular expression from the provided VT sequence types | Edit this page View Source IsMatchVTSequences(string, VtSequenceType) Does the string contain all of the VT sequences or a VT sequence of any type? Declaration public static bool IsMatchVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description bool True if any of the provided VT types are found; otherwise, false. | Edit this page View Source IsMatchVTSequencesSpecific(string, VtSequenceType) Does the string contain all of the VT sequences or a VT sequence of any specific type? Declaration public static Dictionary<VtSequenceType, bool> IsMatchVTSequencesSpecific(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description Dictionary<VtSequenceType, bool> A dictionary of each VT sequence type with either true/false for any type test. | Edit this page View Source MatchVTSequences(string, VtSequenceType) Matches all of the VT sequences Declaration public static (VtSequenceType type, Match[] matches)[] MatchVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description (VtSequenceType type, Match[] matches)[] The array of Matches that contain the capture and group information for the found VT sequences | Edit this page View Source SplitVTSequences(string, VtSequenceType) Splits all of the VT sequences Declaration public static string[] SplitVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description string[] The group of texts that don't contain the VT sequences | Edit this page View Source SplitVTSequencesMultiple(string, VtSequenceType) Splits all of the VT sequences Declaration public static string[] SplitVTSequencesMultiple(string Text, VtSequenceType types = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType types VT sequence types Returns Type Description string[] The group of texts that don't contain the VT sequences"
  },
  "api/Terminaux.Sequences.VtSequenceType.html": {
    "href": "api/Terminaux.Sequences.VtSequenceType.html",
    "title": "Enum VtSequenceType | Terminaux API - Aptivi",
    "keywords": "Enum VtSequenceType Denotes the VT sequence type Namespace: Terminaux.Sequences Assembly: Terminaux.dll Syntax public enum VtSequenceType Fields Name Description All All VT sequences Apc APC VT sequences C1 C1 VT sequences Csi CSI VT sequences Dcs DCS VT sequences Esc ESC VT sequences None No VT sequences Osc OSC VT sequences Pm PM VT sequences"
  },
  "api/Terminaux.Sequences.html": {
    "href": "api/Terminaux.Sequences.html",
    "title": "Namespace Terminaux.Sequences | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Sequences Classes VtSequenceRegexes VT sequence regular expressions VtSequenceTools Provides all the tools for manipulating with the VT sequences Enums VtSequenceType Denotes the VT sequence type"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListEntryWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListEntryWriterColor.html",
    "title": "Class ListEntryWriterColor | Terminaux API - Aptivi",
    "keywords": "Class ListEntryWriterColor List entry writer with color support Inheritance object ListEntryWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class ListEntryWriterColor Methods | Edit this page View Source RenderListEntry(string, string, int) Renders a list entry and value. Declaration public static string RenderListEntry(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed. string value A list value that will be listed. int indent Indentation level Returns Type Description string A list entry without the new line at the end | Edit this page View Source RenderListEntry(string, string, Color, Color, int) Renders a list entry and value. Declaration public static string RenderListEntry(string entry, string value, Color ListKeyColor, Color ListValueColor, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed. string value A list value that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. int indent Indentation level Returns Type Description string A list entry without the new line at the end | Edit this page View Source WriteListEntry(string, string, int) Outputs a list entry and value into the terminal prompt. Declaration public static void WriteListEntry(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. int indent Indentation level | Edit this page View Source WriteListEntry(string, string, Color, Color, int) Outputs a list entry and value into the terminal prompt. Declaration public static void WriteListEntry(string entry, string value, Color ListKeyColor, Color ListValueColor, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. int indent Indentation level | Edit this page View Source WriteListEntryPlain(string, string, int) Outputs a list entry and value into the terminal prompt plainly. Declaration public static void WriteListEntryPlain(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. int indent Indentation level"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html",
    "title": "Class ListWriterColor | Terminaux API - Aptivi",
    "keywords": "Class ListWriterColor List writer with color support Inheritance object ListWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class ListWriterColor Methods | Edit this page View Source RenderList(IDictionary) Renders the list entries. Declaration public static string RenderList(IDictionary List) Parameters Type Name Description IDictionary List A dictionary that will be listed. Returns Type Description string | Edit this page View Source RenderList(IDictionary, Color, Color) Renders the list entries. Declaration public static string RenderList(IDictionary List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IDictionary List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string | Edit this page View Source RenderList(IEnumerable) Renders the list entries. Declaration public static string RenderList(IEnumerable List) Parameters Type Name Description IEnumerable List A dictionary that will be listed. Returns Type Description string | Edit this page View Source RenderList(IEnumerable, Color, Color) Renders the list entries. Declaration public static string RenderList(IEnumerable List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string | Edit this page View Source RenderList<T>(IEnumerable<T>) Renders the list entries. Declaration public static string RenderList<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed. Returns Type Description string Type Parameters Name Description T | Edit this page View Source RenderList<T>(IEnumerable<T>, Color, Color) Renders the list entries. Declaration public static string RenderList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string Type Parameters Name Description T | Edit this page View Source RenderList<TKey, TValue>(Dictionary<TKey, TValue>) Renders the list entries. Declaration public static string RenderList<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed. Returns Type Description string Type Parameters Name Description TKey TValue | Edit this page View Source RenderList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color) Renders the list entries. Declaration public static string RenderList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string Type Parameters Name Description TKey TValue | Edit this page View Source WriteList(IDictionary) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList(IDictionary List) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteList(IDictionary, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList(IDictionary List, bool Wrap) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteList(IDictionary, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IDictionary List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. | Edit this page View Source WriteList(IDictionary, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IDictionary List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. | Edit this page View Source WriteList(IEnumerable) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList(IEnumerable List) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteList(IEnumerable, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList(IEnumerable List, bool Wrap) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteList(IEnumerable, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IEnumerable List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. | Edit this page View Source WriteList(IEnumerable, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IEnumerable List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. | Edit this page View Source WriteListPlain(IDictionary) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain(IDictionary List) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteListPlain(IDictionary, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain(IDictionary List, bool Wrap) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteListPlain(IEnumerable) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain(IEnumerable List) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteListPlain(IEnumerable, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain(IEnumerable List, bool Wrap) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteListPlain<T>(IEnumerable<T>) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description T | Edit this page View Source WriteListPlain<T>(IEnumerable<T>, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain<T>(IEnumerable<T> List, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue>) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description TKey TValue | Edit this page View Source WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue>, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue> List, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<T>(IEnumerable<T>) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList<T>(IEnumerable<T> List, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue"
  },
  "api/Terminaux.Writer.ConsoleWriters.RainbowBackTextWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.RainbowBackTextWriterColor.html",
    "title": "Class RainbowBackTextWriterColor | Terminaux API - Aptivi",
    "keywords": "Class RainbowBackTextWriterColor Console text writer with rainbow color as background color Inheritance object RainbowBackTextWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class RainbowBackTextWriterColor Methods | Edit this page View Source Render(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static string Render(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Render(string, params object[]) Outputs the text into the terminal prompt with rainbow bands as foregound colors. Declaration public static string Render(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, bool Line, Color foregroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color foregroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, Color foregroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color foregroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt with rainbow bands as foregound colors. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color foregroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color foregroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color foregroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color foregroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.RainbowTextWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.RainbowTextWriterColor.html",
    "title": "Class RainbowTextWriterColor | Terminaux API - Aptivi",
    "keywords": "Class RainbowTextWriterColor Console text writer with rainbow color as foreground color Inheritance object RainbowTextWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class RainbowTextWriterColor Methods | Edit this page View Source Render(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static string Render(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Render(string, params object[]) Outputs the text into the terminal prompt with rainbow bands as foregound colors. Declaration public static string Render(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, bool Line, Color backgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color backgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, Color backgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color backgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt with rainbow bands as foregound colors. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color backgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color backgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color backgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color backgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html",
    "title": "Class TextWriterColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterColor Console text writer with color support Inheritance object TextWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterColor Methods | Edit this page View Source Render(string, params object[]) Renders text and returns the sequence needed to print text to the terminal prompt. Declaration public static string Render(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, Color, params object[]) Renders text and returns the sequence needed to print text to the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColorBack(string, Color, Color, params object[]) Renders text and returns the sequence needed to print text to the terminal prompt with custom color support. Declaration public static string RenderColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings?, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings? settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings?, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings? settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings?, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings? settings, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings?, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings? settings, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings?, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings? settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings?, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings? settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterHighlightedColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterHighlightedColor.html",
    "title": "Class TextWriterHighlightedColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterHighlightedColor Console text writer with color support Inheritance object TextWriterHighlightedColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterHighlightedColor Methods | Edit this page View Source Render(bool, string, params object[]) Outputs the text into the terminal prompt. Declaration public static string Render(bool legacy, string Text, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Render(string, params object[]) Outputs the text into the terminal prompt. Declaration public static string Render(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(bool, string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(bool legacy, string Text, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColorBack(bool, string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColorBack(bool legacy, string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Write(bool, string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(bool legacy, string Text, bool Line, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(bool, string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(bool legacy, string Text, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(bool, string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(bool legacy, string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(bool, string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(bool legacy, string Text, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(bool, string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(bool legacy, string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(bool, string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(bool legacy, string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(bool, string, TermReaderSettings?, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(bool legacy, string Text, TermReaderSettings? settings, bool Line, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(bool, string, TermReaderSettings?, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(bool legacy, string Text, TermReaderSettings? settings, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings?, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings? settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings?, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings? settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(bool, string, TermReaderSettings?, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(bool legacy, string Text, TermReaderSettings? settings, bool Line, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(bool, string, TermReaderSettings?, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(bool legacy, string Text, TermReaderSettings? settings, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings?, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings? settings, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings?, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings? settings, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(bool, string, TermReaderSettings?, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(bool legacy, string Text, TermReaderSettings? settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(bool, string, TermReaderSettings?, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(bool legacy, string Text, TermReaderSettings? settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings?, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings? settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings?, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings? settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterRaw.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterRaw.html",
    "title": "Class TextWriterRaw | Terminaux API - Aptivi",
    "keywords": "Class TextWriterRaw Raw text writers for console Inheritance object TextWriterRaw Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterRaw Methods | Edit this page View Source Write() Outputs the new line into the terminal prompt. Declaration public static void Write() | Edit this page View Source WriteError() Outputs the new line into the terminal prompt (stderr). Declaration public static void WriteError() | Edit this page View Source WriteErrorPlain(string, bool, params object[]) Outputs the text into the terminal prompt (stderr) plainly. Declaration public static void WriteErrorPlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteErrorPlain(string, params object[]) Outputs the text into the terminal prompt (stderr) plainly with a newline terminator. Declaration public static void WriteErrorPlain(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteErrorRaw(string, params object[]) Outputs the text into the terminal prompt (stderr) plainly. Declaration public static void WriteErrorRaw(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, bool, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, params object[]) Outputs the text into the terminal prompt plainly with a newline terminator. Declaration public static void WritePlain(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, TermReaderSettings?, bool, params object[]) Outputs the text into the terminal prompt plainly. Use for TermReader custom bindings. Declaration public static void WritePlain(string Text, TermReaderSettings? settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, TermReaderSettings?, params object[]) Outputs the text into the terminal prompt plainly with a newline terminator. Use for TermReader custom bindings. Declaration public static void WritePlain(string Text, TermReaderSettings? settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteRaw(string, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WriteRaw(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteRaw(string, TermReaderSettings?, params object[]) Outputs the text into the terminal prompt plainly. Use for TermReader custom bindings. Declaration public static void WriteRaw(string Text, TermReaderSettings? settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html",
    "title": "Class TextWriterWhereColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWhereColor Console text writer with color support (positional write) Inheritance object TextWriterWhereColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereColor Methods | Edit this page View Source RenderWhere(string, int, int, bool, int, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhere(string, int, int, bool, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhere(string, int, int, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColor(string, int, int, bool, int, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColor(string, int, int, bool, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColor(string msg, int Left, int Top, bool Return, Color ForegroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColor(string, int, int, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColor(string msg, int Left, int Top, Color ForegroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColorBack(string, int, int, bool, int, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColorBack(string, int, int, bool, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColorBack(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColorBack(string, int, int, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColorBack(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteWhere(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.html",
    "title": "Namespace Terminaux.Writer.ConsoleWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.ConsoleWriters Classes ListEntryWriterColor List entry writer with color support ListWriterColor List writer with color support RainbowBackTextWriterColor Console text writer with rainbow color as background color RainbowTextWriterColor Console text writer with rainbow color as foreground color TextWriterColor Console text writer with color support TextWriterHighlightedColor Console text writer with color support TextWriterRaw Raw text writers for console TextWriterWhereColor Console text writer with color support (positional write)"
  },
  "api/Terminaux.Writer.DynamicWriters.TextWriterSlowColor.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.TextWriterSlowColor.html",
    "title": "Class TextWriterSlowColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterSlowColor Console text writer with color support (slow write) Inheritance object TextWriterSlowColor Namespace: Terminaux.Writer.DynamicWriters Assembly: Terminaux.dll Syntax public static class TextWriterSlowColor Methods | Edit this page View Source WriteSlowlyColor(string, bool, double, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColor(string msg, bool Line, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColorBack(string, bool, double, Color, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColorBack(string msg, bool Line, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyPlain(string, bool, double, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyPlain(string msg, bool Line, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.DynamicWriters.TextWriterWhereSlowColor.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.TextWriterWhereSlowColor.html",
    "title": "Class TextWriterWhereSlowColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWhereSlowColor Console text writer with color support (slow positional write) Inheritance object TextWriterWhereSlowColor Namespace: Terminaux.Writer.DynamicWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereSlowColor Methods | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.DynamicWriters.TextWriterWrappedColor.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.TextWriterWrappedColor.html",
    "title": "Class TextWriterWrappedColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWrappedColor Console text writer with color support (wrapped) Inheritance object TextWriterWrappedColor Namespace: Terminaux.Writer.DynamicWriters Assembly: Terminaux.dll Syntax public static class TextWriterWrappedColor Methods | Edit this page View Source WriteWrappedColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedPlain(string, bool, params object[]) Outputs the text into the terminal prompt, wraps the long terminal output if needed, and sets colors as needed. Declaration public static void WriteWrappedPlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.DynamicWriters.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.html",
    "title": "Namespace Terminaux.Writer.DynamicWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.DynamicWriters Classes TextWriterSlowColor Console text writer with color support (slow write) TextWriterWhereSlowColor Console text writer with color support (slow positional write) TextWriterWrappedColor Console text writer with color support (wrapped)"
  },
  "api/Terminaux.Writer.FancyWriters.BorderColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BorderColor.html",
    "title": "Class BorderColor | Terminaux API - Aptivi",
    "keywords": "Class BorderColor Border writer with color support Inheritance object BorderColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BorderColor Methods | Edit this page View Source RenderBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(int, int, int, int) Renders the border plainly Declaration public static string RenderBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string | Edit this page View Source RenderBorderPlain(int, int, int, int, char, char, char, char, char, char, char, char) Renders the border plainly Declaration public static string RenderBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteBorder(int, int, int, int) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color | Edit this page View Source WriteBorder(int, int, int, int, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(int, int, int, int, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorderPlain(int, int, int, int) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorderPlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border"
  },
  "api/Terminaux.Writer.FancyWriters.BorderTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BorderTextColor.html",
    "title": "Class BorderTextColor | Terminaux API - Aptivi",
    "keywords": "Class BorderTextColor Border writer with color and text support Inheritance object BorderTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BorderTextColor Methods | Edit this page View Source RenderBorder(string, char, char, char, char, char, char, char, char, Color) Renders the border plainly Declaration public static string RenderBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, char, char, char, char, char, char, char, char, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, Color) Renders the border plainly Declaration public static string RenderBorder(string text, Color BorderColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorderPlain(string) Renders the border plainly Declaration public static string RenderBorderPlain(string text) Parameters Type Name Description string text Text to be written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, char, char, char, char, char, char, char, char) Renders the border plainly Declaration public static string RenderBorderPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, char, char, char, char, char, char, char, char) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, char, char, char, char, char, char, char, char, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, int, int, int, int, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteBorder(string) Writes the border plainly Declaration public static void WriteBorder(string text) Parameters Type Name Description string text Text to be written. | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color | Edit this page View Source WriteBorder(string, int, int, int, int) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color | Edit this page View Source WriteBorder(string, int, int, int, int, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, Color) Writes the border plainly Declaration public static void WriteBorder(string text, Color BorderColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color | Edit this page View Source WriteBorder(string, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(string, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color | Edit this page View Source WriteBorderPlain(string) Writes the border plainly Declaration public static void WriteBorderPlain(string text) Parameters Type Name Description string text Text to be written. | Edit this page View Source WriteBorderPlain(string, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorderPlain(string, int, int, int, int) Writes the border plainly Declaration public static void WriteBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorderPlain(string, int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border"
  },
  "api/Terminaux.Writer.FancyWriters.BoxColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxColor.html",
    "title": "Class BoxColor | Terminaux API - Aptivi",
    "keywords": "Class BoxColor Box writer with color support Inheritance object BoxColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxColor Methods | Edit this page View Source RenderBox(int, int, int, int) Renders the box Declaration public static string RenderBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string The rendered box | Edit this page View Source RenderBox(int, int, int, int, Color) Renders the box Declaration public static string RenderBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color Returns Type Description string The rendered box | Edit this page View Source WriteBox(int, int, int, int) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBox(int, int, int, int, Color) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color | Edit this page View Source WriteBoxPlain(int, int, int, int) Writes the box plainly Declaration public static void WriteBoxPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames"
  },
  "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html",
    "title": "Class BoxFrameColor | Terminaux API - Aptivi",
    "keywords": "Class BoxFrameColor BoxFrame writer with color support Inheritance object BoxFrameColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxFrameColor Methods | Edit this page View Source RenderBoxFrame(int, int, int, int) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, Color, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source WriteBoxFrame(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color Color TextColor BoxFrame text color from Terminaux's Color | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color Color TextColor BoxFrame text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFramePlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html",
    "title": "Class CenteredFigletTextColor | Terminaux API - Aptivi",
    "keywords": "Class CenteredFigletTextColor Centered Figlet writer Inheritance object CenteredFigletTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredFigletTextColor Methods | Edit this page View Source RenderCenteredFiglet(int, FigletFont, string, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletFont, string, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletFont FigletFont, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletFont, string, Color, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(FigletFont, string, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(FigletFont, string, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletFont FigletFont, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(FigletFont, string, Color, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteCenteredFiglet(int, FigletFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FigletFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFiglet(FigletFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FigletFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(int, FigletFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(int top, FigletFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(FigletFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(FigletFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(int, FigletFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(int top, FigletFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(FigletFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(FigletFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FigletFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html",
    "title": "Class CenteredTextColor | Terminaux API - Aptivi",
    "keywords": "Class CenteredTextColor Centered writer Inheritance object CenteredTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredTextColor Methods | Edit this page View Source RenderCentered(int, string, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(int, string, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(int, string, Color, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, Color, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, Color, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, Color, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteCentered(int, string, params object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCentered(string, params object[]) Draws a centered text Declaration public static void WriteCentered(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(int, string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(int, string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLine(int, string, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLine(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLine(string, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLine(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(int, string, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(string, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(int, string, Color, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(string, Color, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletColor.html",
    "title": "Class FigletColor | Terminaux API - Aptivi",
    "keywords": "Class FigletColor Figlet writer Inheritance object FigletColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletColor Methods | Edit this page View Source RenderFiglet(string, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFiglet(string, Color, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFiglet(string, FigletFont, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, FigletFont FigletFont, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFiglet(string, FigletFont, Color, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, FigletFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletPlain(string, params object[]) Renders the figlet text Declaration public static string RenderFigletPlain(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletPlain(string, FigletFont, params object[]) Renders the figlet text Declaration public static string RenderFigletPlain(string Text, FigletFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteFigletColor(string, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColor(string, FigletFont, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, FigletFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, Color, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, FigletFont, Color, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, FigletFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletPlain(string, params object[]) Writes the figlet text Declaration public static void WriteFigletPlain(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletPlain(string, FigletFont, params object[]) Writes the figlet text Declaration public static void WriteFigletPlain(string Text, FigletFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html",
    "title": "Class FigletWhereColor | Terminaux API - Aptivi",
    "keywords": "Class FigletWhereColor Figlet writer (positional) Inheritance object FigletWhereColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletWhereColor Methods | Edit this page View Source RenderFigletWhere(string, int, int, bool, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWhere(string, int, int, bool, Color, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWhere(string, int, int, bool, FigletFont, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, FigletFont FigletFont, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWhere(string, int, int, bool, FigletFont, Color, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, FigletFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWherePlain(string, int, int, bool, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWherePlain(string Text, int Left, int Top, bool Return, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWherePlain(string, int, int, bool, FigletFont, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWherePlain(string Text, int Left, int Top, bool Return, FigletFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, FigletFont, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, FigletFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, Color, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, FigletFont, Color, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, FigletFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWherePlain(string, int, int, bool, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWherePlain(string Text, int Left, int Top, bool Return, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWherePlain(string, int, int, bool, FigletFont, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWherePlain(string Text, int Left, int Top, bool Return, FigletFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.PowerLineColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.PowerLineColor.html",
    "title": "Class PowerLineColor | Terminaux API - Aptivi",
    "keywords": "Class PowerLineColor PowerLine writer Inheritance object PowerLineColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class PowerLineColor Methods | Edit this page View Source RenderPowerLine(List<PowerLineSegment>, bool) Renders the PowerLine text Declaration public static string RenderPowerLine(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write bool Line Write new line after writing the segments Returns Type Description string | Edit this page View Source RenderPowerLine(List<PowerLineSegment>, Color, bool) Renders the PowerLine text Declaration public static string RenderPowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write Color EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments Returns Type Description string | Edit this page View Source WritePowerLine(List<PowerLineSegment>, Color, bool) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments List of PowerLine segments Color EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments | Edit this page View Source WritePowerLinePlain(List<PowerLineSegment>, bool) Writes the PowerLine text Declaration public static void WritePowerLinePlain(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write bool Line Write new line after writing the segments"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html",
    "title": "Class ProgressBarColor | Terminaux API - Aptivi",
    "keywords": "Class ProgressBarColor Progress bar writer with color support Inheritance object ProgressBarColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarColor Methods | Edit this page View Source RenderProgress(double, int, int, int, int, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgress(double, int, int, int, int, Color, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgress(double, int, int, int, int, Color, Color, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgressPlain(double, int, int, int, int, bool, bool) Renders the progress bar Declaration public static string RenderProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source WriteProgress(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage?"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html",
    "title": "Class ProgressBarVerticalColor | Terminaux API - Aptivi",
    "keywords": "Class ProgressBarVerticalColor Vertical progress bar writer with color support Inheritance object ProgressBarVerticalColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarVerticalColor Methods | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, Color, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgressPlain(double, int, int, int, int, bool) Renders the progress bar Declaration public static string RenderVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source WriteVerticalProgress(double, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, bool) Writes the vertical progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html",
    "title": "Class SeparatorWriterColor | Terminaux API - Aptivi",
    "keywords": "Class SeparatorWriterColor Separator writer Inheritance object SeparatorWriterColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SeparatorWriterColor Methods | Edit this page View Source RenderSeparator(string, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, Color, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteSeparator(string, bool, params object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool line = true, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool line Whether to write a new line or not object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, Color, bool, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, Color Color, bool line = true, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color Color A color that will be changed to. bool line Whether to write a new line or not object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, Color, Color, bool, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, Color ForegroundColor, Color BackgroundColor, bool line = true, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool line Whether to write a new line or not object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorPlain(string, bool, params object[]) Draw a separator with text plainly Declaration public static void WriteSeparatorPlain(string Text, bool line = true, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool line Whether to write a new line or not object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.SliderColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SliderColor.html",
    "title": "Class SliderColor | Terminaux API - Aptivi",
    "keywords": "Class SliderColor Slider writer with color support Inheritance object SliderColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SliderColor Methods | Edit this page View Source RenderSlider(int, int, int, int, int, int, Color, bool) Renders the slider Declaration public static string RenderSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderSlider(int, int, int, int, int, int, Color, Color, bool) Renders the slider Declaration public static string RenderSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderSlider(int, int, int, int, int, int, Color, Color, Color, bool) Renders the slider Declaration public static string RenderSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderSliderPlain(int, int, int, int, int, int, bool) Renders the slider Declaration public static string RenderSliderPlain(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source WriteSlider(int, int, int, int, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSliderPlain(int, int, int, int, bool) Writes the slider Declaration public static void WriteSliderPlain(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSliderPlain(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSliderPlain(int currPos, int maxPos, int Left, int Top, int WidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSliderPlain(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSliderPlain(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.SliderVerticalColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SliderVerticalColor.html",
    "title": "Class SliderVerticalColor | Terminaux API - Aptivi",
    "keywords": "Class SliderVerticalColor Vertical slider writer with color support Inheritance object SliderVerticalColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SliderVerticalColor Methods | Edit this page View Source RenderVerticalSlider(int, int, int, int, int, int, Color, bool) Renders the slider Declaration public static string RenderVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalSlider(int, int, int, int, int, int, Color, Color, bool) Renders the slider Declaration public static string RenderVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalSlider(int, int, int, int, int, int, Color, Color, Color, bool) Renders the slider Declaration public static string RenderVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalSliderPlain(int, int, int, int, int, int, bool) Renders the slider Declaration public static string RenderVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source WriteVerticalSlider(int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSliderPlain(int, int, int, int, bool) Writes the vertical slider Declaration public static void WriteVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSliderPlain(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSliderPlain(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.TableColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.TableColor.html",
    "title": "Class TableColor | Terminaux API - Aptivi",
    "keywords": "Class TableColor Table writer with color support Inheritance object TableColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class TableColor Methods | Edit this page View Source RenderTable(string[], string[,], int, Color, Color, Color, Color, bool, List<CellOptions>?) Renders a table with text Declaration public static string RenderTable(string[] Headers, string[,] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions>? CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options Returns Type Description string | Edit this page View Source RenderTablePlain(string[], string[,], int, bool, List<CellOptions>?) Renders a table with text Declaration public static string RenderTablePlain(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions>? CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options Returns Type Description string | Edit this page View Source WriteTable(string[], string[,], int, bool, List<CellOptions>?) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions>? CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Safe threshold from left bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTable(string[], string[,], int, Color, Color, Color, Color, bool, List<CellOptions>?) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions>? CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTablePlain(string[], string[,], int, bool, List<CellOptions>?) Draw a table with text Declaration public static void WriteTablePlain(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions>? CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Safe threshold from left bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html",
    "title": "Class BorderTools | Terminaux API - Aptivi",
    "keywords": "Class BorderTools All border tools here Inheritance object BorderTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class BorderTools Properties | Edit this page View Source BorderLeftFrameChar Left frame character Declaration public static char BorderLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerFrameChar Lower frame character Declaration public static char BorderLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerLeftCornerChar Lower left corner character Declaration public static char BorderLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerRightCornerChar Lower right corner character Declaration public static char BorderLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderRightFrameChar Right frame character Declaration public static char BorderRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperFrameChar Upper frame character Declaration public static char BorderUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperLeftCornerChar Upper left corner character Declaration public static char BorderUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperRightCornerChar Upper right corner character Declaration public static char BorderUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html",
    "title": "Class CellOptions | Terminaux API - Aptivi",
    "keywords": "Class CellOptions Table cell options Inheritance object CellOptions Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class CellOptions Constructors | Edit this page View Source CellOptions(int, int) Makes a new instance of the cell options class Declaration public CellOptions(int ColumnNumber, int RowNumber) Parameters Type Name Description int ColumnNumber The column number int RowNumber The row number Properties | Edit this page View Source CellBackgroundColor The custom background cell color Declaration public Color CellBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source CellColor The custom cell color Declaration public Color CellColor { get; set; } Property Value Type Description Color | Edit this page View Source ColoredCell Whether to color the cell Declaration public bool ColoredCell { get; set; } Property Value Type Description bool | Edit this page View Source ColumnIndex The column, or row value, index Declaration public int ColumnIndex { get; } Property Value Type Description int | Edit this page View Source ColumnNumber The column, or row value, number Declaration public int ColumnNumber { get; } Property Value Type Description int | Edit this page View Source RowIndex The row index Declaration public int RowIndex { get; } Property Value Type Description int | Edit this page View Source RowNumber The row number Declaration public int RowNumber { get; } Property Value Type Description int"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.FigletTextTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.FigletTextTools.html",
    "title": "Class FigletTextTools | Terminaux API - Aptivi",
    "keywords": "Class FigletTextTools Tools for text manipulation Inheritance object FigletTextTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class FigletTextTools Properties | Edit this page View Source DefaultFigletFont Default figlet font Declaration public static FigletFont DefaultFigletFont { get; } Property Value Type Description FigletFont | Edit this page View Source DefaultFigletFontName Default figlet font name Declaration public static string DefaultFigletFontName { get; set; } Property Value Type Description string"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html",
    "title": "Class PowerLineSegment | Terminaux API - Aptivi",
    "keywords": "Class PowerLineSegment PowerLine segment Inheritance object PowerLineSegment Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class PowerLineSegment Constructors | Edit this page View Source PowerLineSegment(Color, Color, string, char, char) Installs the segment values to the instance Declaration public PowerLineSegment(Color segmentForeground, Color segmentBackground, string segmentText, char segmentIcon = '\\0', char segmentTransitionIcon = '\\0') Parameters Type Name Description Color segmentForeground Color segmentBackground string segmentText char segmentIcon char segmentTransitionIcon Properties | Edit this page View Source SegmentBackground Background color or next segment transition color of the segment Declaration public Color SegmentBackground { get; } Property Value Type Description Color | Edit this page View Source SegmentForeground Foreground color of the segment Declaration public Color SegmentForeground { get; } Property Value Type Description Color | Edit this page View Source SegmentIcon Segment icon. This should be an iconic character. Declaration public char SegmentIcon { get; } Property Value Type Description char | Edit this page View Source SegmentText Segment text. Usually a status. Declaration public string SegmentText { get; } Property Value Type Description string | Edit this page View Source SegmentTransitionIcon Segment transition icon. This should be an iconic character. Declaration public char SegmentTransitionIcon { get; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html",
    "title": "Class PowerLineTools | Terminaux API - Aptivi",
    "keywords": "Class PowerLineTools PowerLine tools Inheritance object PowerLineTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class PowerLineTools Methods | Edit this page View Source RenderSegments(List<PowerLineSegment>) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Returns Type Description string | Edit this page View Source RenderSegments(List<PowerLineSegment>, Color) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments, Color EndingColor) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Color EndingColor Ending background color for the last segment transition Returns Type Description string"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html",
    "title": "Class ProgressTools | Terminaux API - Aptivi",
    "keywords": "Class ProgressTools Progress tools Inheritance object ProgressTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class ProgressTools Properties | Edit this page View Source ProgressLeftFrameChar Left frame character for the progress bar Declaration public static char ProgressLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerFrameChar Lower frame character for the progress bar Declaration public static char ProgressLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerLeftCornerChar Lower left corner character for the progress bar Declaration public static char ProgressLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerRightCornerChar Lower right corner character for the progress bar Declaration public static char ProgressLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressRightFrameChar Right frame character for the progress bar Declaration public static char ProgressRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperFrameChar Upper frame character for the progress bar Declaration public static char ProgressUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperLeftCornerChar Upper left corner character for the progress bar Declaration public static char ProgressUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperRightCornerChar Upper right corner character for the progress bar Declaration public static char ProgressUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.html",
    "title": "Namespace Terminaux.Writer.FancyWriters.Tools | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.FancyWriters.Tools Classes BorderTools All border tools here CellOptions Table cell options FigletTextTools Tools for text manipulation PowerLineSegment PowerLine segment PowerLineTools PowerLine tools ProgressTools Progress tools"
  },
  "api/Terminaux.Writer.FancyWriters.html": {
    "href": "api/Terminaux.Writer.FancyWriters.html",
    "title": "Namespace Terminaux.Writer.FancyWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.FancyWriters Classes BorderColor Border writer with color support BorderTextColor Border writer with color and text support BoxColor Box writer with color support BoxFrameColor BoxFrame writer with color support CenteredFigletTextColor Centered Figlet writer CenteredTextColor Centered writer FigletColor Figlet writer FigletWhereColor Figlet writer (positional) PowerLineColor PowerLine writer ProgressBarColor Progress bar writer with color support ProgressBarVerticalColor Vertical progress bar writer with color support SeparatorWriterColor Separator writer SliderColor Slider writer with color support SliderVerticalColor Vertical slider writer with color support TableColor Table writer with color support"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html",
    "title": "Class LineHandleRangedWriter | Terminaux API - Aptivi",
    "keywords": "Class LineHandleRangedWriter Ranged line handle writer (with start and end positions) Inheritance object LineHandleRangedWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleRangedWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself as the start. int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html",
    "title": "Class LineHandleWriter | Terminaux API - Aptivi",
    "keywords": "Class LineHandleWriter Line handle writer Inheritance object LineHandleWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string[], int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.html": {
    "href": "api/Terminaux.Writer.MiscWriters.html",
    "title": "Namespace Terminaux.Writer.MiscWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.MiscWriters Classes LineHandleRangedWriter Ranged line handle writer (with start and end positions) LineHandleWriter Line handle writer"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Terminaux API - Aptivi",
    "keywords": "What is Terminaux? Terminaux is a library that allows you to manipulate with the console. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Terminaux, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2022-2023 Aptivi. All rights reserved."
  }
}