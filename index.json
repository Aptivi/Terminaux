{
  "api/Terminaux.Base.Buffered.Screen.html": {
    "href": "api/Terminaux.Base.Buffered.Screen.html",
    "title": "Class Screen | Terminaux API - Aptivi",
    "keywords": "Class Screen A screen instance to store your buffered screen parts Inheritance object Screen Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public class Screen Constructors | Edit this page View Source Screen() Makes a new instance of the screen Declaration public Screen() Properties | Edit this page View Source ScreenParts Buffered screen parts list to render one by one while buffering the console Declaration public ScreenPart[] ScreenParts { get; } Property Value Type Description ScreenPart[] Methods | Edit this page View Source AddBufferedPart(string, ScreenPart) Adds the buffered part to the list of screen parts Declaration public void AddBufferedPart(string name, ScreenPart part) Parameters Type Name Description string name Screen buffer part name ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source CheckBufferedPart(int) Checks the buffered part to the list of screen parts Declaration public bool CheckBufferedPart(int idx) Parameters Type Name Description int idx Part index Returns Type Description bool Exceptions Type Condition TerminauxException | Edit this page View Source CheckBufferedPart(string) Checks the buffered part to the list of screen parts Declaration public bool CheckBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Returns Type Description bool Exceptions Type Condition TerminauxException | Edit this page View Source EditBufferedPart(int, ScreenPart) Edits the buffered part to the list of screen parts Declaration public void EditBufferedPart(int idx, ScreenPart part) Parameters Type Name Description int idx Part index ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source EditBufferedPart(string, ScreenPart) Edits the buffered part to the list of screen parts Declaration public void EditBufferedPart(string name, ScreenPart part) Parameters Type Name Description string name Screen buffer part name ScreenPart part Buffered screen part to add to the screen part list for buffering Exceptions Type Condition TerminauxException | Edit this page View Source GetBuffer() Gets a buffer from all the buffered screen parts Declaration public string GetBuffer() Returns Type Description string A buffer that is to be written to the console | Edit this page View Source GetBufferedPart(int) Gets the buffered part to the list of screen parts Declaration public ScreenPart GetBufferedPart(int idx) Parameters Type Name Description int idx Part index Returns Type Description ScreenPart Exceptions Type Condition TerminauxException | Edit this page View Source GetBufferedPart(string) Gets the buffered part to the list of screen parts Declaration public ScreenPart GetBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Returns Type Description ScreenPart Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedPart(int) Removes the buffered part from the list of screen parts Declaration public void RemoveBufferedPart(int idx) Parameters Type Name Description int idx Part index Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedPart(string) Removes the buffered part from the list of screen parts Declaration public void RemoveBufferedPart(string name) Parameters Type Name Description string name Screen buffer part name Exceptions Type Condition TerminauxException | Edit this page View Source RemoveBufferedParts() Removes all the buffered parts from the list of screen parts Declaration public void RemoveBufferedParts()"
  },
  "api/Terminaux.Base.Buffered.ScreenPart.html": {
    "href": "api/Terminaux.Base.Buffered.ScreenPart.html",
    "title": "Class ScreenPart | Terminaux API - Aptivi",
    "keywords": "Class ScreenPart Buffered screen part Inheritance object ScreenPart Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public class ScreenPart Constructors | Edit this page View Source ScreenPart() Makes a new instance of the screen part Declaration public ScreenPart() Properties | Edit this page View Source Order Order to use while buffering the screen. Declaration public int Order { get; set; } Property Value Type Description int Remarks This is compared in an ascending way so that the screen management system sorts the parts from the least important to the most important. For example, parts that are in order number 0 will get buffered before parts that have their order number of 1, and so on. Methods | Edit this page View Source AddDynamicText(Func<string>) Adds a dynamic text to the buffer Declaration public void AddDynamicText(Func<string> textFunc) Parameters Type Name Description Func<string> textFunc Text to add to the dynamic buffer queue | Edit this page View Source AddText(string) Adds a text to the buffer Declaration public void AddText(string text) Parameters Type Name Description string text Text to write to the buffer builder | Edit this page View Source AddTextLine(string) Adds a text to the buffer with a new line Declaration public void AddTextLine(string text) Parameters Type Name Description string text Text to write to the buffer builder | Edit this page View Source BackgroundColor(Color, bool) Adds the VT sequence to set the background color Declaration public void BackgroundColor(Color color, bool forceTrue = false) Parameters Type Name Description Color color Color to use for background color bool forceTrue Forces the usage of the true color | Edit this page View Source Clear() Clears the buffer Declaration public void Clear() | Edit this page View Source ForegroundColor(Color, bool) Adds the VT sequence to set the foreground color Declaration public void ForegroundColor(Color color, bool forceTrue = false) Parameters Type Name Description Color color Color to use for foreground color bool forceTrue Forces the usage of the true color | Edit this page View Source GetBuffer() Gets the resulting buffer Declaration public string GetBuffer() Returns Type Description string The resulting buffer | Edit this page View Source LeftPosition(int) Adds the VT sequence to set the left cursor position Declaration public void LeftPosition(int left) Parameters Type Name Description int left Zero-based left position | Edit this page View Source Position(int, int) Adds the VT sequence to set the cursor position Declaration public void Position(int left, int top) Parameters Type Name Description int left Zero-based left position int top Zero-based top position | Edit this page View Source ResetBackgroundColor() Adds the VT sequence to reset the background color Declaration public void ResetBackgroundColor() | Edit this page View Source ResetColors() Adds the VT sequence to reset the colors Declaration public void ResetColors() | Edit this page View Source ResetForegroundColor() Adds the VT sequence to reset the foreground color Declaration public void ResetForegroundColor() | Edit this page View Source TopPosition(int) Adds the VT sequence to set the top cursor position Declaration public void TopPosition(int top) Parameters Type Name Description int top Zero-based top position"
  },
  "api/Terminaux.Base.Buffered.ScreenTools.html": {
    "href": "api/Terminaux.Base.Buffered.ScreenTools.html",
    "title": "Class ScreenTools | Terminaux API - Aptivi",
    "keywords": "Class ScreenTools Buffered screen tools Inheritance object ScreenTools Namespace: Terminaux.Base.Buffered Assembly: Terminaux.dll Syntax public static class ScreenTools Properties | Edit this page View Source CurrentScreen Gets the currently displaying screen Declaration public static Screen CurrentScreen { get; } Property Value Type Description Screen Methods | Edit this page View Source Render(bool) Renders the current screen one time Declaration public static void Render(bool clearScreen = false) Parameters Type Name Description bool clearScreen Whether to clear the screen before writing the buffer down to the console | Edit this page View Source Render(Screen, bool) Renders the screen one time Declaration public static void Render(Screen screen, bool clearScreen = false) Parameters Type Name Description Screen screen The screen to be rendered bool clearScreen Whether to clear the screen before writing the buffer down to the console | Edit this page View Source SetCurrent(Screen) Sets the current screen instance Declaration public static void SetCurrent(Screen screen) Parameters Type Name Description Screen screen The screen to add to the list Exceptions Type Condition TerminauxException | Edit this page View Source UnsetCurrent(Screen) Unsets the current screen instance Declaration public static void UnsetCurrent(Screen screen) Parameters Type Name Description Screen screen The screen to remove from the list Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Base.Buffered.html": {
    "href": "api/Terminaux.Base.Buffered.html",
    "title": "Namespace Terminaux.Base.Buffered | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Buffered Classes Screen A screen instance to store your buffered screen parts ScreenPart Buffered screen part ScreenTools Buffered screen tools"
  },
  "api/Terminaux.Base.Checks.ConsoleChecker.html": {
    "href": "api/Terminaux.Base.Checks.ConsoleChecker.html",
    "title": "Class ConsoleChecker | Terminaux API - Aptivi",
    "keywords": "Class ConsoleChecker Console sanity checking module Inheritance object ConsoleChecker Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class ConsoleChecker Properties | Edit this page View Source HomePath Platform-dependent home path Declaration public static string HomePath { get; } Property Value Type Description string | Edit this page View Source IsDumb Is the console a dumb console? Declaration public static bool IsDumb { get; } Property Value Type Description bool Methods | Edit this page View Source CheckConsole() Checks the running console for sanity, like the incompatible consoles, insane console types, etc. Declaration public static void CheckConsole() | Edit this page View Source CheckConsoleSize(int, int) Checks the console size with edge cases Declaration public static bool CheckConsoleSize(int minimumWidth = 80, int minimumHeight = 24) Parameters Type Name Description int minimumWidth Minimum console window width to check int minimumHeight Minimum console window height to check Returns Type Description bool | Edit this page View Source CheckConsoleSizePrompt(int, int) Checks the console size with edge cases, prompting the user to resize the screen if the minimum console size requirements is not satisfied. Declaration public static void CheckConsoleSizePrompt(int minimumWidth = 80, int minimumHeight = 24) Parameters Type Name Description int minimumWidth Minimum console window width to check int minimumHeight Minimum console window height to check | Edit this page View Source IsConsole256Colors() Does the console support 256 colors? Declaration public static bool IsConsole256Colors() Returns Type Description bool"
  },
  "api/Terminaux.Base.Checks.TerminalEmulatorBlacklist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalEmulatorBlacklist.html",
    "title": "Class TerminalEmulatorBlacklist | Terminaux API - Aptivi",
    "keywords": "Class TerminalEmulatorBlacklist The blacklist module for the terminal emulator Inheritance object TerminalEmulatorBlacklist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalEmulatorBlacklist Methods | Edit this page View Source AddToBlacklist(Func<string, bool>, string) Adds a match for the terminal emulator to the blacklist Declaration public static void AddToBlacklist(Func<string, bool> emulatorQuery, string justification) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match string justification Reason for the blacklist | Edit this page View Source GetBlacklistedEmulators() Gets the blacklisted terminal emulator queries Declaration public static (Func<string, bool>, string)[] GetBlacklistedEmulators() Returns Type Description (Func<string, bool>, string)[] Terminal emulators with their matches and their justifications | Edit this page View Source IsEmulatorBlacklisted() Checks to see if the current terminal emulator is blacklisted Declaration public static (bool blacklisted, string justification) IsEmulatorBlacklisted() Returns Type Description (bool blacklisted, string justification) True if blacklisted; false otherwise | Edit this page View Source IsQueryBlacklisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query blacklisted? Declaration public static bool IsQueryBlacklisted(Func<string, bool> emulatorQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> emulatorQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source RemoveFromBlacklist(Func<string, bool>) Removes a match for the terminal emulator from the blacklist Declaration public static void RemoveFromBlacklist(Func<string, bool> emulatorQuery) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match"
  },
  "api/Terminaux.Base.Checks.TerminalEmulatorGreylist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalEmulatorGreylist.html",
    "title": "Class TerminalEmulatorGreylist | Terminaux API - Aptivi",
    "keywords": "Class TerminalEmulatorGreylist The greylist module for the terminal emulator Inheritance object TerminalEmulatorGreylist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalEmulatorGreylist Methods | Edit this page View Source AddToGreylist(Func<string, bool>, string) Adds a match for the terminal emulator to the greylist Declaration public static void AddToGreylist(Func<string, bool> emulatorQuery, string justification) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match string justification Reason for the greylist | Edit this page View Source GetGreylistedEmulators() Gets the greylisted terminal emulator queries Declaration public static (Func<string, bool>, string)[] GetGreylistedEmulators() Returns Type Description (Func<string, bool>, string)[] Terminal emulators with their matches and their justifications | Edit this page View Source IsEmulatorGreylisted() Checks to see if the current terminal emulator is greylisted Declaration public static (bool greylisted, string justification) IsEmulatorGreylisted() Returns Type Description (bool blacklisted, string justification) True if greylisted; false otherwise | Edit this page View Source IsQueryGreylisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query greylisted? Declaration public static bool IsQueryGreylisted(Func<string, bool> emulatorQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> emulatorQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source RemoveFromGreylist(Func<string, bool>) Removes a match for the terminal emulator from the greylist Declaration public static void RemoveFromGreylist(Func<string, bool> emulatorQuery) Parameters Type Name Description Func<string, bool> emulatorQuery The emulator query for the terminal emulator to match"
  },
  "api/Terminaux.Base.Checks.TerminalTypeBlacklist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalTypeBlacklist.html",
    "title": "Class TerminalTypeBlacklist | Terminaux API - Aptivi",
    "keywords": "Class TerminalTypeBlacklist The blacklist module for the terminal type Inheritance object TerminalTypeBlacklist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalTypeBlacklist Methods | Edit this page View Source AddToBlacklist(Func<string, bool>, string) Adds a match for the terminal type to the blacklist Declaration public static void AddToBlacklist(Func<string, bool> typeQuery, string justification) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match string justification Reason for the blacklist | Edit this page View Source GetBlacklistedTypes() Gets the blacklisted terminal type queries Declaration public static (Func<string, bool>, string)[] GetBlacklistedTypes() Returns Type Description (Func<string, bool>, string)[] Terminal types with their matches and their justifications | Edit this page View Source IsQueryBlacklisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query blacklisted? Declaration public static bool IsQueryBlacklisted(Func<string, bool> typeQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> typeQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source IsTypeBlacklisted() Checks to see if the current terminal type is blacklisted Declaration public static (bool blacklisted, string justification) IsTypeBlacklisted() Returns Type Description (bool blacklisted, string justification) True if blacklisted; false otherwise | Edit this page View Source RemoveFromBlacklist(Func<string, bool>) Removes a match for the terminal type from the blacklist Declaration public static void RemoveFromBlacklist(Func<string, bool> typeQuery) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match"
  },
  "api/Terminaux.Base.Checks.TerminalTypeGreylist.html": {
    "href": "api/Terminaux.Base.Checks.TerminalTypeGreylist.html",
    "title": "Class TerminalTypeGreylist | Terminaux API - Aptivi",
    "keywords": "Class TerminalTypeGreylist The greylist module for the terminal type Inheritance object TerminalTypeGreylist Namespace: Terminaux.Base.Checks Assembly: Terminaux.dll Syntax public static class TerminalTypeGreylist Methods | Edit this page View Source AddToGreylist(Func<string, bool>, string) Adds a match for the terminal type to the greylist Declaration public static void AddToGreylist(Func<string, bool> typeQuery, string justification) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match string justification Reason for the greylist | Edit this page View Source GetGreylistedTypes() Gets the greylisted terminal type queries Declaration public static (Func<string, bool>, string)[] GetGreylistedTypes() Returns Type Description (Func<string, bool>, string)[] Terminal types with their matches and their justifications | Edit this page View Source IsQueryGreylisted(Func<string, bool>, out (Func<string, bool>, string)) Is the query greylisted? Declaration public static bool IsQueryGreylisted(Func<string, bool> typeQuery, out (Func<string, bool>, string) queryPair) Parameters Type Name Description Func<string, bool> typeQuery The query to check (Func<string, bool>, string) queryPair Output query pair Returns Type Description bool True if found; false otherwise. Exceptions Type Condition TerminauxException | Edit this page View Source IsTypeGreylisted() Checks to see if the current terminal type is greylisted Declaration public static (bool greylisted, string justification) IsTypeGreylisted() Returns Type Description (bool blacklisted, string justification) True if greylisted; false otherwise | Edit this page View Source RemoveFromGreylist(Func<string, bool>) Removes a match for the terminal type from the greylist Declaration public static void RemoveFromGreylist(Func<string, bool> typeQuery) Parameters Type Name Description Func<string, bool> typeQuery The type query for the console type to match"
  },
  "api/Terminaux.Base.Checks.html": {
    "href": "api/Terminaux.Base.Checks.html",
    "title": "Namespace Terminaux.Base.Checks | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Checks Classes ConsoleChecker Console sanity checking module TerminalEmulatorBlacklist The blacklist module for the terminal emulator TerminalEmulatorGreylist The greylist module for the terminal emulator TerminalTypeBlacklist The blacklist module for the terminal type TerminalTypeGreylist The greylist module for the terminal type"
  },
  "api/Terminaux.Base.ConsoleResizeHandler.html": {
    "href": "api/Terminaux.Base.ConsoleResizeHandler.html",
    "title": "Class ConsoleResizeHandler | Terminaux API - Aptivi",
    "keywords": "Class ConsoleResizeHandler The console resize listener module Inheritance object ConsoleResizeHandler Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleResizeHandler Properties | Edit this page View Source RunEssentialHandler Whether to run the base console resize handler or not after running a custom action Declaration public static bool RunEssentialHandler { get; set; } Property Value Type Description bool Methods | Edit this page View Source GetCurrentConsoleSize() Gets the console size from the cached window height and width position Declaration public static (int Width, int Height) GetCurrentConsoleSize() Returns Type Description (int Width, int Height) | Edit this page View Source WasResized(bool) This property checks to see if the console has been resized since the last time it has been called or the listener has started. Declaration public static bool WasResized(bool reset = true) Parameters Type Name Description bool reset Reset the resized value once this is called Returns Type Description bool"
  },
  "api/Terminaux.Base.ConsoleWrapper.html": {
    "href": "api/Terminaux.Base.ConsoleWrapper.html",
    "title": "Class ConsoleWrapper | Terminaux API - Aptivi",
    "keywords": "Class ConsoleWrapper Wrapper for the Console class to ensure safety against dumb consoles. This connects to the console wrapper that Terminaux manages. Inheritance object ConsoleWrapper Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleWrapper Properties | Edit this page View Source BufferHeight The console buffer height (rows) Declaration public static int BufferHeight { get; } Property Value Type Description int | Edit this page View Source CursorLeft The cursor left position Declaration public static int CursorLeft { get; set; } Property Value Type Description int | Edit this page View Source CursorTop The cursor top position Declaration public static int CursorTop { get; set; } Property Value Type Description int | Edit this page View Source CursorVisible The cursor visibility mode Declaration public static bool CursorVisible { get; set; } Property Value Type Description bool | Edit this page View Source IsDumb Checks to see if the console is dumb Declaration public static bool IsDumb { get; } Property Value Type Description bool | Edit this page View Source KeyAvailable Whether a key is pressed Declaration public static bool KeyAvailable { get; } Property Value Type Description bool | Edit this page View Source TreatCtrlCAsInput Whether to treat Ctrl + C as input or not Declaration public static bool TreatCtrlCAsInput { get; set; } Property Value Type Description bool | Edit this page View Source WindowHeight The console window height (rows) Declaration public static int WindowHeight { get; } Property Value Type Description int | Edit this page View Source WindowWidth The console window width (columns) Declaration public static int WindowWidth { get; } Property Value Type Description int Methods | Edit this page View Source Beep() Beeps the console Declaration public static void Beep() | Edit this page View Source BeepSeq() Beeps the console (VT Sequence method) Declaration public static void BeepSeq() | Edit this page View Source Clear() Clears the console screen. Declaration public static void Clear() | Edit this page View Source ClearLoadBack() Clears the console screen while loading the background. Declaration public static void ClearLoadBack() | Edit this page View Source ReadKey(bool) Reads a key Declaration public static ConsoleKeyInfo ReadKey(bool intercept = false) Parameters Type Name Description bool intercept Whether to intercept Returns Type Description ConsoleKeyInfo | Edit this page View Source SetCursorPosition(int, int) Sets the cursor position Declaration public static void SetCursorPosition(int left, int top) Parameters Type Name Description int left The left to be set (from 0) int top The top to be set (from 0) | Edit this page View Source Write(char) Writes a character to console Declaration public static void Write(char value) Parameters Type Name Description char value A character | Edit this page View Source Write(string) Writes text to console Declaration public static void Write(string text) Parameters Type Name Description string text The text to write | Edit this page View Source Write(string, params object[]) Writes text to console Declaration public static void Write(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate | Edit this page View Source WriteLine() Writes new line to console Declaration public static void WriteLine() | Edit this page View Source WriteLine(string) Writes text to console with line terminator Declaration public static void WriteLine(string text) Parameters Type Name Description string text The text to write | Edit this page View Source WriteLine(string, params object[]) Writes text to console with line terminator Declaration public static void WriteLine(string text, params object[] args) Parameters Type Name Description string text The text to write object[] args The arguments to evaluate | Edit this page View Source WriteLine(string, TermReaderSettings) Writes text to console with line terminator Declaration public static void WriteLine(string text, TermReaderSettings settings) Parameters Type Name Description string text The text to write TermReaderSettings settings Reader settings | Edit this page View Source WriteLine(string, TermReaderSettings, params object[]) Writes text to console with line terminator Declaration public static void WriteLine(string text, TermReaderSettings settings, params object[] args) Parameters Type Name Description string text The text to write TermReaderSettings settings Reader settings object[] args The arguments to evaluate"
  },
  "api/Terminaux.Base.ConsoleWrapperTools.html": {
    "href": "api/Terminaux.Base.ConsoleWrapperTools.html",
    "title": "Class ConsoleWrapperTools | Terminaux API - Aptivi",
    "keywords": "Class ConsoleWrapperTools Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. Inheritance object ConsoleWrapperTools Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public static class ConsoleWrapperTools Properties | Edit this page View Source ActionBeep Beeps the console Declaration public static Action ActionBeep { set; } Property Value Type Description Action | Edit this page View Source ActionBeepSeq Beeps the console (VT Sequence method) Declaration public static Action ActionBeepSeq { set; } Property Value Type Description Action | Edit this page View Source ActionBufferHeight The console buffer height (rows) Declaration public static Func<int> ActionBufferHeight { set; } Property Value Type Description Func<int> | Edit this page View Source ActionClear Clears the console Declaration public static Action ActionClear { set; } Property Value Type Description Action | Edit this page View Source ActionClearLoadBack Clears the console while loading the background Declaration public static Action ActionClearLoadBack { set; } Property Value Type Description Action | Edit this page View Source ActionCursorLeft The cursor left position Declaration public static Func<int> ActionCursorLeft { set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorTop The cursor top position Declaration public static Func<int> ActionCursorTop { set; } Property Value Type Description Func<int> | Edit this page View Source ActionCursorVisible The cursor visibility mode Declaration public static Action<bool> ActionCursorVisible { set; } Property Value Type Description Action<bool> | Edit this page View Source ActionGetCursorVisible The cursor visibility mode Declaration public static Func<bool> ActionGetCursorVisible { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionGetTreatCtrlCAsInput Whether to treat CTRL + C as input Declaration public static Func<bool> ActionGetTreatCtrlCAsInput { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionIsDumb Is the console a dumb console? Declaration public static Func<bool> ActionIsDumb { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionKeyAvailable Whether a key is pressed Declaration public static Func<bool> ActionKeyAvailable { set; } Property Value Type Description Func<bool> | Edit this page View Source ActionReadKey Reads a key Boolean value indicates whether to intercept Declaration public static Func<bool, ConsoleKeyInfo> ActionReadKey { set; } Property Value Type Description Func<bool, ConsoleKeyInfo> | Edit this page View Source ActionSetCursorLeft Sets the cursor left position First integer is the X position from 0 Declaration public static Action<int> ActionSetCursorLeft { set; } Property Value Type Description Action<int> | Edit this page View Source ActionSetCursorPosition Sets the cursor position First integer is the X position from 0 Second integer is the Y position from 0 Declaration public static Action<int, int> ActionSetCursorPosition { set; } Property Value Type Description Action<int, int> | Edit this page View Source ActionSetCursorTop Sets the cursor top position First integer is the Y position from 0 Declaration public static Action<int> ActionSetCursorTop { set; } Property Value Type Description Action<int> | Edit this page View Source ActionTreatCtrlCAsInput Whether to treat CTRL + C as input Declaration public static Action<bool> ActionTreatCtrlCAsInput { set; } Property Value Type Description Action<bool> | Edit this page View Source ActionWindowHeight The console window height (rows) Declaration public static Func<int> ActionWindowHeight { set; } Property Value Type Description Func<int> | Edit this page View Source ActionWindowWidth The console window width (columns) Declaration public static Func<int> ActionWindowWidth { set; } Property Value Type Description Func<int> | Edit this page View Source ActionWriteChar Writes a character to console A character Declaration public static Action<char> ActionWriteChar { set; } Property Value Type Description Action<char> | Edit this page View Source ActionWriteLine Writes new line to console Declaration public static Action ActionWriteLine { set; } Property Value Type Description Action | Edit this page View Source ActionWriteLineParameterized Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteLineParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteLineParameterizedNonStandalone Writes text to console with line terminator The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteLineParameterizedNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings, object[]> | Edit this page View Source ActionWriteLineString Writes text to console with line terminator The text to write Declaration public static Action<string> ActionWriteLineString { set; } Property Value Type Description Action<string> | Edit this page View Source ActionWriteLineStringNonStandalone Writes text to console with line terminator The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteLineStringNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings> | Edit this page View Source ActionWriteParameterized Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, object[]> ActionWriteParameterized { set; } Property Value Type Description Action<string, object[]> | Edit this page View Source ActionWriteParameterizedNonStandalone Writes text to console The text to write The arguments to evaluate Declaration public static Action<string, TermReaderSettings, object[]> ActionWriteParameterizedNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings, object[]> | Edit this page View Source ActionWriteString Writes text to console The text to write Declaration public static Action<string> ActionWriteString { set; } Property Value Type Description Action<string> | Edit this page View Source ActionWriteStringNonStandalone Writes text to console The text to write Declaration public static Action<string, TermReaderSettings> ActionWriteStringNonStandalone { set; } Property Value Type Description Action<string, TermReaderSettings>"
  },
  "api/Terminaux.Base.Extensions.ConsoleClearing.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleClearing.html",
    "title": "Class ConsoleClearing | Terminaux API - Aptivi",
    "keywords": "Class ConsoleClearing Console clearing tools Inheritance object ConsoleClearing Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleClearing Methods | Edit this page View Source ClearLineToRight() Clears the line to the right Declaration public static void ClearLineToRight() | Edit this page View Source GetClearLineToRightSequence() Gets a sequence that clears the line to the right Declaration public static string GetClearLineToRightSequence() Returns Type Description string | Edit this page View Source GetClearWholeScreenSequence() Gets a sequence that clears the whole screen Declaration public static string GetClearWholeScreenSequence() Returns Type Description string | Edit this page View Source ResetAll() Resets the entire console Declaration public static void ResetAll()"
  },
  "api/Terminaux.Base.Extensions.ConsoleCursor.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleCursor.html",
    "title": "Class ConsoleCursor | Terminaux API - Aptivi",
    "keywords": "Class ConsoleCursor Console cursor tools Inheritance object ConsoleCursor Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleCursor Properties | Edit this page View Source CursorType Specifies the cursor type Declaration public static ConsoleCursorType CursorType { get; set; } Property Value Type Description ConsoleCursorType | Edit this page View Source CursorVisible Determines whether the cursor is visible or not Declaration public static bool CursorVisible { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Base.Extensions.ConsoleCursorType.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleCursorType.html",
    "title": "Enum ConsoleCursorType | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleCursorType Console cursor type Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public enum ConsoleCursorType Fields Name Description BarBlinking Blinking bar BarSteady Blinking steady BlockBlinking Blinking block BlockSteady Steady block UnderlineBlinking Blinking underline UnderlineSteady Steady underline User Determined by the terminal emulator"
  },
  "api/Terminaux.Base.Extensions.ConsoleFormatting.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleFormatting.html",
    "title": "Class ConsoleFormatting | Terminaux API - Aptivi",
    "keywords": "Class ConsoleFormatting Text formatting tools for the console Inheritance object ConsoleFormatting Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleFormatting Properties | Edit this page View Source CurrentFormatting Current text formatting Declaration public static ConsoleFormattingType CurrentFormatting { get; } Property Value Type Description ConsoleFormattingType | Edit this page View Source TextFormatted Has the text been formatted? Declaration public static bool TextFormatted { get; } Property Value Type Description bool Methods | Edit this page View Source GetFormattingSequences(ConsoleFormattingType) Gets the formatting sequences for the selected formatting types Declaration public static string GetFormattingSequences(ConsoleFormattingType types) Parameters Type Name Description ConsoleFormattingType types Selected formatting types Returns Type Description string A string containing necessary VT sequences for all selected text formatting | Edit this page View Source ResetFormatting() Resets console text formatting Declaration public static void ResetFormatting() | Edit this page View Source SetFormatting(ConsoleFormattingType) Sets text formatting for future plain writes Declaration public static void SetFormatting(ConsoleFormattingType formattings) Parameters Type Name Description ConsoleFormattingType formattings All text formatting to use"
  },
  "api/Terminaux.Base.Extensions.ConsoleFormattingType.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleFormattingType.html",
    "title": "Enum ConsoleFormattingType | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleFormattingType Console formatting type Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public enum ConsoleFormattingType Fields Name Description Conceal [8] Conceals text Default [0] Default formatting Encircled [52] Encircled Faint [2] Reduced intensity (either light or dim) text FastBlink [6] Blinks the cursor quickly Framed [51] Framed Intense [1] Intense (either bold or bright) text Italic [3] Italic text NoProportionalSpacing [50] No proportional spacing NotBlinking [25] Not blinking NotBold [21] Not bold NotFramedEncircled [54] Not framed/encircled NotIntense [22] Not intense NotItalic [23] Not italic NotOverlined [55] Not overlined NotReversed [27] Not reversed NotStruckthrough [29] Not struckthrough NotUnderlined [24] Not underlined Overlined [53] Overlined ProportionalSpacing [26] Proportional spacing Reveal [28] Reveal Reverse [7] Swaps background and foreground colors SlowBlink [5] Blinks the cursor slowly Strikethrough [9] Strikes text through Underline [4] Underlined text"
  },
  "api/Terminaux.Base.Extensions.ConsoleMisc.html": {
    "href": "api/Terminaux.Base.Extensions.ConsoleMisc.html",
    "title": "Class ConsoleMisc | Terminaux API - Aptivi",
    "keywords": "Class ConsoleMisc Miscellaneous extensions for the console Inheritance object ConsoleMisc Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsoleMisc Methods | Edit this page View Source FilterVTSequences(string) Filters the VT sequences that matches the regex Declaration public static string FilterVTSequences(string Text) Parameters Type Name Description string Text The text that contains the VT sequences Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source PercentRepeat(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeat(int CurrentNumber, int MaximumNumber, int WidthOffset) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int WidthOffset The console window width offset. It's usually a multiple of 2. Returns Type Description int How many times to repeat the character | Edit this page View Source PercentRepeatTargeted(int, int, int) Gets how many times to repeat the character to represent the appropriate percentage level for the specified number. Declaration public static int PercentRepeatTargeted(int CurrentNumber, int MaximumNumber, int TargetWidth) Parameters Type Name Description int CurrentNumber The current number that is less than or equal to the maximum number. int MaximumNumber The maximum number. int TargetWidth The target width Returns Type Description int How many times to repeat the character | Edit this page View Source SetTitle(string) Sets the console title Declaration public static void SetTitle(string Text) Parameters Type Name Description string Text The text to be set"
  },
  "api/Terminaux.Base.Extensions.ConsolePositioning.html": {
    "href": "api/Terminaux.Base.Extensions.ConsolePositioning.html",
    "title": "Class ConsolePositioning | Terminaux API - Aptivi",
    "keywords": "Class ConsolePositioning Console positioning tools Inheritance object ConsolePositioning Namespace: Terminaux.Base.Extensions Assembly: Terminaux.dll Syntax public static class ConsolePositioning Methods | Edit this page View Source ClearKeepPosition() Clears the console buffer, but keeps the current cursor position Declaration public static void ClearKeepPosition() | Edit this page View Source GetFilteredPositions(string, bool, params object[]) Get the filtered cursor positions (by filtered means filtered from the VT escape sequences that matches the regex in the routine) Declaration public static (int, int) GetFilteredPositions(string Text, bool line, params object[] Vars) Parameters Type Name Description string Text The text that contains the VT sequences bool line Whether to simulate the new line at the end of text or not object[] Vars Variables to be formatted in the text Returns Type Description (int Width, int Height) | Edit this page View Source InitializeSequences() Initializes the VT sequence handling for Windows systems. Declaration public static bool InitializeSequences() Returns Type Description bool"
  },
  "api/Terminaux.Base.Extensions.html": {
    "href": "api/Terminaux.Base.Extensions.html",
    "title": "Namespace Terminaux.Base.Extensions | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base.Extensions Classes ConsoleClearing Console clearing tools ConsoleCursor Console cursor tools ConsoleFormatting Text formatting tools for the console ConsoleMisc Miscellaneous extensions for the console ConsolePositioning Console positioning tools Enums ConsoleCursorType Console cursor type ConsoleFormattingType Console formatting type"
  },
  "api/Terminaux.Base.TerminauxException.html": {
    "href": "api/Terminaux.Base.TerminauxException.html",
    "title": "Class TerminauxException | Terminaux API - Aptivi",
    "keywords": "Class TerminauxException Terminaux exception class Inheritance object Exception TerminauxException Namespace: Terminaux.Base Assembly: Terminaux.dll Syntax public class TerminauxException : Exception Constructors | Edit this page View Source TerminauxException() Makes an empty TerminauxException exception instance with the default message Declaration public TerminauxException() | Edit this page View Source TerminauxException(Exception) Makes an empty TerminauxException exception instance with the default message Declaration public TerminauxException(Exception innerException) Parameters Type Name Description Exception innerException An inner exception to specify | Edit this page View Source TerminauxException(string) Makes a TerminauxException exception instance Declaration public TerminauxException(string message) Parameters Type Name Description string message A message to specify | Edit this page View Source TerminauxException(string, Exception) Makes a TerminauxException exception instance Declaration public TerminauxException(string message, Exception innerException) Parameters Type Name Description string message A message to specify Exception innerException An inner exception to specify | Edit this page View Source TerminauxException(string, Exception, params object[]) Makes a TerminauxException exception instance Declaration public TerminauxException(string message, Exception innerException, params object[] vars) Parameters Type Name Description string message A message to specify Exception innerException An inner exception to specify object[] vars List of variables to format the message with | Edit this page View Source TerminauxException(string, params object[]) Makes a TerminauxException exception instance Declaration public TerminauxException(string message, params object[] vars) Parameters Type Name Description string message A message to specify object[] vars List of variables to format the message with"
  },
  "api/Terminaux.Base.html": {
    "href": "api/Terminaux.Base.html",
    "title": "Namespace Terminaux.Base | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Base Classes ConsoleResizeHandler The console resize listener module ConsoleWrapper Wrapper for the Console class to ensure safety against dumb consoles. This connects to the console wrapper that Terminaux manages. ConsoleWrapperTools Wrapper for the Console class to ensure safety against dumb consoles and Windows-only features. TerminauxException Terminaux exception class"
  },
  "api/Terminaux.Colors.Color.html": {
    "href": "api/Terminaux.Colors.Color.html",
    "title": "Class Color | Terminaux API - Aptivi",
    "keywords": "Class Color Color information class Inheritance object Color Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax [JsonConverter(typeof(ColorSerializer))] public class Color Constructors | Edit this page View Source Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColor, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColor ColorDef, ColorSettings settings) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(Color) Makes a new instance of color class from specifier. Declaration public Color(Color color) Parameters Type Name Description Color color The color from Drawing Exceptions Type Condition TerminauxException | Edit this page View Source Color(int) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum) Parameters Type Name Description int ColorNum The color number Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, int, int) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, int, int, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(int R, int G, int B, ColorSettings settings) Parameters Type Name Description int R The red level int G The green level int B The blue level ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(int, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(int ColorNum, ColorSettings settings) Parameters Type Name Description int ColorNum The color number ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(string) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Exceptions Type Condition TerminauxException | Edit this page View Source Color(string, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(string ColorSpecifier, ColorSettings settings) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Exceptions Type Condition TerminauxException | Edit this page View Source Color(ConsoleColors, ColorSettings) Makes a new instance of color class from specifier. Declaration public Color(ConsoleColors ColorDef, ColorSettings settings) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors ColorSettings settings Color settings to use while building the color Exceptions Type Condition TerminauxException Properties | Edit this page View Source Brightness Determines the color brightness whether it indicates dark or light mode Declaration public ColorBrightness Brightness { get; } Property Value Type Description ColorBrightness | Edit this page View Source ColorEnum16 The color value converted to ConsoleColor. Not applicable [-1] to true color and 256 colors Declaration public ConsoleColor ColorEnum16 { get; } Property Value Type Description ConsoleColor | Edit this page View Source ColorEnum255 The color value converted to ConsoleColors. Not applicable [-1] to true color Declaration public ConsoleColors ColorEnum255 { get; } Property Value Type Description ConsoleColors | Edit this page View Source ColorId The color ID for 256- and 16-color modes. Declaration public ConsoleColorData ColorId { get; } Property Value Type Description ConsoleColorData | Edit this page View Source Empty Empty color singleton Declaration public static Color Empty { get; } Property Value Type Description Color | Edit this page View Source Hex Hexadecimal representation of the color Declaration public string Hex { get; } Property Value Type Description string | Edit this page View Source PlainSequence Either 0-255, or <R>;<G>;<B>, depending on the usage of the terminal palette. Declaration public string PlainSequence { get; } Property Value Type Description string | Edit this page View Source PlainSequenceEnclosed Either 0-255, or <R>;<G>;<B> enclosed in quotes if necessary. Declaration public string PlainSequenceEnclosed { get; } Property Value Type Description string | Edit this page View Source PlainSequenceEnclosedTrueColor <R>;<G>;<B> enclosed in quotes if necessary Declaration public string PlainSequenceEnclosedTrueColor { get; } Property Value Type Description string | Edit this page View Source PlainSequenceOriginal Either 0-255, or <R>;<G>;<B> in its original form. Declaration public string PlainSequenceOriginal { get; } Property Value Type Description string | Edit this page View Source PlainSequenceTrueColor <R>;<G>;<B> Declaration public string PlainSequenceTrueColor { get; } Property Value Type Description string | Edit this page View Source RGB An instance of RGB Declaration public RedGreenBlue RGB { get; } Property Value Type Description RedGreenBlue | Edit this page View Source Type Color type Declaration public ColorType Type { get; } Property Value Type Description ColorType | Edit this page View Source VTSequenceBackground Parsable VT sequence (Background) Declaration public string VTSequenceBackground { get; } Property Value Type Description string | Edit this page View Source VTSequenceBackgroundOriginal Parsable VT sequence (Background, original) Declaration public string VTSequenceBackgroundOriginal { get; } Property Value Type Description string | Edit this page View Source VTSequenceBackgroundTrueColor Parsable VT sequence (Background, true color) Declaration public string VTSequenceBackgroundTrueColor { get; } Property Value Type Description string | Edit this page View Source VTSequenceForeground Parsable VT sequence (Foreground) Declaration public string VTSequenceForeground { get; } Property Value Type Description string | Edit this page View Source VTSequenceForegroundOriginal Parsable VT sequence (Foreground, original) Declaration public string VTSequenceForegroundOriginal { get; } Property Value Type Description string | Edit this page View Source VTSequenceForegroundTrueColor Parsable VT sequence (Foreground, true color) Declaration public string VTSequenceForegroundTrueColor { get; } Property Value Type Description string Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(Color) Checks to see if this instance of the color is equal to another instance of the color Declaration public bool Equals(Color other) Parameters Type Name Description Color other Another instance of the color to compare with this color Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source Equals(Color, Color) Checks to see if the first instance of the color is equal to another instance of the color Declaration public bool Equals(Color other, Color other2) Parameters Type Name Description Color other Another instance of the color to compare with another Color other2 Another instance of the color to compare with another Returns Type Description bool True if both the colors match; otherwise, false. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() Either 0-255, or <R>;<G>;<B>, depending on the usage of the terminal palette. Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(Color, Color) Declaration public static bool operator ==(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool | Edit this page View Source implicit operator Color(ConsoleColor) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColor ColorDef) Parameters Type Name Description ConsoleColor ColorDef The color taken from ConsoleColor Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(Color) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(Color color) Parameters Type Name Description Color color The color from Drawing Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(int) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(int ColorNum) Parameters Type Name Description int ColorNum The color number Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(string) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, a VT sequence if using true color as follows: <R>;<G>;<B>, or a hexadecimal representation of a number (#AABBCC for example) Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source implicit operator Color(ConsoleColors) Makes a new instance of color class from specifier. Declaration public static implicit operator Color(ConsoleColors ColorDef) Parameters Type Name Description ConsoleColors ColorDef The color taken from ConsoleColors Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source operator !=(Color, Color) Declaration public static bool operator !=(Color a, Color b) Parameters Type Name Description Color a Color b Returns Type Description bool Extension Methods ColorContrast.GetContrastColorHalf(Color) ColorContrast.GetContrastColorNtsc(Color)"
  },
  "api/Terminaux.Colors.ColorSerializer.html": {
    "href": "api/Terminaux.Colors.ColorSerializer.html",
    "title": "Class ColorSerializer | Terminaux API - Aptivi",
    "keywords": "Class ColorSerializer Color serializer Inheritance object JsonConverter ColorSerializer Inherited Members JsonConverter.CanRead JsonConverter.CanWrite Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class ColorSerializer : JsonConverter Methods | Edit this page View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description bool Overrides JsonConverter.CanConvert(Type) | Edit this page View Source ReadJson(JsonReader, Type, object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType object existingValue JsonSerializer serializer Returns Type Description object Overrides JsonConverter.ReadJson(JsonReader, Type, object, JsonSerializer) | Edit this page View Source WriteJson(JsonWriter, object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer object value JsonSerializer serializer Overrides JsonConverter.WriteJson(JsonWriter, object, JsonSerializer)"
  },
  "api/Terminaux.Colors.ColorSettings.html": {
    "href": "api/Terminaux.Colors.ColorSettings.html",
    "title": "Class ColorSettings | Terminaux API - Aptivi",
    "keywords": "Class ColorSettings The color settings class Inheritance object ColorSettings Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public class ColorSettings Properties | Edit this page View Source ColorBlindnessSeverity The color blindness severity (Only for color blindness formulas): Protan Deutan Tritan Declaration public double ColorBlindnessSeverity { get; set; } Property Value Type Description double | Edit this page View Source ColorTransformationFormula The color transformation formula to use when generating transformed colors, such as color blindness. Declaration public TransformationFormula ColorTransformationFormula { get; set; } Property Value Type Description TransformationFormula | Edit this page View Source ColorTransformationMethod The color transformation method for color blindness. Declaration public TransformationMethod ColorTransformationMethod { get; set; } Property Value Type Description TransformationMethod | Edit this page View Source EnableColorTransformation Enables the color transformation to adjust to color blindness upon making a new instance of color Declaration public bool EnableColorTransformation { get; set; } Property Value Type Description bool | Edit this page View Source Opacity The opacity at which the color will be calculated. Declaration public int Opacity { get; set; } Property Value Type Description int Remarks This fades the color to the current background color of the console currently set by SetConsoleColor(Color, bool, bool, bool). That color can be overridable by setting the OpacityColor property to any color you want. Set it to 0, and you'll get the color that is the same as the value of the OpacityColor property. Set it to 255, and you'll get the color that you've created using the Color(int, int, int, ColorSettings) constructor and its siblings. This is still fake transparency for GUI applications, but should behave like real transparency in console applications that use background colors. | Edit this page View Source OpacityColor The opacity color to fade the new instances of colors to using the opacity as the threshold. Declaration public Color OpacityColor { get; set; } Property Value Type Description Color Remarks See the Remarks section of Opacity for more info about how we use this color to calculate the transparency. | Edit this page View Source UseTerminalPalette If enabled, calls to PlainSequence and its siblings return color ID if said color is either a 256 color or a 16 color. Otherwise, calls to these properties are wrappers to PlainSequenceTrueColor and its siblings. By default, it's enabled. Declaration public bool UseTerminalPalette { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Colors.ColorTools.html": {
    "href": "api/Terminaux.Colors.ColorTools.html",
    "title": "Class ColorTools | Terminaux API - Aptivi",
    "keywords": "Class ColorTools Color tools and management Inheritance object ColorTools Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public static class ColorTools Properties | Edit this page View Source AllowBackground Whether applications are allowed to set the current background color or not Declaration public static bool AllowBackground { get; set; } Property Value Type Description bool | Edit this page View Source CurrentBackgroundColor Current background color Declaration public static Color CurrentBackgroundColor { get; } Property Value Type Description Color | Edit this page View Source CurrentForegroundColor Current foreground color Declaration public static Color CurrentForegroundColor { get; } Property Value Type Description Color | Edit this page View Source GlobalSettings Global color settings Declaration public static ColorSettings GlobalSettings { get; } Property Value Type Description ColorSettings Methods | Edit this page View Source GetGray(Color, ColorContrastType) Gets the gray color according to the brightness of the specified color Declaration public static Color GetGray(Color color, ColorContrastType contrastType = ColorContrastType.Light) Parameters Type Name Description Color color Target color to use when getting the gray color ColorContrastType contrastType Contrast type Returns Type Description Color | Edit this page View Source GetGray(ColorContrastType) Gets the gray color according to the brightness of the background color Declaration public static Color GetGray(ColorContrastType contrastType = ColorContrastType.Light) Parameters Type Name Description ColorContrastType contrastType Contrast type Returns Type Description Color | Edit this page View Source GetRandomColor(bool) Gets a random color instance (true color) Declaration public static Color GetRandomColor(bool selectBlack = true) Parameters Type Name Description bool selectBlack Whether to select the black color or not Returns Type Description Color A color instance | Edit this page View Source GetRandomColor(ColorType, bool) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, bool selectBlack = true) Parameters Type Name Description ColorType type Color type to generate bool selectBlack Whether to select the black color or not Returns Type Description Color A color instance | Edit this page View Source GetRandomColor(ColorType, int, int, int, int, int, int, int, int) Gets a random color instance Declaration public static Color GetRandomColor(ColorType type, int minColor, int maxColor, int minColorR, int maxColorR, int minColorG, int maxColorG, int minColorB, int maxColorB) Parameters Type Name Description ColorType type Color type to generate int minColor The minimum color level int maxColor The maximum color level int minColorR The minimum red color level int maxColorR The maximum red color level int minColorG The minimum green color level int maxColorG The maximum green color level int minColorB The minimum blue color level int maxColorB The maximum blue color level Returns Type Description Color A color instance | Edit this page View Source LoadBack() Loads the background Declaration public static void LoadBack() | Edit this page View Source LoadBack(Color, bool) Loads the background Declaration public static void LoadBack(Color ColorSequence, bool Force = false) Parameters Type Name Description Color ColorSequence Color sequence used to load background bool Force Force set background even if background setting is disabled | Edit this page View Source LoadBackDry() Loads the background dryly Declaration public static void LoadBackDry() | Edit this page View Source LoadBackDry(Color, bool) Loads the background dryly Declaration public static void LoadBackDry(Color ColorSequence, bool Force = false) Parameters Type Name Description Color ColorSequence Color sequence used to load background bool Force Force set background even if background setting is disabled | Edit this page View Source RenderResetBackground() Gets a sequence that resets the background color without clearing screen Declaration public static string RenderResetBackground() Returns Type Description string | Edit this page View Source RenderResetColors() Gets a sequence that resets the console colors without clearing screen Declaration public static string RenderResetColors() Returns Type Description string | Edit this page View Source RenderResetForeground() Gets a sequence that resets the foreground color without clearing screen Declaration public static string RenderResetForeground() Returns Type Description string | Edit this page View Source RenderSetConsoleColor(Color, bool) Gets the console color setting sequence Declaration public static string RenderSetConsoleColor(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not Returns Type Description string | Edit this page View Source RenderSetConsoleColor(Color, bool, bool, bool) Gets the console color setting sequence Declaration public static string RenderSetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSetBackground Can the console set the background? Returns Type Description string | Edit this page View Source ResetBackground() Resets the background color without clearing screen Declaration public static void ResetBackground() | Edit this page View Source ResetColors() Resets the console colors without clearing screen Declaration public static void ResetColors() | Edit this page View Source ResetForeground() Resets the foreground color without clearing screen Declaration public static void ResetForeground() | Edit this page View Source SetConsoleColor(Color, bool) Sets the console color Declaration public static void SetConsoleColor(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not | Edit this page View Source SetConsoleColor(Color, bool, bool, bool) Sets the console color Declaration public static void SetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSetBackground Can the console set the background? | Edit this page View Source SetConsoleColorDry(Color, bool) Sets the console color dryly Declaration public static void SetConsoleColorDry(Color ColorSequence, bool Background) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not | Edit this page View Source SetConsoleColorDry(Color, bool, bool, bool) Sets the console color dryly Declaration public static void SetConsoleColorDry(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSetBackground Can the console set the background? | Edit this page View Source TryParseColor(int) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int ColorNum) Parameters Type Name Description int ColorNum The color number Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(int, int, int) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(int R, int G, int B) Parameters Type Name Description int R The red level int G The green level int B The blue level Returns Type Description bool True if successful; False if failed | Edit this page View Source TryParseColor(string) Tries parsing the color from the specifier string Declaration public static bool TryParseColor(string ColorSpecifier) Parameters Type Name Description string ColorSpecifier A color specifier. It must be a valid number from 0-255 if using 255-colors, or a VT sequence if using true color as follows: <R>;<G>;<B> Returns Type Description bool True if successful; False if failed | Edit this page View Source TrySetConsoleColor(Color, bool, bool, bool) Sets the console color Declaration public static bool TrySetConsoleColor(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSetBackground Can the console set the background? Returns Type Description bool True if successful; False if unsuccessful | Edit this page View Source TrySetConsoleColorDry(Color, bool, bool, bool) Sets the console color dryly Declaration public static bool TrySetConsoleColorDry(Color ColorSequence, bool Background = false, bool ForceSet = false, bool canSetBackground = true) Parameters Type Name Description Color ColorSequence The color instance bool Background Whether to set background or not bool ForceSet Force set background even if background setting is disabled or if the current background color doesn't match the provided color bool canSetBackground Can the console set the background? Returns Type Description bool True if successful; False if unsuccessful"
  },
  "api/Terminaux.Colors.ColorType.html": {
    "href": "api/Terminaux.Colors.ColorType.html",
    "title": "Enum ColorType | Terminaux API - Aptivi",
    "keywords": "Enum ColorType Color type enumeration Namespace: Terminaux.Colors Assembly: Terminaux.dll Syntax public enum ColorType Fields Name Description TrueColor Color is a true color _16Color Color is a 4-bit color _255Color Color is a 8-bit color"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.Hsl.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.Hsl.html",
    "title": "Class ConsoleColorData.Hsl | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorData.Hsl The hue, saturation, and luminance values Inheritance object ConsoleColorData.Hsl Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData.Hsl Properties | Edit this page View Source H The hue level Declaration [JsonIgnore] public double H { get; } Property Value Type Description double | Edit this page View Source L The lightness level Declaration [JsonIgnore] public int L { get; } Property Value Type Description int | Edit this page View Source S The saturation level Declaration [JsonIgnore] public int S { get; } Property Value Type Description int"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.Rgb.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.Rgb.html",
    "title": "Class ConsoleColorData.Rgb | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorData.Rgb Decoy class for RGB Inheritance object ConsoleColorData.Rgb Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData.Rgb Properties | Edit this page View Source B Blue color level Declaration [JsonIgnore] public int B { get; } Property Value Type Description int | Edit this page View Source G Green color level Declaration [JsonIgnore] public int G { get; } Property Value Type Description int | Edit this page View Source R Red color level Declaration [JsonIgnore] public int R { get; } Property Value Type Description int"
  },
  "api/Terminaux.Colors.Data.ConsoleColorData.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorData.html",
    "title": "Class ConsoleColorData | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorData Console color data Inheritance object ConsoleColorData Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorData Properties Aquamarine1 [#5fffd7] Gets the console colors data for the Aquamarine1 color Declaration public static ConsoleColorData Aquamarine1 { get; } Property Value Type Description ConsoleColorData Aquamarine1_87ffd7 [#87ffd7] Gets the console colors data for the Aquamarine1_87ffd7 color Declaration public static ConsoleColorData Aquamarine1_87ffd7 { get; } Property Value Type Description ConsoleColorData Aquamarine3 [#5fd7af] Gets the console colors data for the Aquamarine3 color Declaration public static ConsoleColorData Aquamarine3 { get; } Property Value Type Description ConsoleColorData Black [#000000] Gets the console colors data for the Black color Declaration public static ConsoleColorData Black { get; } Property Value Type Description ConsoleColorData Blue [#0000ff] Gets the console colors data for the Blue color Declaration public static ConsoleColorData Blue { get; } Property Value Type Description ConsoleColorData Blue1 [#0000ff] Gets the console colors data for the Blue1 color Declaration public static ConsoleColorData Blue1 { get; } Property Value Type Description ConsoleColorData Blue3 [#0000af] Gets the console colors data for the Blue3 color Declaration public static ConsoleColorData Blue3 { get; } Property Value Type Description ConsoleColorData Blue3_d7 [#0000d7] Gets the console colors data for the Blue3_d7 color Declaration public static ConsoleColorData Blue3_d7 { get; } Property Value Type Description ConsoleColorData BlueViolet [#5f00ff] Gets the console colors data for the BlueViolet color Declaration public static ConsoleColorData BlueViolet { get; } Property Value Type Description ConsoleColorData CadetBlue_5faf87 [#5faf87] Gets the console colors data for the CadetBlue_5faf87 color Declaration public static ConsoleColorData CadetBlue_5faf87 { get; } Property Value Type Description ConsoleColorData CadetBlue_5fafaf [#5fafaf] Gets the console colors data for the CadetBlue_5fafaf color Declaration public static ConsoleColorData CadetBlue_5fafaf { get; } Property Value Type Description ConsoleColorData Chartreuse1 [#87ff00] Gets the console colors data for the Chartreuse1 color Declaration public static ConsoleColorData Chartreuse1 { get; } Property Value Type Description ConsoleColorData Chartreuse2 [#5fff00] Gets the console colors data for the Chartreuse2 color Declaration public static ConsoleColorData Chartreuse2 { get; } Property Value Type Description ConsoleColorData Chartreuse2_87d700 [#87d700] Gets the console colors data for the Chartreuse2_87d700 color Declaration public static ConsoleColorData Chartreuse2_87d700 { get; } Property Value Type Description ConsoleColorData Chartreuse3 [#5faf00] Gets the console colors data for the Chartreuse3 color Declaration public static ConsoleColorData Chartreuse3 { get; } Property Value Type Description ConsoleColorData Chartreuse3_5fd700 [#5fd700] Gets the console colors data for the Chartreuse3_5fd700 color Declaration public static ConsoleColorData Chartreuse3_5fd700 { get; } Property Value Type Description ConsoleColorData Chartreuse4 [#5f8700] Gets the console colors data for the Chartreuse4 color Declaration public static ConsoleColorData Chartreuse4 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source ColorId The color ID Declaration [JsonIgnore] public int ColorId { get; } Property Value Type Description int CornflowerBlue [#5f87ff] Gets the console colors data for the CornflowerBlue color Declaration public static ConsoleColorData CornflowerBlue { get; } Property Value Type Description ConsoleColorData Cornsilk1 [#ffffd7] Gets the console colors data for the Cornsilk1 color Declaration public static ConsoleColorData Cornsilk1 { get; } Property Value Type Description ConsoleColorData Cyan [#00ffff] Gets the console colors data for the Cyan color Declaration public static ConsoleColorData Cyan { get; } Property Value Type Description ConsoleColorData Cyan1 [#00ffff] Gets the console colors data for the Cyan1 color Declaration public static ConsoleColorData Cyan1 { get; } Property Value Type Description ConsoleColorData Cyan2 [#00ffd7] Gets the console colors data for the Cyan2 color Declaration public static ConsoleColorData Cyan2 { get; } Property Value Type Description ConsoleColorData Cyan3 [#00d7af] Gets the console colors data for the Cyan3 color Declaration public static ConsoleColorData Cyan3 { get; } Property Value Type Description ConsoleColorData DarkBlue [#000080] Gets the console colors data for the DarkBlue color Declaration public static ConsoleColorData DarkBlue { get; } Property Value Type Description ConsoleColorData DarkBlue_000087 [#000087] Gets the console colors data for the DarkBlue_000087 color Declaration public static ConsoleColorData DarkBlue_000087 { get; } Property Value Type Description ConsoleColorData DarkCyan [#008080] Gets the console colors data for the DarkCyan color Declaration public static ConsoleColorData DarkCyan { get; } Property Value Type Description ConsoleColorData DarkCyan_00af87 [#00af87] Gets the console colors data for the DarkCyan_00af87 color Declaration public static ConsoleColorData DarkCyan_00af87 { get; } Property Value Type Description ConsoleColorData DarkGoldenrod [#af8700] Gets the console colors data for the DarkGoldenrod color Declaration public static ConsoleColorData DarkGoldenrod { get; } Property Value Type Description ConsoleColorData DarkGray [#808080] Gets the console colors data for the DarkGray color Declaration public static ConsoleColorData DarkGray { get; } Property Value Type Description ConsoleColorData DarkGreen [#008000] Gets the console colors data for the DarkGreen color Declaration public static ConsoleColorData DarkGreen { get; } Property Value Type Description ConsoleColorData DarkGreen_005f00 [#005f00] Gets the console colors data for the DarkGreen_005f00 color Declaration public static ConsoleColorData DarkGreen_005f00 { get; } Property Value Type Description ConsoleColorData DarkKhaki [#afaf5f] Gets the console colors data for the DarkKhaki color Declaration public static ConsoleColorData DarkKhaki { get; } Property Value Type Description ConsoleColorData DarkMagenta [#800080] Gets the console colors data for the DarkMagenta color Declaration public static ConsoleColorData DarkMagenta { get; } Property Value Type Description ConsoleColorData DarkMagenta_870087 [#870087] Gets the console colors data for the DarkMagenta_870087 color Declaration public static ConsoleColorData DarkMagenta_870087 { get; } Property Value Type Description ConsoleColorData DarkMagenta_8700af [#8700af] Gets the console colors data for the DarkMagenta_8700af color Declaration public static ConsoleColorData DarkMagenta_8700af { get; } Property Value Type Description ConsoleColorData DarkOliveGreen1 [#d7ff5f] Gets the console colors data for the DarkOliveGreen1 color Declaration public static ConsoleColorData DarkOliveGreen1 { get; } Property Value Type Description ConsoleColorData DarkOliveGreen1_d7ff87 [#d7ff87] Gets the console colors data for the DarkOliveGreen1_d7ff87 color Declaration public static ConsoleColorData DarkOliveGreen1_d7ff87 { get; } Property Value Type Description ConsoleColorData DarkOliveGreen2 [#afff5f] Gets the console colors data for the DarkOliveGreen2 color Declaration public static ConsoleColorData DarkOliveGreen2 { get; } Property Value Type Description ConsoleColorData DarkOliveGreen3 [#87af5f] Gets the console colors data for the DarkOliveGreen3 color Declaration public static ConsoleColorData DarkOliveGreen3 { get; } Property Value Type Description ConsoleColorData DarkOliveGreen3_87d75f [#87d75f] Gets the console colors data for the DarkOliveGreen3_87d75f color Declaration public static ConsoleColorData DarkOliveGreen3_87d75f { get; } Property Value Type Description ConsoleColorData DarkOliveGreen3_afd75f [#afd75f] Gets the console colors data for the DarkOliveGreen3_afd75f color Declaration public static ConsoleColorData DarkOliveGreen3_afd75f { get; } Property Value Type Description ConsoleColorData DarkOrange [#ff8700] Gets the console colors data for the DarkOrange color Declaration public static ConsoleColorData DarkOrange { get; } Property Value Type Description ConsoleColorData DarkOrange3 [#af5f00] Gets the console colors data for the DarkOrange3 color Declaration public static ConsoleColorData DarkOrange3 { get; } Property Value Type Description ConsoleColorData DarkOrange3_d75f00 [#d75f00] Gets the console colors data for the DarkOrange3_d75f00 color Declaration public static ConsoleColorData DarkOrange3_d75f00 { get; } Property Value Type Description ConsoleColorData DarkRed [#800000] Gets the console colors data for the DarkRed color Declaration public static ConsoleColorData DarkRed { get; } Property Value Type Description ConsoleColorData DarkRed_5f0000 [#5f0000] Gets the console colors data for the DarkRed_5f0000 color Declaration public static ConsoleColorData DarkRed_5f0000 { get; } Property Value Type Description ConsoleColorData DarkRed_870000 [#870000] Gets the console colors data for the DarkRed_870000 color Declaration public static ConsoleColorData DarkRed_870000 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen [#87af87] Gets the console colors data for the DarkSeaGreen color Declaration public static ConsoleColorData DarkSeaGreen { get; } Property Value Type Description ConsoleColorData DarkSeaGreen1 [#afffd7] Gets the console colors data for the DarkSeaGreen1 color Declaration public static ConsoleColorData DarkSeaGreen1 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen1_d7ffaf [#d7ffaf] Gets the console colors data for the DarkSeaGreen1_d7ffaf color Declaration public static ConsoleColorData DarkSeaGreen1_d7ffaf { get; } Property Value Type Description ConsoleColorData DarkSeaGreen2 [#afd7af] Gets the console colors data for the DarkSeaGreen2 color Declaration public static ConsoleColorData DarkSeaGreen2 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen2_afffaf [#afffaf] Gets the console colors data for the DarkSeaGreen2_afffaf color Declaration public static ConsoleColorData DarkSeaGreen2_afffaf { get; } Property Value Type Description ConsoleColorData DarkSeaGreen3 [#87d7af] Gets the console colors data for the DarkSeaGreen3 color Declaration public static ConsoleColorData DarkSeaGreen3 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen3_afd787 [#afd787] Gets the console colors data for the DarkSeaGreen3_afd787 color Declaration public static ConsoleColorData DarkSeaGreen3_afd787 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen4 [#5f875f] Gets the console colors data for the DarkSeaGreen4 color Declaration public static ConsoleColorData DarkSeaGreen4 { get; } Property Value Type Description ConsoleColorData DarkSeaGreen4_5faf5f [#5faf5f] Gets the console colors data for the DarkSeaGreen4_5faf5f color Declaration public static ConsoleColorData DarkSeaGreen4_5faf5f { get; } Property Value Type Description ConsoleColorData DarkSlateGray1 [#87ffff] Gets the console colors data for the DarkSlateGray1 color Declaration public static ConsoleColorData DarkSlateGray1 { get; } Property Value Type Description ConsoleColorData DarkSlateGray2 [#5fffff] Gets the console colors data for the DarkSlateGray2 color Declaration public static ConsoleColorData DarkSlateGray2 { get; } Property Value Type Description ConsoleColorData DarkSlateGray3 [#87d7d7] Gets the console colors data for the DarkSlateGray3 color Declaration public static ConsoleColorData DarkSlateGray3 { get; } Property Value Type Description ConsoleColorData DarkTurquoise [#00d7d7] Gets the console colors data for the DarkTurquoise color Declaration public static ConsoleColorData DarkTurquoise { get; } Property Value Type Description ConsoleColorData DarkViolet [#8700d7] Gets the console colors data for the DarkViolet color Declaration public static ConsoleColorData DarkViolet { get; } Property Value Type Description ConsoleColorData DarkViolet_af00d7 [#af00d7] Gets the console colors data for the DarkViolet_af00d7 color Declaration public static ConsoleColorData DarkViolet_af00d7 { get; } Property Value Type Description ConsoleColorData DarkYellow [#808000] Gets the console colors data for the DarkYellow color Declaration public static ConsoleColorData DarkYellow { get; } Property Value Type Description ConsoleColorData DeepPink1_ff0087 [#ff0087] Gets the console colors data for the DeepPink1_ff0087 color Declaration public static ConsoleColorData DeepPink1_ff0087 { get; } Property Value Type Description ConsoleColorData DeepPink1_ff00af [#ff00af] Gets the console colors data for the DeepPink1_ff00af color Declaration public static ConsoleColorData DeepPink1_ff00af { get; } Property Value Type Description ConsoleColorData DeepPink2 [#ff005f] Gets the console colors data for the DeepPink2 color Declaration public static ConsoleColorData DeepPink2 { get; } Property Value Type Description ConsoleColorData DeepPink3 [#d7005f] Gets the console colors data for the DeepPink3 color Declaration public static ConsoleColorData DeepPink3 { get; } Property Value Type Description ConsoleColorData DeepPink3_d70087 [#d70087] Gets the console colors data for the DeepPink3_d70087 color Declaration public static ConsoleColorData DeepPink3_d70087 { get; } Property Value Type Description ConsoleColorData DeepPink4 [#5f005f] Gets the console colors data for the DeepPink4 color Declaration public static ConsoleColorData DeepPink4 { get; } Property Value Type Description ConsoleColorData DeepPink4_87005f [#87005f] Gets the console colors data for the DeepPink4_87005f color Declaration public static ConsoleColorData DeepPink4_87005f { get; } Property Value Type Description ConsoleColorData DeepPink4_af005f [#af005f] Gets the console colors data for the DeepPink4_af005f color Declaration public static ConsoleColorData DeepPink4_af005f { get; } Property Value Type Description ConsoleColorData DeepSkyBlue1 [#00afff] Gets the console colors data for the DeepSkyBlue1 color Declaration public static ConsoleColorData DeepSkyBlue1 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue2 [#00afd7] Gets the console colors data for the DeepSkyBlue2 color Declaration public static ConsoleColorData DeepSkyBlue2 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue3_0087af [#0087af] Gets the console colors data for the DeepSkyBlue3_0087af color Declaration public static ConsoleColorData DeepSkyBlue3_0087af { get; } Property Value Type Description ConsoleColorData DeepSkyBlue3_0087d7 [#0087d7] Gets the console colors data for the DeepSkyBlue3_0087d7 color Declaration public static ConsoleColorData DeepSkyBlue3_0087d7 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue4_005f5f [#005f5f] Gets the console colors data for the DeepSkyBlue4_005f5f color Declaration public static ConsoleColorData DeepSkyBlue4_005f5f { get; } Property Value Type Description ConsoleColorData DeepSkyBlue4_005f87 [#005f87] Gets the console colors data for the DeepSkyBlue4_005f87 color Declaration public static ConsoleColorData DeepSkyBlue4_005f87 { get; } Property Value Type Description ConsoleColorData DeepSkyBlue4_005faf [#005faf] Gets the console colors data for the DeepSkyBlue4_005faf color Declaration public static ConsoleColorData DeepSkyBlue4_005faf { get; } Property Value Type Description ConsoleColorData DodgerBlue1 [#0087ff] Gets the console colors data for the DodgerBlue1 color Declaration public static ConsoleColorData DodgerBlue1 { get; } Property Value Type Description ConsoleColorData DodgerBlue2 [#005fff] Gets the console colors data for the DodgerBlue2 color Declaration public static ConsoleColorData DodgerBlue2 { get; } Property Value Type Description ConsoleColorData DodgerBlue3 [#005fd7] Gets the console colors data for the DodgerBlue3 color Declaration public static ConsoleColorData DodgerBlue3 { get; } Property Value Type Description ConsoleColorData Gold1 [#ffd700] Gets the console colors data for the Gold1 color Declaration public static ConsoleColorData Gold1 { get; } Property Value Type Description ConsoleColorData Gold3 [#afaf00] Gets the console colors data for the Gold3 color Declaration public static ConsoleColorData Gold3 { get; } Property Value Type Description ConsoleColorData Gold3_d7af00 [#d7af00] Gets the console colors data for the Gold3_d7af00 color Declaration public static ConsoleColorData Gold3_d7af00 { get; } Property Value Type Description ConsoleColorData Gray [#c0c0c0] Gets the console colors data for the Gray color Declaration public static ConsoleColorData Gray { get; } Property Value Type Description ConsoleColorData Green [#00ff00] Gets the console colors data for the Green color Declaration public static ConsoleColorData Green { get; } Property Value Type Description ConsoleColorData Green1 [#00ff00] Gets the console colors data for the Green1 color Declaration public static ConsoleColorData Green1 { get; } Property Value Type Description ConsoleColorData Green3_00d700 [#00d700] Gets the console colors data for the Green3_00d700 color Declaration public static ConsoleColorData Green3_00d700 { get; } Property Value Type Description ConsoleColorData Green3_af00 [#00af00] Gets the console colors data for the Green3_af00 color Declaration public static ConsoleColorData Green3_af00 { get; } Property Value Type Description ConsoleColorData Green4 [#008700] Gets the console colors data for the Green4 color Declaration public static ConsoleColorData Green4 { get; } Property Value Type Description ConsoleColorData GreenYellow [#afff00] Gets the console colors data for the GreenYellow color Declaration public static ConsoleColorData GreenYellow { get; } Property Value Type Description ConsoleColorData Grey0 [#000000] Gets the console colors data for the Grey0 color Declaration public static ConsoleColorData Grey0 { get; } Property Value Type Description ConsoleColorData Grey100 [#ffffff] Gets the console colors data for the Grey100 color Declaration public static ConsoleColorData Grey100 { get; } Property Value Type Description ConsoleColorData Grey11 [#1c1c1c] Gets the console colors data for the Grey11 color Declaration public static ConsoleColorData Grey11 { get; } Property Value Type Description ConsoleColorData Grey15 [#262626] Gets the console colors data for the Grey15 color Declaration public static ConsoleColorData Grey15 { get; } Property Value Type Description ConsoleColorData Grey19 [#303030] Gets the console colors data for the Grey19 color Declaration public static ConsoleColorData Grey19 { get; } Property Value Type Description ConsoleColorData Grey23 [#3a3a3a] Gets the console colors data for the Grey23 color Declaration public static ConsoleColorData Grey23 { get; } Property Value Type Description ConsoleColorData Grey27 [#444444] Gets the console colors data for the Grey27 color Declaration public static ConsoleColorData Grey27 { get; } Property Value Type Description ConsoleColorData Grey3 [#080808] Gets the console colors data for the Grey3 color Declaration public static ConsoleColorData Grey3 { get; } Property Value Type Description ConsoleColorData Grey30 [#4e4e4e] Gets the console colors data for the Grey30 color Declaration public static ConsoleColorData Grey30 { get; } Property Value Type Description ConsoleColorData Grey35 [#585858] Gets the console colors data for the Grey35 color Declaration public static ConsoleColorData Grey35 { get; } Property Value Type Description ConsoleColorData Grey37 [#5f5f5f] Gets the console colors data for the Grey37 color Declaration public static ConsoleColorData Grey37 { get; } Property Value Type Description ConsoleColorData Grey39 [#626262] Gets the console colors data for the Grey39 color Declaration public static ConsoleColorData Grey39 { get; } Property Value Type Description ConsoleColorData Grey42 [#6c6c6c] Gets the console colors data for the Grey42 color Declaration public static ConsoleColorData Grey42 { get; } Property Value Type Description ConsoleColorData Grey46 [#767676] Gets the console colors data for the Grey46 color Declaration public static ConsoleColorData Grey46 { get; } Property Value Type Description ConsoleColorData Grey50 [#808080] Gets the console colors data for the Grey50 color Declaration public static ConsoleColorData Grey50 { get; } Property Value Type Description ConsoleColorData Grey53 [#878787] Gets the console colors data for the Grey53 color Declaration public static ConsoleColorData Grey53 { get; } Property Value Type Description ConsoleColorData Grey54 [#8a8a8a] Gets the console colors data for the Grey54 color Declaration public static ConsoleColorData Grey54 { get; } Property Value Type Description ConsoleColorData Grey58 [#949494] Gets the console colors data for the Grey58 color Declaration public static ConsoleColorData Grey58 { get; } Property Value Type Description ConsoleColorData Grey62 [#9e9e9e] Gets the console colors data for the Grey62 color Declaration public static ConsoleColorData Grey62 { get; } Property Value Type Description ConsoleColorData Grey63 [#af87af] Gets the console colors data for the Grey63 color Declaration public static ConsoleColorData Grey63 { get; } Property Value Type Description ConsoleColorData Grey66 [#a8a8a8] Gets the console colors data for the Grey66 color Declaration public static ConsoleColorData Grey66 { get; } Property Value Type Description ConsoleColorData Grey69 [#afafaf] Gets the console colors data for the Grey69 color Declaration public static ConsoleColorData Grey69 { get; } Property Value Type Description ConsoleColorData Grey7 [#121212] Gets the console colors data for the Grey7 color Declaration public static ConsoleColorData Grey7 { get; } Property Value Type Description ConsoleColorData Grey70 [#b2b2b2] Gets the console colors data for the Grey70 color Declaration public static ConsoleColorData Grey70 { get; } Property Value Type Description ConsoleColorData Grey74 [#bcbcbc] Gets the console colors data for the Grey74 color Declaration public static ConsoleColorData Grey74 { get; } Property Value Type Description ConsoleColorData Grey78 [#c6c6c6] Gets the console colors data for the Grey78 color Declaration public static ConsoleColorData Grey78 { get; } Property Value Type Description ConsoleColorData Grey82 [#d0d0d0] Gets the console colors data for the Grey82 color Declaration public static ConsoleColorData Grey82 { get; } Property Value Type Description ConsoleColorData Grey84 [#d7d7d7] Gets the console colors data for the Grey84 color Declaration public static ConsoleColorData Grey84 { get; } Property Value Type Description ConsoleColorData Grey85 [#dadada] Gets the console colors data for the Grey85 color Declaration public static ConsoleColorData Grey85 { get; } Property Value Type Description ConsoleColorData Grey89 [#e4e4e4] Gets the console colors data for the Grey89 color Declaration public static ConsoleColorData Grey89 { get; } Property Value Type Description ConsoleColorData Grey93 [#eeeeee] Gets the console colors data for the Grey93 color Declaration public static ConsoleColorData Grey93 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source HSL The HSL values Declaration [JsonIgnore] public ConsoleColorData.Hsl HSL { get; } Property Value Type Description ConsoleColorData.Hsl | Edit this page View Source HexString Hexadecimal representation of the color Declaration [JsonIgnore] public string HexString { get; } Property Value Type Description string Honeydew2 [#d7ffd7] Gets the console colors data for the Honeydew2 color Declaration public static ConsoleColorData Honeydew2 { get; } Property Value Type Description ConsoleColorData HotPink2 [#d75faf] Gets the console colors data for the HotPink2 color Declaration public static ConsoleColorData HotPink2 { get; } Property Value Type Description ConsoleColorData HotPink3 [#af5f87] Gets the console colors data for the HotPink3 color Declaration public static ConsoleColorData HotPink3 { get; } Property Value Type Description ConsoleColorData HotPink3_d75f87 [#d75f87] Gets the console colors data for the HotPink3_d75f87 color Declaration public static ConsoleColorData HotPink3_d75f87 { get; } Property Value Type Description ConsoleColorData HotPink_ff5faf [#ff5faf] Gets the console colors data for the HotPink_ff5faf color Declaration public static ConsoleColorData HotPink_ff5faf { get; } Property Value Type Description ConsoleColorData HotPink_ff5fd7 [#ff5fd7] Gets the console colors data for the HotPink_ff5fd7 color Declaration public static ConsoleColorData HotPink_ff5fd7 { get; } Property Value Type Description ConsoleColorData IndianRed [#af5f5f] Gets the console colors data for the IndianRed color Declaration public static ConsoleColorData IndianRed { get; } Property Value Type Description ConsoleColorData IndianRed1_ff5f5f [#ff5f5f] Gets the console colors data for the IndianRed1_ff5f5f color Declaration public static ConsoleColorData IndianRed1_ff5f5f { get; } Property Value Type Description ConsoleColorData IndianRed1_ff5f87 [#ff5f87] Gets the console colors data for the IndianRed1_ff5f87 color Declaration public static ConsoleColorData IndianRed1_ff5f87 { get; } Property Value Type Description ConsoleColorData IndianRed_d75f5f [#d75f5f] Gets the console colors data for the IndianRed_d75f5f color Declaration public static ConsoleColorData IndianRed_d75f5f { get; } Property Value Type Description ConsoleColorData Khaki1 [#ffff87] Gets the console colors data for the Khaki1 color Declaration public static ConsoleColorData Khaki1 { get; } Property Value Type Description ConsoleColorData Khaki3 [#d7d75f] Gets the console colors data for the Khaki3 color Declaration public static ConsoleColorData Khaki3 { get; } Property Value Type Description ConsoleColorData LightCoral [#ff8787] Gets the console colors data for the LightCoral color Declaration public static ConsoleColorData LightCoral { get; } Property Value Type Description ConsoleColorData LightCyan1 [#d7ffff] Gets the console colors data for the LightCyan1 color Declaration public static ConsoleColorData LightCyan1 { get; } Property Value Type Description ConsoleColorData LightCyan3 [#afd7d7] Gets the console colors data for the LightCyan3 color Declaration public static ConsoleColorData LightCyan3 { get; } Property Value Type Description ConsoleColorData LightGoldenrod1 [#ffff5f] Gets the console colors data for the LightGoldenrod1 color Declaration public static ConsoleColorData LightGoldenrod1 { get; } Property Value Type Description ConsoleColorData LightGoldenrod2 [#d7d787] Gets the console colors data for the LightGoldenrod2 color Declaration public static ConsoleColorData LightGoldenrod2 { get; } Property Value Type Description ConsoleColorData LightGoldenrod2_ffd75f [#ffd75f] Gets the console colors data for the LightGoldenrod2_ffd75f color Declaration public static ConsoleColorData LightGoldenrod2_ffd75f { get; } Property Value Type Description ConsoleColorData LightGoldenrod2_ffd787 [#ffd787] Gets the console colors data for the LightGoldenrod2_ffd787 color Declaration public static ConsoleColorData LightGoldenrod2_ffd787 { get; } Property Value Type Description ConsoleColorData LightGoldenrod3 [#d7af5f] Gets the console colors data for the LightGoldenrod3 color Declaration public static ConsoleColorData LightGoldenrod3 { get; } Property Value Type Description ConsoleColorData LightGreen [#87ff5f] Gets the console colors data for the LightGreen color Declaration public static ConsoleColorData LightGreen { get; } Property Value Type Description ConsoleColorData LightGreen_87ff87 [#87ff87] Gets the console colors data for the LightGreen_87ff87 color Declaration public static ConsoleColorData LightGreen_87ff87 { get; } Property Value Type Description ConsoleColorData LightPink1 [#ffafaf] Gets the console colors data for the LightPink1 color Declaration public static ConsoleColorData LightPink1 { get; } Property Value Type Description ConsoleColorData LightPink3 [#d78787] Gets the console colors data for the LightPink3 color Declaration public static ConsoleColorData LightPink3 { get; } Property Value Type Description ConsoleColorData LightPink4 [#875f5f] Gets the console colors data for the LightPink4 color Declaration public static ConsoleColorData LightPink4 { get; } Property Value Type Description ConsoleColorData LightSalmon1 [#ffaf87] Gets the console colors data for the LightSalmon1 color Declaration public static ConsoleColorData LightSalmon1 { get; } Property Value Type Description ConsoleColorData LightSalmon3 [#af875f] Gets the console colors data for the LightSalmon3 color Declaration public static ConsoleColorData LightSalmon3 { get; } Property Value Type Description ConsoleColorData LightSalmon3_d7875f [#d7875f] Gets the console colors data for the LightSalmon3_d7875f color Declaration public static ConsoleColorData LightSalmon3_d7875f { get; } Property Value Type Description ConsoleColorData LightSeaGreen [#00afaf] Gets the console colors data for the LightSeaGreen color Declaration public static ConsoleColorData LightSeaGreen { get; } Property Value Type Description ConsoleColorData LightSkyBlue1 [#afd7ff] Gets the console colors data for the LightSkyBlue1 color Declaration public static ConsoleColorData LightSkyBlue1 { get; } Property Value Type Description ConsoleColorData LightSkyBlue3 [#87afaf] Gets the console colors data for the LightSkyBlue3 color Declaration public static ConsoleColorData LightSkyBlue3 { get; } Property Value Type Description ConsoleColorData LightSkyBlue3_87afd7 [#87afd7] Gets the console colors data for the LightSkyBlue3_87afd7 color Declaration public static ConsoleColorData LightSkyBlue3_87afd7 { get; } Property Value Type Description ConsoleColorData LightSlateBlue [#8787ff] Gets the console colors data for the LightSlateBlue color Declaration public static ConsoleColorData LightSlateBlue { get; } Property Value Type Description ConsoleColorData LightSlateGrey [#8787af] Gets the console colors data for the LightSlateGrey color Declaration public static ConsoleColorData LightSlateGrey { get; } Property Value Type Description ConsoleColorData LightSteelBlue [#afafff] Gets the console colors data for the LightSteelBlue color Declaration public static ConsoleColorData LightSteelBlue { get; } Property Value Type Description ConsoleColorData LightSteelBlue1 [#d7d7ff] Gets the console colors data for the LightSteelBlue1 color Declaration public static ConsoleColorData LightSteelBlue1 { get; } Property Value Type Description ConsoleColorData LightSteelBlue3 [#afafd7] Gets the console colors data for the LightSteelBlue3 color Declaration public static ConsoleColorData LightSteelBlue3 { get; } Property Value Type Description ConsoleColorData LightYellow3 [#d7d7af] Gets the console colors data for the LightYellow3 color Declaration public static ConsoleColorData LightYellow3 { get; } Property Value Type Description ConsoleColorData Magenta [#ff00ff] Gets the console colors data for the Magenta color Declaration public static ConsoleColorData Magenta { get; } Property Value Type Description ConsoleColorData Magenta1 [#ff00ff] Gets the console colors data for the Magenta1 color Declaration public static ConsoleColorData Magenta1 { get; } Property Value Type Description ConsoleColorData Magenta2 [#d700ff] Gets the console colors data for the Magenta2 color Declaration public static ConsoleColorData Magenta2 { get; } Property Value Type Description ConsoleColorData Magenta2_ff00d7 [#ff00d7] Gets the console colors data for the Magenta2_ff00d7 color Declaration public static ConsoleColorData Magenta2_ff00d7 { get; } Property Value Type Description ConsoleColorData Magenta3 [#af00af] Gets the console colors data for the Magenta3 color Declaration public static ConsoleColorData Magenta3 { get; } Property Value Type Description ConsoleColorData Magenta3_d700af [#d700af] Gets the console colors data for the Magenta3_d700af color Declaration public static ConsoleColorData Magenta3_d700af { get; } Property Value Type Description ConsoleColorData Magenta3_d700d7 [#d700d7] Gets the console colors data for the Magenta3_d700d7 color Declaration public static ConsoleColorData Magenta3_d700d7 { get; } Property Value Type Description ConsoleColorData MediumOrchid [#af5fd7] Gets the console colors data for the MediumOrchid color Declaration public static ConsoleColorData MediumOrchid { get; } Property Value Type Description ConsoleColorData MediumOrchid1 [#d75fff] Gets the console colors data for the MediumOrchid1 color Declaration public static ConsoleColorData MediumOrchid1 { get; } Property Value Type Description ConsoleColorData MediumOrchid1_ff5fff [#ff5fff] Gets the console colors data for the MediumOrchid1_ff5fff color Declaration public static ConsoleColorData MediumOrchid1_ff5fff { get; } Property Value Type Description ConsoleColorData MediumOrchid3 [#af5faf] Gets the console colors data for the MediumOrchid3 color Declaration public static ConsoleColorData MediumOrchid3 { get; } Property Value Type Description ConsoleColorData MediumPurple [#8787d7] Gets the console colors data for the MediumPurple color Declaration public static ConsoleColorData MediumPurple { get; } Property Value Type Description ConsoleColorData MediumPurple1 [#af87ff] Gets the console colors data for the MediumPurple1 color Declaration public static ConsoleColorData MediumPurple1 { get; } Property Value Type Description ConsoleColorData MediumPurple2 [#af5fff] Gets the console colors data for the MediumPurple2 color Declaration public static ConsoleColorData MediumPurple2 { get; } Property Value Type Description ConsoleColorData MediumPurple2_af87d7 [#af87d7] Gets the console colors data for the MediumPurple2_af87d7 color Declaration public static ConsoleColorData MediumPurple2_af87d7 { get; } Property Value Type Description ConsoleColorData MediumPurple3_875faf [#875faf] Gets the console colors data for the MediumPurple3_875faf color Declaration public static ConsoleColorData MediumPurple3_875faf { get; } Property Value Type Description ConsoleColorData MediumPurple3_875fd7 [#875fd7] Gets the console colors data for the MediumPurple3_875fd7 color Declaration public static ConsoleColorData MediumPurple3_875fd7 { get; } Property Value Type Description ConsoleColorData MediumPurple4 [#5f5f87] Gets the console colors data for the MediumPurple4 color Declaration public static ConsoleColorData MediumPurple4 { get; } Property Value Type Description ConsoleColorData MediumSpringGreen [#00ffaf] Gets the console colors data for the MediumSpringGreen color Declaration public static ConsoleColorData MediumSpringGreen { get; } Property Value Type Description ConsoleColorData MediumTurquoise [#5fd7d7] Gets the console colors data for the MediumTurquoise color Declaration public static ConsoleColorData MediumTurquoise { get; } Property Value Type Description ConsoleColorData MediumVioletRed [#af0087] Gets the console colors data for the MediumVioletRed color Declaration public static ConsoleColorData MediumVioletRed { get; } Property Value Type Description ConsoleColorData MistyRose1 [#ffd7d7] Gets the console colors data for the MistyRose1 color Declaration public static ConsoleColorData MistyRose1 { get; } Property Value Type Description ConsoleColorData MistyRose3 [#d7afaf] Gets the console colors data for the MistyRose3 color Declaration public static ConsoleColorData MistyRose3 { get; } Property Value Type Description ConsoleColorData | Edit this page View Source Name The color name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string NavajoWhite1 [#ffd7af] Gets the console colors data for the NavajoWhite1 color Declaration public static ConsoleColorData NavajoWhite1 { get; } Property Value Type Description ConsoleColorData NavajoWhite3 [#afaf87] Gets the console colors data for the NavajoWhite3 color Declaration public static ConsoleColorData NavajoWhite3 { get; } Property Value Type Description ConsoleColorData NavyBlue [#00005f] Gets the console colors data for the NavyBlue color Declaration public static ConsoleColorData NavyBlue { get; } Property Value Type Description ConsoleColorData Orange1 [#ffaf00] Gets the console colors data for the Orange1 color Declaration public static ConsoleColorData Orange1 { get; } Property Value Type Description ConsoleColorData Orange3 [#d78700] Gets the console colors data for the Orange3 color Declaration public static ConsoleColorData Orange3 { get; } Property Value Type Description ConsoleColorData Orange4 [#5f5f00] Gets the console colors data for the Orange4 color Declaration public static ConsoleColorData Orange4 { get; } Property Value Type Description ConsoleColorData Orange4_875f00 [#875f00] Gets the console colors data for the Orange4_875f00 color Declaration public static ConsoleColorData Orange4_875f00 { get; } Property Value Type Description ConsoleColorData OrangeRed1 [#ff5f00] Gets the console colors data for the OrangeRed1 color Declaration public static ConsoleColorData OrangeRed1 { get; } Property Value Type Description ConsoleColorData Orchid [#d75fd7] Gets the console colors data for the Orchid color Declaration public static ConsoleColorData Orchid { get; } Property Value Type Description ConsoleColorData Orchid1 [#ff87ff] Gets the console colors data for the Orchid1 color Declaration public static ConsoleColorData Orchid1 { get; } Property Value Type Description ConsoleColorData Orchid2 [#ff87d7] Gets the console colors data for the Orchid2 color Declaration public static ConsoleColorData Orchid2 { get; } Property Value Type Description ConsoleColorData PaleGreen1 [#87ffaf] Gets the console colors data for the PaleGreen1 color Declaration public static ConsoleColorData PaleGreen1 { get; } Property Value Type Description ConsoleColorData PaleGreen1_afff87 [#afff87] Gets the console colors data for the PaleGreen1_afff87 color Declaration public static ConsoleColorData PaleGreen1_afff87 { get; } Property Value Type Description ConsoleColorData PaleGreen3 [#5fd75f] Gets the console colors data for the PaleGreen3 color Declaration public static ConsoleColorData PaleGreen3 { get; } Property Value Type Description ConsoleColorData PaleGreen3_87d787 [#87d787] Gets the console colors data for the PaleGreen3_87d787 color Declaration public static ConsoleColorData PaleGreen3_87d787 { get; } Property Value Type Description ConsoleColorData PaleTurquoise1 [#afffff] Gets the console colors data for the PaleTurquoise1 color Declaration public static ConsoleColorData PaleTurquoise1 { get; } Property Value Type Description ConsoleColorData PaleTurquoise4 [#5f8787] Gets the console colors data for the PaleTurquoise4 color Declaration public static ConsoleColorData PaleTurquoise4 { get; } Property Value Type Description ConsoleColorData PaleVioletRed1 [#ff87af] Gets the console colors data for the PaleVioletRed1 color Declaration public static ConsoleColorData PaleVioletRed1 { get; } Property Value Type Description ConsoleColorData Pink1 [#ffafd7] Gets the console colors data for the Pink1 color Declaration public static ConsoleColorData Pink1 { get; } Property Value Type Description ConsoleColorData Pink3 [#d787af] Gets the console colors data for the Pink3 color Declaration public static ConsoleColorData Pink3 { get; } Property Value Type Description ConsoleColorData Plum1 [#ffafff] Gets the console colors data for the Plum1 color Declaration public static ConsoleColorData Plum1 { get; } Property Value Type Description ConsoleColorData Plum2 [#d7afff] Gets the console colors data for the Plum2 color Declaration public static ConsoleColorData Plum2 { get; } Property Value Type Description ConsoleColorData Plum3 [#d787d7] Gets the console colors data for the Plum3 color Declaration public static ConsoleColorData Plum3 { get; } Property Value Type Description ConsoleColorData Plum4 [#875f87] Gets the console colors data for the Plum4 color Declaration public static ConsoleColorData Plum4 { get; } Property Value Type Description ConsoleColorData Purple [#8700ff] Gets the console colors data for the Purple color Declaration public static ConsoleColorData Purple { get; } Property Value Type Description ConsoleColorData Purple3 [#5f00d7] Gets the console colors data for the Purple3 color Declaration public static ConsoleColorData Purple3 { get; } Property Value Type Description ConsoleColorData Purple4_5f0087 [#5f0087] Gets the console colors data for the Purple4_5f0087 color Declaration public static ConsoleColorData Purple4_5f0087 { get; } Property Value Type Description ConsoleColorData Purple4_5f00af [#5f00af] Gets the console colors data for the Purple4_5f00af color Declaration public static ConsoleColorData Purple4_5f00af { get; } Property Value Type Description ConsoleColorData Purple_af00ff [#af00ff] Gets the console colors data for the Purple_af00ff color Declaration public static ConsoleColorData Purple_af00ff { get; } Property Value Type Description ConsoleColorData | Edit this page View Source RGB The RGB values Declaration [JsonIgnore] public ConsoleColorData.Rgb RGB { get; } Property Value Type Description ConsoleColorData.Rgb Red [#ff0000] Gets the console colors data for the Red color Declaration public static ConsoleColorData Red { get; } Property Value Type Description ConsoleColorData Red1 [#ff0000] Gets the console colors data for the Red1 color Declaration public static ConsoleColorData Red1 { get; } Property Value Type Description ConsoleColorData Red3 [#af0000] Gets the console colors data for the Red3 color Declaration public static ConsoleColorData Red3 { get; } Property Value Type Description ConsoleColorData Red3_d70000 [#d70000] Gets the console colors data for the Red3_d70000 color Declaration public static ConsoleColorData Red3_d70000 { get; } Property Value Type Description ConsoleColorData RosyBrown [#af8787] Gets the console colors data for the RosyBrown color Declaration public static ConsoleColorData RosyBrown { get; } Property Value Type Description ConsoleColorData RoyalBlue1 [#5f5fff] Gets the console colors data for the RoyalBlue1 color Declaration public static ConsoleColorData RoyalBlue1 { get; } Property Value Type Description ConsoleColorData Salmon1 [#ff875f] Gets the console colors data for the Salmon1 color Declaration public static ConsoleColorData Salmon1 { get; } Property Value Type Description ConsoleColorData SandyBrown [#ffaf5f] Gets the console colors data for the SandyBrown color Declaration public static ConsoleColorData SandyBrown { get; } Property Value Type Description ConsoleColorData SeaGreen1 [#5fff87] Gets the console colors data for the SeaGreen1 color Declaration public static ConsoleColorData SeaGreen1 { get; } Property Value Type Description ConsoleColorData SeaGreen1_5fffaf [#5fffaf] Gets the console colors data for the SeaGreen1_5fffaf color Declaration public static ConsoleColorData SeaGreen1_5fffaf { get; } Property Value Type Description ConsoleColorData SeaGreen2 [#5fff5f] Gets the console colors data for the SeaGreen2 color Declaration public static ConsoleColorData SeaGreen2 { get; } Property Value Type Description ConsoleColorData SeaGreen3 [#5fd787] Gets the console colors data for the SeaGreen3 color Declaration public static ConsoleColorData SeaGreen3 { get; } Property Value Type Description ConsoleColorData SkyBlue1 [#87d7ff] Gets the console colors data for the SkyBlue1 color Declaration public static ConsoleColorData SkyBlue1 { get; } Property Value Type Description ConsoleColorData SkyBlue2 [#87afff] Gets the console colors data for the SkyBlue2 color Declaration public static ConsoleColorData SkyBlue2 { get; } Property Value Type Description ConsoleColorData SkyBlue3 [#5fafd7] Gets the console colors data for the SkyBlue3 color Declaration public static ConsoleColorData SkyBlue3 { get; } Property Value Type Description ConsoleColorData SlateBlue1 [#875fff] Gets the console colors data for the SlateBlue1 color Declaration public static ConsoleColorData SlateBlue1 { get; } Property Value Type Description ConsoleColorData SlateBlue3_5f5faf [#5f5faf] Gets the console colors data for the SlateBlue3_5f5faf color Declaration public static ConsoleColorData SlateBlue3_5f5faf { get; } Property Value Type Description ConsoleColorData SlateBlue3_5f5fd7 [#5f5fd7] Gets the console colors data for the SlateBlue3_5f5fd7 color Declaration public static ConsoleColorData SlateBlue3_5f5fd7 { get; } Property Value Type Description ConsoleColorData SpringGreen1 [#00ff87] Gets the console colors data for the SpringGreen1 color Declaration public static ConsoleColorData SpringGreen1 { get; } Property Value Type Description ConsoleColorData SpringGreen2 [#00ff5f] Gets the console colors data for the SpringGreen2 color Declaration public static ConsoleColorData SpringGreen2 { get; } Property Value Type Description ConsoleColorData SpringGreen2_00d787 [#00d787] Gets the console colors data for the SpringGreen2_00d787 color Declaration public static ConsoleColorData SpringGreen2_00d787 { get; } Property Value Type Description ConsoleColorData SpringGreen3_00af5f [#00af5f] Gets the console colors data for the SpringGreen3_00af5f color Declaration public static ConsoleColorData SpringGreen3_00af5f { get; } Property Value Type Description ConsoleColorData SpringGreen3_00d75f [#00d75f] Gets the console colors data for the SpringGreen3_00d75f color Declaration public static ConsoleColorData SpringGreen3_00d75f { get; } Property Value Type Description ConsoleColorData SpringGreen4 [#00875f] Gets the console colors data for the SpringGreen4 color Declaration public static ConsoleColorData SpringGreen4 { get; } Property Value Type Description ConsoleColorData SteelBlue [#5f87af] Gets the console colors data for the SteelBlue color Declaration public static ConsoleColorData SteelBlue { get; } Property Value Type Description ConsoleColorData SteelBlue1_5fafff [#5fafff] Gets the console colors data for the SteelBlue1_5fafff color Declaration public static ConsoleColorData SteelBlue1_5fafff { get; } Property Value Type Description ConsoleColorData SteelBlue1_5fd7ff [#5fd7ff] Gets the console colors data for the SteelBlue1_5fd7ff color Declaration public static ConsoleColorData SteelBlue1_5fd7ff { get; } Property Value Type Description ConsoleColorData SteelBlue3 [#5f87d7] Gets the console colors data for the SteelBlue3 color Declaration public static ConsoleColorData SteelBlue3 { get; } Property Value Type Description ConsoleColorData Tan [#d7af87] Gets the console colors data for the Tan color Declaration public static ConsoleColorData Tan { get; } Property Value Type Description ConsoleColorData Thistle1 [#ffd7ff] Gets the console colors data for the Thistle1 color Declaration public static ConsoleColorData Thistle1 { get; } Property Value Type Description ConsoleColorData Thistle3 [#d7afd7] Gets the console colors data for the Thistle3 color Declaration public static ConsoleColorData Thistle3 { get; } Property Value Type Description ConsoleColorData Turquoise2 [#00d7ff] Gets the console colors data for the Turquoise2 color Declaration public static ConsoleColorData Turquoise2 { get; } Property Value Type Description ConsoleColorData Turquoise4 [#008787] Gets the console colors data for the Turquoise4 color Declaration public static ConsoleColorData Turquoise4 { get; } Property Value Type Description ConsoleColorData Violet [#d787ff] Gets the console colors data for the Violet color Declaration public static ConsoleColorData Violet { get; } Property Value Type Description ConsoleColorData Wheat1 [#ffffaf] Gets the console colors data for the Wheat1 color Declaration public static ConsoleColorData Wheat1 { get; } Property Value Type Description ConsoleColorData Wheat4 [#87875f] Gets the console colors data for the Wheat4 color Declaration public static ConsoleColorData Wheat4 { get; } Property Value Type Description ConsoleColorData White [#ffffff] Gets the console colors data for the White color Declaration public static ConsoleColorData White { get; } Property Value Type Description ConsoleColorData Yellow [#ffff00] Gets the console colors data for the Yellow color Declaration public static ConsoleColorData Yellow { get; } Property Value Type Description ConsoleColorData Yellow1 [#ffff00] Gets the console colors data for the Yellow1 color Declaration public static ConsoleColorData Yellow1 { get; } Property Value Type Description ConsoleColorData Yellow2 [#d7ff00] Gets the console colors data for the Yellow2 color Declaration public static ConsoleColorData Yellow2 { get; } Property Value Type Description ConsoleColorData Yellow3 [#afd700] Gets the console colors data for the Yellow3 color Declaration public static ConsoleColorData Yellow3 { get; } Property Value Type Description ConsoleColorData Yellow3_d7d700 [#d7d700] Gets the console colors data for the Yellow3_d7d700 color Declaration public static ConsoleColorData Yellow3_d7d700 { get; } Property Value Type Description ConsoleColorData Yellow4 [#878700] Gets the console colors data for the Yellow4 color Declaration public static ConsoleColorData Yellow4 { get; } Property Value Type Description ConsoleColorData Yellow4_87af00 [#87af00] Gets the console colors data for the Yellow4_87af00 color Declaration public static ConsoleColorData Yellow4_87af00 { get; } Property Value Type Description ConsoleColorData Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(ConsoleColorData) Declaration public bool Equals(ConsoleColorData other) Parameters Type Name Description ConsoleColorData other Returns Type Description bool | Edit this page View Source GetColorData() Gets the console colors data Declaration public static ConsoleColorData[] GetColorData() Returns Type Description ConsoleColorData[] | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source MatchColorData(int, int, int) Gets a color data instance that matches Declaration public static ConsoleColorData MatchColorData(int r, int g, int b) Parameters Type Name Description int r Red color level to match int g Green color level to match int b Blue color level to match Returns Type Description ConsoleColorData Either an instance of ConsoleColorData if found, or null if not found | Edit this page View Source MatchColorData(Color) Gets a color data instance that matches Declaration public static ConsoleColorData MatchColorData(Color color) Parameters Type Name Description Color color Color to match Returns Type Description ConsoleColorData Either an instance of ConsoleColorData if found, or null if not found | Edit this page View Source MatchColorData(RedGreenBlue) Gets a color data instance that matches Declaration public static ConsoleColorData MatchColorData(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Color to match Returns Type Description ConsoleColorData Either an instance of ConsoleColorData if found, or null if not found Operators | Edit this page View Source operator ==(ConsoleColorData, ConsoleColorData) Declaration public static bool operator ==(ConsoleColorData left, ConsoleColorData right) Parameters Type Name Description ConsoleColorData left ConsoleColorData right Returns Type Description bool | Edit this page View Source operator !=(ConsoleColorData, ConsoleColorData) Declaration public static bool operator !=(ConsoleColorData left, ConsoleColorData right) Parameters Type Name Description ConsoleColorData left ConsoleColorData right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Data.ConsoleColors.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColors.html",
    "title": "Enum ConsoleColors | Terminaux API - Aptivi",
    "keywords": "Enum ConsoleColors All 255 console colors Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public enum ConsoleColors Fields Name Description Aquamarine1 Aquamarine1_87ffd7 Aquamarine3 Black Blue Blue1 Blue3 Blue3_d7 BlueViolet CadetBlue_5faf87 CadetBlue_5fafaf Chartreuse1 Chartreuse2 Chartreuse2_87d700 Chartreuse3 Chartreuse3_5fd700 Chartreuse4 CornflowerBlue Cornsilk1 Cyan Cyan1 Cyan2 Cyan3 DarkBlue DarkBlue_000087 DarkCyan DarkCyan_00af87 DarkGoldenrod DarkGray DarkGreen DarkGreen_005f00 DarkKhaki DarkMagenta DarkMagenta_870087 DarkMagenta_8700af DarkOliveGreen1 DarkOliveGreen1_d7ff87 DarkOliveGreen2 DarkOliveGreen3 DarkOliveGreen3_87d75f DarkOliveGreen3_afd75f DarkOrange DarkOrange3 DarkOrange3_d75f00 DarkRed DarkRed_5f0000 DarkRed_870000 DarkSeaGreen DarkSeaGreen1 DarkSeaGreen1_d7ffaf DarkSeaGreen2 DarkSeaGreen2_afffaf DarkSeaGreen3 DarkSeaGreen3_afd787 DarkSeaGreen4 DarkSeaGreen4_5faf5f DarkSlateGray1 DarkSlateGray2 DarkSlateGray3 DarkTurquoise DarkViolet DarkViolet_af00d7 DarkYellow DeepPink1_ff0087 DeepPink1_ff00af DeepPink2 DeepPink3 DeepPink3_d70087 DeepPink4 DeepPink4_87005f DeepPink4_af005f DeepSkyBlue1 DeepSkyBlue2 DeepSkyBlue3_0087af DeepSkyBlue3_0087d7 DeepSkyBlue4_005f5f DeepSkyBlue4_005f87 DeepSkyBlue4_005faf DodgerBlue1 DodgerBlue2 DodgerBlue3 Gold1 Gold3 Gold3_d7af00 Gray Green Green1 Green3_00d700 Green3_af00 Green4 GreenYellow Grey0 Grey100 Grey11 Grey15 Grey19 Grey23 Grey27 Grey3 Grey30 Grey35 Grey37 Grey39 Grey42 Grey46 Grey50 Grey53 Grey54 Grey58 Grey62 Grey63 Grey66 Grey69 Grey7 Grey70 Grey74 Grey78 Grey82 Grey84 Grey85 Grey89 Grey93 Honeydew2 HotPink2 HotPink3 HotPink3_d75f87 HotPink_ff5faf HotPink_ff5fd7 IndianRed IndianRed1_ff5f5f IndianRed1_ff5f87 IndianRed_d75f5f Khaki1 Khaki3 LightCoral LightCyan1 LightCyan3 LightGoldenrod1 LightGoldenrod2 LightGoldenrod2_ffd75f LightGoldenrod2_ffd787 LightGoldenrod3 LightGreen LightGreen_87ff87 LightPink1 LightPink3 LightPink4 LightSalmon1 LightSalmon3 LightSalmon3_d7875f LightSeaGreen LightSkyBlue1 LightSkyBlue3 LightSkyBlue3_87afd7 LightSlateBlue LightSlateGrey LightSteelBlue LightSteelBlue1 LightSteelBlue3 LightYellow3 Magenta Magenta1 Magenta2 Magenta2_ff00d7 Magenta3 Magenta3_d700af Magenta3_d700d7 MediumOrchid MediumOrchid1 MediumOrchid1_ff5fff MediumOrchid3 MediumPurple MediumPurple1 MediumPurple2 MediumPurple2_af87d7 MediumPurple3_875faf MediumPurple3_875fd7 MediumPurple4 MediumSpringGreen MediumTurquoise MediumVioletRed MistyRose1 MistyRose3 NavajoWhite1 NavajoWhite3 NavyBlue Orange1 Orange3 Orange4 Orange4_875f00 OrangeRed1 Orchid Orchid1 Orchid2 PaleGreen1 PaleGreen1_afff87 PaleGreen3 PaleGreen3_87d787 PaleTurquoise1 PaleTurquoise4 PaleVioletRed1 Pink1 Pink3 Plum1 Plum2 Plum3 Plum4 Purple Purple3 Purple4_5f0087 Purple4_5f00af Purple_af00ff Red Red1 Red3 Red3_d70000 RosyBrown RoyalBlue1 Salmon1 SandyBrown SeaGreen1 SeaGreen1_5fffaf SeaGreen2 SeaGreen3 SkyBlue1 SkyBlue2 SkyBlue3 SlateBlue1 SlateBlue3_5f5faf SlateBlue3_5f5fd7 SpringGreen1 SpringGreen2 SpringGreen2_00d787 SpringGreen3_00af5f SpringGreen3_00d75f SpringGreen4 SteelBlue SteelBlue1_5fafff SteelBlue1_5fd7ff SteelBlue3 Tan Thistle1 Thistle3 Turquoise2 Turquoise4 Violet Wheat1 Wheat4 White Yellow Yellow1 Yellow2 Yellow3 Yellow3_d7d700 Yellow4 Yellow4_87af00"
  },
  "api/Terminaux.Colors.Data.ConsoleColorsInfo.html": {
    "href": "api/Terminaux.Colors.Data.ConsoleColorsInfo.html",
    "title": "Class ConsoleColorsInfo | Terminaux API - Aptivi",
    "keywords": "Class ConsoleColorsInfo Information for the console colors that fit within the 256 colors Inheritance object ConsoleColorsInfo Namespace: Terminaux.Colors.Data Assembly: Terminaux.dll Syntax public class ConsoleColorsInfo Constructors | Edit this page View Source ConsoleColorsInfo(ConsoleColors) Makes a new instance of 255-color console color information Declaration public ConsoleColorsInfo(ConsoleColors ColorValue) Parameters Type Name Description ConsoleColors ColorValue A 255-color console color Properties | Edit this page View Source B The blue color value Declaration public int B { get; } Property Value Type Description int | Edit this page View Source Color A Color instance to get more information Declaration public Color Color { get; } Property Value Type Description Color | Edit this page View Source ColorID The color ID Declaration public int ColorID { get; } Property Value Type Description int | Edit this page View Source G The green color value Declaration public int G { get; } Property Value Type Description int | Edit this page View Source R The red color value Declaration public int R { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with this instance Returns Type Description bool True if both ConsoleColorsInfo instances match; otherwise, false. | Edit this page View Source Equals(ConsoleColorsInfo, ConsoleColorsInfo) Checks to see if this instance of ConsoleColorsInfo is equal to another instance of ConsoleColorsInfo Declaration public bool Equals(ConsoleColorsInfo other, ConsoleColorsInfo other2) Parameters Type Name Description ConsoleColorsInfo other Another instance of ConsoleColorsInfo to compare with another instance ConsoleColorsInfo other2 Another instance of ConsoleColorsInfo to compare with another instance Returns Type Description bool True if both ConsoleColorsInfo instances match; otherwise, false. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator ==(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description bool | Edit this page View Source operator !=(ConsoleColorsInfo, ConsoleColorsInfo) Declaration public static bool operator !=(ConsoleColorsInfo a, ConsoleColorsInfo b) Parameters Type Name Description ConsoleColorsInfo a ConsoleColorsInfo b Returns Type Description bool"
  },
  "api/Terminaux.Colors.Data.html": {
    "href": "api/Terminaux.Colors.Data.html",
    "title": "Namespace Terminaux.Colors.Data | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Data Classes ConsoleColorData Console color data ConsoleColorData.Hsl The hue, saturation, and luminance values ConsoleColorData.Rgb Decoy class for RGB ConsoleColorsInfo Information for the console colors that fit within the 256 colors Enums ConsoleColors All 255 console colors"
  },
  "api/Terminaux.Colors.Interop.SystemColorConverter.html": {
    "href": "api/Terminaux.Colors.Interop.SystemColorConverter.html",
    "title": "Class SystemColorConverter | Terminaux API - Aptivi",
    "keywords": "Class SystemColorConverter Provides you with tools to convert System.Drawing's Color to and from Terminaux's Color Inheritance object SystemColorConverter Namespace: Terminaux.Colors.Interop Assembly: Terminaux.dll Syntax public static class SystemColorConverter Methods | Edit this page View Source FromDrawingColor(Color) Converts from System.Drawing's Color to Terminaux's Color Declaration public static Color FromDrawingColor(Color drawingColor) Parameters Type Name Description Color drawingColor System.Drawing's Color Returns Type Description Color Terminaux's Color | Edit this page View Source ToDrawingColor(Color) Converts from Terminaux's Color to System.Drawing's Color Declaration public static Color ToDrawingColor(Color ourColor) Parameters Type Name Description Color ourColor Terminaux's Color Returns Type Description Color System.Drawing's Color"
  },
  "api/Terminaux.Colors.Interop.html": {
    "href": "api/Terminaux.Colors.Interop.html",
    "title": "Namespace Terminaux.Colors.Interop | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Interop Classes SystemColorConverter Provides you with tools to convert System.Drawing's Color to and from Terminaux's Color"
  },
  "api/Terminaux.Colors.Models.Conversion.CmyConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.CmyConversionTools.html",
    "title": "Class CmyConversionTools | Terminaux API - Aptivi",
    "keywords": "Class CmyConversionTools Color model conversion tools (to CMY) Inheritance object CmyConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class CmyConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to CMY Declaration public static CyanMagentaYellow ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description CyanMagentaYellow Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.CmykConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.CmykConversionTools.html",
    "title": "Class CmykConversionTools | Terminaux API - Aptivi",
    "keywords": "Class CmykConversionTools Color model conversion tools (to CMYK) Inheritance object CmykConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class CmykConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to CMYK Declaration public static CyanMagentaYellowKey ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description CyanMagentaYellowKey Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.ConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.ConversionTools.html",
    "title": "Class ConversionTools | Terminaux API - Aptivi",
    "keywords": "Class ConversionTools Color conversion tools Inheritance object ConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class ConversionTools Methods | Edit this page View Source CorrectStandardColor(ConsoleColor) Corrects the color map for ConsoleColor according to the X11 specification Declaration public static ConsoleColor CorrectStandardColor(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to correct this color Returns Type Description ConsoleColor Corrected ConsoleColor | Edit this page View Source TranslateToStandardColorMap(ConsoleColors) Translates the color from X11's ConsoleColors to .NET's representation, ConsoleColor Declaration public static ConsoleColor TranslateToStandardColorMap(ConsoleColors color) Parameters Type Name Description ConsoleColors color X11's ConsoleColors to translate this color to Returns Type Description ConsoleColor .NET's representation of this color, ConsoleColor | Edit this page View Source TranslateToX11ColorMap(ConsoleColor) Translates the color from .NET's ConsoleColor to X11's representation, ConsoleColors Declaration public static ConsoleColors TranslateToX11ColorMap(ConsoleColor color) Parameters Type Name Description ConsoleColor color .NET's ConsoleColor to translate this color to Returns Type Description ConsoleColors X11's representation of this color, ConsoleColors"
  },
  "api/Terminaux.Colors.Models.Conversion.HslConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.HslConversionTools.html",
    "title": "Class HslConversionTools | Terminaux API - Aptivi",
    "keywords": "Class HslConversionTools Color model conversion tools (to HSL) Inheritance object HslConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class HslConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to HSL Declaration public static HueSaturationLightness ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to HSL Declaration public static HueSaturationLightness ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to HSL Declaration public static HueSaturationLightness ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to HSL Declaration public static HueSaturationLightness ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to HSL Declaration public static HueSaturationLightness ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to HSL Declaration public static HueSaturationLightness ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to HSL Declaration public static HueSaturationLightness ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description HueSaturationLightness Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.HsvConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.HsvConversionTools.html",
    "title": "Class HsvConversionTools | Terminaux API - Aptivi",
    "keywords": "Class HsvConversionTools Color model conversion tools (to HSV) Inheritance object HsvConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class HsvConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to HSV Declaration public static HueSaturationValue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to HSV Declaration public static HueSaturationValue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to HSV Declaration public static HueSaturationValue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to HSV Declaration public static HueSaturationValue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to HSV Declaration public static HueSaturationValue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to HSV Declaration public static HueSaturationValue ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to HSV Declaration public static HueSaturationValue ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description HueSaturationValue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.RgbConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.RgbConversionTools.html",
    "title": "Class RgbConversionTools | Terminaux API - Aptivi",
    "keywords": "Class RgbConversionTools Color model conversion tools (to RGB) Inheritance object RgbConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class RgbConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to RGB Declaration public static RedGreenBlue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to RGB Declaration public static RedGreenBlue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to RGB Declaration public static RedGreenBlue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to RGB Declaration public static RedGreenBlue ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to RGB Declaration public static RedGreenBlue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to RGB Declaration public static RedGreenBlue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to RGB Declaration public static RedGreenBlue ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.RybConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.RybConversionTools.html",
    "title": "Class RybConversionTools | Terminaux API - Aptivi",
    "keywords": "Class RybConversionTools Color model conversion tools (to RYB) Inheritance object RybConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class RybConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to RYB Declaration public static RedYellowBlue ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to RYB Declaration public static RedYellowBlue ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to RYB Declaration public static RedYellowBlue ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to RYB Declaration public static RedYellowBlue ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to RYB Declaration public static RedYellowBlue ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to RYB Declaration public static RedYellowBlue ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to RYB Declaration public static RedYellowBlue ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description RedYellowBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.YiqConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.YiqConversionTools.html",
    "title": "Class YiqConversionTools | Terminaux API - Aptivi",
    "keywords": "Class YiqConversionTools Color model conversion tools (to YIQ) Inheritance object YiqConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class YiqConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaChromaUv) Converts the YUV color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(LumaChromaUv yuv) Parameters Type Name Description LumaChromaUv yuv Instance of YUV Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to YIQ Declaration public static LumaInPhaseQuadrature ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description LumaInPhaseQuadrature Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.YuvConversionTools.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.YuvConversionTools.html",
    "title": "Class YuvConversionTools | Terminaux API - Aptivi",
    "keywords": "Class YuvConversionTools Color model conversion tools (to YUV) Inheritance object YuvConversionTools Namespace: Terminaux.Colors.Models.Conversion Assembly: Terminaux.dll Syntax public static class YuvConversionTools Methods | Edit this page View Source ConvertFrom(CyanMagentaYellow) Converts the CMY color model to YUV Declaration public static LumaChromaUv ConvertFrom(CyanMagentaYellow cmy) Parameters Type Name Description CyanMagentaYellow cmy Instance of CMY Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(CyanMagentaYellowKey) Converts the CMYK color model to YUV Declaration public static LumaChromaUv ConvertFrom(CyanMagentaYellowKey cmyk) Parameters Type Name Description CyanMagentaYellowKey cmyk Instance of CMYK Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationLightness) Converts the HSL color model to YUV Declaration public static LumaChromaUv ConvertFrom(HueSaturationLightness hsl) Parameters Type Name Description HueSaturationLightness hsl Instance of HSL Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(HueSaturationValue) Converts the HSV color model to YUV Declaration public static LumaChromaUv ConvertFrom(HueSaturationValue hsv) Parameters Type Name Description HueSaturationValue hsv Instance of HSV Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(LumaInPhaseQuadrature) Converts the YIQ color model to YUV Declaration public static LumaChromaUv ConvertFrom(LumaInPhaseQuadrature yiq) Parameters Type Name Description LumaInPhaseQuadrature yiq Instance of YIQ Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedGreenBlue) Converts the RGB color model to YUV Declaration public static LumaChromaUv ConvertFrom(RedGreenBlue rgb) Parameters Type Name Description RedGreenBlue rgb Instance of RGB Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ConvertFrom(RedYellowBlue) Converts the RYB color model to YUV Declaration public static LumaChromaUv ConvertFrom(RedYellowBlue ryb) Parameters Type Name Description RedYellowBlue ryb Instance of RYB Returns Type Description LumaChromaUv Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Conversion.html": {
    "href": "api/Terminaux.Colors.Models.Conversion.html",
    "title": "Namespace Terminaux.Colors.Models.Conversion | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models.Conversion Classes CmyConversionTools Color model conversion tools (to CMY) CmykConversionTools Color model conversion tools (to CMYK) ConversionTools Color conversion tools HslConversionTools Color model conversion tools (to HSL) HsvConversionTools Color model conversion tools (to HSV) RgbConversionTools Color model conversion tools (to RGB) RybConversionTools Color model conversion tools (to RYB) YiqConversionTools Color model conversion tools (to YIQ) YuvConversionTools Color model conversion tools (to YUV)"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellow.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellow.html",
    "title": "Class CyanMagentaYellow | Terminaux API - Aptivi",
    "keywords": "Class CyanMagentaYellow The CMY class instance Inheritance object CyanMagentaYellow Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellow Properties | Edit this page View Source C The cyan color value [0.0 -> 1.0] Declaration public double C { get; } Property Value Type Description double | Edit this page View Source CWhole The cyan color value [0 -> 100] Declaration public int CWhole { get; } Property Value Type Description int | Edit this page View Source M The magenta color value [0.0 -> 1.0] Declaration public double M { get; } Property Value Type Description double | Edit this page View Source MWhole The magenta color value [0 -> 100] Declaration public int MWhole { get; } Property Value Type Description int | Edit this page View Source Y The yellow color value [0.0 -> 1.0] Declaration public double Y { get; } Property Value Type Description double | Edit this page View Source YWhole The yellow color value [0 -> 100] Declaration public int YWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellow) Declaration public bool Equals(CyanMagentaYellow other) Parameters Type Name Description CyanMagentaYellow other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() cmy:<C>;<M>;<Y> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator ==(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellow, CyanMagentaYellow) Declaration public static bool operator !=(CyanMagentaYellow left, CyanMagentaYellow right) Parameters Type Name Description CyanMagentaYellow left CyanMagentaYellow right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html": {
    "href": "api/Terminaux.Colors.Models.CyanMagentaYellowKey.html",
    "title": "Class CyanMagentaYellowKey | Terminaux API - Aptivi",
    "keywords": "Class CyanMagentaYellowKey The CMYK class instance Inheritance object CyanMagentaYellowKey Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class CyanMagentaYellowKey Properties | Edit this page View Source CMY The Cyan, Magenta, and Yellow color values Declaration public CyanMagentaYellow CMY { get; } Property Value Type Description CyanMagentaYellow | Edit this page View Source K The black key color value [0.0 -> 1.0] Declaration public double K { get; } Property Value Type Description double | Edit this page View Source KWhole The black key color value [0 -> 100] Declaration public int KWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(CyanMagentaYellowKey) Declaration public bool Equals(CyanMagentaYellowKey other) Parameters Type Name Description CyanMagentaYellowKey other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() cmyk:<C>;<M>;<Y>;<K> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator ==(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool | Edit this page View Source operator !=(CyanMagentaYellowKey, CyanMagentaYellowKey) Declaration public static bool operator !=(CyanMagentaYellowKey left, CyanMagentaYellowKey right) Parameters Type Name Description CyanMagentaYellowKey left CyanMagentaYellowKey right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationLightness.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationLightness.html",
    "title": "Class HueSaturationLightness | Terminaux API - Aptivi",
    "keywords": "Class HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model Inheritance object HueSaturationLightness Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationLightness Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source Lightness The lightness of the color, indicating how light the color is [0.0 -> 1.0] Declaration public double Lightness { get; } Property Value Type Description double | Edit this page View Source LightnessWhole The lightness of the color, indicating how light the color is [0 -> 100] Declaration public int LightnessWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationLightness) Declaration public bool Equals(HueSaturationLightness other) Parameters Type Name Description HueSaturationLightness other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() hsl:<H>;<S>;<L> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator ==(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationLightness, HueSaturationLightness) Declaration public static bool operator !=(HueSaturationLightness left, HueSaturationLightness right) Parameters Type Name Description HueSaturationLightness left HueSaturationLightness right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.HueSaturationValue.html": {
    "href": "api/Terminaux.Colors.Models.HueSaturationValue.html",
    "title": "Class HueSaturationValue | Terminaux API - Aptivi",
    "keywords": "Class HueSaturationValue The Hue, Saturation, and Value (HSV) model Inheritance object HueSaturationValue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class HueSaturationValue Properties | Edit this page View Source Hue The position on the color wheel, known as the Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double Hue { get; } Property Value Type Description double | Edit this page View Source HueWhole The position on the color wheel, known as the Hue [0 -> 360] Declaration public int HueWhole { get; } Property Value Type Description int | Edit this page View Source ReverseHue The reverse hue position on the color wheel, known as the Reverse Hue [0.0 -> 1.0, 0.5 being 180 degrees] Declaration public double ReverseHue { get; } Property Value Type Description double | Edit this page View Source ReverseHueWhole The reverse hue position on the color wheel, known as the Reverse Hue [0 -> 360] Declaration public double ReverseHueWhole { get; } Property Value Type Description double | Edit this page View Source Saturation The saturation of the color, indicating how intense the color is [0.0 -> 1.0] Declaration public double Saturation { get; } Property Value Type Description double | Edit this page View Source SaturationWhole The saturation of the color, indicating how intense the color is [0 -> 100] Declaration public int SaturationWhole { get; } Property Value Type Description int | Edit this page View Source Value The value of the color [0.0 -> 1.0] Declaration public double Value { get; } Property Value Type Description double | Edit this page View Source ValueWhole The value of the color [0 -> 100] Declaration public int ValueWhole { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(HueSaturationValue) Declaration public bool Equals(HueSaturationValue other) Parameters Type Name Description HueSaturationValue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() hsv:<H>;<S>;<V> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(HueSaturationValue, HueSaturationValue) Declaration public static bool operator ==(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool | Edit this page View Source operator !=(HueSaturationValue, HueSaturationValue) Declaration public static bool operator !=(HueSaturationValue left, HueSaturationValue right) Parameters Type Name Description HueSaturationValue left HueSaturationValue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.LumaChromaUv.html": {
    "href": "api/Terminaux.Colors.Models.LumaChromaUv.html",
    "title": "Class LumaChromaUv | Terminaux API - Aptivi",
    "keywords": "Class LumaChromaUv The Luma chroma (YUV, PAL, SDTV with BT.470) model Inheritance object LumaChromaUv Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class LumaChromaUv Properties | Edit this page View Source ChromaU The U component, known as chroma [0 -> 255] Declaration public int ChromaU { get; } Property Value Type Description int | Edit this page View Source ChromaUNormalized The U component, known as chrominance information [-0.5019 -> 0.5019] Declaration public double ChromaUNormalized { get; } Property Value Type Description double | Edit this page View Source ChromaV The V component, known as chroma [0 -> 255] Declaration public int ChromaV { get; } Property Value Type Description int | Edit this page View Source ChromaVNormalized The V component, known as chrominance information [-0.5019 -> 0.5019] Declaration public double ChromaVNormalized { get; } Property Value Type Description double | Edit this page View Source Luma The Y component, known as luma information [0 -> 255] Declaration public int Luma { get; } Property Value Type Description int | Edit this page View Source LumaNormalized The Y component, known as luma information [0.0 -> 1.0] Declaration public double LumaNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(LumaChromaUv) Declaration public bool Equals(LumaChromaUv other) Parameters Type Name Description LumaChromaUv other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() yuv:<Y>;<I>;<Q> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(LumaChromaUv, LumaChromaUv) Declaration public static bool operator ==(LumaChromaUv left, LumaChromaUv right) Parameters Type Name Description LumaChromaUv left LumaChromaUv right Returns Type Description bool | Edit this page View Source operator !=(LumaChromaUv, LumaChromaUv) Declaration public static bool operator !=(LumaChromaUv left, LumaChromaUv right) Parameters Type Name Description LumaChromaUv left LumaChromaUv right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.LumaInPhaseQuadrature.html": {
    "href": "api/Terminaux.Colors.Models.LumaInPhaseQuadrature.html",
    "title": "Class LumaInPhaseQuadrature | Terminaux API - Aptivi",
    "keywords": "Class LumaInPhaseQuadrature The Luma, In-phase, and Quadrature (YIQ, NTSC 1953) model Inheritance object LumaInPhaseQuadrature Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class LumaInPhaseQuadrature Properties | Edit this page View Source InPhase The I component, known as chrominance information [0 -> 255] Declaration public int InPhase { get; } Property Value Type Description int | Edit this page View Source InPhaseNormalized The I component, known as chrominance information [-0.5957 -> 0.5957] Declaration public double InPhaseNormalized { get; } Property Value Type Description double | Edit this page View Source Luma The Y component, known as luma information [0 -> 255] Declaration public int Luma { get; } Property Value Type Description int | Edit this page View Source LumaNormalized The Y component, known as luma information [0.0 -> 1.0] Declaration public double LumaNormalized { get; } Property Value Type Description double | Edit this page View Source Quadrature The Q component, known as chrominance information [0 -> 255] Declaration public int Quadrature { get; } Property Value Type Description int | Edit this page View Source QuadratureNormalized The Q component, known as chrominance information [-0.5226 -> 0.5226] Declaration public double QuadratureNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(LumaInPhaseQuadrature) Declaration public bool Equals(LumaInPhaseQuadrature other) Parameters Type Name Description LumaInPhaseQuadrature other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() yiq:<Y>;<I>;<Q> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(LumaInPhaseQuadrature, LumaInPhaseQuadrature) Declaration public static bool operator ==(LumaInPhaseQuadrature left, LumaInPhaseQuadrature right) Parameters Type Name Description LumaInPhaseQuadrature left LumaInPhaseQuadrature right Returns Type Description bool | Edit this page View Source operator !=(LumaInPhaseQuadrature, LumaInPhaseQuadrature) Declaration public static bool operator !=(LumaInPhaseQuadrature left, LumaInPhaseQuadrature right) Parameters Type Name Description LumaInPhaseQuadrature left LumaInPhaseQuadrature right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.Parsing.CmyParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.CmyParsingTools.html",
    "title": "Class CmyParsingTools | Terminaux API - Aptivi",
    "keywords": "Class CmyParsingTools Tools to parse CMY specifiers Inheritance object CmyParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class CmyParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid CMY specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid CMY specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid CMY specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid CMY specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of CyanMagentaYellow Declaration public static CyanMagentaYellow ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of CMY Returns Type Description CyanMagentaYellow An instance of CyanMagentaYellow Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of CyanMagentaYellow converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of CMY ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.CmykParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.CmykParsingTools.html",
    "title": "Class CmykParsingTools | Terminaux API - Aptivi",
    "keywords": "Class CmykParsingTools Tools to parse CMYK specifiers Inheritance object CmykParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class CmykParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid CMYK specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid CMYK specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid CMYK specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid CMYK specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of CyanMagentaYellowKey Declaration public static CyanMagentaYellowKey ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of CMYK Returns Type Description CyanMagentaYellowKey An instance of CyanMagentaYellowKey Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of CyanMagentaYellowKey converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of CMYK ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.HslParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.HslParsingTools.html",
    "title": "Class HslParsingTools | Terminaux API - Aptivi",
    "keywords": "Class HslParsingTools Tools to parse HSL specifiers Inheritance object HslParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class HslParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid HSL specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid HSL specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid HSL specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid HSL specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of HueSaturationLightness Declaration public static HueSaturationLightness ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of HSL Returns Type Description HueSaturationLightness An instance of HueSaturationLightness Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of HueSaturationLightness converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of HSL ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.HsvParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.HsvParsingTools.html",
    "title": "Class HsvParsingTools | Terminaux API - Aptivi",
    "keywords": "Class HsvParsingTools Tools to parse HSV specifiers Inheritance object HsvParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class HsvParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid HSV specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid HSV specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid HSV specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid HSV specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of HueSaturationValue Declaration public static HueSaturationValue ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of HSV Returns Type Description HueSaturationValue An instance of HueSaturationValue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of HueSaturationValue converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of HSV ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.ParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.ParsingTools.html",
    "title": "Class ParsingTools | Terminaux API - Aptivi",
    "keywords": "Class ParsingTools Tools to parse RGB specifiers for general use Inheritance object ParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class ParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid model-agnostic specifier and contain valid values? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid model-agnostic specifier and contains valid values Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierAndValueValidRgbHash(string) Does the string specifier represent a valid RGB hash (#RGB or #RRGGBB) as in HTML? Declaration public static bool IsSpecifierAndValueValidRgbHash(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB hash (#RGB or #RRGGBB) as in HTML Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierConsoleColors(string) Does the string specifier represent either a color name taken from ConsoleColors or a color number from 0 to 255? Declaration public static bool IsSpecifierConsoleColors(string specifier) Parameters Type Name Description string specifier Specifier that represents either a color name taken from ConsoleColors or a color number from 0 to 255 Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string) Does the string specifier represent a valid model-agnostic specifier? Declaration public static bool IsSpecifierValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid model-agnostic specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValidRgbHash(string) Does the string specifier represent a valid RGB hash (#RGB or #RRGGBB) as in HTML? Declaration public static bool IsSpecifierValidRgbHash(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB hash (#RGB or #RRGGBB) as in HTML Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string, ColorSettings) Parses the specifier and returns an instance of RedGreenBlue Declaration public static (RedGreenBlue rgb, ConsoleColorsInfo cci) ParseSpecifier(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description (RedGreenBlue rgb, ConsoleColorsInfo cci) An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierRgbHash(string, ColorSettings) Parses the hex representation of RGB and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierRgbHash(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB in hex representation ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierRgbName(string, ColorSettings) Parses the specifier that holds the color name and returns an instance of RedGreenBlue Declaration public static (RedGreenBlue rgb, ConsoleColorsInfo cci) ParseSpecifierRgbName(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Color name defined in ConsoleColors ColorSettings settings Settings to use. Use null for global settings Returns Type Description (RedGreenBlue rgb, ConsoleColorsInfo cci) An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifier(string, out (RedGreenBlue rgb, ConsoleColorsInfo cci)) Parses the specifier and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifier(string specifier, out (RedGreenBlue rgb, ConsoleColorsInfo cci) output) Parameters Type Name Description string specifier Specifier of RGB (RedGreenBlue rgb, ConsoleColorsInfo cci) output Output for both the RGB component and the color info for 256- and 16-color modes Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifierRgbHash(string, out RedGreenBlue) Parses the hex representation of RGB and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifierRgbHash(string specifier, out RedGreenBlue output) Parameters Type Name Description string specifier Specifier of RGB in hex representation RedGreenBlue output Output for the RGB component Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException | Edit this page View Source TryParseSpecifierRgbName(string, out (RedGreenBlue rgb, ConsoleColorsInfo cci)) Parses the specifier that holds the color name and returns an instance of RedGreenBlue Declaration public static bool TryParseSpecifierRgbName(string specifier, out (RedGreenBlue rgb, ConsoleColorsInfo cci) output) Parameters Type Name Description string specifier Color name defined in ConsoleColors (RedGreenBlue rgb, ConsoleColorsInfo cci) output Output for both the RGB component and the color info for 256- and 16-color modes Returns Type Description bool An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.RgbParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.RgbParsingTools.html",
    "title": "Class RgbParsingTools | Terminaux API - Aptivi",
    "keywords": "Class RgbParsingTools Tools to parse RGB specifiers Inheritance object RgbParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class RgbParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid RGB specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RGB specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid RGB specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid RGB specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.RybParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.RybParsingTools.html",
    "title": "Class RybParsingTools | Terminaux API - Aptivi",
    "keywords": "Class RybParsingTools Tools to parse RYB specifiers Inheritance object RybParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class RybParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid RYB specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid RYB specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid RYB specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid RYB specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of RedYellowBlue Declaration public static RedYellowBlue ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of RYB Returns Type Description RedYellowBlue An instance of RedYellowBlue Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of RedYellowBlue converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.YiqParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.YiqParsingTools.html",
    "title": "Class YiqParsingTools | Terminaux API - Aptivi",
    "keywords": "Class YiqParsingTools Tools to parse YIQ specifiers Inheritance object YiqParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class YiqParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid YIQ specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid YIQ specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid YIQ specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid YIQ specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of LumaInPhaseQuadrature Declaration public static LumaInPhaseQuadrature ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of YIQ Returns Type Description LumaInPhaseQuadrature An instance of LumaInPhaseQuadrature Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of LumaInPhaseQuadrature converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.YuvParsingTools.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.YuvParsingTools.html",
    "title": "Class YuvParsingTools | Terminaux API - Aptivi",
    "keywords": "Class YuvParsingTools Tools to parse YUV specifiers Inheritance object YuvParsingTools Namespace: Terminaux.Colors.Models.Parsing Assembly: Terminaux.dll Syntax public static class YuvParsingTools Methods | Edit this page View Source IsSpecifierAndValueValid(string) Does the string specifier represent a valid YUV specifier? Declaration public static bool IsSpecifierAndValueValid(string specifier) Parameters Type Name Description string specifier Specifier that represents a valid YUV specifier Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source IsSpecifierValid(string, bool) Does the string specifier represent a valid YUV specifier? Declaration public static bool IsSpecifierValid(string specifier, bool checkParts = false) Parameters Type Name Description string specifier Specifier that represents a valid YUV specifier bool checkParts Whether to check the parts count or not Returns Type Description bool True if the specifier is valid; false otherwise. | Edit this page View Source ParseSpecifier(string) Parses the specifier and returns an instance of LumaChromaUv Declaration public static LumaChromaUv ParseSpecifier(string specifier) Parameters Type Name Description string specifier Specifier of YUV Returns Type Description LumaChromaUv An instance of LumaChromaUv Exceptions Type Condition TerminauxException | Edit this page View Source ParseSpecifierToRgb(string, ColorSettings) Parses the specifier and returns an instance of LumaChromaUv converted to RedGreenBlue Declaration public static RedGreenBlue ParseSpecifierToRgb(string specifier, ColorSettings settings = null) Parameters Type Name Description string specifier Specifier of RGB ColorSettings settings Settings to use. Use null for global settings Returns Type Description RedGreenBlue An instance of RedGreenBlue Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Models.Parsing.html": {
    "href": "api/Terminaux.Colors.Models.Parsing.html",
    "title": "Namespace Terminaux.Colors.Models.Parsing | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models.Parsing Classes CmyParsingTools Tools to parse CMY specifiers CmykParsingTools Tools to parse CMYK specifiers HslParsingTools Tools to parse HSL specifiers HsvParsingTools Tools to parse HSV specifiers ParsingTools Tools to parse RGB specifiers for general use RgbParsingTools Tools to parse RGB specifiers RybParsingTools Tools to parse RYB specifiers YiqParsingTools Tools to parse YIQ specifiers YuvParsingTools Tools to parse YUV specifiers"
  },
  "api/Terminaux.Colors.Models.RedGreenBlue.html": {
    "href": "api/Terminaux.Colors.Models.RedGreenBlue.html",
    "title": "Class RedGreenBlue | Terminaux API - Aptivi",
    "keywords": "Class RedGreenBlue The RGB class instance Inheritance object RedGreenBlue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class RedGreenBlue Properties | Edit this page View Source A The alpha value indicating transparency applied to the OriginalRgb value. Declaration public int A { get; } Property Value Type Description int | Edit this page View Source B The blue color value [0 -> 255] Declaration public int B { get; } Property Value Type Description int | Edit this page View Source BNormalized The blue color value [0.0 -> 0.1] Declaration public double BNormalized { get; } Property Value Type Description double | Edit this page View Source G The green color value [0 -> 255] Declaration public int G { get; } Property Value Type Description int | Edit this page View Source GNormalized The green color value [0.0 -> 0.1] Declaration public double GNormalized { get; } Property Value Type Description double | Edit this page View Source OriginalRgb The original RGB values (always opaque) Declaration public RedGreenBlue OriginalRgb { get; } Property Value Type Description RedGreenBlue | Edit this page View Source R The red color value [0 -> 255] Declaration public int R { get; } Property Value Type Description int | Edit this page View Source RNormalized The red color value [0.0 -> 0.1] Declaration public double RNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(RedGreenBlue) Declaration public bool Equals(RedGreenBlue other) Parameters Type Name Description RedGreenBlue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() <R>;<G>;<B> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(RedGreenBlue, RedGreenBlue) Declaration public static bool operator ==(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool | Edit this page View Source operator !=(RedGreenBlue, RedGreenBlue) Declaration public static bool operator !=(RedGreenBlue left, RedGreenBlue right) Parameters Type Name Description RedGreenBlue left RedGreenBlue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.RedYellowBlue.html": {
    "href": "api/Terminaux.Colors.Models.RedYellowBlue.html",
    "title": "Class RedYellowBlue | Terminaux API - Aptivi",
    "keywords": "Class RedYellowBlue The RYB class instance Inheritance object RedYellowBlue Namespace: Terminaux.Colors.Models Assembly: Terminaux.dll Syntax public class RedYellowBlue Properties | Edit this page View Source B The blue color value [0 -> 255] Declaration public int B { get; } Property Value Type Description int | Edit this page View Source BNormalized The blue color value [0.0 -> 0.1] Declaration public double BNormalized { get; } Property Value Type Description double | Edit this page View Source R The red color value [0 -> 255] Declaration public int R { get; } Property Value Type Description int | Edit this page View Source RNormalized The red color value [0.0 -> 0.1] Declaration public double RNormalized { get; } Property Value Type Description double | Edit this page View Source Y The yellow color value [0 -> 255] Declaration public int Y { get; } Property Value Type Description int | Edit this page View Source YNormalized The yellow color value [0.0 -> 0.1] Declaration public double YNormalized { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(RedYellowBlue) Declaration public bool Equals(RedYellowBlue other) Parameters Type Name Description RedYellowBlue other Returns Type Description bool | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source ToString() ryb:<R>;<Y>;<B> Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(RedYellowBlue, RedYellowBlue) Declaration public static bool operator ==(RedYellowBlue left, RedYellowBlue right) Parameters Type Name Description RedYellowBlue left RedYellowBlue right Returns Type Description bool | Edit this page View Source operator !=(RedYellowBlue, RedYellowBlue) Declaration public static bool operator !=(RedYellowBlue left, RedYellowBlue right) Parameters Type Name Description RedYellowBlue left RedYellowBlue right Returns Type Description bool"
  },
  "api/Terminaux.Colors.Models.html": {
    "href": "api/Terminaux.Colors.Models.html",
    "title": "Namespace Terminaux.Colors.Models | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Models Classes CyanMagentaYellow The CMY class instance CyanMagentaYellowKey The CMYK class instance HueSaturationLightness The Hue, Saturation, and Lightness (HSL) model HueSaturationValue The Hue, Saturation, and Value (HSV) model LumaChromaUv The Luma chroma (YUV, PAL, SDTV with BT.470) model LumaInPhaseQuadrature The Luma, In-phase, and Quadrature (YIQ, NTSC 1953) model RedGreenBlue The RGB class instance RedYellowBlue The RYB class instance"
  },
  "api/Terminaux.Colors.Templates.PredefinedComponentType.html": {
    "href": "api/Terminaux.Colors.Templates.PredefinedComponentType.html",
    "title": "Enum PredefinedComponentType | Terminaux API - Aptivi",
    "keywords": "Enum PredefinedComponentType Specifies all the predefined component types required in all the templates Namespace: Terminaux.Colors.Templates Assembly: Terminaux.dll Syntax public enum PredefinedComponentType Fields Name Description Text Neutral text color"
  },
  "api/Terminaux.Colors.Templates.TemplateInfo.html": {
    "href": "api/Terminaux.Colors.Templates.TemplateInfo.html",
    "title": "Class TemplateInfo | Terminaux API - Aptivi",
    "keywords": "Class TemplateInfo Template information containing colors set to each component of the template Inheritance object TemplateInfo Namespace: Terminaux.Colors.Templates Assembly: Terminaux.dll Syntax public class TemplateInfo Properties | Edit this page View Source Components Template name Declaration [JsonIgnore] public ReadOnlyDictionary<string, Color> Components { get; } Property Value Type Description ReadOnlyDictionary<string, Color> | Edit this page View Source Name Template name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string"
  },
  "api/Terminaux.Colors.Templates.TemplateTools.html": {
    "href": "api/Terminaux.Colors.Templates.TemplateTools.html",
    "title": "Class TemplateTools | Terminaux API - Aptivi",
    "keywords": "Class TemplateTools Template tools class to manage templates Inheritance object TemplateTools Namespace: Terminaux.Colors.Templates Assembly: Terminaux.dll Syntax public static class TemplateTools Properties | Edit this page View Source TemplateNames All installed template names Declaration public static string[] TemplateNames { get; } Property Value Type Description string[] | Edit this page View Source Templates All installed templates Declaration public static TemplateInfo[] Templates { get; } Property Value Type Description TemplateInfo[] Methods | Edit this page View Source Exists(string) Checks to see if a template exists or not Declaration public static bool Exists(string template) Parameters Type Name Description string template A specific template to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source ExistsBuiltin(string) Checks to see if a template is a built-in or not Declaration public static bool ExistsBuiltin(string template) Parameters Type Name Description string template A specific template to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source GetColor(string) Gets the default template Declaration public static Color GetColor(string componentName) Parameters Type Name Description string componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetColor(string, string) Gets the template Declaration public static Color GetColor(string template, string componentName) Parameters Type Name Description string template Template name string componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetColor(string, PredefinedComponentType) Gets the template Declaration public static Color GetColor(string template, PredefinedComponentType componentName) Parameters Type Name Description string template Template name PredefinedComponentType componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetColor(PredefinedComponentType) Gets the default template Declaration public static Color GetColor(PredefinedComponentType componentName) Parameters Type Name Description PredefinedComponentType componentName Component name Returns Type Description Color Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplate() Gets the default template Declaration public static TemplateInfo GetTemplate() Returns Type Description TemplateInfo Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplate(string) Gets the template Declaration public static TemplateInfo GetTemplate(string template) Parameters Type Name Description string template Template name Returns Type Description TemplateInfo Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplateFromJson(string) Gets a template from its JSON representation Declaration public static TemplateInfo GetTemplateFromJson(string json) Parameters Type Name Description string json Template JSON contents Returns Type Description TemplateInfo A template info containing JSON representation Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplateToJson() Gets a JSON representation of the template Declaration public static string GetTemplateToJson() Returns Type Description string A string containing the JSON representation of a template Exceptions Type Condition TerminauxException | Edit this page View Source GetTemplateToJson(string) Gets a JSON representation of the template Declaration public static string GetTemplateToJson(string template) Parameters Type Name Description string template Template name to save to JSON Returns Type Description string A string containing the JSON representation of a template Exceptions Type Condition TerminauxException | Edit this page View Source RegisterTemplate(TemplateInfo) Registers a template Declaration public static void RegisterTemplate(TemplateInfo template) Parameters Type Name Description TemplateInfo template Template information | Edit this page View Source ResetDefaultTemplate() Resets the default template Declaration public static void ResetDefaultTemplate() Exceptions Type Condition TerminauxException | Edit this page View Source SetDefaultTemplate(string) Sets the default template Declaration public static void SetDefaultTemplate(string template) Parameters Type Name Description string template Template name to set the default template to Exceptions Type Condition TerminauxException | Edit this page View Source UnregisterTemplate(string) Unregisters a template Declaration public static void UnregisterTemplate(string template) Parameters Type Name Description string template Template information"
  },
  "api/Terminaux.Colors.Templates.html": {
    "href": "api/Terminaux.Colors.Templates.html",
    "title": "Namespace Terminaux.Colors.Templates | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Templates Classes TemplateInfo Template information containing colors set to each component of the template TemplateTools Template tools class to manage templates Enums PredefinedComponentType Specifies all the predefined component types required in all the templates"
  },
  "api/Terminaux.Colors.Transformation.Contrast.ColorBrightness.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.ColorBrightness.html",
    "title": "Enum ColorBrightness | Terminaux API - Aptivi",
    "keywords": "Enum ColorBrightness Color brightness enumeration Namespace: Terminaux.Colors.Transformation.Contrast Assembly: Terminaux.dll Syntax public enum ColorBrightness Fields Name Description Dark Dark color Light Light color"
  },
  "api/Terminaux.Colors.Transformation.Contrast.ColorContrast.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.ColorContrast.html",
    "title": "Class ColorContrast | Terminaux API - Aptivi",
    "keywords": "Class ColorContrast Color contrast tools Inheritance object ColorContrast Namespace: Terminaux.Colors.Transformation.Contrast Assembly: Terminaux.dll Syntax public static class ColorContrast Methods | Edit this page View Source GetContrastColorHalf(Color) Gets the color contrast appropriate for the specified color using the half white integer Declaration public static Color GetContrastColorHalf(this Color color) Parameters Type Name Description Color color Target color to work on Returns Type Description Color Black if the color is greater than half white; otherwise, false. | Edit this page View Source GetContrastColorNtsc(Color) Gets the color contrast appropriate for the specified color using the luma part of the YIQ color space (NTSC 1953) Declaration public static Color GetContrastColorNtsc(this Color color) Parameters Type Name Description Color color Target color to work on Returns Type Description Color Black if the luma info is less than or equal to 128, or white if greater than 128 | Edit this page View Source IsSeeable(ColorType, int, int, int, int) Checks to see if the specified color is considered seeable Declaration public static bool IsSeeable(ColorType type, int colorLevel, int colorR, int colorG, int colorB) Parameters Type Name Description ColorType type The color type to use int colorLevel The color level that is in the range of 0-255 int colorR The red color level int colorG The green color level int colorB The blue color level Returns Type Description bool True if the specified color is considered \"seeable.\" False otherwise. Exceptions Type Condition TerminauxException"
  },
  "api/Terminaux.Colors.Transformation.Contrast.ColorContrastType.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.ColorContrastType.html",
    "title": "Enum ColorContrastType | Terminaux API - Aptivi",
    "keywords": "Enum ColorContrastType The color contrast type Namespace: Terminaux.Colors.Transformation.Contrast Assembly: Terminaux.dll Syntax public enum ColorContrastType Fields Name Description Half Uses the half-white contrast method to determine the color contrast used for mixing (black or white) Light Uses the light vs. dark contrast method to determine the color contrast used for mixing (black or white) Ntsc Uses the NTSC contrast method (see LumaInPhaseQuadrature for more info) to determine the color contrast used for mixing (black or white)"
  },
  "api/Terminaux.Colors.Transformation.Contrast.html": {
    "href": "api/Terminaux.Colors.Transformation.Contrast.html",
    "title": "Namespace Terminaux.Colors.Transformation.Contrast | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Transformation.Contrast Classes ColorContrast Color contrast tools Enums ColorBrightness Color brightness enumeration ColorContrastType The color contrast type"
  },
  "api/Terminaux.Colors.Transformation.TransformationFormula.html": {
    "href": "api/Terminaux.Colors.Transformation.TransformationFormula.html",
    "title": "Enum TransformationFormula | Terminaux API - Aptivi",
    "keywords": "Enum TransformationFormula Color transformation formula Namespace: Terminaux.Colors.Transformation Assembly: Terminaux.dll Syntax public enum TransformationFormula Fields Name Description BlueScale Blue tinted monochromacy Deutan Red/green color blindness. It makes green look more red GreenScale Green tinted monochromacy Inverse Inverse colors Monochromacy Full color blindness, can only see grayscale. Protan Red/green color blindness. It makes red look more green RedScale Red tinted monochromacy Tritan Blue/yellow color blindness."
  },
  "api/Terminaux.Colors.Transformation.TransformationMethod.html": {
    "href": "api/Terminaux.Colors.Transformation.TransformationMethod.html",
    "title": "Enum TransformationMethod | Terminaux API - Aptivi",
    "keywords": "Enum TransformationMethod Color transformation method Namespace: Terminaux.Colors.Transformation Assembly: Terminaux.dll Syntax public enum TransformationMethod Fields Name Description Brettel1997 Transform colors for color blindness using the Brettel algorithm (1997) Vienot1999 Transform colors for color blindness using the Vienot algorithm (1999)"
  },
  "api/Terminaux.Colors.Transformation.TransformationTools.html": {
    "href": "api/Terminaux.Colors.Transformation.TransformationTools.html",
    "title": "Class TransformationTools | Terminaux API - Aptivi",
    "keywords": "Class TransformationTools Color transformation tools Inheritance object TransformationTools Namespace: Terminaux.Colors.Transformation Assembly: Terminaux.dll Syntax public static class TransformationTools Methods | Edit this page View Source LinearRGBTosRGB(double) Converts from Linear RGB to sRGB using a linear RGB number Declaration public static int LinearRGBTosRGB(double linear) Parameters Type Name Description double linear Linear RGB number from 0 to 1 Returns Type Description int sRGB value from 0 to 255 | Edit this page View Source RenderColorBlindnessAware(Color, TransformationFormula, double, TransformationMethod) Provides you an easy way to generate new Color instances with color blindness applied Declaration public static Color RenderColorBlindnessAware(Color color, TransformationFormula formula, double severity, TransformationMethod method = TransformationMethod.Brettel1997) Parameters Type Name Description Color color Color to use TransformationFormula formula Selected formula for color blindness double severity Severity of the color blindness TransformationMethod method Choose color blindness calculation method Returns Type Description Color An instance of Color with adjusted color values for color-blindness | Edit this page View Source SRGBToLinearRGB(int) Converts from sRGB to Linear RGB using a color number Declaration public static double SRGBToLinearRGB(int colorNum) Parameters Type Name Description int colorNum Color number from 0 to 255 Returns Type Description double Linear RGB number ranging from 0 to 1"
  },
  "api/Terminaux.Colors.Transformation.html": {
    "href": "api/Terminaux.Colors.Transformation.html",
    "title": "Namespace Terminaux.Colors.Transformation | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors.Transformation Classes TransformationTools Color transformation tools Enums TransformationFormula Color transformation formula TransformationMethod Color transformation method"
  },
  "api/Terminaux.Colors.html": {
    "href": "api/Terminaux.Colors.html",
    "title": "Namespace Terminaux.Colors | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Colors Classes Color Color information class ColorSerializer Color serializer ColorSettings The color settings class ColorTools Color tools and management Enums ColorType Color type enumeration"
  },
  "api/Terminaux.Inputs.InputChoiceInfo.html": {
    "href": "api/Terminaux.Inputs.InputChoiceInfo.html",
    "title": "Class InputChoiceInfo | Terminaux API - Aptivi",
    "keywords": "Class InputChoiceInfo Choice information for input Inheritance object InputChoiceInfo Namespace: Terminaux.Inputs Assembly: Terminaux.dll Syntax public class InputChoiceInfo Constructors | Edit this page View Source InputChoiceInfo(string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title | Edit this page View Source InputChoiceInfo(string, string, string) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description | Edit this page View Source InputChoiceInfo(string, string, string, bool) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription, bool choiceDefault) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description bool choiceDefault Whether this choice is the default choice or not | Edit this page View Source InputChoiceInfo(string, string, string, bool, bool) Makes a new instance of choice information Declaration public InputChoiceInfo(string choiceName, string choiceTitle, string choiceDescription, bool choiceDefault, bool choiceDefaultSelected) Parameters Type Name Description string choiceName Choice name string choiceTitle Choice title string choiceDescription Choice description bool choiceDefault Whether this choice is the default choice or not bool choiceDefaultSelected Whether this choice is the selected choice by default Properties | Edit this page View Source ChoiceDefault Whether this choice is the default choice or not. If multiple choices in the same choice list have ChoiceDefault set to true, most of the tools will automatically select the first default, ignoring the rest. Declaration public bool ChoiceDefault { get; } Property Value Type Description bool | Edit this page View Source ChoiceDefaultSelected Whether this choice is the selected choice by default or not. Declaration public bool ChoiceDefaultSelected { get; } Property Value Type Description bool | Edit this page View Source ChoiceDescription Choice description Declaration public string ChoiceDescription { get; } Property Value Type Description string | Edit this page View Source ChoiceName Choice name Declaration public string ChoiceName { get; } Property Value Type Description string | Edit this page View Source ChoiceTitle Choice title Declaration public string ChoiceTitle { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.InputChoiceTools.html": {
    "href": "api/Terminaux.Inputs.InputChoiceTools.html",
    "title": "Class InputChoiceTools | Terminaux API - Aptivi",
    "keywords": "Class InputChoiceTools Input choice tools Inheritance object InputChoiceTools Namespace: Terminaux.Inputs Assembly: Terminaux.dll Syntax public static class InputChoiceTools Methods | Edit this page View Source GetInputChoices(string, string[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string AnswersStr, string[] AnswersTitles) Parameters Type Name Description string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List<InputChoiceInfo> | Edit this page View Source GetInputChoices(string[], string[]) Gets the input choices Declaration public static List<InputChoiceInfo> GetInputChoices(string[] Answers, string[] AnswersTitles) Parameters Type Name Description string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. Returns Type Description List<InputChoiceInfo>"
  },
  "api/Terminaux.Inputs.Interactive.BaseInteractiveTui-1.html": {
    "href": "api/Terminaux.Inputs.Interactive.BaseInteractiveTui-1.html",
    "title": "Class BaseInteractiveTui<T> | Terminaux API - Aptivi",
    "keywords": "Class BaseInteractiveTui<T> A base class for your interactive user interface for terminal apps Inheritance object BaseInteractiveTui<T> Implements IInteractiveTui<T> Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public class BaseInteractiveTui<T> : IInteractiveTui<T> Type Parameters Name Description T A base class for your interactive user interface for terminal apps Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration public virtual bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration public virtual List<InteractiveTuiBinding> Bindings { get; set; } Property Value Type Description List<InteractiveTuiBinding> | Edit this page View Source Instance The interactive TUI instance Declaration public static BaseInteractiveTui<T> Instance { get; } Property Value Type Description BaseInteractiveTui<T> | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration public virtual IEnumerable<T> PrimaryDataSource { get; } Property Value Type Description IEnumerable<T> | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration public virtual int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source Screen The screen instance for this interactive TUI Declaration public Screen Screen { get; } Property Value Type Description Screen | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration public virtual bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration public virtual IEnumerable<T> SecondaryDataSource { get; } Property Value Type Description IEnumerable<T> Methods | Edit this page View Source GetEntryFromItem(object) Gets an entry string from a specified item for listing Declaration public virtual string GetEntryFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(object) Gets the info from the item Declaration public virtual string GetInfoFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration public virtual void HandleExit() | Edit this page View Source LastOnOverflow() Goes up to the last element upon overflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration public virtual void LastOnOverflow() | Edit this page View Source RenderStatus(object) Renders the status Declaration public virtual void RenderStatus(object item) Parameters Type Name Description object item Target item Implements IInteractiveTui<T>"
  },
  "api/Terminaux.Inputs.Interactive.IInteractiveTui-1.html": {
    "href": "api/Terminaux.Inputs.Interactive.IInteractiveTui-1.html",
    "title": "Interface IInteractiveTui<T> | Terminaux API - Aptivi",
    "keywords": "Interface IInteractiveTui<T> An interface for your interactive user interface for terminal apps Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public interface IInteractiveTui<T> Type Parameters Name Description T An interface for your interactive user interface for terminal apps Properties | Edit this page View Source AcceptsEmptyData Whether empty data is accepted Declaration bool AcceptsEmptyData { get; } Property Value Type Description bool | Edit this page View Source Bindings All key bindings for your interactive user interface Declaration List<InteractiveTuiBinding> Bindings { get; set; } Property Value Type Description List<InteractiveTuiBinding> | Edit this page View Source PrimaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane one) Declaration IEnumerable<T> PrimaryDataSource { get; } Property Value Type Description IEnumerable<T> | Edit this page View Source RefreshInterval How many milliseconds to wait before refreshing? Only applies to single-pane interactive TUI instances. 0 to disable. Declaration int RefreshInterval { get; } Property Value Type Description int | Edit this page View Source SecondPaneInteractable Whether the user can switch to the second path Declaration bool SecondPaneInteractable { get; } Property Value Type Description bool | Edit this page View Source SecondaryDataSource An array, a dictionary, a list, or an enumerable that holds data (pane two) Declaration IEnumerable<T> SecondaryDataSource { get; } Property Value Type Description IEnumerable<T> Methods | Edit this page View Source GetEntryFromItem(object) Gets an entry string from a specified item for listing Declaration string GetEntryFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string | Edit this page View Source GetInfoFromItem(object) Gets the info from the item Declaration string GetInfoFromItem(object item) Parameters Type Name Description object item Target item Returns Type Description string The rendered info so that InteractiveTuiTools can handle its rendering | Edit this page View Source HandleExit() Handles exiting the interactive TUI Declaration void HandleExit() | Edit this page View Source LastOnOverflow() Goes up to the last element upon overflow (caused by remove operation, ...). This applies to the first and the second pane. Declaration void LastOnOverflow() | Edit this page View Source RenderStatus(object) Renders the status Declaration void RenderStatus(object item) Parameters Type Name Description object item Target item"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiBinding.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiBinding.html",
    "title": "Class InteractiveTuiBinding | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiBinding Interactive TUI binding information class Inheritance object InteractiveTuiBinding Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public class InteractiveTuiBinding Constructors | Edit this page View Source InteractiveTuiBinding(string, ConsoleKey, Action<object, int>) Makes a new instance of an interactive TUI key binding Declaration public InteractiveTuiBinding(string bindingName, ConsoleKey bindingKeyName, Action<object, int> bindingAction) Parameters Type Name Description string bindingName Key binding name ConsoleKey bindingKeyName Which key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data | Edit this page View Source InteractiveTuiBinding(string, ConsoleKey, ConsoleModifiers, Action<object, int>) Makes a new instance of an interactive TUI key binding Declaration public InteractiveTuiBinding(string bindingName, ConsoleKey bindingKeyName, ConsoleModifiers bindingKeyModifiers, Action<object, int> bindingAction) Parameters Type Name Description string bindingName Key binding name ConsoleKey bindingKeyName Which key is bound to the action? ConsoleModifiers bindingKeyModifiers Which modifiers of the key is bound to the action? Action<object, int> bindingAction The action to execute. The object argument denotes the currently selected item, and the integer argument denotes the currently selected data Properties | Edit this page View Source BindingAction The action to execute. The integer argument denotes the currently selected data Declaration public Action<object, int> BindingAction { get; } Property Value Type Description Action<object, int> | Edit this page View Source BindingKeyModifiers Which key is bound to the action? Declaration public ConsoleModifiers BindingKeyModifiers { get; } Property Value Type Description ConsoleModifiers | Edit this page View Source BindingKeyName Which key is bound to the action? Declaration public ConsoleKey BindingKeyName { get; } Property Value Type Description ConsoleKey | Edit this page View Source BindingName Key binding name Declaration public string BindingName { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiStatus.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiStatus.html",
    "title": "Class InteractiveTuiStatus | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiStatus Interactive TUI status Inheritance object InteractiveTuiStatus Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public static class InteractiveTuiStatus Properties | Edit this page View Source BackgroundColor Interactive TUI background color Declaration public static Color BackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source BoxBackgroundColor Interactive TUI box background color Declaration public static Color BoxBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source BoxForegroundColor Interactive TUI box foreground color Declaration public static Color BoxForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source CurrentPane Current pane Declaration public static int CurrentPane { get; set; } Property Value Type Description int | Edit this page View Source FirstPaneCurrentSelection Current selection for the first pane Declaration public static int FirstPaneCurrentSelection { get; set; } Property Value Type Description int | Edit this page View Source ForegroundColor Interactive TUI foreground color Declaration public static Color ForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source KeyBindingOptionColor Interactive TUI key binding in option color Declaration public static Color KeyBindingOptionColor { get; set; } Property Value Type Description Color | Edit this page View Source OptionBackgroundColor Interactive TUI option background color Declaration public static Color OptionBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source OptionForegroundColor Interactive TUI option foreground color Declaration public static Color OptionForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneBackgroundColor Interactive TUI pane background color Declaration public static Color PaneBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneItemBackColor Interactive TUI pane item color (background) Declaration public static Color PaneItemBackColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneItemForeColor Interactive TUI pane item color (foreground) Declaration public static Color PaneItemForeColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedItemBackColor Interactive TUI pane selected item color (background) Declaration public static Color PaneSelectedItemBackColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedItemForeColor Interactive TUI pane selected item color (foreground) Declaration public static Color PaneSelectedItemForeColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSelectedSeparatorColor Interactive TUI pane selected separator color Declaration public static Color PaneSelectedSeparatorColor { get; set; } Property Value Type Description Color | Edit this page View Source PaneSeparatorColor Interactive TUI pane separator color Declaration public static Color PaneSeparatorColor { get; set; } Property Value Type Description Color | Edit this page View Source SecondPaneCurrentSelection Current selection for the second pane Declaration public static int SecondPaneCurrentSelection { get; set; } Property Value Type Description int | Edit this page View Source Status Current status Declaration public static string Status { get; set; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.Interactive.InteractiveTuiTools.html": {
    "href": "api/Terminaux.Inputs.Interactive.InteractiveTuiTools.html",
    "title": "Class InteractiveTuiTools | Terminaux API - Aptivi",
    "keywords": "Class InteractiveTuiTools Tools for the interactive TUI implementation Inheritance object InteractiveTuiTools Namespace: Terminaux.Inputs.Interactive Assembly: Terminaux.dll Syntax public static class InteractiveTuiTools Methods | Edit this page View Source OpenInteractiveTui<T>(BaseInteractiveTui<T>) Opens the interactive TUI Declaration public static void OpenInteractiveTui<T>(BaseInteractiveTui<T> interactiveTui) Parameters Type Name Description BaseInteractiveTui<T> interactiveTui The inherited class instance of the interactive TUI Type Parameters Name Description T Exceptions Type Condition TerminauxException | Edit this page View Source SelectionMovement<T>(BaseInteractiveTui<T>, int) Initiates the selection movement Declaration public static void SelectionMovement<T>(BaseInteractiveTui<T> interactiveTui, int pos) Parameters Type Name Description BaseInteractiveTui<T> interactiveTui Interactive TUI to deal with int pos Position to move the pane selection to Type Parameters Name Description T"
  },
  "api/Terminaux.Inputs.Interactive.html": {
    "href": "api/Terminaux.Inputs.Interactive.html",
    "title": "Namespace Terminaux.Inputs.Interactive | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Interactive Classes BaseInteractiveTui<T> A base class for your interactive user interface for terminal apps InteractiveTuiBinding Interactive TUI binding information class InteractiveTuiStatus Interactive TUI status InteractiveTuiTools Tools for the interactive TUI implementation Interfaces IInteractiveTui<T> An interface for your interactive user interface for terminal apps"
  },
  "api/Terminaux.Inputs.Presentation.Elements.ChoiceInputElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.ChoiceInputElement.html",
    "title": "Class ChoiceInputElement | Terminaux API - Aptivi",
    "keywords": "Class ChoiceInputElement Choice input element Inheritance object ChoiceInputElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class ChoiceInputElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the prompt to be written, and the rest for the parameters to be formatted Declaration public object[] Arguments { get; set; } Property Value Type Description object[] | Edit this page View Source InvokeAction Invokes the action after rendering the element (normal) Declaration public Action InvokeAction { get; } Property Value Type Description Action | Edit this page View Source InvokeActionInput Invokes the action after rendering the element (input) Declaration public Action<object[]> InvokeActionInput { get; set; } Property Value Type Description Action<object[]> | Edit this page View Source IsInput Is the element an input? Declaration public bool IsInput { get; } Property Value Type Description bool | Edit this page View Source WrittenInput Written input Declaration public string WrittenInput { get; set; } Property Value Type Description string Methods | Edit this page View Source IsPossibleOutOfBounds() Checks to see if the text is possibly overflowing the slideshow display Declaration public bool IsPossibleOutOfBounds() Returns Type Description bool | Edit this page View Source Render() Renders the element Declaration public void Render() Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.DynamicTextElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.DynamicTextElement.html",
    "title": "Class DynamicTextElement | Terminaux API - Aptivi",
    "keywords": "Class DynamicTextElement Dynamic text element Inheritance object DynamicTextElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class DynamicTextElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the action which invokes the text, and the rest for the parameters to be formatted Declaration public object[] Arguments { get; set; } Property Value Type Description object[] | Edit this page View Source InvokeAction Invokes the action after rendering the element (normal) Declaration public Action InvokeAction { get; set; } Property Value Type Description Action | Edit this page View Source InvokeActionInput Invokes the action after rendering the element (input) Declaration public Action<object[]> InvokeActionInput { get; } Property Value Type Description Action<object[]> | Edit this page View Source IsInput Is the element an input? Declaration public bool IsInput { get; } Property Value Type Description bool | Edit this page View Source WrittenInput Written input Declaration public string WrittenInput { get; set; } Property Value Type Description string Methods | Edit this page View Source IsPossibleOutOfBounds() Checks to see if the text is possibly overflowing the slideshow display Declaration public bool IsPossibleOutOfBounds() Returns Type Description bool | Edit this page View Source Render() Renders the text Declaration public void Render() Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.IElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.IElement.html",
    "title": "Interface IElement | Terminaux API - Aptivi",
    "keywords": "Interface IElement A presentation element Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public interface IElement Properties | Edit this page View Source Arguments Arguments Declaration object[] Arguments { get; set; } Property Value Type Description object[] | Edit this page View Source InvokeAction Invokes the action after rendering the element (normal) Declaration Action InvokeAction { get; } Property Value Type Description Action | Edit this page View Source InvokeActionInput Invokes the action after rendering the element (input) Declaration Action<object[]> InvokeActionInput { get; } Property Value Type Description Action<object[]> | Edit this page View Source IsInput Is the element an input? Declaration bool IsInput { get; } Property Value Type Description bool | Edit this page View Source WrittenInput Written input Declaration string WrittenInput { get; set; } Property Value Type Description string Methods | Edit this page View Source IsPossibleOutOfBounds() Pre-print, check for possible out of bounds when rendering Declaration bool IsPossibleOutOfBounds() Returns Type Description bool | Edit this page View Source Render() Renders an element Declaration void Render()"
  },
  "api/Terminaux.Inputs.Presentation.Elements.InputElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.InputElement.html",
    "title": "Class InputElement | Terminaux API - Aptivi",
    "keywords": "Class InputElement Input element Inheritance object InputElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class InputElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the prompt to be written, and the rest for the parameters to be formatted Declaration public object[] Arguments { get; set; } Property Value Type Description object[] | Edit this page View Source InvokeAction Invokes the action after rendering the element (normal) Declaration public Action InvokeAction { get; } Property Value Type Description Action | Edit this page View Source InvokeActionInput Invokes the action after rendering the element (input) Declaration public Action<object[]> InvokeActionInput { get; set; } Property Value Type Description Action<object[]> | Edit this page View Source IsInput Is the element an input? Declaration public bool IsInput { get; } Property Value Type Description bool | Edit this page View Source WrittenInput Written input Declaration public string WrittenInput { get; set; } Property Value Type Description string Methods | Edit this page View Source IsPossibleOutOfBounds() Checks to see if the text is possibly overflowing the slideshow display Declaration public bool IsPossibleOutOfBounds() Returns Type Description bool | Edit this page View Source Render() Renders the text Declaration public void Render() Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.MaskedInputElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.MaskedInputElement.html",
    "title": "Class MaskedInputElement | Terminaux API - Aptivi",
    "keywords": "Class MaskedInputElement Masked input element Inheritance object MaskedInputElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class MaskedInputElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the prompt to be written, and the rest for the parameters to be formatted Declaration public object[] Arguments { get; set; } Property Value Type Description object[] | Edit this page View Source InvokeAction Invokes the action after rendering the element (normal) Declaration public Action InvokeAction { get; } Property Value Type Description Action | Edit this page View Source InvokeActionInput Invokes the action after rendering the element (input) Declaration public Action<object[]> InvokeActionInput { get; set; } Property Value Type Description Action<object[]> | Edit this page View Source IsInput Is the element an input? Declaration public bool IsInput { get; } Property Value Type Description bool | Edit this page View Source WrittenInput Written input Declaration public string WrittenInput { get; set; } Property Value Type Description string Methods | Edit this page View Source IsPossibleOutOfBounds() Checks to see if the text is possibly overflowing the slideshow display Declaration public bool IsPossibleOutOfBounds() Returns Type Description bool | Edit this page View Source Render() Renders the text Declaration public void Render() Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.MultipleChoiceInputElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.MultipleChoiceInputElement.html",
    "title": "Class MultipleChoiceInputElement | Terminaux API - Aptivi",
    "keywords": "Class MultipleChoiceInputElement Multiple choice input element Inheritance object MultipleChoiceInputElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class MultipleChoiceInputElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the prompt to be written, and the rest for the parameters to be formatted Declaration public object[] Arguments { get; set; } Property Value Type Description object[] | Edit this page View Source InvokeAction Invokes the action after rendering the element (normal) Declaration public Action InvokeAction { get; } Property Value Type Description Action | Edit this page View Source InvokeActionInput Invokes the action after rendering the element (input) Declaration public Action<object[]> InvokeActionInput { get; set; } Property Value Type Description Action<object[]> | Edit this page View Source IsInput Is the element an input? Declaration public bool IsInput { get; } Property Value Type Description bool | Edit this page View Source WrittenInput Written input Declaration public string WrittenInput { get; set; } Property Value Type Description string Methods | Edit this page View Source IsPossibleOutOfBounds() Checks to see if the text is possibly overflowing the slideshow display Declaration public bool IsPossibleOutOfBounds() Returns Type Description bool | Edit this page View Source Render() Renders the element Declaration public void Render() Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.TextElement.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.TextElement.html",
    "title": "Class TextElement | Terminaux API - Aptivi",
    "keywords": "Class TextElement Text element Inheritance object TextElement Implements IElement Namespace: Terminaux.Inputs.Presentation.Elements Assembly: Terminaux.dll Syntax public class TextElement : IElement Properties | Edit this page View Source Arguments The first argument denotes the text to be written, and the rest for the parameters to be formatted Declaration public object[] Arguments { get; set; } Property Value Type Description object[] | Edit this page View Source InvokeAction Invokes the action after rendering the element (normal) Declaration public Action InvokeAction { get; set; } Property Value Type Description Action | Edit this page View Source InvokeActionInput Invokes the action after rendering the element (input) Declaration public Action<object[]> InvokeActionInput { get; } Property Value Type Description Action<object[]> | Edit this page View Source IsInput Is the element an input? Declaration public bool IsInput { get; } Property Value Type Description bool | Edit this page View Source WrittenInput Written input Declaration public string WrittenInput { get; set; } Property Value Type Description string Methods | Edit this page View Source IsPossibleOutOfBounds() Checks to see if the text is possibly overflowing the slideshow display Declaration public bool IsPossibleOutOfBounds() Returns Type Description bool | Edit this page View Source Render() Renders the text Declaration public void Render() Implements IElement"
  },
  "api/Terminaux.Inputs.Presentation.Elements.html": {
    "href": "api/Terminaux.Inputs.Presentation.Elements.html",
    "title": "Namespace Terminaux.Inputs.Presentation.Elements | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Presentation.Elements Classes ChoiceInputElement Choice input element DynamicTextElement Dynamic text element InputElement Input element MaskedInputElement Masked input element MultipleChoiceInputElement Multiple choice input element TextElement Text element Interfaces IElement A presentation element"
  },
  "api/Terminaux.Inputs.Presentation.PresentationPage.html": {
    "href": "api/Terminaux.Inputs.Presentation.PresentationPage.html",
    "title": "Class PresentationPage | Terminaux API - Aptivi",
    "keywords": "Class PresentationPage Presentation page Inheritance object PresentationPage Namespace: Terminaux.Inputs.Presentation Assembly: Terminaux.dll Syntax public class PresentationPage Constructors | Edit this page View Source PresentationPage(string, List<IElement>) Makes a new presentation page Declaration public PresentationPage(string name, List<IElement> elements) Parameters Type Name Description string name Page name List<IElement> elements List of elements Properties | Edit this page View Source Elements Presentation page elements Declaration public List<IElement> Elements { get; } Property Value Type Description List<IElement> | Edit this page View Source Name Presentation page name Declaration public string Name { get; } Property Value Type Description string"
  },
  "api/Terminaux.Inputs.Presentation.PresentationTools.html": {
    "href": "api/Terminaux.Inputs.Presentation.PresentationTools.html",
    "title": "Class PresentationTools | Terminaux API - Aptivi",
    "keywords": "Class PresentationTools Presentation tools Inheritance object PresentationTools Namespace: Terminaux.Inputs.Presentation Assembly: Terminaux.dll Syntax public static class PresentationTools Properties | Edit this page View Source PresentationInformationalTop The informational top position Declaration public static int PresentationInformationalTop { get; } Property Value Type Description int | Edit this page View Source PresentationLowerInnerBorderLeft The lower right corner of the inner border (the left position) Declaration public static int PresentationLowerInnerBorderLeft { get; } Property Value Type Description int | Edit this page View Source PresentationLowerInnerBorderTop The lower right corner of the inner border (the top position) Declaration public static int PresentationLowerInnerBorderTop { get; } Property Value Type Description int | Edit this page View Source PresentationUpperBorderLeft The upper left corner of the exterior border (the left position) Declaration public static int PresentationUpperBorderLeft { get; } Property Value Type Description int | Edit this page View Source PresentationUpperBorderTop The upper left corner of the exterior border (the top position) Declaration public static int PresentationUpperBorderTop { get; } Property Value Type Description int | Edit this page View Source PresentationUpperInnerBorderLeft The upper left corner of the inner border (the left position) Declaration public static int PresentationUpperInnerBorderLeft { get; } Property Value Type Description int | Edit this page View Source PresentationUpperInnerBorderTop The upper left corner of the inner border (the top position) Declaration public static int PresentationUpperInnerBorderTop { get; } Property Value Type Description int Methods | Edit this page View Source ClearPresentation() Clears the presentation Declaration public static string ClearPresentation() Returns Type Description string | Edit this page View Source Present(Slideshow) Present the presentation Declaration public static void Present(Slideshow presentation) Parameters Type Name Description Slideshow presentation Presentation instance | Edit this page View Source Present(Slideshow, bool, bool) Present the presentation Declaration public static void Present(Slideshow presentation, bool kiosk, bool required) Parameters Type Name Description Slideshow presentation Presentation instance bool kiosk Prevent any key other than ENTER from being pressed bool required Prevents exiting the presentation | Edit this page View Source PresentationContainsInput(Slideshow) Checks to see if the presentation contains input Declaration public static bool PresentationContainsInput(Slideshow presentation) Parameters Type Name Description Slideshow presentation Target presentation Returns Type Description bool True if one of the elements in a page contains input"
  },
  "api/Terminaux.Inputs.Presentation.Slideshow.html": {
    "href": "api/Terminaux.Inputs.Presentation.Slideshow.html",
    "title": "Class Slideshow | Terminaux API - Aptivi",
    "keywords": "Class Slideshow The presentation containing all the pages Inheritance object Slideshow Namespace: Terminaux.Inputs.Presentation Assembly: Terminaux.dll Syntax public class Slideshow Constructors | Edit this page View Source Slideshow(string, List<PresentationPage>) Makes a new presentation Declaration public Slideshow(string name, List<PresentationPage> pages) Parameters Type Name Description string name Presentation name List<PresentationPage> pages Presentation pages Properties | Edit this page View Source Name Presentation name Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source Pages Presentation pages Declaration public List<PresentationPage> Pages { get; } Property Value Type Description List<PresentationPage>"
  },
  "api/Terminaux.Inputs.Presentation.html": {
    "href": "api/Terminaux.Inputs.Presentation.html",
    "title": "Namespace Terminaux.Inputs.Presentation | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Presentation Classes PresentationPage Presentation page PresentationTools Presentation tools Slideshow The presentation containing all the pages"
  },
  "api/Terminaux.Inputs.Styles.Choice.ChoiceOutputType.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.ChoiceOutputType.html",
    "title": "Enum ChoiceOutputType | Terminaux API - Aptivi",
    "keywords": "Enum ChoiceOutputType The enumeration for the choice command output type Namespace: Terminaux.Inputs.Styles.Choice Assembly: Terminaux.dll Syntax public enum ChoiceOutputType Fields Name Description Modern The modern way of listing choices OneLine A question and a set of answers in one line Table The table of choices TwoLines A question in a line and a set of answers in another line"
  },
  "api/Terminaux.Inputs.Styles.Choice.ChoiceStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.ChoiceStyle.html",
    "title": "Class ChoiceStyle | Terminaux API - Aptivi",
    "keywords": "Class ChoiceStyle Choice style for input module Inheritance object ChoiceStyle Namespace: Terminaux.Inputs.Styles.Choice Assembly: Terminaux.dll Syntax public static class ChoiceStyle Methods | Edit this page View Source PromptChoice(string, List<InputChoiceInfo>, List<InputChoiceInfo>, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, List<InputChoiceInfo>, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, List<InputChoiceInfo> Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], string, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string, ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string AnswersStr, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, string[] AnswersTitles, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string | Edit this page View Source PromptChoice(string, string[], ChoiceOutputType, bool) Prompts user for choice Declaration public static string PromptChoice(string Question, string[] Answers, ChoiceOutputType OutputType = ChoiceOutputType.OneLine, bool PressEnter = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. ChoiceOutputType OutputType Output type of choices bool PressEnter When enabled, allows the input to consist of multiple characters Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Choice.html": {
    "href": "api/Terminaux.Inputs.Styles.Choice.html",
    "title": "Namespace Terminaux.Inputs.Styles.Choice | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Choice Classes ChoiceStyle Choice style for input module Enums ChoiceOutputType The enumeration for the choice command output type"
  },
  "api/Terminaux.Inputs.Styles.ColorSelector.html": {
    "href": "api/Terminaux.Inputs.Styles.ColorSelector.html",
    "title": "Class ColorSelector | Terminaux API - Aptivi",
    "keywords": "Class ColorSelector Color selection application Inheritance object ColorSelector Namespace: Terminaux.Inputs.Styles Assembly: Terminaux.dll Syntax public static class ColorSelector Methods | Edit this page View Source OpenColorSelector() Opens the color selector Declaration public static Color OpenColorSelector() Returns Type Description Color An instance of Color to get the resulting color | Edit this page View Source OpenColorSelector(Color) Opens the color selector Declaration public static Color OpenColorSelector(Color initialColor) Parameters Type Name Description Color initialColor Initial color to use Returns Type Description Color An instance of Color to get the resulting color"
  },
  "api/Terminaux.Inputs.Styles.FigletSelector.html": {
    "href": "api/Terminaux.Inputs.Styles.FigletSelector.html",
    "title": "Class FigletSelector | Terminaux API - Aptivi",
    "keywords": "Class FigletSelector Figlet selector Inheritance object FigletSelector Namespace: Terminaux.Inputs.Styles Assembly: Terminaux.dll Syntax public static class FigletSelector Methods | Edit this page View Source PromptForFiglet() Prompts the user for a figlet font Declaration public static string PromptForFiglet() Returns Type Description string Selected figlet font | Edit this page View Source PromptForFiglet(string) Prompts the user for a figlet font Declaration public static string PromptForFiglet(string font) Parameters Type Name Description string font Initial font to select Returns Type Description string Selected figlet font"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxButtonsColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxButtonsColor.html",
    "title": "Class InfoBoxButtonsColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxButtonsColor Info box writer with buttons and color support Inheritance object InfoBoxButtonsColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxButtonsColor Methods | Edit this page View Source WriteInfoBoxButtons(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(string title, InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtons(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtons(InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(string title, InputChoiceInfo[] buttons, string text, Color InfoBoxTitledButtonsColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColor(InputChoiceInfo[] buttons, string text, Color InfoBoxButtonsColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxButtonsColor InfoBoxButtons color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color Color BackgroundColor InfoBoxTitledButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(string title, InputChoiceInfo[] buttons, string text, Color InfoBoxTitledButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxTitledButtonsColor InfoBoxTitledButtons color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxButtonsColor InfoBoxButtons color Color BackgroundColor InfoBoxButtons background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsColorBack(InputChoiceInfo[] buttons, string text, Color InfoBoxButtonsColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. Color InfoBoxButtonsColor InfoBoxButtons color from Nitrocid KS's Color Color BackgroundColor InfoBoxButtons background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string title, InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(string title, InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(InputChoiceInfo[] buttons, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxButtonsPlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxButtonsPlain(InputChoiceInfo[] buttons, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] buttons Button names to define. This must be from 1 to 3 buttons. Any more of them and you'll have to use the InfoBoxSelectionColor to get an option to use more buttons as choice selections. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxColor.html",
    "title": "Class InfoBoxColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxColor Info box writer with color support Inheritance object InfoBoxColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxColor Methods | Edit this page View Source WriteInfoBox(string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBox(string, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBox(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, bool waitForInput, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, bool waitForInput, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string title, string text, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColor(string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, bool waitForInput, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, bool waitForInput, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string title, string text, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, char, char, char, char, char, char, char, char, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, bool waitForInput, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, char, char, char, char, char, char, char, char, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxPlain(string, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxPlain(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxInputColor.html",
    "title": "Class InfoBoxInputColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxInputColor Info box writer with input and color support Inheritance object InfoBoxInputColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxInputColor Methods | Edit this page View Source WriteInfoBoxInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInput(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInput(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string title, string text, Color InfoBoxTitledColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColor(string, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColor(string text, Color InfoBoxColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxColor InfoBox color Color BackgroundColor InfoBox background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledColor InfoBoxTitled color Color BackgroundColor InfoBoxTitled background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string title, string text, Color InfoBoxTitledColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. Color InfoBoxTitledColor InfoBoxTitled color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitled background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxInputColorBack(string, Color, Color, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxInputColorBack(string text, Color InfoBoxColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. Color InfoBoxColor InfoBox color from Nitrocid KS's Color Color BackgroundColor InfoBox background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string text, params object[] vars) Parameters Type Name Description string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteInfoBoxPlainInput(string, string, params object[]) Writes the info box plainly Declaration public static string WriteInfoBoxPlainInput(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxProgressColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxProgressColor.html",
    "title": "Class InfoBoxProgressColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxProgressColor Info box writer with progress and color support Inheritance object InfoBoxProgressColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxProgressColor Methods | Edit this page View Source WriteInfoBoxProgress(double, string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(double, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, bool waitForInput, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(double progress, string text, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, bool, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, bool, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, bool waitForInput, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgress(string, double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgress(string title, double progress, string text, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, bool waitForInput, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(double, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(double progress, string text, Color InfoBoxProgressColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxProgressColor InfoBoxProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, bool, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, bool, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, bool waitForInput, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColor(string, double, string, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColor(string title, double progress, string text, Color InfoBoxTitledProgressColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxTitledProgressColor InfoBoxTitledProgress color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color Color BackgroundColor InfoBoxProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, bool waitForInput, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxProgressColor InfoBoxProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxProgressColor InfoBoxProgress color Color BackgroundColor InfoBoxProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(double, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(double progress, string text, Color InfoBoxProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxProgressColor InfoBoxProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, bool, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, bool waitForInput, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color Color BackgroundColor InfoBoxTitledProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, bool, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, bool waitForInput, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. bool waitForInput Waits for input or not Color InfoBoxTitledProgressColor InfoBoxTitledProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledProgressColor InfoBoxTitledProgress color Color BackgroundColor InfoBoxTitledProgress background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressColorBack(string, double, string, Color, Color, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressColorBack(string title, double progress, string text, Color InfoBoxTitledProgressColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. Color InfoBoxTitledProgressColor InfoBoxTitledProgress color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledProgress background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(double progress, string text, params object[] vars) Parameters Type Name Description double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(string, double, string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(string title, double progress, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. | Edit this page View Source WriteInfoBoxProgressPlain(string, double, string, params object[]) Writes the info box plainly Declaration public static void WriteInfoBoxProgressPlain(string title, double progress, string text, params object[] vars) Parameters Type Name Description string title Title to be written double progress Progress percentage from 0 to 100 string text Text to be written. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionColor.html",
    "title": "Class InfoBoxSelectionColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxSelectionColor Info box writer with selection and color support Inheritance object InfoBoxSelectionColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxSelectionColor Methods | Edit this page View Source WriteInfoBoxSelection(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelection(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelection(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColor(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionColor InfoBoxSelection color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color Color BackgroundColor InfoBoxTitledSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionColor InfoBoxTitledSelection color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxSelectionColor InfoBoxSelection color Color BackgroundColor InfoBoxSelection background color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionColorBack(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionColor InfoBoxSelection color from Nitrocid KS's Color Color BackgroundColor InfoBoxSelection background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionPlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int WriteInfoBoxSelectionPlain(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int Selected choice index (starting from zero), or -1 if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionMultipleColor.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.InfoBoxSelectionMultipleColor.html",
    "title": "Class InfoBoxSelectionMultipleColor | Terminaux API - Aptivi",
    "keywords": "Class InfoBoxSelectionMultipleColor Info box writer with selection and color support Inheritance object InfoBoxSelectionMultipleColor Namespace: Terminaux.Inputs.Styles.Infobox Assembly: Terminaux.dll Syntax public static class InfoBoxSelectionMultipleColor Methods | Edit this page View Source WriteInfoBoxSelectionMultiple(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiple(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiple(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(string, InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionMultipleColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[], string, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColor(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionMultipleColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxTitledSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color Color BackgroundColor InfoBoxTitledSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(string, InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(string title, InputChoiceInfo[] selections, string text, Color InfoBoxTitledSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxTitledSelectionMultipleColor InfoBoxTitledSelectionMultiple color from Nitrocid KS's Color Color BackgroundColor InfoBoxTitledSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color InfoBoxSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color Color BackgroundColor InfoBoxSelectionMultiple background color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[], string, Color, Color, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultipleColorBack(InputChoiceInfo[] selections, string text, Color InfoBoxSelectionMultipleColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. Color InfoBoxSelectionMultipleColor InfoBoxSelectionMultiple color from Nitrocid KS's Color Color BackgroundColor InfoBoxSelectionMultiple background color from Nitrocid KS's Color object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(string, InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(string title, InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(string, InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(string title, InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description string title Title to be written InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[], string, char, char, char, char, char, char, char, char, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[] selections, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. char UpperLeftCornerChar Upper left corner character for info box char LowerLeftCornerChar Lower left corner character for info box char UpperRightCornerChar Upper right corner character for info box char LowerRightCornerChar Lower right corner character for info box char UpperFrameChar Upper frame character for info box char LowerFrameChar Lower frame character for info box char LeftFrameChar Left frame character for info box char RightFrameChar Right frame character for info box object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred | Edit this page View Source WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[], string, params object[]) Writes the info box plainly Declaration public static int[] WriteInfoBoxSelectionMultiplePlain(InputChoiceInfo[] selections, string text, params object[] vars) Parameters Type Name Description InputChoiceInfo[] selections List of choices string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description int[] List of selected choice index (starting from zero), or an empty array if exited, selection list is empty, or an error occurred"
  },
  "api/Terminaux.Inputs.Styles.Infobox.html": {
    "href": "api/Terminaux.Inputs.Styles.Infobox.html",
    "title": "Namespace Terminaux.Inputs.Styles.Infobox | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Infobox Classes InfoBoxButtonsColor Info box writer with buttons and color support InfoBoxColor Info box writer with color support InfoBoxInputColor Info box writer with input and color support InfoBoxProgressColor Info box writer with progress and color support InfoBoxSelectionColor Info box writer with selection and color support InfoBoxSelectionMultipleColor Info box writer with selection and color support"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionMultipleStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionMultipleStyle.html",
    "title": "Class SelectionMultipleStyle | Terminaux API - Aptivi",
    "keywords": "Class SelectionMultipleStyle Multiple selection style for input module Inheritance object SelectionMultipleStyle Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionMultipleStyle Methods | Edit this page View Source PromptMultipleSelection(string, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, List<InputChoiceInfo> Answers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, List<InputChoiceInfo>, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], string, bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string, string[], string, string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], bool) Prompts user for selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int[] | Edit this page View Source PromptMultipleSelection(string, string[], string[], string[], string[], bool) Prompts user for Selection Declaration public static int[] PromptMultipleSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int[]"
  },
  "api/Terminaux.Inputs.Styles.Selection.SelectionStyle.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.SelectionStyle.html",
    "title": "Class SelectionStyle | Terminaux API - Aptivi",
    "keywords": "Class SelectionStyle Selection style for input module Inheritance object SelectionStyle Namespace: Terminaux.Inputs.Styles.Selection Assembly: Terminaux.dll Syntax public static class SelectionStyle Methods | Edit this page View Source PromptSelection(string, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, List<InputChoiceInfo>, List<InputChoiceInfo>, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, List<InputChoiceInfo> Answers, List<InputChoiceInfo> AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question List<InputChoiceInfo> Answers Set of answers. List<InputChoiceInfo> AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, bool) Prompts user for selection Declaration public static int PromptSelection(string Question, string AnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], string, bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string, string[], string, string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string AnswersStr, string[] AnswersTitles, string AlternateAnswersStr, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string AnswersStr Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string AlternateAnswersStr Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], bool) Prompts user for selection Declaration public static int PromptSelection(string Question, string[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, string[], string[], string[], string[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, string[] Answers, string[] AnswersTitles, string[] AlternateAnswers, string[] AlternateAnswersTitles, bool kiosk = false) Parameters Type Name Description string Question A question string[] Answers Set of answers. They can be written like this: Y/N/C. string[] AnswersTitles Working titles for each answer. It must be the same amount as the answers. string[] AlternateAnswers Set of alternate answers. They can be written like this: Y/N/C. string[] AlternateAnswersTitles Working titles for each alternate answer. It must be the same amount as the alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. bool kiosk Whether to prevent exiting or not Returns Type Description int | Edit this page View Source PromptSelection(string, InputChoiceInfo[], InputChoiceInfo[], bool) Prompts user for Selection Declaration public static int PromptSelection(string Question, InputChoiceInfo[] Answers, InputChoiceInfo[] AltAnswers, bool kiosk = false) Parameters Type Name Description string Question A question InputChoiceInfo[] Answers Set of answers. InputChoiceInfo[] AltAnswers Set of alternate answers. bool kiosk Whether to prevent exiting or not Returns Type Description int"
  },
  "api/Terminaux.Inputs.Styles.Selection.html": {
    "href": "api/Terminaux.Inputs.Styles.Selection.html",
    "title": "Namespace Terminaux.Inputs.Styles.Selection | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles.Selection Classes SelectionMultipleStyle Multiple selection style for input module SelectionStyle Selection style for input module"
  },
  "api/Terminaux.Inputs.Styles.html": {
    "href": "api/Terminaux.Inputs.Styles.html",
    "title": "Namespace Terminaux.Inputs.Styles | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs.Styles Classes ColorSelector Color selection application FigletSelector Figlet selector"
  },
  "api/Terminaux.Inputs.html": {
    "href": "api/Terminaux.Inputs.html",
    "title": "Namespace Terminaux.Inputs | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Inputs Classes InputChoiceInfo Choice information for input InputChoiceTools Input choice tools"
  },
  "api/Terminaux.Reader.Bindings.BaseBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.BaseBinding.html",
    "title": "Class BaseBinding | Terminaux API - Aptivi",
    "keywords": "Class BaseBinding Base key binding Inheritance object BaseBinding Implements IBinding Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public abstract class BaseBinding : IBinding Properties | Edit this page View Source BoundKeys Key to bind to Declaration public virtual ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] | Edit this page View Source IsExit Does this binding cause the input to exit? Declaration public virtual bool IsExit { get; } Property Value Type Description bool | Edit this page View Source ResetSuggestionsTextPos Resets the suggestions text position Declaration public virtual bool ResetSuggestionsTextPos { get; } Property Value Type Description bool Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the binding matched Declaration public virtual bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Input key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration public virtual void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader Implements IBinding"
  },
  "api/Terminaux.Reader.Bindings.CustomBindings.html": {
    "href": "api/Terminaux.Reader.Bindings.CustomBindings.html",
    "title": "Class CustomBindings | Terminaux API - Aptivi",
    "keywords": "Class CustomBindings Custom binding handler Inheritance object CustomBindings Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public static class CustomBindings Methods | Edit this page View Source Bind(BaseBinding) Binds the key to the custom bindings list to be executed on press Declaration public static void Bind(BaseBinding binding) Parameters Type Name Description BaseBinding binding Base containing information about key binding | Edit this page View Source Unbind(ConsoleKeyInfo) Unbinds the key from the custom bindings list Declaration public static void Unbind(ConsoleKeyInfo cki) Parameters Type Name Description ConsoleKeyInfo cki Key information to remove the binding"
  },
  "api/Terminaux.Reader.Bindings.IBinding.html": {
    "href": "api/Terminaux.Reader.Bindings.IBinding.html",
    "title": "Interface IBinding | Terminaux API - Aptivi",
    "keywords": "Interface IBinding Key binding interface Namespace: Terminaux.Reader.Bindings Assembly: Terminaux.dll Syntax public interface IBinding Properties | Edit this page View Source BoundKeys Keys to bind to Declaration ConsoleKeyInfo[] BoundKeys { get; } Property Value Type Description ConsoleKeyInfo[] | Edit this page View Source ResetSuggestionsTextPos Resets the suggestions text position Declaration bool ResetSuggestionsTextPos { get; } Property Value Type Description bool Methods | Edit this page View Source BindMatched(ConsoleKeyInfo) Whether the bind matched Declaration bool BindMatched(ConsoleKeyInfo input) Parameters Type Name Description ConsoleKeyInfo input Key Returns Type Description bool | Edit this page View Source DoAction(TermReaderState) Do the action Declaration void DoAction(TermReaderState state) Parameters Type Name Description TermReaderState state State of the reader"
  },
  "api/Terminaux.Reader.Bindings.html": {
    "href": "api/Terminaux.Reader.Bindings.html",
    "title": "Namespace Terminaux.Reader.Bindings | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Bindings Classes BaseBinding Base key binding CustomBindings Custom binding handler Interfaces IBinding Key binding interface"
  },
  "api/Terminaux.Reader.Highlighting.SyntaxHighlighting.html": {
    "href": "api/Terminaux.Reader.Highlighting.SyntaxHighlighting.html",
    "title": "Class SyntaxHighlighting | Terminaux API - Aptivi",
    "keywords": "Class SyntaxHighlighting Syntax highlighting class that contains components Inheritance object SyntaxHighlighting Namespace: Terminaux.Reader.Highlighting Assembly: Terminaux.dll Syntax public class SyntaxHighlighting Properties | Edit this page View Source Components Template name Declaration [JsonIgnore] public ReadOnlyDictionary<string, SyntaxHighlightingComponent> Components { get; } Property Value Type Description ReadOnlyDictionary<string, SyntaxHighlightingComponent> | Edit this page View Source Name Template name Declaration [JsonIgnore] public string Name { get; } Property Value Type Description string"
  },
  "api/Terminaux.Reader.Highlighting.SyntaxHighlightingComponent.html": {
    "href": "api/Terminaux.Reader.Highlighting.SyntaxHighlightingComponent.html",
    "title": "Class SyntaxHighlightingComponent | Terminaux API - Aptivi",
    "keywords": "Class SyntaxHighlightingComponent Syntax highlighting tools Inheritance object SyntaxHighlightingComponent Namespace: Terminaux.Reader.Highlighting Assembly: Terminaux.dll Syntax public class SyntaxHighlightingComponent Constructors | Edit this page View Source SyntaxHighlightingComponent(string, Color, Color, bool, bool) Makes an instance of the syntax highlighter component class Declaration public SyntaxHighlightingComponent(string componentMatch, Color componentForegroundColor, Color componentBackgroundColor, bool useBackgroundColor, bool useForegroundColor) Parameters Type Name Description string componentMatch Regular expression to match in input Color componentForegroundColor Foreground color of the component Color componentBackgroundColor Background color of the component bool useBackgroundColor Whether the syntax highlighter can use the background color or not bool useForegroundColor Whether the syntax highlighter can use the foreground color or not Exceptions Type Condition TerminauxException Properties | Edit this page View Source ComponentBackgroundColor Component background color Declaration [JsonIgnore] public Color ComponentBackgroundColor { get; } Property Value Type Description Color | Edit this page View Source ComponentForegroundColor Component foreground color Declaration [JsonIgnore] public Color ComponentForegroundColor { get; } Property Value Type Description Color | Edit this page View Source ComponentMatch Regular expression to match a component Declaration [JsonIgnore] public Regex ComponentMatch { get; } Property Value Type Description Regex | Edit this page View Source UseBackgroundColor Component background color Declaration [JsonIgnore] public bool UseBackgroundColor { get; } Property Value Type Description bool | Edit this page View Source UseForegroundColor Component background color Declaration [JsonIgnore] public bool UseForegroundColor { get; } Property Value Type Description bool"
  },
  "api/Terminaux.Reader.Highlighting.SyntaxHighlightingTools.html": {
    "href": "api/Terminaux.Reader.Highlighting.SyntaxHighlightingTools.html",
    "title": "Class SyntaxHighlightingTools | Terminaux API - Aptivi",
    "keywords": "Class SyntaxHighlightingTools Syntax highlighting tools Inheritance object SyntaxHighlightingTools Namespace: Terminaux.Reader.Highlighting Assembly: Terminaux.dll Syntax public static class SyntaxHighlightingTools Properties | Edit this page View Source HighlighterNames All installed highlighter names Declaration public static string[] HighlighterNames { get; } Property Value Type Description string[] | Edit this page View Source Highlighters All installed highlighters Declaration public static SyntaxHighlighting[] Highlighters { get; } Property Value Type Description SyntaxHighlighting[] Methods | Edit this page View Source Exists(string) Checks to see if a highlighter exists or not Declaration public static bool Exists(string highlighter) Parameters Type Name Description string highlighter A specific highlighter to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source ExistsBuiltin(string) Checks to see if a highlighter is a built-in or not Declaration public static bool ExistsBuiltin(string highlighter) Parameters Type Name Description string highlighter A specific highlighter to check Returns Type Description bool True if found; false otherwise. | Edit this page View Source GetComponent(string) Gets the default highlighter Declaration public static SyntaxHighlightingComponent GetComponent(string componentName) Parameters Type Name Description string componentName Component name Returns Type Description SyntaxHighlightingComponent Exceptions Type Condition TerminauxException | Edit this page View Source GetComponent(string, string) Gets the default highlighter Declaration public static SyntaxHighlightingComponent GetComponent(string highlighter, string componentName) Parameters Type Name Description string highlighter Highlighter name string componentName Component name Returns Type Description SyntaxHighlightingComponent Exceptions Type Condition TerminauxException | Edit this page View Source GetComponent(SyntaxHighlighting, string) Gets the highlighter Declaration public static SyntaxHighlightingComponent GetComponent(SyntaxHighlighting highlighter, string componentName) Parameters Type Name Description SyntaxHighlighting highlighter Highlighter string componentName Component name Returns Type Description SyntaxHighlightingComponent Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighter() Gets the default highlighter for the current read. Returns null if no reader is present. Declaration public static SyntaxHighlighting GetHighlighter() Returns Type Description SyntaxHighlighting Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighter(string) Gets the highlighter Declaration public static SyntaxHighlighting GetHighlighter(string highlighter) Parameters Type Name Description string highlighter Highlighter name Returns Type Description SyntaxHighlighting Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterFromJson(string) Gets a highlighter from its JSON representation Declaration public static SyntaxHighlighting GetHighlighterFromJson(string json) Parameters Type Name Description string json Highlighter JSON contents Returns Type Description SyntaxHighlighting A highlighter info containing JSON representation Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterToJson() Gets a JSON representation of the highlighter Declaration public static string GetHighlighterToJson() Returns Type Description string A string containing the JSON representation of a highlighter Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterToJson(string) Gets a JSON representation of the highlighter Declaration public static string GetHighlighterToJson(string highlighter) Parameters Type Name Description string highlighter Highlighter name to save to JSON Returns Type Description string A string containing the JSON representation of a highlighter Exceptions Type Condition TerminauxException | Edit this page View Source GetHighlighterToJson(SyntaxHighlighting) Gets a JSON representation of the highlighter Declaration public static string GetHighlighterToJson(SyntaxHighlighting highlighter) Parameters Type Name Description SyntaxHighlighting highlighter Highlighter to save to JSON Returns Type Description string A string containing the JSON representation of a highlighter Exceptions Type Condition TerminauxException | Edit this page View Source RegisterHighlighter(SyntaxHighlighting) Registers a highlighter Declaration public static void RegisterHighlighter(SyntaxHighlighting highlighter) Parameters Type Name Description SyntaxHighlighting highlighter Highlighter information | Edit this page View Source UnregisterHighlighter(string) Unregisters a highlighter Declaration public static void UnregisterHighlighter(string highlighter) Parameters Type Name Description string highlighter Highlighter information"
  },
  "api/Terminaux.Reader.Highlighting.html": {
    "href": "api/Terminaux.Reader.Highlighting.html",
    "title": "Namespace Terminaux.Reader.Highlighting | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Highlighting Classes SyntaxHighlighting Syntax highlighting class that contains components SyntaxHighlightingComponent Syntax highlighting tools SyntaxHighlightingTools Syntax highlighting tools"
  },
  "api/Terminaux.Reader.TermReader.html": {
    "href": "api/Terminaux.Reader.TermReader.html",
    "title": "Class TermReader | Terminaux API - Aptivi",
    "keywords": "Class TermReader Terminal input reader module Inheritance object TermReader Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReader Properties | Edit this page View Source CurrentMask Current mask character Declaration public static char CurrentMask { get; set; } Property Value Type Description char | Edit this page View Source GlobalReaderSettings The global reader settings Declaration public static TermReaderSettings GlobalReaderSettings { get; } Property Value Type Description TermReaderSettings Methods | Edit this page View Source Read(bool) Reads the input Declaration public static string Read(bool interruptible = true) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, bool) Reads the input Declaration public static string Read(string inputPrompt, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, string, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, bool password = false, bool oneLineWrap = false, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read string defaultValue Default value to use if no input is provided bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, string, TermReaderSettings, bool, bool, bool) Reads the input Declaration public static string Read(string inputPrompt, string defaultValue, TermReaderSettings settings, bool password = false, bool oneLineWrap = false, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read string defaultValue Default value to use if no input is provided TermReaderSettings settings Settings containing reader-related settings bool password Whether the password mode is enabled bool oneLineWrap Whether to warp overflown text as one line bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(string, TermReaderSettings, bool) Reads the input Declaration public static string Read(string inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source Read(TermReaderSettings, bool) Reads the input Declaration public static string Read(TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadKey() Reads the next key from the console input stream Declaration public static ConsoleKeyInfo ReadKey() Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadKey(bool) Reads the next key from the console input stream Declaration public static ConsoleKeyInfo ReadKey(bool intercept) Parameters Type Name Description bool intercept Whether to intercept the key pressed or to just show the actual key to the console Returns Type Description ConsoleKeyInfo | Edit this page View Source ReadKeyTimeout(bool, TimeSpan) Reads the next key from the console input stream with the timeout Declaration public static (ConsoleKeyInfo result, bool provided) ReadKeyTimeout(bool Intercept, TimeSpan Timeout) Parameters Type Name Description bool Intercept Whether to intercept an input TimeSpan Timeout Timeout Returns Type Description (ConsoleKeyInfo result, bool provided) | Edit this page View Source ReadPassword(bool) Reads the input with password character masking Declaration public static string ReadPassword(bool interruptible = true) Parameters Type Name Description bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, bool interruptible = true) Parameters Type Name Description char mask Password mask character bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, string, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, string inputPrompt, bool interruptible = true) Parameters Type Name Description char mask Password mask character string inputPrompt The input to be read bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, string, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, string inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description char mask Password mask character string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(char, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(char mask, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description char mask Password mask character TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(string, bool) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(string, TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(string inputPrompt, TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description string inputPrompt The input to be read TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string | Edit this page View Source ReadPassword(TermReaderSettings, bool) Reads the input with password character masking Declaration public static string ReadPassword(TermReaderSettings settings, bool interruptible = true) Parameters Type Name Description TermReaderSettings settings Settigns containing reader-related settings bool interruptible Whether the prompt is interruptible or not Returns Type Description string"
  },
  "api/Terminaux.Reader.TermReaderSettings.html": {
    "href": "api/Terminaux.Reader.TermReaderSettings.html",
    "title": "Class TermReaderSettings | Terminaux API - Aptivi",
    "keywords": "Class TermReaderSettings Settings for the reader Inheritance object TermReaderSettings Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderSettings Constructors | Edit this page View Source TermReaderSettings() Initializes empty settings instance Declaration public TermReaderSettings() Properties | Edit this page View Source HistoryEnabled Input history enabled Declaration public bool HistoryEnabled { get; set; } Property Value Type Description bool | Edit this page View Source InputBackgroundColor Input background color Declaration public Color InputBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source InputForegroundColor Input foreground color Declaration public Color InputForegroundColor { get; set; } Property Value Type Description Color | Edit this page View Source LeftMargin Left margin Declaration public int LeftMargin { get; set; } Property Value Type Description int | Edit this page View Source LimitConsoleChars Limit input characters to the maximum number of characters in a console window Declaration public bool LimitConsoleChars { get; set; } Property Value Type Description bool | Edit this page View Source PasswordMaskChar Password mask character Declaration public char PasswordMaskChar { get; set; } Property Value Type Description char | Edit this page View Source PlaceholderText Show placeholder hint text Declaration public string PlaceholderText { get; set; } Property Value Type Description string | Edit this page View Source RightMargin Right margin Declaration public int RightMargin { get; set; } Property Value Type Description int | Edit this page View Source Suggestions Suggestion entries Declaration public Func<string, int, char[], string[]> Suggestions { set; } Property Value Type Description Func<string, int, char[], string[]> | Edit this page View Source SuggestionsDelimiters Suggestion delimiters Declaration public char[] SuggestionsDelimiters { set; } Property Value Type Description char[] | Edit this page View Source SyntaxHighlighter Syntax highlighter to use. It must be registered. Declaration public SyntaxHighlighting SyntaxHighlighter { get; set; } Property Value Type Description SyntaxHighlighting | Edit this page View Source SyntaxHighlighterEnabled Syntax highlighter is enabled Declaration public bool SyntaxHighlighterEnabled { get; set; } Property Value Type Description bool | Edit this page View Source TreatCtrlCAsInput Treat Ctrl + C as input Declaration public bool TreatCtrlCAsInput { get; set; } Property Value Type Description bool"
  },
  "api/Terminaux.Reader.TermReaderState.html": {
    "href": "api/Terminaux.Reader.TermReaderState.html",
    "title": "Class TermReaderState | Terminaux API - Aptivi",
    "keywords": "Class TermReaderState State of the reader Inheritance object TermReaderState Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public class TermReaderState Properties | Edit this page View Source CanInsert Can insert a new character? Declaration public bool CanInsert { get; } Property Value Type Description bool | Edit this page View Source Commentized Whether the current input character is commentized by the hashtag (#) character or not. Declaration public bool Commentized { get; } Property Value Type Description bool | Edit this page View Source CurrentCursorPosLeft Current cursor left position Declaration public int CurrentCursorPosLeft { get; } Property Value Type Description int | Edit this page View Source CurrentCursorPosTop Current cursor top position Declaration public int CurrentCursorPosTop { get; } Property Value Type Description int | Edit this page View Source CurrentHistoryPos Current history number Declaration public int CurrentHistoryPos { get; } Property Value Type Description int | Edit this page View Source CurrentState Gets the current state Declaration public static TermReaderState CurrentState { get; } Property Value Type Description TermReaderState | Edit this page View Source CurrentSuggestionsPos Current suggestion number Declaration public int CurrentSuggestionsPos { get; } Property Value Type Description int | Edit this page View Source CurrentSuggestionsTextPos Current suggestions text position Declaration public int CurrentSuggestionsTextPos { get; } Property Value Type Description int | Edit this page View Source CurrentText Current text Declaration public StringBuilder CurrentText { get; } Property Value Type Description StringBuilder | Edit this page View Source CurrentTextPos Current text character number Declaration public int CurrentTextPos { get; } Property Value Type Description int | Edit this page View Source History History entries Declaration public List<string> History { get; } Property Value Type Description List<string> | Edit this page View Source InputPromptHeight Input prompt text Declaration public int InputPromptHeight { get; } Property Value Type Description int | Edit this page View Source InputPromptLastLineLength Input prompt last line length Declaration public int InputPromptLastLineLength { get; } Property Value Type Description int | Edit this page View Source InputPromptLeft Left position of the input prompt (with the left margin) Declaration public int InputPromptLeft { get; } Property Value Type Description int | Edit this page View Source InputPromptLeftBegin Left position of the input prompt (where the first letter of the input prompt is located) Declaration public int InputPromptLeftBegin { get; } Property Value Type Description int | Edit this page View Source InputPromptText Input prompt text Declaration public string InputPromptText { get; } Property Value Type Description string | Edit this page View Source InputPromptTop Top position of the input prompt Declaration public int InputPromptTop { get; } Property Value Type Description int | Edit this page View Source InputPromptTopBegin Top position of the input prompt (where the first letter of the input prompt is located) Declaration public int InputPromptTopBegin { get; } Property Value Type Description int | Edit this page View Source KillBuffer Text to be pasted Declaration public StringBuilder KillBuffer { get; } Property Value Type Description StringBuilder | Edit this page View Source LeftMargin Left margin Declaration public int LeftMargin { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeft Longest sentence length (from the leftmost position, without offset created by the last line in the prompt) Declaration public int LongestSentenceLengthFromLeft { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeftForFirstLine Longest sentence length (from the leftmost position, with the length of the last line in the prompt plus the left margin) Declaration public int LongestSentenceLengthFromLeftForFirstLine { get; } Property Value Type Description int | Edit this page View Source LongestSentenceLengthFromLeftForGeneralLine Longest sentence length (from the leftmost position, with the left margin) Declaration public int LongestSentenceLengthFromLeftForGeneralLine { get; } Property Value Type Description int | Edit this page View Source MaximumInputPositionLeft Maximum input left position Declaration public int MaximumInputPositionLeft { get; } Property Value Type Description int | Edit this page View Source OneLineWrap Whether one line wrapping is enabled Declaration public bool OneLineWrap { get; } Property Value Type Description bool | Edit this page View Source OperationWasInvalid Whether an invalid key was pressed, or an invalid operation was performed, or not. Declaration public bool OperationWasInvalid { get; } Property Value Type Description bool | Edit this page View Source PasswordMode Password Mode Declaration public bool PasswordMode { get; } Property Value Type Description bool | Edit this page View Source PressedKey Currently pressed key Declaration public ConsoleKeyInfo PressedKey { get; } Property Value Type Description ConsoleKeyInfo | Edit this page View Source RightMargin Right margin Declaration public int RightMargin { get; } Property Value Type Description int | Edit this page View Source Settings Reader settings (general or overridden) Declaration public TermReaderSettings Settings { get; } Property Value Type Description TermReaderSettings"
  },
  "api/Terminaux.Reader.TermReaderTools.html": {
    "href": "api/Terminaux.Reader.TermReaderTools.html",
    "title": "Class TermReaderTools | Terminaux API - Aptivi",
    "keywords": "Class TermReaderTools Terminal reader tools Inheritance object TermReaderTools Namespace: Terminaux.Reader Assembly: Terminaux.dll Syntax public static class TermReaderTools Properties | Edit this page View Source Busy Specifies whether the terminal reader is busy waiting for input or not Declaration public static bool Busy { get; } Property Value Type Description bool Methods | Edit this page View Source ClearHistory() Clears the history Declaration public static void ClearHistory() | Edit this page View Source GetMaximumInputLength() Gets the maximum input length for the current reader session Declaration public static int GetMaximumInputLength() Returns Type Description int The maximum input length of an input. -1 if there is no reader. | Edit this page View Source InsertNewText(string, bool, bool) Inserts new text to the current reader Declaration public static void InsertNewText(string newText, bool append = false, bool step = true) Parameters Type Name Description string newText New text to insert or append bool append Whether to append the new text to the end of the input or to insert text to the current position bool step Whether to move the cursor forward after inserting or not | Edit this page View Source Interrupt() Interrupts the reading process Declaration public static void Interrupt() | Edit this page View Source Refresh() Refreshes the reader prompt Declaration public static void Refresh() | Edit this page View Source RemoveText(int, bool) Removes text from the current position Declaration public static void RemoveText(int length, bool step = false) Parameters Type Name Description int length Length of characters to remove bool step Whether to step backwards after removing characters | Edit this page View Source RemoveText(int, int, bool) Removes text from the current position Declaration public static void RemoveText(int startIndex, int length, bool step = false) Parameters Type Name Description int startIndex Zero-based index of where to start removing length characters int length Length of characters to remove bool step Whether to step backwards after removing characters | Edit this page View Source SetHistory(List<string>) Sets the history Declaration public static void SetHistory(List<string> History) Parameters Type Name Description List<string> History List of history entries"
  },
  "api/Terminaux.Reader.Tools.ConditionalTools.html": {
    "href": "api/Terminaux.Reader.Tools.ConditionalTools.html",
    "title": "Class ConditionalTools | Terminaux API - Aptivi",
    "keywords": "Class ConditionalTools Conditional tools for reader Inheritance object ConditionalTools Namespace: Terminaux.Reader.Tools Assembly: Terminaux.dll Syntax public static class ConditionalTools Methods | Edit this page View Source ShouldNot(bool, TermReaderState) Specifies that this condition should not be met Declaration public static bool ShouldNot(bool condition, TermReaderState state) Parameters Type Name Description bool condition Condition to evaluate TermReaderState state Reader state Returns Type Description bool True if the condition is not met; false otherwise and a system beep."
  },
  "api/Terminaux.Reader.Tools.PositioningTools.html": {
    "href": "api/Terminaux.Reader.Tools.PositioningTools.html",
    "title": "Class PositioningTools | Terminaux API - Aptivi",
    "keywords": "Class PositioningTools Positioning tools for the console input reader Inheritance object PositioningTools Namespace: Terminaux.Reader.Tools Assembly: Terminaux.dll Syntax public static class PositioningTools Methods | Edit this page View Source Commit(TermReaderState) Commits the positional changes by changing the cursor dimensions to the current position according to the reader state Declaration public static void Commit(TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state Remarks You don't need to call this function most of the time, except if you want to show the cursor changes or if you want to write directly to that position. | Edit this page View Source GoBack(int, ref TermReaderState) Goes to the number of steps closer to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoBack(int steps, ref TermReaderState state) Parameters Type Name Description int steps The number of steps to go closer to the beginning of the text TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoBack(ref TermReaderState) Goes one step closer to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoBack(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoForward(int, ref TermReaderState) Goes to the number of steps closer to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoForward(int steps, ref TermReaderState state) Parameters Type Name Description int steps The number of steps to go closer to the end of the text TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoForward(ref TermReaderState) Goes one step closer to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoForward(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoLeftmost(ref TermReaderState) Goes to the beginning of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoLeftmost(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source GoRightmost(ref TermReaderState) Goes to the end of the text (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void GoRightmost(ref TermReaderState state) Parameters Type Name Description TermReaderState state State of the terminal reader in its present state | Edit this page View Source SeekTo(int, int, ref TermReaderState) Seeks to the selected text position number, pos (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void SeekTo(int fromPos, int pos, ref TermReaderState state) Parameters Type Name Description int fromPos The text position number offset (zero-based) int pos The text position number (zero-based) TermReaderState state State of the terminal reader in its present state | Edit this page View Source SeekTo(int, ref TermReaderState) Seeks to the selected text position number, pos (You need to commit this change with the Commit(TermReaderState) function, except if this is the last thing to do) Declaration public static void SeekTo(int pos, ref TermReaderState state) Parameters Type Name Description int pos The text position number (zero-based) TermReaderState state State of the terminal reader in its present state"
  },
  "api/Terminaux.Reader.Tools.html": {
    "href": "api/Terminaux.Reader.Tools.html",
    "title": "Namespace Terminaux.Reader.Tools | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader.Tools Classes ConditionalTools Conditional tools for reader PositioningTools Positioning tools for the console input reader"
  },
  "api/Terminaux.Reader.html": {
    "href": "api/Terminaux.Reader.html",
    "title": "Namespace Terminaux.Reader | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Reader Classes TermReader Terminal input reader module TermReaderSettings Settings for the reader TermReaderState State of the reader TermReaderTools Terminal reader tools"
  },
  "api/Terminaux.Sequences.Builder.Types.ApcSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.ApcSequences.html",
    "title": "Class ApcSequences | Terminaux API - Aptivi",
    "keywords": "Class ApcSequences List of APC sequences and their regular expressions Inheritance object ApcSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class ApcSequences Properties | Edit this page View Source ApcApplicationProgramCommandSequenceRegex [APC Pt ST] Regular expression for application program command Declaration public static Regex ApcApplicationProgramCommandSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateApcApplicationProgramCommand(string) [APC Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateApcApplicationProgramCommand(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.C1Sequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.C1Sequences.html",
    "title": "Class C1Sequences | Terminaux API - Aptivi",
    "keywords": "Class C1Sequences List of C1 sequences and their regular expressions Inheritance object C1Sequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class C1Sequences Properties | Edit this page View Source C1ApplicationProgramCommandSequenceRegex [ESC _] Regular expression for application program command Declaration public static Regex C1ApplicationProgramCommandSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1ControlSequenceIndicatorSequenceRegex [ESC [] Regular expression for control sequence introducer Declaration public static Regex C1ControlSequenceIndicatorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1DeviceControlStringSequenceRegex [ESC P] Regular expression for device control string Declaration public static Regex C1DeviceControlStringSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1EndOfGuardedAreaSequenceRegex [ESC W] Regular expression for end of guarded area Declaration public static Regex C1EndOfGuardedAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1IndexSequenceRegex [ESC D] Regular expression for index Declaration public static Regex C1IndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1NextLineSequenceRegex [ESC E] Regular expression for next line Declaration public static Regex C1NextLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1OperatingSystemCommandSequenceRegex [ESC ]] Regular expression for operating system command Declaration public static Regex C1OperatingSystemCommandSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1PrivacyMessageSequenceRegex [ESC ^] Regular expression for privacy message Declaration public static Regex C1PrivacyMessageSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1ReturnTerminalIdSequenceRegex [ESC Z] Regular expression for returning terminal ID Declaration public static Regex C1ReturnTerminalIdSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1ReverseIndexSequenceRegex [ESC M] Regular expression for reverse index Declaration public static Regex C1ReverseIndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1SingleShiftSelectG2CharacterSetSequenceRegex [ESC N] Regular expression for single shift select of G2 character set Declaration public static Regex C1SingleShiftSelectG2CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1SingleShiftSelectG3CharacterSetSequenceRegex [ESC O] Regular expression for single shift select of G3 character set Declaration public static Regex C1SingleShiftSelectG3CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1StartOfGuardedAreaSequenceRegex [ESC V] Regular expression for start of guarded area Declaration public static Regex C1StartOfGuardedAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1StartOfStringSequenceRegex [ESC X] Regular expression for start of string Declaration public static Regex C1StartOfStringSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1StringTerminatorSequenceRegex [ESC ] Regular expression for string terminator Declaration public static Regex C1StringTerminatorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source C1TabSetSequenceRegex [ESC H] Regular expression for tab set Declaration public static Regex C1TabSetSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateC1ApplicationProgramCommand() [ESC _] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ApplicationProgramCommand() Returns Type Description string | Edit this page View Source GenerateC1ControlSequenceIndicator() [ESC [] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ControlSequenceIndicator() Returns Type Description string | Edit this page View Source GenerateC1DeviceControlString() [ESC P] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1DeviceControlString() Returns Type Description string | Edit this page View Source GenerateC1EndOfGuardedArea() [ESC W] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1EndOfGuardedArea() Returns Type Description string | Edit this page View Source GenerateC1Index() [ESC D] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1Index() Returns Type Description string | Edit this page View Source GenerateC1NextLine() [ESC E] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1NextLine() Returns Type Description string | Edit this page View Source GenerateC1OperatingSystemCommand() [ESC ]] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1OperatingSystemCommand() Returns Type Description string | Edit this page View Source GenerateC1PrivacyMessage() [ESC ^] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1PrivacyMessage() Returns Type Description string | Edit this page View Source GenerateC1ReturnTerminalId() [ESC Z] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ReturnTerminalId() Returns Type Description string | Edit this page View Source GenerateC1ReverseIndex() [ESC M] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1ReverseIndex() Returns Type Description string | Edit this page View Source GenerateC1SingleShiftSelectG2CharacterSet() [ESC N] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1SingleShiftSelectG2CharacterSet() Returns Type Description string | Edit this page View Source GenerateC1SingleShiftSelectG3CharacterSet() [ESC O] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1SingleShiftSelectG3CharacterSet() Returns Type Description string | Edit this page View Source GenerateC1StartOfGuardedArea() [ESC V] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StartOfGuardedArea() Returns Type Description string | Edit this page View Source GenerateC1StartOfString() [ESC X] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StartOfString() Returns Type Description string | Edit this page View Source GenerateC1StringTerminator() [ESC ] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1StringTerminator() Returns Type Description string | Edit this page View Source GenerateC1TabSet() [ESC H] Generates an escape sequence that can be used for the console Declaration public static string GenerateC1TabSet() Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.CsiSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.CsiSequences.html",
    "title": "Class CsiSequences | Terminaux API - Aptivi",
    "keywords": "Class CsiSequences List of CSI sequences and their regular expressions Inheritance object CsiSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class CsiSequences Properties | Edit this page View Source CsiChangeAttributesInRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pm $ r] Regular expression for changing attributes in rectangular area Declaration public static Regex CsiChangeAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCharacterAttributesSequenceRegex [CSI Pm m] Regular expression for character attributes Declaration public static Regex CsiCharacterAttributesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCopyRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v] Regular expression for copying rectangular area Declaration public static Regex CsiCopyRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorBackwardTabulationSequenceRegex [CSI Ps Z] Regular expression for cursor backward tabulation Ps tab stops Declaration public static Regex CsiCursorBackwardTabulationSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorCharacterAbsoluteLineSequenceRegex [CSI Ps G] Regular expression for cursor character absolute Declaration public static Regex CsiCursorCharacterAbsoluteLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorForwardTabulationSequenceRegex [CSI Ps I] Regular expression for cursor forward tabulation Ps tab stops Declaration public static Regex CsiCursorForwardTabulationSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorPositionAbsoluteSequenceRegex [CSI Ps `] Regular expression for cursor position (absolute) Declaration public static Regex CsiCursorPositionAbsoluteSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorPositionRelativeSequenceRegex [CSI Ps a] Regular expression for cursor position (relative) Declaration public static Regex CsiCursorPositionRelativeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiCursorPositionSequenceRegex [CSI Ps ; Ps H] Regular expression for cursor position (Ps column ; Ps row) Declaration public static Regex CsiCursorPositionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDecPrivateModeValuesSequenceRegex [CSI ? Pm s] Regular expression for saving DEC private mode values Declaration public static Regex CsiDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeleteCharsSequenceRegex [CSI Ps P] Regular expression for deleting Ps characters Declaration public static Regex CsiDeleteCharsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeleteColumnsSequenceRegex [CSI Ps ' ~] Regular expression for deleting Ps columns Declaration public static Regex CsiDeleteColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeleteLineSequenceRegex [CSI Ps M] Regular expression for deleting Ps lines Declaration public static Regex CsiDeleteLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeviceStatusReportDecSequenceRegex [CSI ? Ps n] Regular expression for device status report (DEC-specific) Declaration public static Regex CsiDeviceStatusReportDecSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDeviceStatusReportSequenceRegex [CSI Ps n] Regular expression for device status report Declaration public static Regex CsiDeviceStatusReportSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiDisableKeyModifierOptionsSequenceRegex [CSI > Ps n] Regular expression for disabling key modifier options Declaration public static Regex CsiDisableKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEnableFilterRectangleSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ' w] Regular expression for enabling filter rectangle Declaration public static Regex CsiEnableFilterRectangleSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseCharactersSequenceRegex [CSI Ps X] Regular expression for erasing Ps characters Declaration public static Regex CsiEraseCharactersSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInDisplayDecsedSequenceRegex [CSI ? Ps J] Regular expression for erasing in display (DECSED) Declaration public static Regex CsiEraseInDisplayDecsedSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInDisplaySequenceRegex [CSI Ps J] Regular expression for erasing in display (ED) Declaration public static Regex CsiEraseInDisplaySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInLineDecselSequenceRegex [CSI ? Ps K] Regular expression for erasing in line (DECSEL) Declaration public static Regex CsiEraseInLineDecselSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseInLineSequenceRegex [CSI Ps K] Regular expression for erasing in line (EL) Declaration public static Regex CsiEraseInLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiEraseRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr $ z] Regular expression for erasing rectangular area Declaration public static Regex CsiEraseRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiFillRectangularAreaSequenceRegex [CSI Pc ; Pt ; Pl ; Pb ; Pr $ x] Regular expression for filling rectangular area Declaration public static Regex CsiFillRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInitiateHighlightMouseTrackingSequenceRegex [CSI Ps ; Ps ; Ps ; Ps ; Ps T] Regular expression for initiating highlight mouse tracking Declaration public static Regex CsiInitiateHighlightMouseTrackingSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInsertBlankCharactersSequenceRegex [CSI Ps @] Regular expression for inserting the blank characters Ps times Declaration public static Regex CsiInsertBlankCharactersSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInsertColumnsSequenceRegex [CSI Ps ' }] Regular expression for inserting Ps columns Declaration public static Regex CsiInsertColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiInsertLineSequenceRegex [CSI Ps L] Regular expression for inserting Ps lines Declaration public static Regex CsiInsertLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLeftTopPositionSequenceRegex [CSI Ps ; Ps f] Regular expression for horizontal and vertical position Declaration public static Regex CsiLeftTopPositionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLinePositionAbsoluteSequenceRegex [CSI Ps d] Regular expression for line position (absolute) Declaration public static Regex CsiLinePositionAbsoluteSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLinePositionRelativeSequenceRegex [CSI Ps e] Regular expression for line position (relative) Declaration public static Regex CsiLinePositionRelativeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLoadLedsSequenceRegex [CSI Ps q] Regular expression for loading LEDs Declaration public static Regex CsiLoadLedsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiLocatorReportingSequenceRegex [CSI Ps ; Pu ' z] Regular expression for enabling the locator reporting feature Declaration public static Regex CsiLocatorReportingSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMediaCopyPrivateSequenceRegex [CSI ? Ps i] Regular expression for media copy (Private) Declaration public static Regex CsiMediaCopyPrivateSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMediaCopySequenceRegex [CSI Ps i] Regular expression for media copy Declaration public static Regex CsiMediaCopySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorDownSequenceRegex [CSI Ps B] Regular expression for moving the cursor down Ps times Declaration public static Regex CsiMoveCursorDownSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorLeftSequenceRegex [CSI Ps D] Regular expression for moving the cursor to the left Ps times Declaration public static Regex CsiMoveCursorLeftSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorNextLineSequenceRegex [CSI Ps E] Regular expression for moving the cursor to the next line Ps times Declaration public static Regex CsiMoveCursorNextLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorPreviousLineSequenceRegex [CSI Ps F] Regular expression for moving the cursor to the previous line Ps times Declaration public static Regex CsiMoveCursorPreviousLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorRightSequenceRegex [CSI Ps C] Regular expression for moving the cursor to the right Ps times Declaration public static Regex CsiMoveCursorRightSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiMoveCursorUpSequenceRegex [CSI Ps A] Regular expression for moving the cursor up Ps times Declaration public static Regex CsiMoveCursorUpSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopColorFromStackSequenceRegex [CSI # Q] Regular expression for popping color from the stack Declaration public static Regex CsiPopColorFromStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopColorFromStackWithArgsSequenceRegex [CSI Pm # Q] Regular expression for popping color from the stack Declaration public static Regex CsiPopColorFromStackWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopVideoAttributesFromStackSequenceRegex [CSI # q] Regular expression for popping video attributes from the stack Declaration public static Regex CsiPopVideoAttributesFromStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPopVideoAttributesFromStackXtermSequenceRegex [CSI # }] Regular expression for popping video attributes from the stack for xterm Declaration public static Regex CsiPopVideoAttributesFromStackXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushColorToStackSequenceRegex [CSI # P] Regular expression for pushing color into the stack Declaration public static Regex CsiPushColorToStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushColorToStackWithArgsSequenceRegex [CSI Pm # P] Regular expression for pushing color into the stack Declaration public static Regex CsiPushColorToStackWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackSequenceRegex [CSI # p] Regular expression for pushing video attributes into the stack Declaration public static Regex CsiPushVideoAttributesToStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackWithArgsSequenceRegex [CSI Pm # p] Regular expression for pushing video attributes into the stack Declaration public static Regex CsiPushVideoAttributesToStackWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackXtermSequenceRegex [CSI # {] Regular expression for pushing video attributes into the stack for xterm Declaration public static Regex CsiPushVideoAttributesToStackXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex [CSI Pm # {] Regular expression for pushing video attributes into the stack for xterm Declaration public static Regex CsiPushVideoAttributesToStackXtermWithArgsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiQueryKeyModifierOptionsSequenceRegex [CSI > Pp m] Regular expression for querying key modifier options Declaration public static Regex CsiQueryKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRectangularAreaChecksumSequenceRegex [CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y] Regular expression for reporting a checksum of a rectangular area Declaration public static Regex CsiRectangularAreaChecksumSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRepeatGraphicCharacterSequenceRegex [CSI Ps b] Regular expression for repeating a graphic character Declaration public static Regex CsiRepeatGraphicCharacterSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReportGraphicsRenditionRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr # |] Regular expression for reporting graphics rendition for a rectangular area Declaration public static Regex CsiReportGraphicsRenditionRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReportPaletteStackSequenceRegex [CSI # R] Regular expression for reporting the palette stack Declaration public static Regex CsiReportPaletteStackSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReportXtermVersionSequenceRegex [CSI > Ps q] Regular expression for reporting the xterm version Declaration public static Regex CsiReportXtermVersionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestAnsiModeSequenceRegex [CSI Ps $ p] Regular expression for requesting ANSI mode Declaration public static Regex CsiRequestAnsiModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestDecPrivateModeSequenceRegex [CSI ? Ps $ p] Regular expression for requesting DEC private mode Declaration public static Regex CsiRequestDecPrivateModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestLocatorPositionSequenceRegex [CSI Ps ' |] Regular expression for requesting locator position Declaration public static Regex CsiRequestLocatorPositionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestPresentationStateReportSequenceRegex [CSI Ps $ w] Regular expression for requesting presentation state report Declaration public static Regex CsiRequestPresentationStateReportSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRequestTerminalParametersSequenceRegex [CSI Ps x] Regular expression for requesting terminal parameters Declaration public static Regex CsiRequestTerminalParametersSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetKeyModifierOptionsSequenceRegex [CSI > Pp m] Regular expression for resetting key modifier options Declaration public static Regex CsiResetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetModeSequenceRegex [CSI Pm l] Regular expression for reset mode Declaration public static Regex CsiResetModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetPrivateModeSequenceRegex [CSI ? Pm l] Regular expression for reset mode (Private mode reset) Declaration public static Regex CsiResetPrivateModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiResetTitleModeFeaturesSequenceRegex [CSI > Pm T] Regular expression for resetting title mode features Declaration public static Regex CsiResetTitleModeFeaturesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRestoreCursorSequenceRegex [CSI u] Regular expression for restoring the cursor Declaration public static Regex CsiRestoreCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiRestoreDecPrivateModeValuesSequenceRegex [CSI ? Pm r] Regular expression for restoring DEC private mode values Declaration public static Regex CsiRestoreDecPrivateModeValuesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiReverseAttributesInRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr ; Pm $ t] Regular expression for reversing attributes in rectangular area Declaration public static Regex CsiReverseAttributesInRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSaveCursorSequenceRegex [CSI s] Regular expression for saving the cursor Declaration public static Regex CsiSaveCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiScrollDownOriginalSequenceRegex [CSI Ps ^] Regular expression for scrolling down Ps lines Declaration public static Regex CsiScrollDownOriginalSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiScrollDownSequenceRegex [CSI Ps T] Regular expression for scrolling down Ps lines Declaration public static Regex CsiScrollDownSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiScrollUpSequenceRegex [CSI Ps S] Regular expression for scrolling up Ps lines Declaration public static Regex CsiScrollUpSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectActiveStatusDisplaySequenceRegex [CSI Ps $ }] Regular expression for selecting active status display Declaration public static Regex CsiSelectActiveStatusDisplaySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectAttributeChangeExtentSequenceRegex [CSI Ps * x] Regular expression for selecting attribute change extent Declaration public static Regex CsiSelectAttributeChangeExtentSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectCharacterProtectionAttributeSequenceRegex [CSI Ps \" q] Regular expression for selecting character protection attribute Declaration public static Regex CsiSelectCharacterProtectionAttributeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectChecksumExtensionSequenceRegex [CSI Ps # y] Regular expression for selecting checksum extension Declaration public static Regex CsiSelectChecksumExtensionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectColumnsPerPageSequenceRegex [CSI Ps $ |] Regular expression for selecting columns per page Declaration public static Regex CsiSelectColumnsPerPageSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectLocatorEventsSequenceRegex [CSI Pm ' {] Regular expression for selecting locator events Declaration public static Regex CsiSelectLocatorEventsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectNumberOfLinesPerScreenSequenceRegex [CSI Ps * |] Regular expression for selecting number of lines per screen Declaration public static Regex CsiSelectNumberOfLinesPerScreenSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectStatusLineTypeSequenceRegex [CSI Ps $ ~] Regular expression for selecting status line type Declaration public static Regex CsiSelectStatusLineTypeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSelectiveEraseRectangularAreaSequenceRegex [CSI Pt ; Pl ; Pb ; Pr $ {] Regular expression for selectively erasing rectangular area Declaration public static Regex CsiSelectiveEraseRectangularAreaSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSendDeviceAttributesPrimarySequenceRegex [CSI Ps c] Regular expression for sending device attributes (Primary DA) Declaration public static Regex CsiSendDeviceAttributesPrimarySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSendDeviceAttributesSecondarySequenceRegex [CSI = Ps c] Regular expression for sending device attributes (Secondary DA) Declaration public static Regex CsiSendDeviceAttributesSecondarySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSendDeviceAttributesTertiarySequenceRegex [CSI > Ps c] Regular expression for sending device attributes (Tertiary DA) Declaration public static Regex CsiSendDeviceAttributesTertiarySequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetConformanceLevelSequenceRegex [CSI Pl ; Pc \" p] Regular expression for setting conformance level Declaration public static Regex CsiSetConformanceLevelSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetCursorStyleSequenceRegex [CSI Ps SP q] Regular expression for setting cursor style Declaration public static Regex CsiSetCursorStyleSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetGraphicsAttributeSequenceRegex [CSI ? Pi ; Pa ; Pv S] Regular expression for setting graphics attribute Declaration public static Regex CsiSetGraphicsAttributeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetKeyModifierOptionsSequenceRegex [CSI > Pp ; Pv m] Regular expression for setting key modifier options Declaration public static Regex CsiSetKeyModifierOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetLeftRightMarginsSequenceRegex [CSI Pl ; Pr s] Regular expression for setting left and right margins Declaration public static Regex CsiSetLeftRightMarginsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetMarginBellVolumeSequenceRegex [CSI Ps SP u] Regular expression for setting margin bell volume Declaration public static Regex CsiSetMarginBellVolumeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetModeSequenceRegex [CSI Pm h] Regular expression for setting mode Declaration public static Regex CsiSetModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetPointerModeXtermSequenceRegex [CSI > Ps p] Regular expression for setting pointerMode for xterm Declaration public static Regex CsiSetPointerModeXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetPrivateModeSequenceRegex [CSI ? Pm h] Regular expression for setting mode (Private mode set) Declaration public static Regex CsiSetPrivateModeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetScrollingRegionSequenceRegex [CSI Ps ; Ps r] Regular expression for setting scroll region Declaration public static Regex CsiSetScrollingRegionSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetShiftEscapeOptionsSequenceRegex [CSI > Ps s] Regular expression for setting shift-escape options Declaration public static Regex CsiSetShiftEscapeOptionsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetTitleModeXtermSequenceRegex [CSI > Pm t] Regular expression for setting title mode for xterm Declaration public static Regex CsiSetTitleModeXtermSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSetWarningBellVolumeSequenceRegex [CSI Ps SP t] Regular expression for setting warning bell volume Declaration public static Regex CsiSetWarningBellVolumeSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiShiftLeftColumnsSequenceRegex [CSI Ps SP @] Regular expression for shifting left Ps columns Declaration public static Regex CsiShiftLeftColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiShiftRightColumnsSequenceRegex [CSI Ps SP A] Regular expression for shifting right Ps columns Declaration public static Regex CsiShiftRightColumnsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiSoftTerminalResetSequenceRegex [CSI ! p] Regular expression for soft terminal reset Declaration public static Regex CsiSoftTerminalResetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiTabClearSequenceRegex [CSI Ps g] Regular expression for tab clear Declaration public static Regex CsiTabClearSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source CsiWindowManipulationSequenceRegex [CSI Ps ; Ps ; Ps t] Regular expression for window manipulation Declaration public static Regex CsiWindowManipulationSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateCsiChangeAttributesInRectangularArea(string, int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ; Pm $ r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiChangeAttributesInRectangularArea(string attributes, int pt, int pl, int pb, int pr) Parameters Type Name Description string attributes int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiCharacterAttributes(string) [CSI Pm m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCharacterAttributes(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiCopyRectangularArea(int, int, int, int, int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCopyRectangularArea(int ptSrc, int plSrc, int pbSrc, int prSrc, int sourcePage, int ptTarget, int plTarget, int targetPage) Parameters Type Name Description int ptSrc int plSrc int pbSrc int prSrc int sourcePage int ptTarget int plTarget int targetPage Returns Type Description string | Edit this page View Source GenerateCsiCursorBackwardTabulation(int) [CSI Ps Z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorBackwardTabulation(int stops) Parameters Type Name Description int stops Returns Type Description string | Edit this page View Source GenerateCsiCursorCharacterAbsoluteLine(int) [CSI Ps G] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorCharacterAbsoluteLine(int column) Parameters Type Name Description int column Returns Type Description string | Edit this page View Source GenerateCsiCursorForwardTabulation(int) [CSI Ps I] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorForwardTabulation(int stops) Parameters Type Name Description int stops Returns Type Description string | Edit this page View Source GenerateCsiCursorPosition(int, int) [CSI Ps ; Ps H] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPosition(int column, int row) Parameters Type Name Description int column int row Returns Type Description string | Edit this page View Source GenerateCsiCursorPositionAbsolute(int) [CSI Ps `] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPositionAbsolute(int column) Parameters Type Name Description int column Returns Type Description string | Edit this page View Source GenerateCsiCursorPositionRelative(int) [CSI Ps a] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiCursorPositionRelative(int column) Parameters Type Name Description int column Returns Type Description string | Edit this page View Source GenerateCsiDecPrivateModeValues(string) [CSI ? Pm s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDecPrivateModeValues(string values) Parameters Type Name Description string values Returns Type Description string | Edit this page View Source GenerateCsiDeleteChars(int) [CSI Ps P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteChars(int chars) Parameters Type Name Description int chars Returns Type Description string | Edit this page View Source GenerateCsiDeleteColumns(int) [CSI Ps ' ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiDeleteLine(int) [CSI Ps M] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeleteLine(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiDeviceStatusReport(int) [CSI Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeviceStatusReport(int report) Parameters Type Name Description int report Returns Type Description string | Edit this page View Source GenerateCsiDeviceStatusReportDec(int) [CSI ? Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDeviceStatusReportDec(int report) Parameters Type Name Description int report Returns Type Description string | Edit this page View Source GenerateCsiDisableKeyModifierOptions(int) [CSI > Ps n] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiDisableKeyModifierOptions(int report) Parameters Type Name Description int report Returns Type Description string | Edit this page View Source GenerateCsiEnableFilterRectangle(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ' w] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEnableFilterRectangle(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiEraseCharacters(int) [CSI Ps X] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseCharacters(int chars) Parameters Type Name Description int chars Returns Type Description string | Edit this page View Source GenerateCsiEraseInDisplay(int) [CSI Ps J] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInDisplay(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseInDisplayDecsed(int) [CSI ? Ps J] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInDisplayDecsed(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseInLine(int) [CSI Ps K] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInLine(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseInLineDecsel(int) [CSI ? Ps K] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseInLineDecsel(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiEraseRectangularArea(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr $ z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiFillRectangularArea(char, int, int, int, int) [CSI Pc ; Pt ; Pl ; Pb ; Pr $ x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiFillRectangularArea(char character, int pt, int pl, int pb, int pr) Parameters Type Name Description char character int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiInitiateHighlightMouseTracking(int, int, int, int, int) [CSI Ps ; Ps ; Ps ; Ps ; Ps T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInitiateHighlightMouseTracking(int func, int startX, int startY, int firstRow, int lastRow) Parameters Type Name Description int func int startX int startY int firstRow int lastRow Returns Type Description string | Edit this page View Source GenerateCsiInsertBlankCharacters(int) [CSI Ps @] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertBlankCharacters(int blanks) Parameters Type Name Description int blanks Returns Type Description string | Edit this page View Source GenerateCsiInsertColumns(int) [CSI Ps ' }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiInsertLine(int) [CSI Ps L] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiInsertLine(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiLeftTopPosition(int, int) [CSI Ps ; Ps f] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLeftTopPosition(int column, int row) Parameters Type Name Description int column int row Returns Type Description string | Edit this page View Source GenerateCsiLinePositionAbsolute(int) [CSI Ps d] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLinePositionAbsolute(int row) Parameters Type Name Description int row Returns Type Description string | Edit this page View Source GenerateCsiLinePositionRelative(int) [CSI Ps e] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLinePositionRelative(int row) Parameters Type Name Description int row Returns Type Description string | Edit this page View Source GenerateCsiLoadLeds(int) [CSI Ps q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLoadLeds(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiLocatorReporting(int, int) [CSI Ps ; Pu ' z] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiLocatorReporting(int locatorMode, int measurement) Parameters Type Name Description int locatorMode int measurement Returns Type Description string | Edit this page View Source GenerateCsiMediaCopy(int) [CSI Ps i] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMediaCopy(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiMediaCopyPrivate(int) [CSI ? Ps i] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMediaCopyPrivate(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorDown(int) [CSI Ps B] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorDown(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorLeft(int) [CSI Ps D] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorLeft(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorNextLine(int) [CSI Ps E] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorNextLine(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorPreviousLine(int) [CSI Ps F] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorPreviousLine(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorRight(int) [CSI Ps C] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorRight(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiMoveCursorUp(int) [CSI Ps A] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiMoveCursorUp(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiPopColorFromStack() [CSI # Q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopColorFromStack() Returns Type Description string | Edit this page View Source GenerateCsiPopColorFromStack(string) [CSI Pm # Q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopColorFromStack(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiPopVideoAttributesFromStack() [CSI # q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopVideoAttributesFromStack() Returns Type Description string | Edit this page View Source GenerateCsiPopVideoAttributesFromStackXterm() [CSI # }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPopVideoAttributesFromStackXterm() Returns Type Description string | Edit this page View Source GenerateCsiPushColorToStack() [CSI # P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushColorToStack() Returns Type Description string | Edit this page View Source GenerateCsiPushColorToStack(string) [CSI Pm # P] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushColorToStack(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStack() [CSI # p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStack() Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStack(string) [CSI Pm # p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStack(string args) Parameters Type Name Description string args Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStackXterm() [CSI # {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStackXterm() Returns Type Description string | Edit this page View Source GenerateCsiPushVideoAttributesToStackXterm(string) [CSI Pm # {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiPushVideoAttributesToStackXterm(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiQueryKeyModifierOptions(int) [CSI ? Pp m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiQueryKeyModifierOptions(int resource) Parameters Type Name Description int resource Returns Type Description string | Edit this page View Source GenerateCsiRectangularAreaChecksum(int, int, int, int, int, int) [CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRectangularAreaChecksum(int requestId, int pageNumber, int pt, int pl, int pb, int pr) Parameters Type Name Description int requestId int pageNumber int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiRepeatGraphicCharacter(int) [CSI Ps b] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRepeatGraphicCharacter(int times) Parameters Type Name Description int times Returns Type Description string | Edit this page View Source GenerateCsiReportGraphicsRenditionRectangularArea(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr # |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportGraphicsRenditionRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiReportPaletteStack() [CSI # R] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportPaletteStack() Returns Type Description string | Edit this page View Source GenerateCsiReportXtermVersion(int) [CSI > Ps q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReportXtermVersion(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiRequestAnsiMode(int) [CSI Ps $ p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestAnsiMode(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiRequestDecPrivateMode(int) [CSI ? Ps $ p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestDecPrivateMode(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiRequestLocatorPosition(int) [CSI Ps ' |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestLocatorPosition(int transmit) Parameters Type Name Description int transmit Returns Type Description string | Edit this page View Source GenerateCsiRequestPresentationStateReport(int) [CSI Ps $ w] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestPresentationStateReport(int state) Parameters Type Name Description int state Returns Type Description string | Edit this page View Source GenerateCsiRequestTerminalParameters(int) [CSI Ps x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRequestTerminalParameters(int parameter) Parameters Type Name Description int parameter Returns Type Description string | Edit this page View Source GenerateCsiResetKeyModifierOptions(int) [CSI > Pp m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetKeyModifierOptions(int resource) Parameters Type Name Description int resource Returns Type Description string | Edit this page View Source GenerateCsiResetMode(string) [CSI Pm l] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiResetPrivateMode(string) [CSI ? Pm l] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetPrivateMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiResetTitleModeFeatures(int) [CSI > Pm T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiResetTitleModeFeatures(int resetOptions) Parameters Type Name Description int resetOptions Returns Type Description string | Edit this page View Source GenerateCsiRestoreCursor() [CSI u] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRestoreCursor() Returns Type Description string | Edit this page View Source GenerateCsiRestoreDecPrivateModeValues(string) [CSI ? Pm r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiRestoreDecPrivateModeValues(string values) Parameters Type Name Description string values Returns Type Description string | Edit this page View Source GenerateCsiReverseAttributesInRectangularArea(string, int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr ; Pm $ t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiReverseAttributesInRectangularArea(string attributes, int pt, int pl, int pb, int pr) Parameters Type Name Description string attributes int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiSaveCursor() [CSI s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSaveCursor() Returns Type Description string | Edit this page View Source GenerateCsiScrollDown(int) [CSI Ps T] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollDown(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiScrollDownOriginal(int) [CSI Ps ^] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollDownOriginal(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiScrollUp(int) [CSI Ps S] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiScrollUp(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiSelectActiveStatusDisplay(int) [CSI Ps $ }] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectActiveStatusDisplay(int displayMode) Parameters Type Name Description int displayMode Returns Type Description string | Edit this page View Source GenerateCsiSelectAttributeChangeExtent(int) [CSI Ps * x] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectAttributeChangeExtent(int extent) Parameters Type Name Description int extent Returns Type Description string | Edit this page View Source GenerateCsiSelectCharacterProtectionAttribute(int) [CSI Ps \" q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectCharacterProtectionAttribute(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiSelectChecksumExtension(int) [CSI Ps # y] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectChecksumExtension(int modifier) Parameters Type Name Description int modifier Returns Type Description string | Edit this page View Source GenerateCsiSelectColumnsPerPage(int) [CSI Ps $ |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectColumnsPerPage(int columnMode) Parameters Type Name Description int columnMode Returns Type Description string | Edit this page View Source GenerateCsiSelectLocatorEvents(string) [CSI Pm ' {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectLocatorEvents(string parameters) Parameters Type Name Description string parameters Returns Type Description string | Edit this page View Source GenerateCsiSelectNumberOfLinesPerScreen(int) [CSI Ps * |] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectNumberOfLinesPerScreen(int lines) Parameters Type Name Description int lines Returns Type Description string | Edit this page View Source GenerateCsiSelectStatusLineType(int) [CSI Ps $ ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectStatusLineType(int type) Parameters Type Name Description int type Returns Type Description string | Edit this page View Source GenerateCsiSelectiveEraseRectangularArea(int, int, int, int) [CSI Pt ; Pl ; Pb ; Pr $ {] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSelectiveEraseRectangularArea(int pt, int pl, int pb, int pr) Parameters Type Name Description int pt int pl int pb int pr Returns Type Description string | Edit this page View Source GenerateCsiSendDeviceAttributesPrimary(int) [CSI Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesPrimary(int attributes) Parameters Type Name Description int attributes Returns Type Description string | Edit this page View Source GenerateCsiSendDeviceAttributesSecondary(int) [CSI = Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesSecondary(int attributes) Parameters Type Name Description int attributes Returns Type Description string | Edit this page View Source GenerateCsiSendDeviceAttributesTertiary(int) [CSI > Ps c] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSendDeviceAttributesTertiary(int attributes) Parameters Type Name Description int attributes Returns Type Description string | Edit this page View Source GenerateCsiSetConformanceLevel(int, int) [CSI Pl ; Pc \" p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetConformanceLevel(int level, int conformance) Parameters Type Name Description int level int conformance Returns Type Description string | Edit this page View Source GenerateCsiSetCursorStyle(int) [CSI Ps SP q] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetCursorStyle(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiSetGraphicsAttribute(int, int, string) [CSI ? Pi ; Pa ; Pv S] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetGraphicsAttribute(int itemType, int attributeManager, string geometry) Parameters Type Name Description int itemType int attributeManager string geometry Returns Type Description string | Edit this page View Source GenerateCsiSetKeyModifierOptions(int, int) [CSI > Pp ; Pv m] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetKeyModifierOptions(int resource, int modify) Parameters Type Name Description int resource int modify Returns Type Description string | Edit this page View Source GenerateCsiSetLeftRightMargins(int, int) [CSI Pl ; Pr s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetLeftRightMargins(int left, int right) Parameters Type Name Description int left int right Returns Type Description string | Edit this page View Source GenerateCsiSetMarginBellVolume(int) [CSI Ps SP u] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetMarginBellVolume(int level) Parameters Type Name Description int level Returns Type Description string | Edit this page View Source GenerateCsiSetMode(string) [CSI Pm h] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiSetPointerModeXterm(int) [CSI > Ps p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetPointerModeXterm(int hideMode) Parameters Type Name Description int hideMode Returns Type Description string | Edit this page View Source GenerateCsiSetPrivateMode(string) [CSI ? Pm h] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetPrivateMode(string mode) Parameters Type Name Description string mode Returns Type Description string | Edit this page View Source GenerateCsiSetScrollingRegion(int, int) [CSI Ps ; Ps r] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetScrollingRegion(int top, int bottom) Parameters Type Name Description int top int bottom Returns Type Description string | Edit this page View Source GenerateCsiSetShiftEscapeOptions(int) [CSI > Ps s] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetShiftEscapeOptions(int option) Parameters Type Name Description int option Returns Type Description string | Edit this page View Source GenerateCsiSetTitleModeXterm(string) [CSI > Pm t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetTitleModeXterm(string modes) Parameters Type Name Description string modes Returns Type Description string | Edit this page View Source GenerateCsiSetWarningBellVolume(int) [CSI Ps SP t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSetWarningBellVolume(int level) Parameters Type Name Description int level Returns Type Description string | Edit this page View Source GenerateCsiShiftLeftColumns(int) [CSI Ps SP @] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiShiftLeftColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiShiftRightColumns(int) [CSI Ps SP A] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiShiftRightColumns(int columns) Parameters Type Name Description int columns Returns Type Description string | Edit this page View Source GenerateCsiSoftTerminalReset() [CSI ! p] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiSoftTerminalReset() Returns Type Description string | Edit this page View Source GenerateCsiTabClear(int) [CSI Ps g] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiTabClear(int mode) Parameters Type Name Description int mode Returns Type Description string | Edit this page View Source GenerateCsiWindowManipulation(int, int, int) [CSI Ps ; Ps ; Ps ; t] Generates an escape sequence that can be used for the console Declaration public static string GenerateCsiWindowManipulation(int windowAction, int windowAction2, int windowAction3) Parameters Type Name Description int windowAction int windowAction2 int windowAction3 Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.DcsSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.DcsSequences.html",
    "title": "Class DcsSequences | Terminaux API - Aptivi",
    "keywords": "Class DcsSequences List of DCS sequences and their regular expressions Inheritance object DcsSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class DcsSequences Properties | Edit this page View Source DcsRequestResourceValuesSequenceRegex [DCS + Q Pt ST] Regular expression for requesting resource values for xterm Declaration public static Regex DcsRequestResourceValuesSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsRequestStatusStringSequenceRegex [DCS $ q Pt ST] Regular expression for requesting status string Declaration public static Regex DcsRequestStatusStringSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsRequestTermInfoDataSequenceRegex [DCS + q Pt ST] Regular expression for requesting terminfo data for xterm Declaration public static Regex DcsRequestTermInfoDataSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsRestorePresentationStatusSequenceRegex [DCS Ps $ t Pt ST] Regular expression for restoring presentation status Declaration public static Regex DcsRestorePresentationStatusSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsSetTermInfoDataSequenceRegex [DCS + p Pt ST] Regular expression for setting terminfo data for xterm Declaration public static Regex DcsSetTermInfoDataSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source DcsUserDefinedKeysSequenceRegex [DCS Ps ; Ps | Pt ST] Regular expression for user defined keys Declaration public static Regex DcsUserDefinedKeysSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateDcsRequestResourceValues(string) [DCS + Q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestResourceValues(string xtermResourceNames) Parameters Type Name Description string xtermResourceNames Returns Type Description string | Edit this page View Source GenerateDcsRequestStatusString(string) [DCS $ q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestStatusString(string status) Parameters Type Name Description string status Returns Type Description string | Edit this page View Source GenerateDcsRequestTermInfoData(string) [DCS + q Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRequestTermInfoData(string termName) Parameters Type Name Description string termName Returns Type Description string | Edit this page View Source GenerateDcsRestorePresentationStatus(int, string) [DCS Ps $ t Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsRestorePresentationStatus(int controlConvert, string status) Parameters Type Name Description int controlConvert string status Returns Type Description string | Edit this page View Source GenerateDcsSetTermInfoData(string) [DCS + p Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsSetTermInfoData(string termName) Parameters Type Name Description string termName Returns Type Description string | Edit this page View Source GenerateDcsUserDefinedKeys(int, int, string) [DCS Ps ; Ps | Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateDcsUserDefinedKeys(int clearUdkDefinitions, int dontLockKeys, string keybindings) Parameters Type Name Description int clearUdkDefinitions int dontLockKeys string keybindings Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.EscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.EscSequences.html",
    "title": "Class EscSequences | Terminaux API - Aptivi",
    "keywords": "Class EscSequences List of ESC sequences and their regular expressions Inheritance object EscSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class EscSequences Properties | Edit this page View Source Esc7BitControlsSequenceRegex [ESC SP F] Regular expression for 7-bit controls Declaration public static Regex Esc7BitControlsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source Esc8BitControlsSequenceRegex [ESC SP G] Regular expression for 8-bit controls Declaration public static Regex Esc8BitControlsSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscAnsiConformanceLevel1SequenceRegex [ESC SP L] Regular expression for setting ANSI conformance level 1 Declaration public static Regex EscAnsiConformanceLevel1SequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscAnsiConformanceLevel2SequenceRegex [ESC SP M] Regular expression for setting ANSI conformance level 2 Declaration public static Regex EscAnsiConformanceLevel2SequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscAnsiConformanceLevel3SequenceRegex [ESC SP N] Regular expression for setting ANSI conformance level 3 Declaration public static Regex EscAnsiConformanceLevel3SequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscApplicationKeypadSequenceRegex [ESC =] Regular expression for application keypad Declaration public static Regex EscApplicationKeypadSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscBackIndexSequenceRegex [ESC 6] Regular expression for back index Declaration public static Regex EscBackIndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscCursorToLowerLeftCornerSequenceRegex [ESC F] Regular expression for cursor to lower left corner Declaration public static Regex EscCursorToLowerLeftCornerSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecDoubleHeightLineBottomHalfSequenceRegex [ESC # 4] Regular expression for DEC double-height line bottom half Declaration public static Regex EscDecDoubleHeightLineBottomHalfSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecDoubleHeightLineTopHalfSequenceRegex [ESC # 3] Regular expression for DEC double-height line top half Declaration public static Regex EscDecDoubleHeightLineTopHalfSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecDoubleWidthLineSequenceRegex [ESC # 6] Regular expression for DEC double-width line Declaration public static Regex EscDecDoubleWidthLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecScreenAlignmentTestSequenceRegex [ESC # 8] Regular expression for DEC screen alignment test Declaration public static Regex EscDecScreenAlignmentTestSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDecSingleWidthLineSequenceRegex [ESC # 5] Regular expression for DEC single-width line Declaration public static Regex EscDecSingleWidthLineSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG0CharacterSetSequenceRegex [ESC ( Pc] Regular expression for designating the G0 character set Declaration public static Regex EscDesignateG0CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG1CharacterSetAltSequenceRegex [ESC - Pc] Regular expression for designating the G1 character set Declaration public static Regex EscDesignateG1CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG1CharacterSetSequenceRegex [ESC ) Pc] Regular expression for designating the G1 character set Declaration public static Regex EscDesignateG1CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG2CharacterSetAltSequenceRegex [ESC , Pc] Regular expression for designating the G2 character set Declaration public static Regex EscDesignateG2CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG2CharacterSetSequenceRegex [ESC * Pc] Regular expression for designating the G2 character set Declaration public static Regex EscDesignateG2CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG3CharacterSetAltSequenceRegex [ESC / Pc] Regular expression for designating the G3 character set Declaration public static Regex EscDesignateG3CharacterSetAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscDesignateG3CharacterSetSequenceRegex [ESC + Pc] Regular expression for designating the G3 character set Declaration public static Regex EscDesignateG3CharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscForwardIndexSequenceRegex [ESC 9] Regular expression for forward index Declaration public static Regex EscForwardIndexSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscFullResetSequenceRegex [ESC c] Regular expression for full reset Declaration public static Regex EscFullResetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG1CharacterSetGrSequenceRegex [ESC ~] Regular expression for invoking the G1 character set as GR Declaration public static Regex EscInvokeG1CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG2CharacterSetGlSequenceRegex [ESC n] Regular expression for invoking the G2 character set as GL Declaration public static Regex EscInvokeG2CharacterSetGlSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG2CharacterSetGrSequenceRegex [ESC }] Regular expression for invoking the G2 character set as GR Declaration public static Regex EscInvokeG2CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG3CharacterSetGlSequenceRegex [ESC o] Regular expression for invoking the G3 character set as GL Declaration public static Regex EscInvokeG3CharacterSetGlSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscInvokeG3CharacterSetGrSequenceRegex [ESC |] Regular expression for invoking the G3 character set as GR Declaration public static Regex EscInvokeG3CharacterSetGrSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscMemoryLockSequenceRegex [ESC l] Regular expression for memory lock Declaration public static Regex EscMemoryLockSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscMemoryUnlockSequenceRegex [ESC m] Regular expression for memory unlock Declaration public static Regex EscMemoryUnlockSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscNormalKeypadSequenceRegex [ESC >] Regular expression for normal keypad Declaration public static Regex EscNormalKeypadSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscRestoreCursorSequenceRegex [ESC 8] Regular expression for restoring cursor Declaration public static Regex EscRestoreCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscSaveCursorSequenceRegex [ESC 7] Regular expression for saving cursor Declaration public static Regex EscSaveCursorSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscSelectDefaultCharacterSetSequenceRegex [ESC % @] Regular expression for selecting default character set Declaration public static Regex EscSelectDefaultCharacterSetSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source EscSelectUtf8CharacterSetSequenceRegex [ESC % G] Regular expression for selecting UTF-8 character set Declaration public static Regex EscSelectUtf8CharacterSetSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateEsc7BitControls() [ESC SP F] Generates an escape sequence that can be used for the console Declaration public static string GenerateEsc7BitControls() Returns Type Description string | Edit this page View Source GenerateEsc8BitControls() [ESC SP G] Generates an escape sequence that can be used for the console Declaration public static string GenerateEsc8BitControls() Returns Type Description string | Edit this page View Source GenerateEscAnsiConformanceLevel1() [ESC SP L] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel1() Returns Type Description string | Edit this page View Source GenerateEscAnsiConformanceLevel2() [ESC SP M] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel2() Returns Type Description string | Edit this page View Source GenerateEscAnsiConformanceLevel3() [ESC SP N] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscAnsiConformanceLevel3() Returns Type Description string | Edit this page View Source GenerateEscApplicationKeypad() [ESC =] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscApplicationKeypad() Returns Type Description string | Edit this page View Source GenerateEscBackIndex() [ESC 6] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscBackIndex() Returns Type Description string | Edit this page View Source GenerateEscCursorToLowerLeftCorner() [ESC F] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscCursorToLowerLeftCorner() Returns Type Description string | Edit this page View Source GenerateEscDecDoubleHeightLineBottomHalf() [ESC # 4] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleHeightLineBottomHalf() Returns Type Description string | Edit this page View Source GenerateEscDecDoubleHeightLineTopHalf() [ESC # 3] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleHeightLineTopHalf() Returns Type Description string | Edit this page View Source GenerateEscDecDoubleWidthLine() [ESC # 6] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecDoubleWidthLine() Returns Type Description string | Edit this page View Source GenerateEscDecScreenAlignmentTest() [ESC # 8] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecScreenAlignmentTest() Returns Type Description string | Edit this page View Source GenerateEscDecSingleWidthLine() [ESC # 5] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDecSingleWidthLine() Returns Type Description string | Edit this page View Source GenerateEscDesignateG0CharacterSet(string) [ESC ( Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG0CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG1CharacterSet(string) [ESC ) Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG1CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG1CharacterSetAlt(string) [ESC - Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG1CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG2CharacterSet(string) [ESC * Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG2CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG2CharacterSetAlt(string) [ESC , Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG2CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG3CharacterSet(string) [ESC + Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG3CharacterSet(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscDesignateG3CharacterSetAlt(string) [ESC / Pc] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscDesignateG3CharacterSetAlt(string charSet) Parameters Type Name Description string charSet Returns Type Description string | Edit this page View Source GenerateEscForwardIndex() [ESC 9] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscForwardIndex() Returns Type Description string | Edit this page View Source GenerateEscFullReset() [ESC c] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscFullReset() Returns Type Description string | Edit this page View Source GenerateEscInvokeG1CharacterSetGr() [ESC ~] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG1CharacterSetGr() Returns Type Description string | Edit this page View Source GenerateEscInvokeG2CharacterSetGl() [ESC n] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG2CharacterSetGl() Returns Type Description string | Edit this page View Source GenerateEscInvokeG2CharacterSetGr() [ESC }] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG2CharacterSetGr() Returns Type Description string | Edit this page View Source GenerateEscInvokeG3CharacterSetGl() [ESC o] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG3CharacterSetGl() Returns Type Description string | Edit this page View Source GenerateEscInvokeG3CharacterSetGr() [ESC |] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscInvokeG3CharacterSetGr() Returns Type Description string | Edit this page View Source GenerateEscMemoryLock() [ESC l] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscMemoryLock() Returns Type Description string | Edit this page View Source GenerateEscMemoryUnlock() [ESC m] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscMemoryUnlock() Returns Type Description string | Edit this page View Source GenerateEscNormalKeypad() [ESC >] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscNormalKeypad() Returns Type Description string | Edit this page View Source GenerateEscRestoreCursor() [ESC 8] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscRestoreCursor() Returns Type Description string | Edit this page View Source GenerateEscSaveCursor() [ESC 7] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSaveCursor() Returns Type Description string | Edit this page View Source GenerateEscSelectDefaultCharacterSet() [ESC % @] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSelectDefaultCharacterSet() Returns Type Description string | Edit this page View Source GenerateEscSelectUtf8CharacterSet() [ESC % G] Generates an escape sequence that can be used for the console Declaration public static string GenerateEscSelectUtf8CharacterSet() Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.OscSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.OscSequences.html",
    "title": "Class OscSequences | Terminaux API - Aptivi",
    "keywords": "Class OscSequences List of OSC sequences and their regular expressions Inheritance object OscSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class OscSequences Properties | Edit this page View Source OscOperatingSystemCommandAltSequenceRegex [OSC Ps ; Pt ST] Regular expression for operating system command Declaration public static Regex OscOperatingSystemCommandAltSequenceRegex { get; } Property Value Type Description Regex | Edit this page View Source OscOperatingSystemCommandSequenceRegex [OSC Ps ; Pt BEL] Regular expression for operating system command Declaration public static Regex OscOperatingSystemCommandSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GenerateOscOperatingSystemCommand(string) [OSC Ps ; Pt BEL] Generates an escape sequence that can be used for the console Declaration public static string GenerateOscOperatingSystemCommand(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string | Edit this page View Source GenerateOscOperatingSystemCommandAlt(string) [OSC Ps ; Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GenerateOscOperatingSystemCommandAlt(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.PmSequences.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.PmSequences.html",
    "title": "Class PmSequences | Terminaux API - Aptivi",
    "keywords": "Class PmSequences List of PM sequences and their regular expressions Inheritance object PmSequences Namespace: Terminaux.Sequences.Builder.Types Assembly: Terminaux.dll Syntax public static class PmSequences Properties | Edit this page View Source PmPrivacyMessageSequenceRegex [PM Pt ST] Regular expression for privacy message Declaration public static Regex PmPrivacyMessageSequenceRegex { get; } Property Value Type Description Regex Methods | Edit this page View Source GeneratePmPrivacyMessage(string) [PM Pt ST] Generates an escape sequence that can be used for the console Declaration public static string GeneratePmPrivacyMessage(string proprietaryCommands) Parameters Type Name Description string proprietaryCommands Returns Type Description string"
  },
  "api/Terminaux.Sequences.Builder.Types.html": {
    "href": "api/Terminaux.Sequences.Builder.Types.html",
    "title": "Namespace Terminaux.Sequences.Builder.Types | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Sequences.Builder.Types Classes ApcSequences List of APC sequences and their regular expressions C1Sequences List of C1 sequences and their regular expressions CsiSequences List of CSI sequences and their regular expressions DcsSequences List of DCS sequences and their regular expressions EscSequences List of ESC sequences and their regular expressions OscSequences List of OSC sequences and their regular expressions PmSequences List of PM sequences and their regular expressions"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBasicChars.html",
    "title": "Class VtSequenceBasicChars | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceBasicChars VT sequence basic characters for forming VT sequences Inheritance object VtSequenceBasicChars Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public static class VtSequenceBasicChars Fields | Edit this page View Source AlternateCharacterSetChar Gets the alternate character set character Declaration public const char AlternateCharacterSetChar = '\\u000e' Field Value Type Description char | Edit this page View Source BackspaceChar Gets the backspace character Declaration public const char BackspaceChar = '\\b' Field Value Type Description char | Edit this page View Source BellChar Gets the bell character Declaration public const char BellChar = '\\a' Field Value Type Description char | Edit this page View Source CarriageReturnChar Gets the carriage return character Declaration public const char CarriageReturnChar = '\\r' Field Value Type Description char | Edit this page View Source EscapeChar Gets the escape character Declaration public const char EscapeChar = '\\u001b' Field Value Type Description char | Edit this page View Source FormFeedChar Gets the form feed character Declaration public const char FormFeedChar = '\\f' Field Value Type Description char | Edit this page View Source HorizontalTabChar Gets the horizontal tab character Declaration public const char HorizontalTabChar = '\\t' Field Value Type Description char | Edit this page View Source LineFeedChar Gets the line feed character Declaration public const char LineFeedChar = '\\n' Field Value Type Description char | Edit this page View Source ReturnTerminalStatusChar Gets the return terminal status character Declaration public const char ReturnTerminalStatusChar = '\\u0005' Field Value Type Description char | Edit this page View Source SpaceChar Gets the space character Declaration public const char SpaceChar = ' ' Field Value Type Description char | Edit this page View Source StChar Gets the St character Declaration public const char StChar = '\\u009c' Field Value Type Description char | Edit this page View Source StandardCharacterSetChar Gets the standard character set character Declaration public const char StandardCharacterSetChar = '\\u000f' Field Value Type Description char | Edit this page View Source VerticalTabChar Gets the vertical tab character Declaration public const char VerticalTabChar = '\\v' Field Value Type Description char"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceBuilderTools.html",
    "title": "Class VtSequenceBuilderTools | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceBuilderTools VT sequence builder tools Inheritance object VtSequenceBuilderTools Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public static class VtSequenceBuilderTools Methods | Edit this page View Source BuildVtSequence(VtSequenceSpecificTypes, params object[]) Builds a VT sequence using specific types Declaration public static string BuildVtSequence(VtSequenceSpecificTypes specificType, params object[] arguments) Parameters Type Name Description VtSequenceSpecificTypes specificType object[] arguments Returns Type Description string Exceptions Type Condition Exception | Edit this page View Source DetermineTypeFromSequence(string) Determines the VT sequence type from the given sequence Declaration public static (VtSequenceType, VtSequenceSpecificTypes) DetermineTypeFromSequence(string sequence) Parameters Type Name Description string sequence The sequence to query Returns Type Description (VtSequenceType, VtSequenceSpecificTypes) A tuple of (VtSequenceType, VtSequenceSpecificTypes) containing information about a sequence type and a sequence command type Exceptions Type Condition Exception"
  },
  "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html": {
    "href": "api/Terminaux.Sequences.Builder.VtSequenceSpecificTypes.html",
    "title": "Enum VtSequenceSpecificTypes | Terminaux API - Aptivi",
    "keywords": "Enum VtSequenceSpecificTypes Specific VT sequences sorted by type Namespace: Terminaux.Sequences.Builder Assembly: Terminaux.dll Syntax public enum VtSequenceSpecificTypes Fields Name Description ApcApplicationProgramCommand Application program command (Kermit) C1ApplicationProgramCommand Application program command C1ControlSequenceIndicator Control sequence indicator C1DeviceControlString Device control string C1EndOfGuardedArea End of guarded area C1Index Index C1NextLine Next line C1OperatingSystemCommand Operating system command C1PrivacyMessage Privacy Message C1ReturnTerminalId Return terminal ID C1ReverseIndex Reverse index C1SingleShiftSelectG2CharacterSet Single shift G2 character set C1SingleShiftSelectG3CharacterSet Single shift G3 character set C1StartOfGuardedArea Start of guarded area C1StartOfString Start of string C1StringTerminator String terminator C1TabSet Tab set CsiChangeAttributesInRectangularArea Change attributes in a rectangular area CsiCharacterAttributes Character attributes (color, bold, formatting, ...) CsiCopyRectangularArea Copy rectangular area CsiCursorBackwardTabulation Cursor backward tabulation CsiCursorCharacterAbsoluteLine Cursor character absolute (line) CsiCursorForwardTabulation Cursor forward tabulation CsiCursorPosition Cursor position CsiCursorPositionAbsolute Cursor position (absolute) CsiCursorPositionRelative Cursor position (relative) CsiDecPrivateModeValues DEC private mode values CsiDeleteChars Delete characters CsiDeleteColumns Delete columns CsiDeleteLine Delete line CsiDeviceStatusReport Device status report CsiDeviceStatusReportDec Device status report (DEC) CsiDisableKeyModifierOptions Disable key modifier options CsiEnableFilterRectangle Enable filter rectangle CsiEraseCharacters Erase characters CsiEraseInDisplay Erase in display CsiEraseInDisplayDecsed Erase in display (DECSED) CsiEraseInLine Erase in line CsiEraseInLineDecsel Erase in line (DECSEL) CsiEraseRectangularArea Erase a rectangular area CsiFillRectangularArea Fill a rectuangular area CsiInitiateHighlightMouseTracking Initiate highlihgt mouse tracking CsiInsertBlankCharacters Insert blank characters CsiInsertColumns Insert columns CsiInsertLine Insert line CsiLeftTopPosition Left top position CsiLinePositionAbsolute Line position (absolute) CsiLinePositionRelative Line position (relative) CsiLoadLeds Load LEDs CsiLocatorReporting Locator reporting CsiMediaCopy Media copy CsiMediaCopyPrivate Media copy (private) CsiMoveCursorDown Move cursor down CsiMoveCursorLeft Move cursor left CsiMoveCursorNextLine Move cursor to next line CsiMoveCursorPreviousLine Move cursor to previous line CsiMoveCursorRight Move cursor right CsiMoveCursorUp Move cursor up CsiPopColorFromStack Pop color from stack CsiPopColorFromStackWithArgs Pop color from stack with arguments CsiPopVideoAttributesFromStack Pop video attributes from stack CsiPopVideoAttributesFromStackXterm Pop video attributes from stack for xterm CsiPushColorToStack Push color to stack CsiPushColorToStackWithArgs Push color to stack with arguments CsiPushVideoAttributesToStack Push video attributes to stack CsiPushVideoAttributesToStackWithArgs Push video attributes to stack with arguments CsiPushVideoAttributesToStackXterm Push video attributes to stack for xterm CsiPushVideoAttributesToStackXtermWithArgs Push video attributes to stack for xterm with arguments CsiQueryKeyModifierOptions Query key modifier options CsiRectangularAreaChecksum Checksum of a rectangular area CsiRepeatGraphicCharacter Repeat graphic character CsiReportGraphicsRenditionRectangularArea Report graphics rendition for a rectangular area CsiReportPaletteStack Report palette stack CsiReportXtermVersion Report xterm version CsiRequestAnsiMode Request ANSI mode CsiRequestDecPrivateMode Request DEC private mode CsiRequestLocatorPosition Request locator position CsiRequestPresentationStateReport Request presentation state report CsiRequestTerminalParameters Request terminal parameters CsiResetKeyModifierOptions Reset key modifier options CsiResetMode Reset mode CsiResetPrivateMode Reset private mode CsiResetTitleModeFeatures Reset title mode features CsiRestoreCursor Restore cursor CsiRestoreDecPrivateModeValues Restore DEC private mode values CsiReverseAttributesInRectangularArea Reverse attributes in rectangular area CsiSaveCursor Save cursor CsiScrollDown Scroll down CsiScrollDownOriginal Scroll down CsiScrollUp Scroll up CsiSelectActiveStatusDisplay Select active status display CsiSelectAttributeChangeExtent Select attribute change extent CsiSelectCharacterProtectionAttribute Select character protection attribute CsiSelectChecksumExtension Select checksum extension CsiSelectColumnsPerPage Select columns per page CsiSelectLocatorEvents Select locator events CsiSelectNumberOfLinesPerScreen Select number of lines per screen CsiSelectStatusLineType Select status line type CsiSelectiveEraseRectangularArea Selectively erase a rectangular area CsiSendDeviceAttributesPrimary Send device attributes (primary) CsiSendDeviceAttributesSecondary Send device attributes (secondary) CsiSendDeviceAttributesTertiary Send device attributes (tertiary) CsiSetConformanceLevel Set confirmance level CsiSetCursorStyle Set cursor style CsiSetGraphicsAttribute Set graphics attribute CsiSetKeyModifierOptions Set key modifier options CsiSetLeftRightMargins Set left right margins CsiSetMarginBellVolume Set margin bell volume CsiSetMode Set mode CsiSetPointerModeXterm Set pointer mode for xterm CsiSetPrivateMode Set private mode CsiSetScrollingRegion Set scrolling region CsiSetShiftEscapeOptions Set shift-escape options CsiSetTitleModeXterm Set title mode for xterm CsiSetWarningBellVolume Set warning bell volume CsiShiftLeftColumns Shift left columns CsiShiftRightColumns Shift right columns CsiSoftTerminalReset Soft terminal reset CsiTabClear Tab clear CsiWindowManipulation Window manipulation DcsRequestResourceValues Request resource values DcsRequestStatusString Request status string DcsRequestTermInfoData Request termino data DcsRestorePresentationStatus Restore presentation status DcsSetTermInfoData Set terminfo data DcsUserDefinedKeys User defined keys Esc7BitControls 7-bit controls Esc8BitControls 8-bit controls EscAnsiConformanceLevel1 ANSI conformance level 1 EscAnsiConformanceLevel2 ANSI conformance level 2 EscAnsiConformanceLevel3 ANSI conformance level 3 EscApplicationKeypad Application keypad EscBackIndex back index EscCursorToLowerLeftCorner Cursor to lower left corner EscDecDoubleHeightLineBottomHalf Double height line bottom half (DEC) EscDecDoubleHeightLineTopHalf Double height line top half (DEC) EscDecDoubleWidthLine Double width line (DEC) EscDecScreenAlignmentTest Screen alignment test (DEC) EscDecSingleWidthLine Single width line (DEC) EscDesignateG0CharacterSet Designate the G0 character set EscDesignateG1CharacterSet Designate the G1 character set EscDesignateG1CharacterSetAlt Designate the G1 character set (alt) EscDesignateG2CharacterSet Designate the G2 character set EscDesignateG2CharacterSetAlt Designate the G2 character set (alt) EscDesignateG3CharacterSet Designate the G3 character set EscDesignateG3CharacterSetAlt Designate the G3 character set (alt) EscForwardIndex Forward index EscFullReset Full reset EscInvokeG1CharacterSetGr Invoke G1 character set in GR mode EscInvokeG2CharacterSetGl Invoke G2 character set in GL mode EscInvokeG2CharacterSetGr Invoke G2 character set in GR mode EscInvokeG3CharacterSetGl Invoke G3 character set in GL mode EscInvokeG3CharacterSetGr Invoke G3 character set in GR mode EscMemoryLock Memory lock EscMemoryUnlock Memory unlock EscNormalKeypad Normal keypad EscRestoreCursor Restore cursor EscSaveCursor Save cursor EscSelectDefaultCharacterSet Select default character set EscSelectUtf8CharacterSet Select UTF8 character set OscOperatingSystemCommand Operating system command sequence OscOperatingSystemCommandAlt Operating system command sequence (alternative) PmPrivacyMessage Privacy message command sequence (Kermit)"
  },
  "api/Terminaux.Sequences.Builder.html": {
    "href": "api/Terminaux.Sequences.Builder.html",
    "title": "Namespace Terminaux.Sequences.Builder | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Sequences.Builder Classes VtSequenceBasicChars VT sequence basic characters for forming VT sequences VtSequenceBuilderTools VT sequence builder tools Enums VtSequenceSpecificTypes Specific VT sequences sorted by type"
  },
  "api/Terminaux.Sequences.VtSequenceRegexes.html": {
    "href": "api/Terminaux.Sequences.VtSequenceRegexes.html",
    "title": "Class VtSequenceRegexes | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceRegexes VT sequence regular expressions Inheritance object VtSequenceRegexes Namespace: Terminaux.Sequences Assembly: Terminaux.dll Syntax public static class VtSequenceRegexes Properties | Edit this page View Source APCSequences APC sequences Declaration public static Regex APCSequences { get; } Property Value Type Description Regex | Edit this page View Source AllVTSequences All VT sequences Declaration public static Regex AllVTSequences { get; } Property Value Type Description Regex | Edit this page View Source C1Sequences C1 sequences Declaration public static Regex C1Sequences { get; } Property Value Type Description Regex | Edit this page View Source CSISequences CSI sequences Declaration public static Regex CSISequences { get; } Property Value Type Description Regex | Edit this page View Source DCSSequences DCS sequences Declaration public static Regex DCSSequences { get; } Property Value Type Description Regex | Edit this page View Source ESCSequences ESC sequences Declaration public static Regex ESCSequences { get; } Property Value Type Description Regex | Edit this page View Source Nothing Match nothing Declaration public static Regex Nothing { get; } Property Value Type Description Regex | Edit this page View Source OSCSequences OSC sequences Declaration public static Regex OSCSequences { get; } Property Value Type Description Regex | Edit this page View Source PMSequences PM sequences Declaration public static Regex PMSequences { get; } Property Value Type Description Regex"
  },
  "api/Terminaux.Sequences.VtSequenceTools.html": {
    "href": "api/Terminaux.Sequences.VtSequenceTools.html",
    "title": "Class VtSequenceTools | Terminaux API - Aptivi",
    "keywords": "Class VtSequenceTools Provides all the tools for manipulating with the VT sequences Inheritance object VtSequenceTools Namespace: Terminaux.Sequences Assembly: Terminaux.dll Syntax public static class VtSequenceTools Methods | Edit this page View Source DetermineTypeFromText(string) Determines the VT sequence type from the given text Declaration public static VtSequenceType DetermineTypeFromText(string Text) Parameters Type Name Description string Text Text that contains escape sequences Returns Type Description VtSequenceType The type that contains all the VT escape sequence types found in the Text | Edit this page View Source FilterVTSequences(string, string, VtSequenceType) Filters all of the VT sequences Declaration public static string FilterVTSequences(string Text, string replace = \"\", VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences string replace Replace the sequences with this text VtSequenceType type VT sequence type Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source FilterVTSequencesMultiple(string, string, VtSequenceType) Filters all of the VT sequences Declaration public static string FilterVTSequencesMultiple(string Text, string replace = \"\", VtSequenceType types = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences string replace Replace the sequences with this text VtSequenceType types VT sequence types Returns Type Description string The text that doesn't contain the VT sequences | Edit this page View Source GetSequenceFilterRegexFromType(VtSequenceType) Gets the sequence filter regular expression from the provided VT sequence type (VtSequenceType) Declaration public static Regex GetSequenceFilterRegexFromType(VtSequenceType type = VtSequenceType.All) Parameters Type Name Description VtSequenceType type VT sequence type Returns Type Description Regex Regular expression from the provided VT sequence type | Edit this page View Source GetSequenceFilterRegexFromTypes(VtSequenceType) Gets the sequence filter regular expression from the provided VT sequence types (VtSequenceType) Declaration public static Regex GetSequenceFilterRegexFromTypes(VtSequenceType types = VtSequenceType.All) Parameters Type Name Description VtSequenceType types VT sequence types Returns Type Description Regex Regular expression from the provided VT sequence types | Edit this page View Source IsMatchVTSequences(string, VtSequenceType) Does the string contain all of the VT sequences or a VT sequence of any type? Declaration public static bool IsMatchVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description bool True if any of the provided VT types are found; otherwise, false. | Edit this page View Source IsMatchVTSequencesMultiple(string, VtSequenceType) Does the string contain all of the VT sequences or a VT sequence of any type? Declaration public static bool IsMatchVTSequencesMultiple(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description bool True if any of the provided VT types are found; otherwise, false. | Edit this page View Source IsMatchVTSequencesSpecific(string, VtSequenceType) Does the string contain all of the VT sequences or a VT sequence of any specific type? Declaration public static Dictionary<VtSequenceType, bool> IsMatchVTSequencesSpecific(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description Dictionary<VtSequenceType, bool> A dictionary of each VT sequence type with either true/false for any type test. | Edit this page View Source MatchVTSequences(string, VtSequenceType) Matches all of the VT sequences Declaration public static Match[][] MatchVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description Match[][] The array of MatchCollections that contain the capture and group information for the found VT sequences | Edit this page View Source MatchVTSequencesMultiple(string, VtSequenceType) Matches all of the VT sequences Declaration public static (VtSequenceType, Match[])[] MatchVTSequencesMultiple(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description (VtSequenceType, Match[])[] The array of Matches that contain the capture and group information for the found VT sequences | Edit this page View Source SplitVTSequences(string, VtSequenceType) Splits all of the VT sequences Declaration public static string[] SplitVTSequences(string Text, VtSequenceType type = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType type VT sequence type Returns Type Description string[] The group of texts that don't contain the VT sequences | Edit this page View Source SplitVTSequencesMultiple(string, VtSequenceType) Splits all of the VT sequences Declaration public static string[] SplitVTSequencesMultiple(string Text, VtSequenceType types = VtSequenceType.All) Parameters Type Name Description string Text The text that contains the VT sequences VtSequenceType types VT sequence types Returns Type Description string[] The group of texts that don't contain the VT sequences"
  },
  "api/Terminaux.Sequences.VtSequenceType.html": {
    "href": "api/Terminaux.Sequences.VtSequenceType.html",
    "title": "Enum VtSequenceType | Terminaux API - Aptivi",
    "keywords": "Enum VtSequenceType Denotes the VT sequence type Namespace: Terminaux.Sequences Assembly: Terminaux.dll Syntax public enum VtSequenceType Fields Name Description All All VT sequences Apc VT sequence is one of the APC sequences C1 VT sequence is one of the C1 sequences Csi VT sequence is one of the CSI sequences Dcs VT sequence is one of the DCS sequences Esc VT sequence is one of the ESC sequences None No VT sequence Osc VT sequence is one of the OSC sequences Pm VT sequence is one of the PM sequences"
  },
  "api/Terminaux.Sequences.html": {
    "href": "api/Terminaux.Sequences.html",
    "title": "Namespace Terminaux.Sequences | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Sequences Classes VtSequenceRegexes VT sequence regular expressions VtSequenceTools Provides all the tools for manipulating with the VT sequences Enums VtSequenceType Denotes the VT sequence type"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListEntryWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListEntryWriterColor.html",
    "title": "Class ListEntryWriterColor | Terminaux API - Aptivi",
    "keywords": "Class ListEntryWriterColor List entry writer with color support Inheritance object ListEntryWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class ListEntryWriterColor Methods | Edit this page View Source RenderListEntry(string, string, int) Renders a list entry and value. Declaration public static string RenderListEntry(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed. string value A list value that will be listed. int indent Indentation level Returns Type Description string A list entry without the new line at the end | Edit this page View Source RenderListEntry(string, string, Color, Color, int) Renders a list entry and value. Declaration public static string RenderListEntry(string entry, string value, Color ListKeyColor, Color ListValueColor, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed. string value A list value that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. int indent Indentation level Returns Type Description string A list entry without the new line at the end | Edit this page View Source WriteListEntry(string, string, int) Outputs a list entry and value into the terminal prompt. Declaration public static void WriteListEntry(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. int indent Indentation level | Edit this page View Source WriteListEntry(string, string, Color, Color, int) Outputs a list entry and value into the terminal prompt. Declaration public static void WriteListEntry(string entry, string value, Color ListKeyColor, Color ListValueColor, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. int indent Indentation level | Edit this page View Source WriteListEntryPlain(string, string, int) Outputs a list entry and value into the terminal prompt plainly. Declaration public static void WriteListEntryPlain(string entry, string value, int indent = 0) Parameters Type Name Description string entry A list entry that will be listed to the terminal prompt. string value A list value that will be listed to the terminal prompt. int indent Indentation level"
  },
  "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.ListWriterColor.html",
    "title": "Class ListWriterColor | Terminaux API - Aptivi",
    "keywords": "Class ListWriterColor List writer with color support Inheritance object ListWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class ListWriterColor Methods | Edit this page View Source RenderList(IDictionary) Renders the list entries. Declaration public static string RenderList(IDictionary List) Parameters Type Name Description IDictionary List A dictionary that will be listed. Returns Type Description string | Edit this page View Source RenderList(IDictionary, Color, Color) Renders the list entries. Declaration public static string RenderList(IDictionary List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IDictionary List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string | Edit this page View Source RenderList(IEnumerable) Renders the list entries. Declaration public static string RenderList(IEnumerable List) Parameters Type Name Description IEnumerable List A dictionary that will be listed. Returns Type Description string | Edit this page View Source RenderList(IEnumerable, Color, Color) Renders the list entries. Declaration public static string RenderList(IEnumerable List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string | Edit this page View Source RenderList<T>(IEnumerable<T>) Renders the list entries. Declaration public static string RenderList<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed. Returns Type Description string Type Parameters Name Description T | Edit this page View Source RenderList<T>(IEnumerable<T>, Color, Color) Renders the list entries. Declaration public static string RenderList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string Type Parameters Name Description T | Edit this page View Source RenderList<TKey, TValue>(Dictionary<TKey, TValue>) Renders the list entries. Declaration public static string RenderList<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed. Returns Type Description string Type Parameters Name Description TKey TValue | Edit this page View Source RenderList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color) Renders the list entries. Declaration public static string RenderList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed. Color ListKeyColor A key color. Color ListValueColor A value color. Returns Type Description string Type Parameters Name Description TKey TValue | Edit this page View Source WriteList(IDictionary) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList(IDictionary List) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteList(IDictionary, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList(IDictionary List, bool Wrap) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteList(IDictionary, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IDictionary List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. | Edit this page View Source WriteList(IDictionary, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IDictionary List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. | Edit this page View Source WriteList(IEnumerable) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList(IEnumerable List) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteList(IEnumerable, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList(IEnumerable List, bool Wrap) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteList(IEnumerable, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IEnumerable List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. | Edit this page View Source WriteList(IEnumerable, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList(IEnumerable List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. | Edit this page View Source WriteListPlain(IDictionary) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain(IDictionary List) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteListPlain(IDictionary, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain(IDictionary List, bool Wrap) Parameters Type Name Description IDictionary List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteListPlain(IEnumerable) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain(IEnumerable List) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. | Edit this page View Source WriteListPlain(IEnumerable, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain(IEnumerable List, bool Wrap) Parameters Type Name Description IEnumerable List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. | Edit this page View Source WriteListPlain<T>(IEnumerable<T>) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description T | Edit this page View Source WriteListPlain<T>(IEnumerable<T>, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain<T>(IEnumerable<T> List, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue>) Outputs the list entries into the terminal prompt plainly. It wraps output depending on the kernel settings. Declaration public static void WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description TKey TValue | Edit this page View Source WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue>, bool) Outputs the list entries into the terminal prompt plainly, and wraps output if needed. Declaration public static void WriteListPlain<TKey, TValue>(Dictionary<TKey, TValue> List, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<T>(IEnumerable<T>) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList<T>(IEnumerable<T> List) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList<T>(IEnumerable<T> List, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. Type Parameters Name Description T | Edit this page View Source WriteList<T>(IEnumerable<T>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<T>(IEnumerable<T> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description IEnumerable<T> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description T | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>) Outputs the list entries into the terminal prompt. It wraps output depending on the kernel settings. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, bool) Outputs the list entries into the terminal prompt, and wraps output if needed. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. Type Parameters Name Description TKey TValue | Edit this page View Source WriteList<TKey, TValue>(Dictionary<TKey, TValue>, Color, Color, bool) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteList<TKey, TValue>(Dictionary<TKey, TValue> List, Color ListKeyColor, Color ListValueColor, bool Wrap) Parameters Type Name Description Dictionary<TKey, TValue> List A dictionary that will be listed to the terminal prompt. Color ListKeyColor A key color. Color ListValueColor A value color. bool Wrap Wraps the output as needed. Type Parameters Name Description TKey TValue"
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterColor.html",
    "title": "Class TextWriterColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterColor Console text writer with color support Inheritance object TextWriterColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterColor Methods | Edit this page View Source Render(string, params object[]) Renders text and returns the sequence needed to print text to the terminal prompt. Declaration public static string Render(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, Color, params object[]) Renders text and returns the sequence needed to print text to the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColorBack(string, Color, Color, params object[]) Renders text and returns the sequence needed to print text to the terminal prompt with custom color support. Declaration public static string RenderColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterHighlightedColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterHighlightedColor.html",
    "title": "Class TextWriterHighlightedColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterHighlightedColor Console text writer with color support Inheritance object TextWriterHighlightedColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterHighlightedColor Methods | Edit this page View Source Render(bool, string, params object[]) Outputs the text into the terminal prompt. Declaration public static string Render(bool legacy, string Text, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Render(string, params object[]) Outputs the text into the terminal prompt. Declaration public static string Render(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(bool, string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(bool legacy, string Text, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColorBack(bool, string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColorBack(bool legacy, string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static string RenderColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source Write(bool, string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(bool legacy, string Text, bool Line, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(bool, string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(bool legacy, string Text, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, bool, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source Write(string, params object[]) Outputs the text into the terminal prompt. Declaration public static void Write(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(bool, string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(bool legacy, string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(bool, string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(bool legacy, string Text, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColor(string, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColor(string Text, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(bool, string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(bool legacy, string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(bool, string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(bool legacy, string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteColorBack(string, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Declaration public static void WriteColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(bool, string, TermReaderSettings, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(bool legacy, string Text, TermReaderSettings settings, bool Line, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(bool, string, TermReaderSettings, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(bool legacy, string Text, TermReaderSettings settings, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, bool, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReader(string, TermReaderSettings, params object[]) Outputs the text into the terminal prompt. Use for TermReader custom bindings. Declaration public static void WriteForReader(string Text, TermReaderSettings settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(bool, string, TermReaderSettings, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(bool legacy, string Text, TermReaderSettings settings, bool Line, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(bool, string, TermReaderSettings, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(bool legacy, string Text, TermReaderSettings settings, Color color, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColor(string, TermReaderSettings, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColor(string Text, TermReaderSettings settings, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(bool, string, TermReaderSettings, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(bool legacy, string Text, TermReaderSettings settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(bool, string, TermReaderSettings, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(bool legacy, string Text, TermReaderSettings settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description bool legacy Use RenderSetConsoleColor(Color, bool, bool, bool) instead of text formatting string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteForReaderColorBack(string, TermReaderSettings, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support. Use for TermReader custom bindings. Declaration public static void WriteForReaderColorBack(string Text, TermReaderSettings settings, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterRaw.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterRaw.html",
    "title": "Class TextWriterRaw | Terminaux API - Aptivi",
    "keywords": "Class TextWriterRaw Raw text writers for console Inheritance object TextWriterRaw Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterRaw Methods | Edit this page View Source Write() Outputs the new line into the terminal prompt. Declaration public static void Write() | Edit this page View Source WritePlain(string, bool, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, params object[]) Outputs the text into the terminal prompt plainly. Declaration public static void WritePlain(string Text, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, TermReaderSettings, bool, params object[]) Outputs the text into the terminal prompt plainly. Use for TermReader custom bindings. Declaration public static void WritePlain(string Text, TermReaderSettings settings, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written. | Edit this page View Source WritePlain(string, TermReaderSettings, params object[]) Outputs the text into the terminal prompt plainly. Use for TermReader custom bindings. Declaration public static void WritePlain(string Text, TermReaderSettings settings, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... TermReaderSettings settings Terminal reader settings object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.TextWriterWhereColor.html",
    "title": "Class TextWriterWhereColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWhereColor Console text writer with color support (positional write) Inheritance object TextWriterWhereColor Namespace: Terminaux.Writer.ConsoleWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereColor Methods | Edit this page View Source RenderWhere(string, int, int, bool, int, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhere(string, int, int, bool, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhere(string, int, int, params object[]) Renders the text with location support. Declaration public static string RenderWhere(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColor(string, int, int, bool, int, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColor(string, int, int, bool, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColor(string msg, int Left, int Top, bool Return, Color ForegroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColor(string, int, int, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColor(string msg, int Left, int Top, Color ForegroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColorBack(string, int, int, bool, int, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColorBack(string, int, int, bool, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColorBack(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderWhereColorBack(string, int, int, Color, Color, params object[]) Renders the text with location support. Declaration public static string RenderWhereColorBack(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteWhere(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhere(string, int, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhere(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColor(string, int, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColor(string msg, int Left, int Top, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereColorBack(string, int, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereColorBack(string msg, int Left, int Top, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWherePlain(string, int, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWherePlain(string msg, int Left, int Top, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... int Left Column number in console int Top Row number in console object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.ConsoleWriters.html": {
    "href": "api/Terminaux.Writer.ConsoleWriters.html",
    "title": "Namespace Terminaux.Writer.ConsoleWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.ConsoleWriters Classes ListEntryWriterColor List entry writer with color support ListWriterColor List writer with color support TextWriterColor Console text writer with color support TextWriterHighlightedColor Console text writer with color support TextWriterRaw Raw text writers for console TextWriterWhereColor Console text writer with color support (positional write)"
  },
  "api/Terminaux.Writer.DynamicWriters.TextWriterSlowColor.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.TextWriterSlowColor.html",
    "title": "Class TextWriterSlowColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterSlowColor Console text writer with color support (slow write) Inheritance object TextWriterSlowColor Namespace: Terminaux.Writer.DynamicWriters Assembly: Terminaux.dll Syntax public static class TextWriterSlowColor Methods | Edit this page View Source WriteSlowlyColor(string, bool, double, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColor(string msg, bool Line, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyColorBack(string, bool, double, Color, Color, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyColorBack(string msg, bool Line, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteSlowlyPlain(string, bool, double, params object[]) Outputs the text into the terminal prompt slowly with color support. Declaration public static void WriteSlowlyPlain(string msg, bool Line, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.DynamicWriters.TextWriterWhereSlowColor.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.TextWriterWhereSlowColor.html",
    "title": "Class TextWriterWhereSlowColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWhereSlowColor Console text writer with color support (slow positional write) Inheritance object TextWriterWhereSlowColor Namespace: Terminaux.Writer.DynamicWriters Assembly: Terminaux.dll Syntax public static class TextWriterWhereSlowColor Methods | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowly(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowly(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, int, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, bool, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColor(string, bool, int, int, double, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColor(string msg, bool Line, int Left, int Top, double MsEachLetter, Color color, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, int, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyColorBack(string, bool, int, int, double, Color, Color, params object[]) Outputs the text into the terminal prompt with location support, and sets colors as needed. Declaration public static void WriteWhereSlowlyColorBack(string msg, bool Line, int Left, int Top, double MsEachLetter, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, int, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, int RightMargin, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position int RightMargin The right margin object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, bool, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, bool Return, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing bool Return Whether or not to return to old position object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWhereSlowlyPlain(string, bool, int, int, double, params object[]) Outputs the text into the terminal prompt with location support. Declaration public static void WriteWhereSlowlyPlain(string msg, bool Line, int Left, int Top, double MsEachLetter, params object[] vars) Parameters Type Name Description string msg A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not int Left Column number in console int Top Row number in console double MsEachLetter Time in milliseconds to delay writing object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.DynamicWriters.TextWriterWrappedColor.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.TextWriterWrappedColor.html",
    "title": "Class TextWriterWrappedColor | Terminaux API - Aptivi",
    "keywords": "Class TextWriterWrappedColor Console text writer with color support (wrapped) Inheritance object TextWriterWrappedColor Namespace: Terminaux.Writer.DynamicWriters Assembly: Terminaux.dll Syntax public static class TextWriterWrappedColor Methods | Edit this page View Source WriteWrappedColor(string, bool, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColor(string Text, bool Line, Color color, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color color A color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedColorBack(string, bool, Color, Color, params object[]) Outputs the text into the terminal prompt with custom color support and wraps the long terminal output if needed. Declaration public static void WriteWrappedColorBack(string Text, bool Line, Color ForegroundColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteWrappedPlain(string, bool, params object[]) Outputs the text into the terminal prompt, wraps the long terminal output if needed, and sets colors as needed. Declaration public static void WriteWrappedPlain(string Text, bool Line, params object[] vars) Parameters Type Name Description string Text A sentence that will be written to the terminal prompt. Supports {0}, {1}, ... bool Line Whether to print a new line or not object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.DynamicWriters.html": {
    "href": "api/Terminaux.Writer.DynamicWriters.html",
    "title": "Namespace Terminaux.Writer.DynamicWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.DynamicWriters Classes TextWriterSlowColor Console text writer with color support (slow write) TextWriterWhereSlowColor Console text writer with color support (slow positional write) TextWriterWrappedColor Console text writer with color support (wrapped)"
  },
  "api/Terminaux.Writer.FancyWriters.BorderColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BorderColor.html",
    "title": "Class BorderColor | Terminaux API - Aptivi",
    "keywords": "Class BorderColor Border writer with color support Inheritance object BorderColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BorderColor Methods | Edit this page View Source RenderBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(int, int, int, int, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(int, int, int, int) Renders the border plainly Declaration public static string RenderBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string | Edit this page View Source RenderBorderPlain(int, int, int, int, char, char, char, char, char, char, char, char) Renders the border plainly Declaration public static string RenderBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteBorder(int, int, int, int) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color | Edit this page View Source WriteBorder(int, int, int, int, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color | Edit this page View Source WriteBorder(int, int, int, int, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(int, int, int, int, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorderPlain(int, int, int, int) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorderPlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border"
  },
  "api/Terminaux.Writer.FancyWriters.BorderTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BorderTextColor.html",
    "title": "Class BorderTextColor | Terminaux API - Aptivi",
    "keywords": "Class BorderTextColor Border writer with color and text support Inheritance object BorderTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BorderTextColor Methods | Edit this page View Source RenderBorder(string, char, char, char, char, char, char, char, char, Color) Renders the border plainly Declaration public static string RenderBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, char, char, char, char, char, char, char, char, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, int, int, int, int, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, int, int, int, int, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, string, Color, Color, Color, params object[]) Renders the border plainly Declaration public static string RenderBorder(string title, string text, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorder(string, Color) Renders the border plainly Declaration public static string RenderBorder(string text, Color BorderColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color Returns Type Description string | Edit this page View Source RenderBorder(string, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color Returns Type Description string | Edit this page View Source RenderBorder(string, Color, Color, Color) Renders the border plainly Declaration public static string RenderBorder(string text, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color Returns Type Description string | Edit this page View Source RenderBorderPlain(string) Renders the border plainly Declaration public static string RenderBorderPlain(string text) Parameters Type Name Description string text Text to be written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, char, char, char, char, char, char, char, char) Renders the border plainly Declaration public static string RenderBorderPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string | Edit this page View Source RenderBorderPlain(string, int, int, int, int, char, char, char, char, char, char, char, char) Renders the border plainly Declaration public static string RenderBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, char, char, char, char, char, char, char, char, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, int, int, int, int, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderBorderPlain(string, string, params object[]) Renders the border plainly Declaration public static string RenderBorderPlain(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. object[] vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteBorder(string) Writes the border plainly Declaration public static void WriteBorder(string text) Parameters Type Name Description string text Text to be written. | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(string, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color | Edit this page View Source WriteBorder(string, int, int, int, int) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color | Edit this page View Source WriteBorder(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color | Edit this page View Source WriteBorder(string, int, int, int, int, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(string, int, int, int, int, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border Color BorderColor Border color Color BackgroundColor Border background color Color TextColor Border text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, int, int, int, int, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, Color BorderColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, Color BorderColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, string, Color, Color, Color, params object[]) Writes the border plainly Declaration public static void WriteBorder(string title, string text, Color BorderColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string title Title to be written. string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBorder(string, Color) Writes the border plainly Declaration public static void WriteBorder(string text, Color BorderColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color | Edit this page View Source WriteBorder(string, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, Color BorderColor, Color BackgroundColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color | Edit this page View Source WriteBorder(string, Color, Color, Color) Writes the border plainly Declaration public static void WriteBorder(string text, Color BorderColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description string text Text to be written. Color BorderColor Border color from Terminaux's Color Color BackgroundColor Border background color from Terminaux's Color Color TextColor Border text color from Terminaux's Color | Edit this page View Source WriteBorderPlain(string) Writes the border plainly Declaration public static void WriteBorderPlain(string text) Parameters Type Name Description string text Text to be written. | Edit this page View Source WriteBorderPlain(string, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(string text, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border | Edit this page View Source WriteBorderPlain(string, int, int, int, int) Writes the border plainly Declaration public static void WriteBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBorderPlain(string, int, int, int, int, char, char, char, char, char, char, char, char) Writes the border plainly Declaration public static void WriteBorderPlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description string text Text to be written. int Left Where to place the border horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the border vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for border char LowerLeftCornerChar Lower left corner character for border char UpperRightCornerChar Upper right corner character for border char LowerRightCornerChar Lower right corner character for border char UpperFrameChar Upper frame character for border char LowerFrameChar Lower frame character for border char LeftFrameChar Left frame character for border char RightFrameChar Right frame character for border"
  },
  "api/Terminaux.Writer.FancyWriters.BoxColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxColor.html",
    "title": "Class BoxColor | Terminaux API - Aptivi",
    "keywords": "Class BoxColor Box writer with color support Inheritance object BoxColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxColor Methods | Edit this page View Source RenderBox(int, int, int, int) Renders the box Declaration public static string RenderBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string The rendered box | Edit this page View Source RenderBox(int, int, int, int, Color) Renders the box Declaration public static string RenderBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color Returns Type Description string The rendered box | Edit this page View Source WriteBox(int, int, int, int) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBox(int, int, int, int, Color) Writes the box plainly Declaration public static void WriteBox(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxColor) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxColor Box color | Edit this page View Source WriteBoxPlain(int, int, int, int) Writes the box plainly Declaration public static void WriteBoxPlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames"
  },
  "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.BoxFrameColor.html",
    "title": "Class BoxFrameColor | Terminaux API - Aptivi",
    "keywords": "Class BoxFrameColor BoxFrame writer with color support Inheritance object BoxFrameColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class BoxFrameColor Methods | Edit this page View Source RenderBoxFrame(int, int, int, int) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(int, int, int, int, Color, Color, Color) Renders the box frame Declaration public static string RenderBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color Returns Type Description string The rendered frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color FrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source RenderBoxFrame(string, int, int, int, int, Color, Color, Color, params object[]) Renders the box frame Declaration public static string RenderBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color FrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color FrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color object[] vars Variables to format the message before it's written. Returns Type Description string The rendered box frame | Edit this page View Source WriteBoxFrame(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color | Edit this page View Source WriteBoxFrame(int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color | Edit this page View Source WriteBoxFrame(int, int, int, int, Color, Color, Color) Writes the box frame plainly Declaration public static void WriteBoxFrame(int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, Color TextColor) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color Color TextColor BoxFrame text color from Terminaux's Color | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, char, char, char, char, char, char, char, char, Color, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, Color BoxFrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame Color BoxFrameColor BoxFrame color Color BackgroundColor BoxFrame background color Color TextColor BoxFrame text color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFrame(string, int, int, int, int, Color, Color, Color, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFrame(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, Color BoxFrameColor, Color BackgroundColor, Color TextColor, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames Color BoxFrameColor BoxFrame color from Terminaux's Color Color BackgroundColor BoxFrame background color from Terminaux's Color Color TextColor BoxFrame text color from Terminaux's Color object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(int, int, int, int) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames | Edit this page View Source WriteBoxFramePlain(int, int, int, int, char, char, char, char, char, char, char, char) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar) Parameters Type Name Description int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, char, char, char, char, char, char, char, char, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, char UpperLeftCornerChar, char LowerLeftCornerChar, char UpperRightCornerChar, char LowerRightCornerChar, char UpperFrameChar, char LowerFrameChar, char LeftFrameChar, char RightFrameChar, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames char UpperLeftCornerChar Upper left corner character for box frame char LowerLeftCornerChar Lower left corner character for box frame char UpperRightCornerChar Upper right corner character for box frame char LowerRightCornerChar Lower right corner character for box frame char UpperFrameChar Upper frame character for box frame char LowerFrameChar Lower frame character for box frame char LeftFrameChar Left frame character for box frame char RightFrameChar Right frame character for box frame object[] vars Variables to format the message before it's written. | Edit this page View Source WriteBoxFramePlain(string, int, int, int, int, params object[]) Writes the box frame plainly Declaration public static void WriteBoxFramePlain(string text, int Left, int Top, int InteriorWidth, int InteriorHeight, params object[] vars) Parameters Type Name Description string text Text to be written. int Left Where to place the box frame horizontally? Please note that this value comes from the upper left corner, which is an exterior position. int Top Where to place the box frame vertically? Please note that this value comes from the upper left corner, which is an exterior position. int InteriorWidth The width of the interior window, excluding the two console columns for left and right frames int InteriorHeight The height of the interior window, excluding the two console columns for upper and lower frames object[] vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredFigletTextColor.html",
    "title": "Class CenteredFigletTextColor | Terminaux API - Aptivi",
    "keywords": "Class CenteredFigletTextColor Centered Figlet writer Inheritance object CenteredFigletTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredFigletTextColor Methods | Edit this page View Source RenderCenteredFiglet(FigletizeFont, string, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(FigletizeFont, string, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletizeFont FigletFont, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(FigletizeFont, string, Color, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletizeFont, string, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletizeFont, string, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletizeFont FigletFont, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredFiglet(int, FigletizeFont, string, Color, Color, params object[]) Renders a centered figlet with text Declaration public static string RenderCenteredFiglet(int top, FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteCenteredFiglet(FigletizeFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFiglet(int, FigletizeFont, string, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFiglet(int top, FigletizeFont FigletFont, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(FigletizeFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(FigletizeFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColor(int, FigletizeFont, string, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColor(int top, FigletizeFont FigletFont, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(FigletizeFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredFigletColorBack(int, FigletizeFont, string, Color, Color, params object[]) Draw a centered figlet with text Declaration public static void WriteCenteredFigletColorBack(int top, FigletizeFont FigletFont, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered figlet text to FigletizeFont FigletFont Figlet font to use in the text. string Text Text to be written. If nothing, the entire line is filled with the centered figlet. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.CenteredTextColor.html",
    "title": "Class CenteredTextColor | Terminaux API - Aptivi",
    "keywords": "Class CenteredTextColor Centered writer Inheritance object CenteredTextColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class CenteredTextColor Methods | Edit this page View Source RenderCentered(int, string, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(int, string, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(int, string, Color, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCentered(string, Color, Color, params object[]) Renders a centered text Declaration public static string RenderCentered(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(int, string, Color, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderCenteredOneLine(string, Color, Color, params object[]) Renders a centered text (just the first line) Declaration public static string RenderCenteredOneLine(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteCentered(int, string, params object[]) Draws a centered text Declaration public static void WriteCentered(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCentered(string, params object[]) Draws a centered text Declaration public static void WriteCentered(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(int, string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColor(string, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(int, string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredColorBack(string, Color, Color, params object[]) Draws a centered text Declaration public static void WriteCenteredColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLine(int, string, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLine(int top, string Text, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLine(string, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLine(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(int, string, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(int top, string Text, Color Color, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColor(string, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(int, string, Color, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(int top, string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description int top Top position to write centered text to string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteCenteredOneLineColorBack(string, Color, Color, params object[]) Draws a centered text (just the first line) Declaration public static void WriteCenteredOneLineColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the centered. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletColor.html",
    "title": "Class FigletColor | Terminaux API - Aptivi",
    "keywords": "Class FigletColor Figlet writer Inheritance object FigletColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletColor Methods | Edit this page View Source RenderFiglet(string, FigletizeFont, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, FigletizeFont FigletFont, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFiglet(string, FigletizeFont, Color, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFiglet(string, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFiglet(string, Color, Color, params object[]) Renders the figlet text Declaration public static string RenderFiglet(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletPlain(string, FigletizeFont, params object[]) Renders the figlet text Declaration public static string RenderFigletPlain(string Text, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletPlain(string, params object[]) Renders the figlet text Declaration public static string RenderFigletPlain(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteFigletColor(string, FigletizeFont, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, FigletizeFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColor(string, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, FigletizeFont, Color, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletColorBack(string, Color, Color, params object[]) Writes the figlet text Declaration public static void WriteFigletColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletPlain(string, FigletizeFont, params object[]) Writes the figlet text Declaration public static void WriteFigletPlain(string Text, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletPlain(string, params object[]) Writes the figlet text Declaration public static void WriteFigletPlain(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.FigletWhereColor.html",
    "title": "Class FigletWhereColor | Terminaux API - Aptivi",
    "keywords": "Class FigletWhereColor Figlet writer (positional) Inheritance object FigletWhereColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class FigletWhereColor Methods | Edit this page View Source RenderFigletWhere(string, int, int, bool, FigletizeFont, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWhere(string, int, int, bool, FigletizeFont, Color, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWhere(string, int, int, bool, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWhere(string, int, int, bool, Color, Color, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWhere(string Text, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWherePlain(string, int, int, bool, FigletizeFont, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWherePlain(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderFigletWherePlain(string, int, int, bool, params object[]) Renders the figlet text with position support Declaration public static string RenderFigletWherePlain(string Text, int Left, int Top, bool Return, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, FigletizeFont, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColor(string, int, int, bool, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColor(string Text, int Left, int Top, bool Return, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, FigletizeFont, Color, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWhereColorBack(string, int, int, bool, Color, Color, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWhereColorBack(string Text, int Left, int Top, bool Return, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWherePlain(string, int, int, bool, FigletizeFont, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWherePlain(string Text, int Left, int Top, bool Return, FigletizeFont FigletFont, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position FigletizeFont FigletFont Figlet font to use in the text. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteFigletWherePlain(string, int, int, bool, params object[]) Writes the figlet text with position support Declaration public static void WriteFigletWherePlain(string Text, int Left, int Top, bool Return, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. int Left Column number in console int Top Row number in console bool Return Whether or not to return to old position object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.PowerLineColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.PowerLineColor.html",
    "title": "Class PowerLineColor | Terminaux API - Aptivi",
    "keywords": "Class PowerLineColor PowerLine writer Inheritance object PowerLineColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class PowerLineColor Methods | Edit this page View Source RenderPowerLine(List<PowerLineSegment>, bool) Renders the PowerLine text Declaration public static string RenderPowerLine(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write bool Line Write new line after writing the segments Returns Type Description string | Edit this page View Source RenderPowerLine(List<PowerLineSegment>, Color, bool) Renders the PowerLine text Declaration public static string RenderPowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write Color EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments Returns Type Description string | Edit this page View Source WritePowerLine(List<PowerLineSegment>, Color, bool) Writes the PowerLine text Declaration public static void WritePowerLine(List<PowerLineSegment> Segments, Color EndingColor, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments List of PowerLine segments Color EndingColor A color that will be changed at the end of the transition bool Line Write new line after writing the segments | Edit this page View Source WritePowerLinePlain(List<PowerLineSegment>, bool) Writes the PowerLine text Declaration public static void WritePowerLinePlain(List<PowerLineSegment> Segments, bool Line = false) Parameters Type Name Description List<PowerLineSegment> Segments Segments to write bool Line Write new line after writing the segments"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarColor.html",
    "title": "Class ProgressBarColor | Terminaux API - Aptivi",
    "keywords": "Class ProgressBarColor Progress bar writer with color support Inheritance object ProgressBarColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarColor Methods | Edit this page View Source RenderProgress(double, int, int, int, int, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgress(double, int, int, int, int, Color, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgress(double, int, int, int, int, Color, Color, Color, bool, bool) Renders the progress bar Declaration public static string RenderProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source RenderProgressPlain(double, int, int, int, int, bool, bool) Renders the progress bar Declaration public static string RenderProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? Returns Type Description string | Edit this page View Source WriteProgress(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, int WidthOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgress(double, int, int, Color, Color, Color, bool, bool) Writes the progress bar Declaration public static void WriteProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int WidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage? | Edit this page View Source WriteProgressPlain(double, int, int, int, int, bool, bool) Writes the progress bar Declaration public static void WriteProgressPlain(double Progress, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true, bool Targeted = false) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not bool Targeted Targeted percentage?"
  },
  "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.ProgressBarVerticalColor.html",
    "title": "Class ProgressBarVerticalColor | Terminaux API - Aptivi",
    "keywords": "Class ProgressBarVerticalColor Vertical progress bar writer with color support Inheritance object ProgressBarVerticalColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class ProgressBarVerticalColor Methods | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgress(double, int, int, int, int, Color, Color, Color, bool) Renders the progress bar Declaration public static string RenderVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalProgressPlain(double, int, int, int, int, bool) Renders the progress bar Declaration public static string RenderVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source WriteVerticalProgress(double, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, int HeightOffset, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgress(double, int, int, Color, Color, Color, bool) Writes the progress bar Declaration public static void WriteVerticalProgress(double Progress, int Left, int Top, Color ProgressColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top Color ProgressColor The progress bar color Color FrameColor The progress bar frame color Color BackgroundColor The progress bar background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, bool) Writes the vertical progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalProgressPlain(double, int, int, int, int, bool) Writes the progress bar Declaration public static void WriteVerticalProgressPlain(double Progress, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description double Progress The progress percentage int Left The progress position from the upper left corner int Top The progress position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SeparatorWriterColor.html",
    "title": "Class SeparatorWriterColor | Terminaux API - Aptivi",
    "keywords": "Class SeparatorWriterColor Separator writer Inheritance object SeparatorWriterColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SeparatorWriterColor Methods | Edit this page View Source RenderSeparator(string, bool, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, bool, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, bool PrintSuffix, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, bool, Color, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, bool PrintSuffix, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, Color ForegroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source RenderSeparator(string, Color, Color, params object[]) Renders a separator with text Declaration public static string RenderSeparator(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. Returns Type Description string | Edit this page View Source WriteSeparator(string, bool, params object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparator(string, params object[]) Draw a separator with text Declaration public static void WriteSeparator(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, bool, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, bool PrintSuffix, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColor(string, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColor(string Text, Color Color, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color Color A color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, bool, Color, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, bool PrintSuffix, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you have suffix on your text. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorColorBack(string, Color, Color, params object[]) Draw a separator with text Declaration public static void WriteSeparatorColorBack(string Text, Color ForegroundColor, Color BackgroundColor, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. Color ForegroundColor A foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorPlain(string, bool, params object[]) Draw a separator with text plainly Declaration public static void WriteSeparatorPlain(string Text, bool PrintSuffix, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. bool PrintSuffix Whether or not to print the leading suffix. Only use if you don't have suffix on your text. object[] Vars Variables to format the message before it's written. | Edit this page View Source WriteSeparatorPlain(string, params object[]) Draw a separator with text plainly Declaration public static void WriteSeparatorPlain(string Text, params object[] Vars) Parameters Type Name Description string Text Text to be written. If nothing, the entire line is filled with the separator. object[] Vars Variables to format the message before it's written."
  },
  "api/Terminaux.Writer.FancyWriters.SliderColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SliderColor.html",
    "title": "Class SliderColor | Terminaux API - Aptivi",
    "keywords": "Class SliderColor Slider writer with color support Inheritance object SliderColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SliderColor Methods | Edit this page View Source RenderSlider(int, int, int, int, int, int, Color, bool) Renders the slider Declaration public static string RenderSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderSlider(int, int, int, int, int, int, Color, Color, bool) Renders the slider Declaration public static string RenderSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderSlider(int, int, int, int, int, int, Color, Color, Color, bool) Renders the slider Declaration public static string RenderSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderSliderPlain(int, int, int, int, int, int, bool) Renders the slider Declaration public static string RenderSliderPlain(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source WriteSlider(int, int, int, int, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, int WidthOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSlider(int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSliderPlain(int, int, int, int, bool) Writes the slider Declaration public static void WriteSliderPlain(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSliderPlain(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSliderPlain(int currPos, int maxPos, int Left, int Top, int WidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int WidthOffset Width offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteSliderPlain(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteSliderPlain(int currPos, int maxPos, int Left, int Top, int LeftWidthOffset, int RightWidthOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int LeftWidthOffset Width offset from the left int RightWidthOffset Width offset from the right bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.SliderVerticalColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.SliderVerticalColor.html",
    "title": "Class SliderVerticalColor | Terminaux API - Aptivi",
    "keywords": "Class SliderVerticalColor Vertical slider writer with color support Inheritance object SliderVerticalColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class SliderVerticalColor Methods | Edit this page View Source RenderVerticalSlider(int, int, int, int, int, int, Color, bool) Renders the slider Declaration public static string RenderVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalSlider(int, int, int, int, int, int, Color, Color, bool) Renders the slider Declaration public static string RenderVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalSlider(int, int, int, int, int, int, Color, Color, Color, bool) Renders the slider Declaration public static string RenderVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source RenderVerticalSliderPlain(int, int, int, int, int, int, bool) Renders the slider Declaration public static string RenderVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not Returns Type Description string | Edit this page View Source WriteVerticalSlider(int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, int HeightOffset, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSlider(int, int, int, int, Color, Color, Color, bool) Writes the slider Declaration public static void WriteVerticalSlider(int currPos, int maxPos, int Left, int Top, Color SliderColor, Color FrameColor, Color BackgroundColor, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top Color SliderColor The slider color Color FrameColor The slider frame color Color BackgroundColor The slider background color bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSliderPlain(int, int, int, int, bool) Writes the vertical slider Declaration public static void WriteVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSliderPlain(int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, int HeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int HeightOffset Height offset bool DrawBorder Whether to draw the border or not | Edit this page View Source WriteVerticalSliderPlain(int, int, int, int, int, int, bool) Writes the slider Declaration public static void WriteVerticalSliderPlain(int currPos, int maxPos, int Left, int Top, int TopHeightOffset, int BottomHeightOffset, bool DrawBorder = true) Parameters Type Name Description int currPos Current position out of maximum position int maxPos Maximum position int Left The slider position from the upper left corner int Top The slider position from the top int TopHeightOffset Height offset from the top int BottomHeightOffset Height offset from the bottom bool DrawBorder Whether to draw the border or not"
  },
  "api/Terminaux.Writer.FancyWriters.TableColor.html": {
    "href": "api/Terminaux.Writer.FancyWriters.TableColor.html",
    "title": "Class TableColor | Terminaux API - Aptivi",
    "keywords": "Class TableColor Table writer with color support Inheritance object TableColor Namespace: Terminaux.Writer.FancyWriters Assembly: Terminaux.dll Syntax public static class TableColor Methods | Edit this page View Source RenderTable(string[], string[,], int, Color, Color, Color, Color, bool, List<CellOptions>) Renders a table with text Declaration public static string RenderTable(string[] Headers, string[,] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options Returns Type Description string | Edit this page View Source RenderTablePlain(string[], string[,], int, bool, List<CellOptions>) Renders a table with text Declaration public static string RenderTablePlain(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options Returns Type Description string | Edit this page View Source WriteTable(string[], string[,], int, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Safe threshold from left bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTable(string[], string[,], int, Color, Color, Color, Color, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTable(string[] Headers, string[,] Rows, int Margin, Color SeparatorForegroundColor, Color HeaderForegroundColor, Color ValueForegroundColor, Color BackgroundColor, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Margin offset Color SeparatorForegroundColor A separator foreground color that will be changed to. Color HeaderForegroundColor A header foreground color that will be changed to. Color ValueForegroundColor A value foreground color that will be changed to. Color BackgroundColor A background color that will be changed to. bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options | Edit this page View Source WriteTablePlain(string[], string[,], int, bool, List<CellOptions>) Draw a table with text Declaration public static void WriteTablePlain(string[] Headers, string[,] Rows, int Margin, bool SeparateRows = true, List<CellOptions> CellOptions = null) Parameters Type Name Description string[] Headers Headers to insert to the table. string[,] Rows Rows to insert to the table. int Margin Safe threshold from left bool SeparateRows Separate the rows? List<CellOptions> CellOptions Specifies the cell options"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.BorderTools.html",
    "title": "Class BorderTools | Terminaux API - Aptivi",
    "keywords": "Class BorderTools All border tools here Inheritance object BorderTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class BorderTools Properties | Edit this page View Source BorderLeftFrameChar Left frame character Declaration public static char BorderLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerFrameChar Lower frame character Declaration public static char BorderLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerLeftCornerChar Lower left corner character Declaration public static char BorderLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderLowerRightCornerChar Lower right corner character Declaration public static char BorderLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderRightFrameChar Right frame character Declaration public static char BorderRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperFrameChar Upper frame character Declaration public static char BorderUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperLeftCornerChar Upper left corner character Declaration public static char BorderUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source BorderUpperRightCornerChar Upper right corner character Declaration public static char BorderUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.CellOptions.html",
    "title": "Class CellOptions | Terminaux API - Aptivi",
    "keywords": "Class CellOptions Table cell options Inheritance object CellOptions Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class CellOptions Constructors | Edit this page View Source CellOptions(int, int) Makes a new instance of the cell options class Declaration public CellOptions(int ColumnNumber, int RowNumber) Parameters Type Name Description int ColumnNumber The column number int RowNumber The row number Properties | Edit this page View Source CellBackgroundColor The custom background cell color Declaration public Color CellBackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source CellColor The custom cell color Declaration public Color CellColor { get; set; } Property Value Type Description Color | Edit this page View Source ColoredCell Whether to color the cell Declaration public bool ColoredCell { get; set; } Property Value Type Description bool | Edit this page View Source ColumnIndex The column, or row value, index Declaration public int ColumnIndex { get; } Property Value Type Description int | Edit this page View Source ColumnNumber The column, or row value, number Declaration public int ColumnNumber { get; } Property Value Type Description int | Edit this page View Source RowIndex The row index Declaration public int RowIndex { get; } Property Value Type Description int | Edit this page View Source RowNumber The row number Declaration public int RowNumber { get; } Property Value Type Description int"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.FigletTextTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.FigletTextTools.html",
    "title": "Class FigletTextTools | Terminaux API - Aptivi",
    "keywords": "Class FigletTextTools Tools for text manipulation Inheritance object FigletTextTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class FigletTextTools Properties | Edit this page View Source DefaultFigletFont Default figlet font Declaration public static FigletizeFont DefaultFigletFont { get; } Property Value Type Description FigletizeFont | Edit this page View Source DefaultFigletFontName Default figlet font name Declaration public static string DefaultFigletFontName { get; set; } Property Value Type Description string"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineSegment.html",
    "title": "Class PowerLineSegment | Terminaux API - Aptivi",
    "keywords": "Class PowerLineSegment PowerLine segment Inheritance object PowerLineSegment Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public class PowerLineSegment Constructors | Edit this page View Source PowerLineSegment(Color, Color, string, char, char) Installs the segment values to the instance Declaration public PowerLineSegment(Color segmentForeground, Color segmentBackground, string segmentText, char segmentIcon = '\\0', char segmentTransitionIcon = '\\0') Parameters Type Name Description Color segmentForeground Color segmentBackground string segmentText char segmentIcon char segmentTransitionIcon Properties | Edit this page View Source SegmentBackground Background color or next segment transition color of the segment Declaration public Color SegmentBackground { get; } Property Value Type Description Color | Edit this page View Source SegmentForeground Foreground color of the segment Declaration public Color SegmentForeground { get; } Property Value Type Description Color | Edit this page View Source SegmentIcon Segment icon. This should be an iconic character. Declaration public char SegmentIcon { get; } Property Value Type Description char | Edit this page View Source SegmentText Segment text. Usually a status. Declaration public string SegmentText { get; } Property Value Type Description string | Edit this page View Source SegmentTransitionIcon Segment transition icon. This should be an iconic character. Declaration public char SegmentTransitionIcon { get; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.PowerLineTools.html",
    "title": "Class PowerLineTools | Terminaux API - Aptivi",
    "keywords": "Class PowerLineTools PowerLine tools Inheritance object PowerLineTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class PowerLineTools Methods | Edit this page View Source RenderSegments(List<PowerLineSegment>) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Returns Type Description string | Edit this page View Source RenderSegments(List<PowerLineSegment>, Color) Renders the segments Declaration public static string RenderSegments(List<PowerLineSegment> segments, Color EndingColor) Parameters Type Name Description List<PowerLineSegment> segments List of segments to render Color EndingColor Ending background color for the last segment transition Returns Type Description string"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.ProgressTools.html",
    "title": "Class ProgressTools | Terminaux API - Aptivi",
    "keywords": "Class ProgressTools Progress tools Inheritance object ProgressTools Namespace: Terminaux.Writer.FancyWriters.Tools Assembly: Terminaux.dll Syntax public static class ProgressTools Properties | Edit this page View Source ProgressLeftFrameChar Left frame character for the progress bar Declaration public static char ProgressLeftFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerFrameChar Lower frame character for the progress bar Declaration public static char ProgressLowerFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerLeftCornerChar Lower left corner character for the progress bar Declaration public static char ProgressLowerLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressLowerRightCornerChar Lower right corner character for the progress bar Declaration public static char ProgressLowerRightCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressRightFrameChar Right frame character for the progress bar Declaration public static char ProgressRightFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperFrameChar Upper frame character for the progress bar Declaration public static char ProgressUpperFrameChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperLeftCornerChar Upper left corner character for the progress bar Declaration public static char ProgressUpperLeftCornerChar { get; set; } Property Value Type Description char | Edit this page View Source ProgressUpperRightCornerChar Upper right corner character for the progress bar Declaration public static char ProgressUpperRightCornerChar { get; set; } Property Value Type Description char"
  },
  "api/Terminaux.Writer.FancyWriters.Tools.html": {
    "href": "api/Terminaux.Writer.FancyWriters.Tools.html",
    "title": "Namespace Terminaux.Writer.FancyWriters.Tools | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.FancyWriters.Tools Classes BorderTools All border tools here CellOptions Table cell options FigletTextTools Tools for text manipulation PowerLineSegment PowerLine segment PowerLineTools PowerLine tools ProgressTools Progress tools"
  },
  "api/Terminaux.Writer.FancyWriters.html": {
    "href": "api/Terminaux.Writer.FancyWriters.html",
    "title": "Namespace Terminaux.Writer.FancyWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.FancyWriters Classes BorderColor Border writer with color support BorderTextColor Border writer with color and text support BoxColor Box writer with color support BoxFrameColor BoxFrame writer with color support CenteredFigletTextColor Centered Figlet writer CenteredTextColor Centered writer FigletColor Figlet writer FigletWhereColor Figlet writer (positional) PowerLineColor PowerLine writer ProgressBarColor Progress bar writer with color support ProgressBarVerticalColor Vertical progress bar writer with color support SeparatorWriterColor Separator writer SliderColor Slider writer with color support SliderVerticalColor Vertical slider writer with color support TableColor Table writer with color support"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleRangedWriter.html",
    "title": "Class LineHandleRangedWriter | Terminaux API - Aptivi",
    "keywords": "Class LineHandleRangedWriter Ranged line handle writer (with start and end positions) Inheritance object LineHandleRangedWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleRangedWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandle(string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself as the start. int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int startPos, int endPos, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int startPos Column number (not index). This tells the handle where to place itself int endPos Column number (not index). This tells the handle where to place itself as the end. Should be bigger than the start position. Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html": {
    "href": "api/Terminaux.Writer.MiscWriters.LineHandleWriter.html",
    "title": "Class LineHandleWriter | Terminaux API - Aptivi",
    "keywords": "Class LineHandleWriter Line handle writer Inheritance object LineHandleWriter Namespace: Terminaux.Writer.MiscWriters Assembly: Terminaux.dll Syntax public static class LineHandleWriter Methods | Edit this page View Source PrintLineWithHandle(string, int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string, int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandle(string[], int, int) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandle(string[], int, int, Color) Prints the line of a text file with the specified line number and the column number Declaration public static void PrintLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string, int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself | Edit this page View Source PrintLineWithHandleConditional(bool, string[], int, int, Color) Prints the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static void PrintLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color | Edit this page View Source RenderLineWithHandle(string, int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string, int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandle(string[], int, int, Color) Renders the line of a text file with the specified line number and the column number Declaration public static string RenderLineWithHandle(string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string, int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string Filename, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string Filename Path to text file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Returns Type Description string | Edit this page View Source RenderLineWithHandleConditional(bool, string[], int, int, Color) Renders the line of a text file with the specified line number and the column number if the specified condition is satisfied Declaration public static string RenderLineWithHandleConditional(bool Condition, string[] Array, int LineNumber, int ColumnNumber, Color color) Parameters Type Name Description bool Condition The condition to satisfy string[] Array A string array containing the contents of the file int LineNumber Line number (not index) int ColumnNumber Column number (not index). This tells the handle where to place itself Color color The color Returns Type Description string"
  },
  "api/Terminaux.Writer.MiscWriters.html": {
    "href": "api/Terminaux.Writer.MiscWriters.html",
    "title": "Namespace Terminaux.Writer.MiscWriters | Terminaux API - Aptivi",
    "keywords": "Namespace Terminaux.Writer.MiscWriters Classes LineHandleRangedWriter Ranged line handle writer (with start and end positions) LineHandleWriter Line handle writer"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Terminaux API - Aptivi",
    "keywords": "What is Terminaux? Terminaux is a library that allows you to manipulate with the console. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Terminaux, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2022-2023 Aptivi. All rights reserved."
  }
}