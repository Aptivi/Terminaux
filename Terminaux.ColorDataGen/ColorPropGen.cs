//
// Terminaux  Copyright (C) 2023-2024  Aptivi
//
// This file is part of Terminaux
//
// Terminaux is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Terminaux is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY, without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

using Microsoft.CodeAnalysis;
using Newtonsoft.Json;
using System;
using System.Text;
using Terminaux.ColorDataGen.Resources;
using Terminaux.Colors.Data;

namespace Terminaux.ColorDataGen
{
    [Generator]
    public class ColorPropGen : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {
            string header =
                $$"""
                //
                // Terminaux  Copyright (C) 2023-2024  Aptivi
                //
                // This file is part of Terminaux
                //
                // Terminaux is free software: you can redistribute it and/or modify
                // it under the terms of the GNU General Public License as published by
                // the Free Software Foundation, either version 3 of the License, or
                // (at your option) any later version.
                //
                // Terminaux is distributed in the hope that it will be useful,
                // but WITHOUT ANY WARRANTY, without even the implied warranty of
                // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                // GNU General Public License for more details.
                //
                // You should have received a copy of the GNU General Public License
                // along with this program.  If not, see <https://www.gnu.org/licenses/>.
                //
                
                // <auto-generated/>

                namespace Terminaux.Colors.Data
                {
                    public partial class ConsoleColorData
                    {

                """;
            string footer =
                $$"""
                    }
                }
                """;
            var builder = new StringBuilder(header);

            // Read all the console color data
            var list = JsonConvert.DeserializeObject<ConsoleColorData[]>(ConsoleResources.ConsoleColorsData);
            var names = Enum.GetNames(typeof(ConsoleColors));

            // First, populate all the color data properties
            foreach (var colorData in list)
            {
                string colorHex = colorData.HexString;
                var colorRgb = colorData.RGB;
                var colorHsl = colorData.HSL;
                string colorName = colorData.Name;
                int colorId = colorData.ColorId;
                string propName = names[colorId];
                builder.AppendLine(
                    $$"""
                            /// <summary>
                            /// [{{colorHex}}] Gets the console colors data for the {{propName}} color
                            /// </summary>
                            public static ConsoleColorData {{propName}} =>
                                new("{{colorHex}}", {{colorRgb.R}}, {{colorRgb.G}}, {{colorRgb.B}}, {{colorHsl.H}}, {{colorHsl.S}}, {{colorHsl.L}}, "{{colorName}}", {{colorId}});
                    """
                );
            }
            builder.AppendLine();

            // Then, populate a partial function that gets all this data
            builder.AppendLine(
                """
                        public static partial ConsoleColorData[] GetColorData()
                        {
                            return
                            [
                """
            );
            foreach (var colorData in list)
            {
                int colorId = colorData.ColorId;
                string propName = names[colorId];
                builder.AppendLine(
                    $$"""
                                    {{propName}},
                    """
                );
            }
            builder.AppendLine(
                """
                            ];
                        }
                """
            );

            // Add the source code to the compilation
            builder.AppendLine(footer);
            context.AddSource("ConsoleColorData.g.cs", builder.ToString());
        }

        public void Initialize(GeneratorInitializationContext context)
        { }
    }
}
